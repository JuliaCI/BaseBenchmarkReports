cset: moving following pidspec: 17402
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342113618 seconds)
loading group "string"... done (took 0.543603833 seconds)
loading group "linalg"... done (took 7.295262278 seconds)
loading group "parallel"... done (took 0.150254178 seconds)
loading group "find"... done (took 1.097161786 seconds)
loading group "tuple"... done (took 1.781034396 seconds)
loading group "dates"... done (took 1.226001414 seconds)
loading group "micro"... done (took 0.213573068 seconds)
loading group "io"... done (took 0.911493208 seconds)
loading group "scalar"... done (took 36.192563052 seconds)
loading group "sparse"... done (took 11.478939397 seconds)
loading group "broadcast"... done (took 0.898577618 seconds)
loading group "union"... done (took 11.772043335 seconds)
loading group "simd"... done (took 4.284914054 seconds)
loading group "random"... done (took 8.77859641 seconds)
loading group "problem"... done (took 1.85339146 seconds)
loading group "array"... done (took 20.29322926 seconds)
loading group "misc"... done (took 1.621802911 seconds)
loading group "sort"... done (took 3.249552712 seconds)
loading group "collection"... done (took 16.701890327 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485872785 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123458779 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114107154 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118376549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145275822 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114059877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123071186 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083434634 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.771013157 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147746891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117962544 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415603714 seconds)
done (took 5.061013075 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170596835 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082457356 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080887331 seconds)
  done (took 1.297335703 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064933921 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121177048 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067161327 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06736844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067266206 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065932281 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066136881 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066307557 seconds)
  done (took 1.655764074 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073186722 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068857493 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069077041 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067943699 seconds)
  done (took 1.416463769 seconds)
done (took 5.74819633 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770579018 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201543529 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182402343 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397989257 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128931728 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154398647 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649969439 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314448726 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182673381 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080806252 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104274117 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317531444 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107857845 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628702551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075436522 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090039363 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137368747 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419169898 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067297426 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081709238 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088911372 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128014277 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087281335 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074622174 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14446693 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068373334 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135449371 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079306975 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066724686 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207960858 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172014698 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65549471 seconds)
  done (took 10.176310404 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09636314 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096930141 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068703341 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136410456 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098045086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069326436 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070654185 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066756315 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086555616 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128416493 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088603672 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101398291 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065419072 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068818282 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084151165 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204746615 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081091988 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081191759 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070523766 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075283779 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118954071 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078410128 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078182671 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077459041 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128690868 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17935025 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095733962 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09727571 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068874724 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08025273 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115036558 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127077279 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066826358 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066560397 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12433077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094927652 seconds)
  done (took 4.611200556 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.299284129 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141037088 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090422664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132596953 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109630092 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064217251 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106958309 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065084889 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080306835 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199921672 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.298246215 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574632414 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111257201 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104058792 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067383113 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068183886 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066880677 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.336724734 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108899138 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105097855 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081371051 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069964651 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06913167 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354764871 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070163172 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064119459 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067887216 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057991438 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124785744 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067907508 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918283621 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12426281 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066209434 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100310961 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168253367 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089678391 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272148858 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06822713 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063838097 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150539541 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070381565 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065761366 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083134128 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103794748 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112089991 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065178242 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066809033 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159030927 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064388802 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079325617 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.984384153 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154856491 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079102261 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064688468 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250377018 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086183267 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0693026 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064555625 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17818476 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136461211 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067353965 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066217921 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068021568 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069075661 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349883231 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065985111 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.682746582 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069977616 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076272855 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068766429 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06991375 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072766543 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071938946 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087609342 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066061095 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075415295 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065594492 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0656481 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067061139 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08399685 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354075094 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066740262 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06767859 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064623158 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085586058 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096567697 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06641011 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065237897 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099852128 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064044301 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063775654 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063187594 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.170325736 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065871759 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10630705 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067014312 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083960321 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068864996 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113335104 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066109675 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085840796 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072143102 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096625329 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069914914 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09925195 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080931528 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06810175 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397082535 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065488859 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065294222 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068458714 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064869096 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067402202 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066671185 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082415748 seconds)
  done (took 20.789897269 seconds)
done (took 38.012802919 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233555014 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074983074 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075655687 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075148668 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075132886 seconds)
  done (took 1.764516937 seconds)
done (took 2.97638734 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119456408 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098399474 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0641412 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095213254 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063942614 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099986347 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098818513 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080383399 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098909615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063763528 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095968444 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063935632 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064088361 seconds)
  done (took 2.338297605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082603425 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083511088 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069980195 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082186715 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063486825 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081707762 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080508918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088466352 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08023999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071961017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063528421 seconds)
  done (took 2.053588234 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081536204 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083481103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06948295 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081160232 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066901448 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080919594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08086963 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085156648 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080914662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073265764 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063613385 seconds)
  done (took 2.047529069 seconds)
done (took 7.639218597 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077891354 seconds)
  done (took 1.270133399 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59060335 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.096733009 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082189763 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112271112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182951063 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120278527 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2818797 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087058507 seconds)
  done (took 8.927486945 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088213858 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069111387 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082348166 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068640341 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068085104 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071670787 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07199765 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07065876 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069033992 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070337673 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070803749 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071517449 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069014262 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070719008 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069136691 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068235017 seconds)
  done (took 2.41470242 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091607983 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090459971 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073694507 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074360322 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071917699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071832166 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073868366 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07303337 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070698086 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071633765 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074825298 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073913704 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071137716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064751192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074213397 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075963641 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070564781 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074169804 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074205825 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074521213 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074513025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064143887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071448983 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073735912 seconds)
  done (took 3.074522354 seconds)
done (took 16.886891107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114799353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071292331 seconds)
  done (took 1.387115075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081819574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082923773 seconds)
  done (took 1.373034204 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08403553 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065315769 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092180956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079050936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066196411 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065723376 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089368878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066122916 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065866859 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066092112 seconds)
  done (took 1.949423272 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068295245 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078323207 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071867617 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081305056 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074419588 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064712953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072594069 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067672621 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078094623 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062774281 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071172167 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082278473 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071707266 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084527075 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072452715 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068602431 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07112536 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067305637 seconds)
  done (took 2.521436869 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065676117 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06747687 seconds)
  done (took 1.347290676 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06759261 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064140334 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066587067 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06770511 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063467793 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062192114 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064356819 seconds)
  done (took 1.667312462 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377342569 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109213887 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.289322158 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069979308 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081134362 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247330553 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064828136 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069999163 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069955364 seconds)
  done (took 2.631918763 seconds)
done (took 14.092771859 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077948946 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08505823 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094569249 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35968104 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091376412 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06585052 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11317031 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192287108 seconds)
done (took 2.303786181 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212468708 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610153711 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387167774 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195959041 seconds)
  done (took 2.406739349 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326395946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08603178 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058691669 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066464167 seconds)
  done (took 1.761177956 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065409555 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068444008 seconds)
  done (took 1.355212129 seconds)
done (took 6.956394221 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066124662 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065158925 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064982236 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065223444 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062880326 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063578819 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084368874 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065106286 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065345452 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065193183 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067935539 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065522755 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063189625 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062686449 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062950061 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065323308 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065797364 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063333967 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062822313 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063391045 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065684977 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063039896 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062870263 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062906321 seconds)
  done (took 2.820271561 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083367766 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06627078 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071162706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070708839 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069993687 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0714774 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070963768 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066113463 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071059546 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067845909 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069645586 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069501921 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067543575 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069899804 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067538123 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069542344 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070463561 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066313369 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067482551 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070102916 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070423671 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065956882 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06946813 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071104873 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069111635 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070677916 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067972518 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065721993 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070938184 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069198506 seconds)
  done (took 3.317362996 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069540055 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062849905 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064190785 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070326125 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063729506 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064645795 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063080496 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063730587 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063917661 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062853639 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064568158 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062808665 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063056009 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064111735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064264379 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066634721 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078442301 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063967299 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063668022 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064221394 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06609025 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062965479 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063112676 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063226166 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.174057912 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062681036 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063681212 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063415165 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064091057 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062802066 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065965699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066924545 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063098878 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069530479 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066859881 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063489863 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066689105 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062571811 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063469964 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063071514 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062699965 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063267903 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062769743 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070128613 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062954587 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064457145 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062965118 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064079011 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063630993 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065279921 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062775355 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062846959 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065153483 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064180046 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066627001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062515358 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063705171 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062572986 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063909254 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062388679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062662774 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062547682 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065556221 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064068568 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077094038 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069605157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063163753 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065002337 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063781348 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06559248 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064474552 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076144346 seconds)
  done (took 6.012402617 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091637107 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086837679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065131067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064933335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061668354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063697557 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067434577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064061688 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064925485 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069390494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064115452 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065034515 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064926939 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076423705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063963041 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065254251 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069354657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061251684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063773091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066826878 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063702022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067054503 seconds)
  done (took 2.736088255 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15410056 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070125941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105496995 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072748235 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067496981 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072861959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069473874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069647286 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069904198 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067762221 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067552604 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069514988 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06734621 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067810705 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067931436 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067601469 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069745413 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068094939 seconds)
  done (took 2.604566913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076946434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066102254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086246559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066012788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065495868 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068139628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070634243 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074093115 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067840323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065541456 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073883092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067669813 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067876563 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065312862 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068004406 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065520192 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067979481 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065275646 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073747361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069859257 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070210933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074130352 seconds)
  done (took 2.776931616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079426486 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067733784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082252178 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068020755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062049809 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064197589 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069431257 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065492091 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069599057 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067065086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065730817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064212811 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069143378 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065398517 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069144959 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065206542 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067549035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065677206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066889996 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061306743 seconds)
  done (took 2.596755351 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086412655 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066983751 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067577342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075153424 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067131428 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067426765 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075362228 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067550024 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06686408 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086765293 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067029486 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066787126 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07443399 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071914926 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06665406 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074689376 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074583751 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074605243 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066626748 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066858837 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087118477 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06701219 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074764304 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067030308 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067033358 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067029508 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06687104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071831161 seconds)
  done (took 3.241942321 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066343848 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065604841 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06292428 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062729725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062965177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062767311 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062863364 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063569597 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065314107 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063203228 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065316672 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065549714 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065136048 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064971709 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065912304 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065524388 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06528023 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063120376 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063100761 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063163683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065345624 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065377568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065106707 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062868955 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062694967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065185593 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063018825 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063075254 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065629912 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063040781 seconds)
  done (took 3.172213403 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074591302 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072465209 seconds)
  done (took 1.39391411 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062660864 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079334276 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063168592 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069009486 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069968241 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066530965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073001388 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069776392 seconds)
  done (took 1.796738005 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081246846 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077463778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06773909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07987775 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07596423 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082509988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131607375 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066537253 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071826674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064039965 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079199008 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065098439 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071609293 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066133421 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071530606 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072101082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063576082 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071874602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068057488 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064599749 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067002287 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074276414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067728593 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061681876 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067038701 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087220911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076497517 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065650366 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068725879 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073430241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071614378 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060281678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065964906 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066267832 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06422097 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075606387 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080938154 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068813552 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074290863 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067088216 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076841151 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061577887 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07044849 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07217482 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075866659 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066128908 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066690129 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06105106 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063272953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068120394 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061144537 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066045855 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060431875 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074913806 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069095622 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076332542 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064451678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067385173 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068317734 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06927522 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072353279 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067794642 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068380975 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065653761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075286063 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070388036 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074300301 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061140925 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059929417 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063729243 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075447534 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089053979 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07227273 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066996835 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067137268 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063668361 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069658064 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067924896 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071611546 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07203595 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066237377 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071958251 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073048622 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066202725 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068090989 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074284241 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06556774 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068898799 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063660416 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081660941 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064568406 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063915384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063700238 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076235238 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0689213 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0656144 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063480512 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072582804 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060006005 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065513719 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065917879 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065942907 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074892082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069334317 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069514376 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073266646 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072017248 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065133335 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067886481 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062583981 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065725198 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06400881 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071540436 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059369225 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067057716 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065397935 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065145327 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198966034 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065307245 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066355055 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074173724 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07293361 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065253774 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063530701 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06942921 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066429438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069466431 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07412358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06526275 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061545083 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061596063 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070229514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06668571 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070846208 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07167214 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069717525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061111917 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06526531 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072307322 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075461408 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066881877 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067154651 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072716876 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068419043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065816423 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072914161 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069052194 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065892689 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072392232 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068279358 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061581981 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069806051 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068821521 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065847762 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069932276 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068976953 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068217863 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067238465 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065309973 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074069469 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067529154 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065476166 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066207337 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06519726 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07647451 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068444694 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06155986 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064049684 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075756419 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063900809 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065427825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065565021 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068232822 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06700783 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064575864 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065668507 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068489733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077098439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070186253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067150478 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072052418 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077294038 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06615272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068869841 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065734712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067397357 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066899018 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074485463 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071059623 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070126002 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068036368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062421082 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071351573 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07309727 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065731853 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064203148 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064907118 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070104229 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07160899 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070565704 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066765035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064139577 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066564688 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069223226 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068535101 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065779051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064970291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072728244 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064137437 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073028198 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067307576 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075914171 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069237404 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061227881 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069052512 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064395362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071898878 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061021448 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063963571 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06516392 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066798872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064904786 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067534409 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059520949 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071268049 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071845926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064813414 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063910329 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064405702 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070750733 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066179055 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068973405 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068427604 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070723739 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075124952 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06441589 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068418145 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074558404 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.193570957 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060884347 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07192548 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066052998 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066129551 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065516265 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064593892 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069885994 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075865874 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073412093 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060105486 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068742188 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064432318 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065632613 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062227109 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070554911 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069747591 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067499261 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073511322 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068031773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067329141 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069921446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066130221 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067330808 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067548684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069663524 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067549495 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068539305 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066416796 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069228923 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065511819 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064546183 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068087841 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067314911 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067521044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071639187 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06649834 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067466109 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068647089 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067868214 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066628892 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067157202 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066130815 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069138001 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067109863 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06662247 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068455719 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061000709 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074236243 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067013481 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07321754 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066646255 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063408285 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074398545 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068376293 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07217189 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067429797 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067865233 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067838058 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066235631 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069190228 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072630201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064625186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07673598 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074251595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067109432 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069549652 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06636081 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068021377 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065644074 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067239463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066681167 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06690816 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066082998 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070733244 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068292557 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066322133 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06740112 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066327473 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066394653 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067348499 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060842667 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065081531 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065264777 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065642102 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075379806 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066629478 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0658074 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065023927 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067127064 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064615808 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062738548 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074190942 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075449832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066447564 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07329001 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065172593 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067539821 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076057914 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060381663 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064112689 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063766268 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063669877 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072774647 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066765217 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07481879 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066049475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064805917 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062878256 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065939982 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064548437 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059972506 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062688735 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068180877 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063607673 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063848322 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065031339 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067106113 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065257061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073874063 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064034727 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065368217 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064929319 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061945541 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.195370719 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06591124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06977127 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067788458 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06419412 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063582607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065809238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067061631 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067549862 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066317419 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067981081 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076093012 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066036302 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069442115 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069722194 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061775782 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069691772 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066635233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066552965 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065508181 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069832651 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069948827 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067662801 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075043798 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066734767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067544447 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066861096 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064079686 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066198592 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066170348 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066819416 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065487922 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067621956 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074321284 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.0647988 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070129685 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066706682 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066689543 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073370643 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066959731 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069442189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073725838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066401249 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068016196 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074018475 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0707315 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070233527 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067262888 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068327027 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072186159 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065094955 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072067822 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06654151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067327941 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068249793 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064484147 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066047677 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065817435 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065288787 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072700713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06728975 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065448971 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065831951 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063818731 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067292142 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069653374 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074050632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068605967 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069641366 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061693262 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063531083 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067310456 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064297616 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068511367 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068685043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072116286 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067899964 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066026183 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064966897 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074592127 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071245763 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069421032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063851093 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06919665 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066513718 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067746581 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067100354 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066301748 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067131449 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069617058 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067160415 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065124733 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072603458 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069151257 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066967759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067694922 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067039081 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06653338 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061404402 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067204986 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068271456 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071313327 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068116019 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066444358 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076312471 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063940874 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066605161 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069174578 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065143972 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070070433 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061061546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066888335 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066806148 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066591159 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060572929 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064054392 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063130375 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067176263 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063844522 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060019701 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074809708 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073465755 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06770292 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063771751 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06343584 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.191360447 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062905834 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066452501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06803418 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068653513 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07671507 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06595831 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06557365 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061901634 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066304298 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069888948 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069581199 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06377481 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063094587 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066376868 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069262293 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072306683 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064957874 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066717419 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06943844 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068619243 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064760136 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070131334 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064238524 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070892913 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078772854 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067116783 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068326544 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072550811 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074737025 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068477244 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062388277 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067748858 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069734881 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068344628 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067784172 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06768043 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081226225 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069511685 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065721616 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06563397 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069033115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065768872 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074735256 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067601262 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067170624 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070454648 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068455099 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076812733 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069262194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073535413 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069487479 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068859572 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066175119 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066341547 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064278961 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065188039 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068186368 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067063386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07199981 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074269899 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065859851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077397411 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075455975 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068654828 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063608748 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065972446 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065387557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061569605 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067150879 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064153312 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064589202 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064393056 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065351289 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066825597 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071543042 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06678922 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066531229 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065869432 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060311685 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068438238 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068001871 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066604892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062510545 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066227583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066358971 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070232191 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069373111 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064173089 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067580072 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067702864 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066395403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061403388 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072316527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064989986 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067405775 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065267206 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066385089 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06669308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069216212 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071079755 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06701612 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068303128 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069648946 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06812812 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063376283 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063655247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070832681 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063759186 seconds)
  done (took 42.382374477 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099531518 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062625838 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061746243 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061797449 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073748971 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063425527 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061614482 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06269984 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06291846 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064947437 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061946079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061621387 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070648721 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07767582 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073641041 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066556632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061619223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062884059 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061904012 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062827087 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070480266 seconds)
  done (took 2.738307427 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073504187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070294228 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072483896 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075514201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066813914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070239111 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072963326 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070307031 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075907493 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067067498 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075945132 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07073597 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068107693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066738975 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067041029 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07051353 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075995261 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067113361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070760194 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072542884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070736058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072653518 seconds)
  done (took 2.873340254 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066260936 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065844715 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067529681 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060808476 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065488058 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069097248 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06907998 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063401155 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069105713 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064702047 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064674898 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064782091 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067133255 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061481989 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06529228 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063412645 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10888155 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068687666 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065680253 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066422766 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06127029 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067216385 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061478906 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061378039 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064604441 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068989299 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066734175 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064145168 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065057704 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064584303 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065607707 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063826698 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066998226 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066023154 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064771875 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064563548 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065237428 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06533014 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061147868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063803998 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066183632 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061421088 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065578241 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066694045 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063575925 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063563475 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067043318 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065411154 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060676143 seconds)
  done (took 4.542177276 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079864873 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107101732 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067527171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087713807 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079779657 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075546753 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069048772 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088944476 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06304917 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064358137 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081321102 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079107125 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066133628 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070150266 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072372529 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06551097 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066547435 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064306282 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069255014 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065070043 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069572239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07161043 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079765886 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078552029 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069411979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064271104 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064402515 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069682758 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078062665 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070101763 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069756314 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070697601 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079816234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070584793 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064370133 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067016457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081260874 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065416639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067493575 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063174933 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067231089 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069391189 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071860222 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081803903 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065445658 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070432855 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068029021 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062403462 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077531769 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06783502 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073445561 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079394232 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069333067 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065238657 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069682038 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080070923 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06511156 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063497123 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068466854 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078085678 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063441844 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068937584 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078521377 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067088892 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072320213 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079174484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070187717 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069436671 seconds)
  done (took 6.330335246 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075122034 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071888006 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079744715 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080455873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071718116 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071977275 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072414215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072132446 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071910647 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076611944 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071898865 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093229128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06739758 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075268936 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072204823 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072575316 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071899493 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072727803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072595876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071709446 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071946152 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080086692 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071936486 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07955173 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097154762 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067557272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07171381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071898941 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079984441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072043409 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079389943 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072263462 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072116556 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080164877 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079046467 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071867421 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064614757 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071410649 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072109325 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072206411 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067184373 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080199783 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071590247 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067673485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071918789 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072262477 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079903211 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078753467 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07416601 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076488116 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071906829 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079970151 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071382059 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071934635 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080075657 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104023611 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079655226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079573697 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071608135 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079618488 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079786484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085839662 seconds)
  done (took 6.014455866 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083135509 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074816741 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076385137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061225781 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063672985 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069871077 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064014666 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06394433 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074073628 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074086064 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076956954 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069604011 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072806186 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076863194 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069357259 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073627545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06940999 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069301707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073956655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069610185 seconds)
  done (took 2.761545856 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074111798 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083014067 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066627619 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072084642 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068545152 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071100245 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067821858 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068937754 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066439908 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068547681 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075948698 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0761405 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066322588 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071666937 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075544261 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071298097 seconds)
  done (took 2.470457988 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0738743 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072807599 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079777781 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066583215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063750685 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06247316 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065411973 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061606099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062137362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076974986 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065379398 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068277915 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065531333 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064473216 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062592838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06849104 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062212665 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063483839 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06566284 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077532013 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076295718 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064186235 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06626619 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065847387 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06543315 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070290628 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064839755 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063188905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063003742 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066005519 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065953333 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069276203 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062563776 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063570733 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064308788 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063213734 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065228611 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065762762 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067890854 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065372906 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063288787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065509847 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06515236 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066211672 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061825001 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065710686 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061615176 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067801998 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063828438 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06547967 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065151447 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067412153 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065657599 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071794713 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068331412 seconds)
  done (took 4.979284587 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078683596 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068420474 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061402851 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063987318 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068342847 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066843129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069034774 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067464688 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067441636 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063732349 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067207748 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068608952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067303254 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070115231 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067140225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068994758 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061923391 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067450676 seconds)
  done (took 2.552689672 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070989136 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065201121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073138752 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066224821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065211133 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067876657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061612914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064438341 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064128482 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065644579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065395256 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067837648 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064324051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067716842 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065292675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065254593 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067356298 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064059714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065490363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061653455 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067921378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064362353 seconds)
  done (took 2.782703141 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091850433 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080933122 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136940759 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07858101 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082784237 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071040978 seconds)
  done (took 1.87478828 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089666763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07868485 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066449413 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086761831 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073148924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067050568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067185705 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067457415 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075980116 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076102159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067531503 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075940553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075610007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07546892 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07379515 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072675205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067530844 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067249303 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06659715 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083992138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067519858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076043457 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067273566 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066928831 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067020594 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075139247 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075533302 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075448405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066773183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075333197 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072671209 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067379867 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075648767 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075494969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068500299 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075464651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067083384 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08427128 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072596656 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075133988 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068405909 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0733852 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075756475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072061025 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075439072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067438471 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072137114 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066960167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067362905 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085651618 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073531897 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075268481 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0734288 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076264836 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075977881 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085884135 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075902135 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074881648 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073149382 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078134232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075337935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072851005 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074925858 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076042283 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072951446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075161796 seconds)
  done (took 6.191527869 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082814674 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086202373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067072226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076349607 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075748588 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067579218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067517673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067491275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067373159 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067352875 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107709541 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067401372 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075276204 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075765977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067701073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067048811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067634511 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075094954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067012343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086101113 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067530776 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075534905 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075832944 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075361994 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076082528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073059252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067404172 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067294157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067206559 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067558501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072438968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067488458 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075237579 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066704993 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075293958 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067534717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06700911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071985725 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067417276 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073018739 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075297137 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083537489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067038399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067622551 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075740799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067273637 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067037036 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066676436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06734317 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06675935 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076005222 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076024001 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075838245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074987293 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067409195 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067517353 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067613751 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067621728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067288798 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073295325 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075712569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067466501 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086307981 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067397635 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067651689 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075300282 seconds)
  done (took 6.107658821 seconds)
done (took 128.289603179 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182078099 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165633122 seconds)
  done (took 1.677238795 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069012654 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097718629 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076649484 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128730614 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066324904 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100095339 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099276773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07806069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065741578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065981749 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066336996 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068700198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131605317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066414756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066254433 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068366457 seconds)
  done (took 2.656521649 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097311485 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156315207 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098729648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064837094 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096762034 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07316311 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06467464 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074565135 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070470367 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064653974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072642732 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070143648 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064512964 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07046747 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070655167 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072353589 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064412587 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072631526 seconds)
  done (took 2.762798872 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100371995 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091680463 seconds)
  done (took 1.539849311 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155997466 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105425177 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143076843 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342200221 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16774047 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227677664 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126327822 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127911719 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117079108 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1235361 seconds)
  done (took 2.97952761 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097609788 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151487225 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254225834 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114759298 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071869166 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094879563 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115732589 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076998075 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080974788 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080227103 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079880165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076346402 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098103009 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073017551 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07293821 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075484356 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101882794 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071528355 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073616309 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076108653 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09842625 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065014597 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073237205 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071933783 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076856238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076713721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065268068 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065032803 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076045339 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073536306 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076433198 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093606101 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077607609 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107141418 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069685655 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107693441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075873947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073752356 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073541349 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073568975 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078345409 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078472828 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071994483 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07596786 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064705461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075942813 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064815231 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065330594 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077570501 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066748036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07751486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076516176 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107111813 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066958756 seconds)
  done (took 5.924414676 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101188025 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103671239 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071487841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110358166 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099362347 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072105474 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100734283 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093011104 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102402414 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069772717 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067807409 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070268284 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08229277 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082657297 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112804788 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105166609 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07331248 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071147029 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103784171 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102521094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067976667 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094141614 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089394258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10107244 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067290769 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069781462 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06743528 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07020802 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077465015 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078397634 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06992438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080735243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085009354 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078147807 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066518781 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067352996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068193411 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079641827 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079724109 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07906975 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078326582 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067405181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067180385 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069239632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069627639 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067497808 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078676151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080680414 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078675406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069138396 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069703723 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067930924 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068986349 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080061787 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078057947 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08111943 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079825128 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067651016 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068105056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071956199 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08080513 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079160942 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07926994 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069009728 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078912388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068127297 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080057909 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084410017 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067751361 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069305531 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068029172 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06896337 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069301406 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077858066 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078110704 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069489426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0691292 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068327003 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079953855 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078732615 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067874161 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076659858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066918847 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068136737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069388942 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069267714 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077816625 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080086991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069320069 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068044203 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068739121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06808776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066088977 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075803396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079407768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077288642 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07732474 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067983169 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077544087 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077320849 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068736652 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07815936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066775665 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068460226 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19699942 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08023683 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077716178 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08040246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069555223 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068176334 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079172466 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080772172 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068444435 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078977362 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080501867 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080180613 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068271879 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082376542 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069114653 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079944137 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070032855 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079499944 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068376196 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080074432 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068553942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068418506 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068866354 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079931291 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07049898 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068614296 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069403196 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069417001 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079814397 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082913044 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069857409 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081140439 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07908064 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06960316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079353199 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069263288 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07912861 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069075349 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070397584 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06803758 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081994851 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068465876 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06874303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069173457 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080191074 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068204376 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079856087 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078223222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067708608 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081831974 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080994981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077260916 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080598878 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069816827 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068492041 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067859377 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069129722 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079075974 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079889858 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069433618 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068186651 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07783395 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079746559 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067230547 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078992951 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078468609 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078568451 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068107591 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069054868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080060983 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080729249 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078226338 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077867251 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078277504 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068316134 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077389614 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078400391 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068061796 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08448055 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068153541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08288548 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079513777 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076593854 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078671391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080719757 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080269991 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079946364 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083828576 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067777576 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068108201 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079945831 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067648331 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069037774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078154312 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068648084 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068642699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082077175 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06727615 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078078859 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066726871 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077201551 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065740216 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068577397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081929736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066687039 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068004556 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.210240539 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07091009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078803429 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081060407 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07963743 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068398347 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070394308 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079814717 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079460711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068268083 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068975999 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070497967 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078799016 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078037877 seconds)
  done (took 18.588918469 seconds)
done (took 37.481717893 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208434403 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152168986 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197821004 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118508479 seconds)
  done (took 2.123162708 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121798502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100760836 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09477067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064339301 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101547033 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064519439 seconds)
  done (took 1.930118632 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312803464 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211034635 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182147957 seconds)
  done (took 2.08741927 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197862139 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186485025 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390606599 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253529158 seconds)
  done (took 2.516445779 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141862756 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088890123 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06641537 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082544966 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134576743 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16107039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100777327 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125612816 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077438376 seconds)
  done (took 2.41340459 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146842359 seconds)
done (took 12.599785705 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124832438 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11175907 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.212873198 seconds)
    (4/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110294898 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202717505 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.167796915 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117501896 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.106190799 seconds)
    (9/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193294786 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.210253656 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081192697 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075920534 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077551568 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073179313 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07531276 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073833141 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.188499242 seconds)
    (18/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081999793 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101028886 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069594416 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19282429 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10528902 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072165081 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.187785056 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.225429674 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190237113 seconds)
    (27/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087365194 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140345477 seconds)
    (29/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097606986 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072281872 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193377719 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.172827621 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168700233 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090323668 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066852762 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07113527 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.179855105 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072688909 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10631637 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066239653 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133243691 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099137366 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075514909 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098933434 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071826133 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133819341 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074141062 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.151359475 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074597865 seconds)
    (50/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098333632 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07218284 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073446789 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071814081 seconds)
    (54/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.157722465 seconds)
    (55/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17327721 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085373356 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089261402 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148300558 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089926134 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102543438 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067257439 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087060536 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065386363 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079885753 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064937802 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 0.124647425 seconds)
    (67/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204042106 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094803729 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067808712 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179768736 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050989669 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064900109 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087993728 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091492822 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077948546 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113319253 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148650914 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119288715 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.065557315 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.201222395 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.355036262 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168507063 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076606656 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065326259 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052534268 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.374192622 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10050662 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186540372 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075731168 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072331374 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114323949 seconds)
    (92/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076112906 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072428277 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068401842 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097153402 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065617231 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071865207 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070781249 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073008881 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092195165 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066052127 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091563288 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073149354 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196861132 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135090463 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.176248079 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050993143 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072440287 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066016896 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095578975 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05127713 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070962028 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088307534 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135184914 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179550038 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071852489 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074177509 seconds)
    (118/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069161367 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071569346 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091991638 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050774887 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.132732732 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0731486 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071088981 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071674008 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159944073 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050634427 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075525291 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070058701 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070917909 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073508674 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073402011 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173047793 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052023877 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071971015 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157407889 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076388679 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067601225 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067353797 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051909911 seconds)
    (141/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107747815 seconds)
    (142/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05123021 seconds)
    (143/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050429508 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101476299 seconds)
    (145/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051552855 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069114445 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064720044 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072120078 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071843605 seconds)
    (150/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108269346 seconds)
    (151/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05070466 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052456357 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051212731 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09212948 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093709744 seconds)
    (156/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051636305 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07636466 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065538558 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050676498 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133872936 seconds)
    (161/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060954068 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072609666 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1471205 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064344193 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086935035 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064791111 seconds)
    (167/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051816318 seconds)
    (168/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062412039 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146542953 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06489428 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110053444 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065408603 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05238703 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091277206 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073806979 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068622244 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075566111 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066198935 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086295235 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072272445 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066253015 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088866552 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172107065 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089049644 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064727701 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064854156 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117817817 seconds)
    (188/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06962321 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071723849 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137041963 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.175267485 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077491689 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071293851 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067103814 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.235184182 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076032541 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114717692 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051618706 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138625351 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091780876 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067497529 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151612653 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072353862 seconds)
    (204/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061992591 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064499256 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075817546 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100468086 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051634698 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089011482 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053262233 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164753782 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051675612 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079594784 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074184631 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073030008 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065882684 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065738719 seconds)
    (218/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106156697 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05157507 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091761607 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065699346 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108268112 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05115154 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065496228 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065490667 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071135599 seconds)
    (227/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073722526 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064520983 seconds)
    (229/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087516479 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173437664 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 0.127041075 seconds)
    (232/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051871769 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06049258 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13202262 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080354988 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064618546 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06740251 seconds)
    (238/309) benchmarking ("sort", Int8, false)...
    done (took 0.138588051 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065294678 seconds)
    (240/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060709971 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.165876873 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07130474 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078256354 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065624581 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060596896 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067746574 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065034622 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052402415 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051220714 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051052431 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166650803 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066781186 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060433364 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065781032 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051036293 seconds)
    (256/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051652754 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071913281 seconds)
    (258/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051651808 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088443632 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065377126 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065518045 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065937776 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051225432 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072578395 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050996795 seconds)
    (266/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097947943 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.141601495 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063885971 seconds)
    (269/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078893958 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066810888 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087311171 seconds)
    (272/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184608523 seconds)
    (273/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061615096 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067255436 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06628919 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052040231 seconds)
    (277/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050958591 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066832551 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051426576 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052500976 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05100893 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069183642 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093993167 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072232039 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085136535 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051905287 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051033208 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05289599 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063619917 seconds)
    (290/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050925138 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050848739 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06356087 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070084506 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072196965 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079178433 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06520858 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050814017 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052433347 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071975207 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052405501 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070358731 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053302198 seconds)
    (303/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052093636 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118045163 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129279174 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050868907 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064739524 seconds)
    (308/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117070363 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070907629 seconds)
  done (took 30.300539326 seconds)
done (took 31.695521475 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084931209 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09261517 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074349858 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092667809 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080841741 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076602415 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072436498 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078305966 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079979467 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081704636 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078404741 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054866761 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074243664 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074142319 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074501642 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091351729 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077619725 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072662287 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073081228 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06492144 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073206047 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066217829 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067450705 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054597729 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077888625 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071622723 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072799889 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07457513 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066231588 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065958541 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069110436 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073520261 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065548904 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078706659 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072751191 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07377706 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074775006 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076795247 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067787822 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066536082 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074364814 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06585569 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072693594 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073440422 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072192452 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071365899 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07338067 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077780141 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091316085 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068110797 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074290967 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075850368 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076069495 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07291086 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069515877 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072878845 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070668624 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091226738 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073417871 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068177682 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07374771 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074025466 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071009044 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072999148 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072662805 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074968908 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075756837 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071427379 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074293857 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071199311 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065421455 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072558198 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068846805 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065442494 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075718471 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076225622 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064525625 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070843301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07205563 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070888767 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06464567 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06739486 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066888073 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071264961 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067039646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054320536 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068761414 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071701384 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064673397 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072850334 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071484386 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071558828 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066763758 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075072529 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064575577 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070476296 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065458651 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065075929 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066597758 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069099924 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06527713 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067519547 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074239152 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066976985 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071287709 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079301579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065033639 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071728767 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064545775 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064590015 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079181372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074591644 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06524196 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067413793 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064342274 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071951043 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064691973 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064886402 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065162361 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065113928 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070840567 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06492167 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066175675 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071478818 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076164159 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064183903 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067501414 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066764991 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064476047 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069786397 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064255445 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063844268 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.204875447 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06252816 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06825374 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066128195 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073457616 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068083946 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073613685 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067581897 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074222135 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070038698 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071428799 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071278046 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064454803 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059097346 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068916509 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068267127 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068130861 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065941525 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067304846 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065953214 seconds)
done (took 12.444269907 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066806717 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143547427 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099711282 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095386126 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086537851 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066885429 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07693291 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102370633 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067933147 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103237774 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087737361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084961285 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113166539 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064740207 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066197782 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069723065 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067358901 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081493259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101487449 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08623051 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115791624 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065375809 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09451496 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09001776 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087415252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101740439 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067136387 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070386305 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069766522 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091757983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086742476 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070334275 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066952537 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100873826 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092563294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083324232 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066559508 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082946134 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066960972 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065673852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067702677 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098625373 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080036003 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080588432 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070047402 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069313791 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067401965 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083841726 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089249595 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078872966 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086213785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102777779 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068914676 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065589107 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064552606 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085725598 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065634741 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068841049 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06648036 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068225161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065954267 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068962991 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080868095 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082200774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070008402 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080083749 seconds)
  done (took 6.802232302 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083188968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090351306 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082973118 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083470524 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065949141 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06648783 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066664797 seconds)
  done (took 2.029116268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067844649 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088813068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089562934 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088494431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084275783 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087904866 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075844489 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066869681 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081385887 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068226425 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087694385 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102309123 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067063019 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073262297 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090753453 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066805858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09074646 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066947477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06927911 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090381717 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06847788 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08235181 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070122793 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066963878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080853339 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06716797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113373924 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070925149 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068152837 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069498273 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064751352 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107595427 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080573098 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075410918 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066609188 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080545258 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080597768 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064564878 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082550722 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071483823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079709325 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066592167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067140592 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064619833 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07028179 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076377202 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066918509 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066817167 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068865483 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08573646 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066484136 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079686734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069168795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069043821 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067003576 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069828935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075945453 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06663064 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085655914 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067674318 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082956348 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082306762 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079591521 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082809617 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068649677 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07981132 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079852594 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068963622 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067617674 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069257653 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082128074 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064335618 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067742982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077041156 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068148635 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089192588 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08915081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067852408 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075993035 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06694326 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066321678 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066337576 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088734881 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069193831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066210164 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070207714 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069364948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064467649 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065493456 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07322906 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064446099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067946884 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068848584 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069252306 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06859409 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083057289 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06811153 seconds)
  done (took 8.745795748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068966062 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068119664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069754637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06800835 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067881263 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068166819 seconds)
  done (took 1.922126915 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093780634 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069235584 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080889075 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072314601 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103767214 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086869869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087059859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078684003 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083939975 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079025462 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086942373 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088556392 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093017055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073047898 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086895452 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071848282 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088163592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076017439 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078550875 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073132465 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08687049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07291021 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073256716 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081937429 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075334714 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072093181 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067689217 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078856816 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078656547 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078726104 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072742821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075732918 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070663726 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078275814 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086965649 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070829246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071908131 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077348462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072525073 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075903522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088189534 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073055702 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074664711 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077286219 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078869133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070805826 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077088043 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075698425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086149232 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077196639 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077288111 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071525535 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07519184 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076683723 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070546377 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078314276 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077243699 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087045544 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072814219 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070791184 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069083702 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075487506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078386891 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0753366 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079046787 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076945974 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070623985 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072398077 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073086222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071934807 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077007208 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069563198 seconds)
  done (took 7.085360347 seconds)
done (took 28.061088366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546995142 seconds)
  done (took 2.02420931 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607489706 seconds)
  done (took 2.108655856 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.575772838 seconds)
  done (took 8.075853738 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39290066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476687017 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689609253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132395343 seconds)
  done (took 3.235294302 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.680745172 seconds)
  done (took 2.187740804 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209035704 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196836423 seconds)
  done (took 1.925124457 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374780023 seconds)
  done (took 1.877516893 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106892532 seconds)
  done (took 2.609991865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263436973 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163317314 seconds)
  done (took 1.934186042 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.4583574 seconds)
  done (took 1.965023625 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844768013 seconds)
  done (took 6.353742336 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205571957 seconds)
  done (took 1.764028147 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241437155 seconds)
  done (took 1.742393275 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.676354651 seconds)
  done (took 3.18068971 seconds)
done (took 42.492057344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080161365 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081934662 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081470173 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078585215 seconds)
  done (took 1.812934862 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07780853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07316669 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076867588 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072863995 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076683197 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072844224 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074247403 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077002084 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072135064 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0731003 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07311794 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072510502 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074941469 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074882495 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070971953 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075298507 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076139294 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072583038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075904558 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072401502 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071166487 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074716309 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075327168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072133456 seconds)
  done (took 3.284432097 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077397687 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073352177 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075418108 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072256065 seconds)
  done (took 1.812428069 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077614047 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092454953 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089234908 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077522291 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092335652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086591661 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069209782 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069466377 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07297313 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077651488 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06827654 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096625203 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088047725 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076872363 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079619371 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066224157 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068984606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087200964 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077111956 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077876045 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07018727 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077401789 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067967021 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088110195 seconds)
  done (took 3.402462423 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077733142 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103591356 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078325721 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088551884 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090927183 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065546497 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074601928 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08945311 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123521199 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065425232 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070053406 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065676831 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072425307 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065180274 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076268217 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105508031 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108701711 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068708807 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095865213 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065450726 seconds)
  done (took 3.167803794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073286476 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070292875 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066091026 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068874467 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077606481 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073189794 seconds)
  done (took 1.946168905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069075873 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067641258 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068242425 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066946487 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072531182 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067377583 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065971357 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067794287 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067624138 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066870654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066499983 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065728129 seconds)
  done (took 2.326633785 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179927565 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06933315 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068860123 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066053081 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07085075 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06658305 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080201104 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067933358 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090288959 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06682159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066861835 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06861477 seconds)
  done (took 2.476876845 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207537501 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076672678 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238074021 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137290711 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112139247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115803361 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104261672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114205279 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143949332 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102351574 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168849893 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166271041 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107349265 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137588538 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08923741 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09777678 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15618408 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162673209 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103686579 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165843517 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144876599 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124679272 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147324366 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101478588 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10627581 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12264785 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071278434 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080333064 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171402344 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132640265 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147575814 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111878008 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094561777 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177726767 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172679109 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146548761 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135471393 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084031505 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102826326 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133240857 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199019168 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087921803 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162784691 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246236538 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081499806 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134736133 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120756228 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120668027 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107209395 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090722263 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147004058 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184556753 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139931482 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08801277 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112700826 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119515858 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117483962 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103696605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182774228 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162363242 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128777815 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071433869 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099359032 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154463143 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132363124 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109657229 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127190518 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094766103 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134731259 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15488538 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119317345 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144486121 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130029626 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089070166 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11974156 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140406729 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129278369 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170972059 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125328724 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073050778 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126413705 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104315537 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081873806 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141719865 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076203295 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178634379 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098740416 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106459005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113316007 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108982531 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109229021 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162104633 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143280406 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244132292 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066659762 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104757193 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121269223 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14974638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089083187 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108832452 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118712046 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078233775 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14002439 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075041255 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124300051 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07522922 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126861455 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133689139 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075949656 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122976119 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101677275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101356635 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135131295 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161509299 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089693304 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083144571 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16972815 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123488363 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105098662 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144294289 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157185915 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099578677 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103464524 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150591493 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181526347 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090307984 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164030495 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108515206 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084222413 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088048163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124545201 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112932856 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122797543 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082746793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119491709 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169979362 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075526932 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095852781 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134139783 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078849254 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080769901 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103387213 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100626398 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095045199 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100530029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104331066 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137593212 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123274447 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105039075 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270296911 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099648007 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171312405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089732391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101566059 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104300091 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070124738 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13834453 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158729745 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08005372 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16614113 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123806709 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106139728 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120735498 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084060486 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140948992 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079201518 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070681701 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144532869 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110780846 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110938916 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152448253 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105978065 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128399709 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120823043 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136096875 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134078488 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130045292 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105874456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087941377 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112197946 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126278211 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073199167 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091888318 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080533015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105032972 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095844092 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083423022 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143778166 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125487931 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100888132 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111883054 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097902544 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147926705 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077037904 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130208725 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119708468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093969035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151846247 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153043734 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131939584 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099706277 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147443428 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070173386 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074173611 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089164724 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267467606 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084293853 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084815887 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118718467 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147762149 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131131942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140058884 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112194979 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12262254 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154666692 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069844442 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117093749 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150243895 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121696018 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105325253 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090890916 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099442029 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142757941 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109649589 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183918787 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114631408 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126856458 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154404053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099851218 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080069984 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102853257 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137035071 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105718419 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146037899 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099986717 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088475402 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110284782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074265184 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100449959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128720295 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12061054 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136640639 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116159777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133777812 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077530483 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11816194 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121040843 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123568381 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064150954 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119940055 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161642422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093593259 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118820834 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153384927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079237466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125216344 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321316424 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147954809 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085460212 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112570088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119869418 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128772813 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121732255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142259111 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109066188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13592357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109962975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085578779 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087920789 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098124139 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105900323 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094364673 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109914001 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115730269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095230136 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133213637 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103659752 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110576968 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118173139 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09712394 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089777732 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097642868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175168661 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119439272 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172945494 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099236271 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148004465 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164894552 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07507812 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078912955 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078852082 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140341859 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084304205 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131979377 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097947026 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106438302 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125202722 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142877219 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095955506 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068788449 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109526429 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135547416 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113218654 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099131745 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105208335 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163792492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100686367 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079793838 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113926531 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105084086 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102606854 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171149852 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203526769 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098807578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077009823 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081773042 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1288286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154066062 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081624863 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103882933 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120164317 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111099239 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129266166 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102272225 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100489604 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115575512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150747097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129523143 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090313826 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113864717 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13022449 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15864157 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105871299 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096491227 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173380236 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155529486 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160748538 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089561375 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114631166 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114696041 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107942164 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140337725 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083396057 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165106325 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081930276 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13693506 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104952627 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090456196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130690812 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11587354 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088571944 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148992534 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118102935 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082941036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07826508 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118786088 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121283555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106707749 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075489311 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139584815 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072849627 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131975458 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169143198 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080921056 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103974026 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239895341 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08085858 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110881908 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103500266 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09078859 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099205764 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176408179 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089956257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150878762 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143744209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114508708 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137854515 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101233139 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637332846 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078387619 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153656807 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117317918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174263817 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098571393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119065502 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110344259 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124709264 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145504396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105367876 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176488399 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133299039 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117303782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080367592 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103114954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103715887 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089619805 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105863176 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113907131 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116712883 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094398774 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116724463 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124093837 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082565912 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095553159 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157647798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118061436 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145542176 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14178995 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085173898 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118194403 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138842182 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080014483 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122672433 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152689412 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106066294 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097686924 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080006118 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246687174 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172962747 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073648348 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164645948 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120681416 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1104183 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114415744 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116728928 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133257919 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108052994 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123001112 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095165407 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110937994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114437269 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082825682 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077995904 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106173427 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11366987 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09837506 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09946234 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098388371 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152993551 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071513116 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097230946 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104411044 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146854068 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176520705 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088359882 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083429483 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120730097 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114005832 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113666258 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121444289 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079944823 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082874622 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082155319 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07848994 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108991641 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112845591 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104970224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111822691 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165739825 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083456045 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222512195 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095644429 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105195615 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069935836 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079364945 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096085198 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097920554 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108588545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101169088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169644899 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094486153 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08958465 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092080416 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072939441 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082530937 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126707982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25503215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122180189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099203302 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063146334 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110626263 seconds)
  done (took 59.210924678 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109277395 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082683231 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097569063 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150736441 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122370623 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213597462 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158264461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199939263 seconds)
  done (took 2.751738916 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069209167 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094767757 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100484446 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08316839 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067883195 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06893942 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225684823 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081431483 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066817281 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089092485 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080008504 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069621491 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424677637 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066604914 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067850805 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063451721 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067856664 seconds)
  done (took 3.396462854 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368257202 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60423054 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374912245 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07368115 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.853855279 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09165941 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.03127145 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129493291 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074748312 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524678477 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702035674 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125231897 seconds)
  done (took 18.578358922 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.0766205 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070943451 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085005464 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084198198 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073120782 seconds)
  done (took 2.012773224 seconds)
done (took 107.743837684 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080160833 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404153088 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054055968 seconds)
  done (took 2.109803885 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083854558 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084893105 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084362021 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083631201 seconds)
  done (took 1.965893714 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074840791 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076674133 seconds)
  done (took 1.773703317 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225344433 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1590844 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087037844 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082826608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078573161 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078558111 seconds)
  done (took 1.866808368 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072734567 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075759157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072485498 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076209176 seconds)
  done (took 1.919887366 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076328268 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053061932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055363362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055882669 seconds)
  done (took 1.863885879 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086942478 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079167916 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079117684 seconds)
  done (took 1.868817108 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101182938 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085444289 seconds)
  done (took 1.809685352 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082028744 seconds)
  done (took 1.706264676 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099702179 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114502286 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131862772 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110917385 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138893632 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109476195 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086186605 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087136316 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077745647 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087620659 seconds)
  done (took 2.66842386 seconds)
done (took 21.728520308 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078994479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.452161099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360829747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090560165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670772388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356340383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001048657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092378355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113537266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06783844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083986378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649676562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957420405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.411484956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943127142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31756743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649756514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068425319 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068349602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068742821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98879842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067508646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068185893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068750671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649959327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372186878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068438123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.314479464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068370597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069863324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355550663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068609854 seconds)
  done (took 16.274432767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070611223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11833678 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07408657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084579501 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071063357 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069918274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071630869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069294432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12008963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068000307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084839675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06813083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071908922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068294043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087574333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068701677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069225422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068845305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068540193 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068295612 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086961572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068069644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068378746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068679283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068097712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079940825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068411174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068502189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068734465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070326102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071680138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068857817 seconds)
  done (took 4.033928651 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115545544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125906658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074837725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103424232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112344895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070347642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143758861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092730692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128060016 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068161136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084925724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068494225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101898829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069371369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088029155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06911592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069684239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069220471 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069209464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069112524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087659151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068465558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068694083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069409928 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069157532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082168152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069441951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069145439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068577024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070884599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072028837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068937643 seconds)
  done (took 4.298218244 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072634004 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076037472 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083846097 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083886706 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0697674 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072838107 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073651644 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071707203 seconds)
  done (took 2.247096355 seconds)
done (took 28.48305023 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079434687 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069322589 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072850777 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081210337 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073584694 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078958615 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067782545 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074418241 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072303576 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073743168 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075144579 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067957457 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071289787 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067203825 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073743531 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067765838 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079530273 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072378399 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079629895 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079686459 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069793958 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073199389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07421026 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078962165 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079249979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078912472 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077651897 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072933129 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069239863 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070234348 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077154414 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083710418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068629041 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079533731 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067819685 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067810231 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072410194 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068191142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079505155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076579501 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069973438 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07726439 seconds)
  done (took 4.733585363 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08772426 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091410094 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085181906 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06206252 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067003179 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065082496 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088601732 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05971136 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059486005 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08754764 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056149115 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05926466 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062395567 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053936484 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059264396 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056622324 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061186134 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055864974 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059845253 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059238121 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088385622 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054268289 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077457665 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063009235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058803748 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06206116 seconds)
  done (took 3.388242198 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074688773 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084402287 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088475692 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127037854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105085597 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077697598 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080049504 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093057131 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085773725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067421707 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07146221 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094406009 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088126016 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074092353 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068091602 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084909721 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082502232 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069021539 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073871678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092738538 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086158566 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085234603 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092730222 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081396089 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067444919 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070052413 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071702752 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080930282 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072511948 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076549281 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07145814 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071013732 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069642409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079422809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071777149 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069091371 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091193503 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077103773 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078387494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068782544 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071223277 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068827006 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09168036 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126832759 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067676165 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074590158 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075177327 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076941904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067970736 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086383396 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078402653 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067241998 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071075741 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067179798 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067646544 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081046387 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069346805 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07032794 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076902647 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07091635 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089480034 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07169134 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083010317 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067624078 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075265253 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067190814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068577584 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066785118 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092738654 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069351138 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108598208 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068937061 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06887053 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076510123 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075338238 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073772805 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068053279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082657706 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077687147 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071314337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07583011 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070811127 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070939692 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088350665 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070319204 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069135198 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068498441 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073803117 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070068212 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.079738235 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080389906 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067529677 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070242778 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08385092 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067227492 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068881432 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073542842 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072789521 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067170214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078622473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072779928 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06835116 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07615473 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067641374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070407339 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079358137 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073305151 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066436454 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072066615 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073801624 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067931849 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070596039 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069954765 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069045242 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07517755 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073551724 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071557589 seconds)
  done (took 10.604223256 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161677958 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154799992 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070766823 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145807353 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077097895 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079545404 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148075168 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094742003 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068558669 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068919907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069245812 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11295904 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106644713 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116151031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078836294 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067900784 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083925133 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114651846 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149560127 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143713163 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08402794 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077488581 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070319139 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069334172 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071306532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078834282 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085917262 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077034983 seconds)
  done (took 4.406842231 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080818195 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09763255 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074946254 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090373364 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092777487 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068221518 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070506952 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069775795 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080545483 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079164457 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067699615 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073468536 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07459081 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071932054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069012467 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075021944 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075188105 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06982343 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071155856 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073412812 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077649346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092282026 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072018752 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067637525 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073252134 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067326581 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064869941 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085357315 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068471121 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090161696 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06596779 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075775593 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081591113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069034369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067726853 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067782422 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067574626 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067735361 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069795238 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066617934 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066309493 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057753673 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067269761 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079637887 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074062216 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05662432 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072583812 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072994655 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076262365 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065663998 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070579885 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070344587 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070800554 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074818445 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072824255 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073068638 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068980646 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074029851 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075547495 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067472237 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064529812 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066060215 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071891923 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066235704 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075592844 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071825452 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06639603 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067358765 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069572564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073687845 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067538249 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070896598 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065403713 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069998943 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072256353 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069299005 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069136946 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066547844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067361867 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068138678 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05551742 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067691686 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053689383 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070289815 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065845922 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066596238 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067259725 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072682793 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080309487 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068715437 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073428343 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068911798 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066602012 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070480344 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060466987 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070149527 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082818068 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08271044 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068204132 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065957051 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081940399 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072358607 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066766816 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056362794 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074953257 seconds)
  done (took 9.172683805 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089546625 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070116405 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083955902 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091675426 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087663922 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074659151 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076782111 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069460102 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082443387 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074047897 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07643952 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068469241 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077157903 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077859953 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070239961 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077355139 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072185462 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083311085 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082324319 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068746406 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076010881 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080494421 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089712574 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080433804 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078828889 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080419825 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089424562 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071816764 seconds)
  done (took 3.882702291 seconds)
done (took 37.824349498 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.72365386 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.898358951 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.71757395 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.066164971 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.822529372 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.735243399 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.8657774 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.707249371 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.880885737 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.755061049 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.978764782 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.778896332 seconds)
done (took 64.582018213 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.753859184 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.845467024 seconds)
    (2/2) benchmarking "String"...
    done (took 1.98385102 seconds)
  done (took 5.476587226 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.027448813 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.293762655 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.939511104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.704975191 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.711548945 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.938435161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519504459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.245183014 seconds)
  done (took 30.001142126 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.854457674 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.948779358 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.391934439 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.43056528 seconds)
  done (took 15.32817164 seconds)
done (took 62.326072534 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.739664415 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.746695726 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.728649961 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.690495308 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.764909802 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.727937006 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.854825272 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.912249924 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.707028038 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.694810495 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.706670198 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.135024133 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.710120242 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.816652216 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.70637517 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.7167553 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.754173516 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.111027915 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.859101286 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.714976694 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.721183598 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.738463292 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.706691973 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.706398808 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.760462322 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.704649101 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.128669415 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.715355519 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.320746179 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.705633223 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.730144251 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.009380301 seconds)
  done (took 202.393104071 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.700538319 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.545992292 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.612126223 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.707718626 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.01857929 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.882916605 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.818511823 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.110157954 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.704145461 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.725824263 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.846231979 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.700054007 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.876789534 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.683037967 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.728797582 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.810828725 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.850996864 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.873688322 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.730995089 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.86647724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.717742617 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.699934267 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.665618628 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.82178837 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705570032 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.708181675 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.857303183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.713629075 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.898823858 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.819179655 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.711561132 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.723865491 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.929511335 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.579345556 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.712029994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.724617138 seconds)
  done (took 166.42642664 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.874336398 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.706209966 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.704781883 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.706202001 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.704761776 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.718698485 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.706492676 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831093373 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831447345 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.16683876 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.963007257 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75886958 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.550536847 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.705153706 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77361577 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.72020753 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.706644869 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.721673774 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.733726944 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.706560256 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70631804 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833444067 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.71816181 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.796373457 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.713872674 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.706934598 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.712720216 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.077716283 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.706357948 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711963662 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.963414471 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.707015733 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.705914161 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.608102269 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.116854456 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799064353 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.710017868 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.712774158 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.707281644 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.926740257 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.708574593 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.708049572 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.711214382 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888026857 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.707278334 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.835163581 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708950177 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217076573 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.708426315 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707642446 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.439933145 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.398933061 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.709207335 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.707460141 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.710807064 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.7070823 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.70662619 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.714296122 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.384288791 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.780974327 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.710512222 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.711304909 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.715907214 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.708279611 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.863693296 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.710694965 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.83284794 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.763995429 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.826286874 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829098088 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709359571 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776045587 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803885789 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.710110057 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.70855392 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.708967756 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.707784314 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.790044368 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.70874935 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.830949143 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716353216 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.710028048 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759207675 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.777620564 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.709608942 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600891061 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.710117337 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.709853218 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039976628 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.710470841 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.709506431 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.709887745 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776218643 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.709061086 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.708977817 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709156347 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.836480193 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.830654764 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485461776 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.712506442 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.317387878 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.716089847 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.854952207 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.71221171 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896636184 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.713058261 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792562764 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.715669642 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.712160438 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.709187473 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742271503 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.711782756 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.773041778 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.711650167 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.082135598 seconds)
  done (took 394.800218133 seconds)
done (took 767.202009901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.371807442 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.338537632 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.446069449 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.357911143 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.332371252 seconds)
  done (took 13.498081563 seconds)
done (took 15.14902834 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.797810463 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.803423164 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73515188 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.800155333 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.732134879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.799634092 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.78097091 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.736691019 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.768872279 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.73674565 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.771373377 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736140608 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723540657 seconds)
  done (took 24.575403579 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943644709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.950138227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78254877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950741913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76028005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.942474774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878018173 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866274453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866562894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728973908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.725908353 seconds)
  done (took 22.05018833 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.951052846 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.972279769 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791129148 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.955289693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.764584152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.949983046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879111046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.865629286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865478399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.72880726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726727369 seconds)
  done (took 22.104357688 seconds)
done (took 70.383443178 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.721756236 seconds)
  done (took 3.376043475 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.743147946 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.880469984 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.728650271 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.726585871 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.721539644 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.722783617 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.726274138 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.721123087 seconds)
  done (took 15.625679166 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.718326369 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.718048438 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.720944812 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.719563433 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.719239433 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.722153641 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.721288319 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.720979415 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.71838068 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.721249689 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.723394465 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.722058053 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.71859311 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.721730881 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.719420642 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.719192063 seconds)
  done (took 29.181683442 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.720641623 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.718534226 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.719122703 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.720806428 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.719643464 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.72165063 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.720264224 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.719444705 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.720403089 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.719353596 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.72058402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.71976181 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.719878061 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.71994215 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.719598131 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.720907037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.720101807 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.722215326 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.72481931 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.719322501 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.721214771 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.719910257 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.723730355 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.721172038 seconds)
  done (took 42.952031392 seconds)
done (took 92.790929818 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.6232945 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.13026542 seconds)
  done (took 8.410479675 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.724418681 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.722688758 seconds)
  done (took 5.145175675 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.724354815 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.72315901 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.722826339 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.723121888 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.723626289 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.723869073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.7236497 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.723264971 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.723397084 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.723545918 seconds)
  done (took 18.891784138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.723277701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.724514794 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.721711104 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.723655401 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.723819697 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.7206667 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.723283445 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.724420843 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.723984374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.721698561 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.724102752 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.722567286 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.725377783 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.722295805 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.723427723 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.721017953 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.722395994 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.72135552 seconds)
  done (took 32.671813631 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.723794449 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.724439776 seconds)
  done (took 5.10638255 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.722350278 seconds)
    (2/7) benchmarking "second"...
    done (took 1.721694245 seconds)
    (3/7) benchmarking "month"...
    done (took 1.723449135 seconds)
    (4/7) benchmarking "year"...
    done (took 1.722896407 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.722922894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.722193012 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.723073954 seconds)
  done (took 13.717592789 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.727618531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.901237167 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.978473257 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.384642314 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.726376881 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.730258295 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.648396266 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.72862648 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.729573967 seconds)
  done (took 19.214862225 seconds)
done (took 104.81500052 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.54531276 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.720309233 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.046747273 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.780660674 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.741281104 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.062197748 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.735898265 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.935619669 seconds)
done (took 42.226276972 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.802543148 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.274859821 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.306357572 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.105447053 seconds)
  done (took 12.34582479 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.706245558 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.235721429 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.7631459 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.318128525 seconds)
  done (took 19.706170459 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.089015386 seconds)
    (2/2) benchmarking "read"...
    done (took 2.086083893 seconds)
  done (took 5.840408083 seconds)
done (took 46.355814496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727302368 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.726129798 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.725085554 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.726940667 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.72502439 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.725025374 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.72747217 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.727501421 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.727259967 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.727599168 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.726549234 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727673177 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.72465253 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724499404 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724621728 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727229175 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.726890153 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.724789522 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7246667 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725390276 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727172864 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.724440978 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.725086897 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.725979532 seconds)
  done (took 43.086468959 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.72712466 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.72672053 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.727231848 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.726665516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.72495424 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.728615052 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.728566853 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.725138037 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.728703837 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.729214788 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725832027 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.726153765 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.728603113 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.725491988 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728268194 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.726711656 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.729703113 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726105848 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728745939 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.726916363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.72890144 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727243361 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.727105715 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728850643 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.72687445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728511747 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.73032349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.728275438 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.729113482 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.728109057 seconds)
  done (took 53.492019491 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.734307103 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.737403451 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.730644103 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.72923669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.730755208 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.729728577 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.729570492 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.73002354 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.729770257 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.729797413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.73049886 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.729838246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.730805298 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.729787332 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.729602616 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.730770029 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.730414985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.730968283 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.730283112 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.730757574 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.731037666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.730997751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.729943802 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.729750019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.730003517 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.730522063 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.730574987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.731877784 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.731184257 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.731334756 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.731404963 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.730969897 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.731626897 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.731720569 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.731392122 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.731389729 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.735455839 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.73900886 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.731678935 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.731635918 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.731156226 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.731586387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.731610436 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.732034287 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.732037259 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.732082679 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.731980247 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.732513585 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.732127339 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.731774599 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.732022352 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.732595943 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.731583259 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.732583062 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.732165232 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732515873 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.732541188 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.732429879 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.73274723 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.731880579 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.732995209 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.732644941 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.732563911 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.732891529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.734167351 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.733621269 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.733080729 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.732672501 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.732973637 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.732941108 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.733919119 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.733228208 seconds)
  done (took 126.354275916 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.73215988 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730179515 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.731053901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.730621512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731561604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733719716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.730639994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733911791 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730693901 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.733633047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733203774 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.731154127 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7309038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.734178575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733618253 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.731927882 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.734085802 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731824124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.732972734 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734525339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733014776 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731869325 seconds)
  done (took 39.779110976 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734236401 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.734027181 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.731151898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.734750088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.732570805 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733390192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.734599442 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735656262 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734330301 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732539707 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732813554 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734809818 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73298134 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733040168 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.732635634 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.733923946 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735397261 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.733256254 seconds)
  done (took 32.87501346 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.733665976 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.733695941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.735928672 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.733742045 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.733356262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.73601513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732963137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.736305534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.735823903 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.733297369 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.736117171 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735889888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.736104229 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733438231 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735860728 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.733697561 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.735704626 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733672348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735665307 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734382779 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.734397857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736269281 seconds)
  done (took 39.835365923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736145039 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.73636219 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.734713086 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.733986532 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.733780556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.736789712 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.735916948 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.733561899 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.736689923 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.737514563 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733794007 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.736820626 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.734201765 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.735114309 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.733394742 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735008703 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737961774 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.735356448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736876789 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.734950342 seconds)
  done (took 36.379958575 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.737858415 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738571338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.738895954 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738503163 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738232661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.738956853 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738757002 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.738930216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738595919 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739316199 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.739155684 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.739667056 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739638556 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.738375003 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738608443 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739392907 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739952575 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739987283 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738634551 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739744439 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.739001943 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.738882882 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740176857 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740596587 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.739342726 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.738954191 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739528182 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.739568067 seconds)
  done (took 50.367799338 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73945939 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738784714 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.736599938 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.736494854 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.736957138 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.736921087 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.737649716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.736719288 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.738403622 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736754617 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.739034382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.738835523 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739923013 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.740097508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.739178537 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.740255774 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740100129 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.73776458 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737712264 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737901015 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.740182324 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740592042 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.740056211 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73736919 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737869883 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.740616119 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73750413 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736925701 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740423658 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737820511 seconds)
  done (took 53.828877707 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.759459557 seconds)
    (2/2) benchmarking "in"...
    done (took 1.758205723 seconds)
  done (took 5.191552851 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.737845577 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740918172 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.741208174 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737294295 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.738443878 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.740387492 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740769785 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737861965 seconds)
  done (took 15.589142723 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.741482203 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.741475061 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.741256512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.740950108 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.741451689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.741476685 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747160988 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.742648276 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.742529836 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742698746 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.748031306 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.749190758 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.743202605 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741791489 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.741792283 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743203208 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.741740933 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.742251804 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.741848429 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.741156294 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742729128 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743325433 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742306126 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.739143918 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.743554949 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.751858431 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.745897651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.741940813 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743038585 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.745331064 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.742208517 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.740145607 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.743267073 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.74254225 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.74195351 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.743009039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74892747 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742758631 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.747650163 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742816574 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742672286 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.739979352 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.743552753 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.744242417 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742967235 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.743175314 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.743471238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.740353001 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.742737957 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.745369196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.746965587 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742677198 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.740144348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746437656 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.744852656 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.749283071 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.744756325 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.746648398 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.752648865 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.752285842 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.755916753 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.750831502 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74583465 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.74495036 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752958349 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.765872253 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749573773 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.7414799 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.741959469 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.744673744 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.750188159 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757853386 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.752353149 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.74467429 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744374162 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.744278141 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745457022 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745280627 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751239379 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.746934193 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.74578023 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744413583 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754291068 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767157436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.745076427 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.745964142 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.74552541 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.746188701 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.746634725 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754724062 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.746176776 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.745125608 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.744415204 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.745780656 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.746964216 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.746032233 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.745136286 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74605656 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743186319 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.745996556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746266824 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749301173 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.754534888 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745535026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746836684 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.751064854 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.746104867 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746584638 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.751770719 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.746732356 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746844147 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748338218 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.752401272 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.743550728 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749032892 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.754121169 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.747410399 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.748141178 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.746514333 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.747465972 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756179563 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.771097354 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.746973393 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.747604262 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.75179648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.758695752 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747581178 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.749938859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748298224 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.744797867 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.74512547 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.749252059 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.747145668 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749625831 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748263056 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749066059 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745038748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.748554012 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.74828967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.749899382 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.749798734 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.748851501 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.749153374 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.749674773 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.748534357 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.750421721 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.753039943 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.748959392 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748931323 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.749869249 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745900709 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749904087 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.74996817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.74877055 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.748822289 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749459315 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.748702195 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.748343347 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749208126 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.748849779 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749352971 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.749673215 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752714928 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.749682172 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.752254385 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.749185954 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.747687118 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.749266298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.74932871 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.749732973 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.750405988 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.749401799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754199397 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.757537735 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.750231436 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.750083484 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.752972635 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750543434 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750939199 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751113638 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.753794469 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.757804592 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.751032649 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.755374319 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.751071549 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751863012 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.750786103 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.750424102 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.750736549 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751030577 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.75340155 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.758491555 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762101898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758566044 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.751318738 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.754390354 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.751963009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.754892821 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.754281498 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.751360802 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.750871341 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.751831059 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75064555 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751763967 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.752794363 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.752125155 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.751229673 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.751835856 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.751867771 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.751726374 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751515227 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.75142529 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752794097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.748782421 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752631268 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752089671 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.751052082 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.748752554 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.750692847 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.751999673 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.751334129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.753553239 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.758511978 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.750718024 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753385318 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753818806 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.753602337 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.751456485 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.752844719 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755127511 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753095154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758641906 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.753207214 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.754074022 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757584587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.75343201 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.752150135 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.755834927 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.752837798 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.750819332 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.755029324 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.760796966 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.753464665 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.75386523 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754249904 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753148125 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752845075 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.758222381 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.750559209 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.752767105 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.754477453 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.755015098 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.750704917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.75549403 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.755194391 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.754331059 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756226017 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753757401 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.754150154 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75559451 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.755798736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.754641686 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.755711938 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757060866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.761199965 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.757813266 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.754140896 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.756725577 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.75623192 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.758280352 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.755220095 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.754865464 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.755730865 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768123564 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.762606838 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760788434 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.756712278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.755775263 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760902042 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.755926082 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.758985352 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754948414 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757088433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.755018641 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755590673 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.752668403 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756700328 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.756232204 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757064432 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.756825437 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.758215041 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.755805113 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.756198354 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.758073124 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.756195609 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.757377827 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.755289002 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.756254153 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.757714543 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758286451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.755374718 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.75579385 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76173175 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756893716 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758169446 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.756088772 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.756570807 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.755212203 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.757708315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.757457194 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.759813972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.763965792 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.76055826 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.765686039 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.758225889 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7647813 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757740039 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.761768802 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.765005219 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.754156667 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.757322297 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.757605933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.758963853 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763229637 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.757745277 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.758498787 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.762170898 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758243117 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.758031624 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.757627342 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.757290034 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758412686 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.759331296 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763549482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.759534636 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.762147591 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760016167 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.755584177 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.758718635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.759335241 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.759006917 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762428239 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.759282839 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.759348167 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.758217307 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.759415619 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.758677874 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.759855401 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.758968892 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.756377785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.759283135 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76697297 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.759734263 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76354974 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.759341503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.766394375 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760212738 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76575172 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.760377327 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.760455711 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.75953575 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.759412903 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.761034524 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.759872708 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.76038604 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.759651317 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.760562876 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.76326552 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.761172274 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.762746003 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.760276993 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.760579137 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.759691681 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770265075 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782735381 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.76129744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764739462 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.757144635 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.761500612 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.765142693 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.760684902 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.760774986 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.763249315 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770686043 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767750558 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762400586 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.76125457 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761027999 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761231875 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.761618704 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.760802101 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.761294862 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.76137417 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.762576042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.761334345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764532354 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.761305063 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.762616685 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762637492 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.763031506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.771605881 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.762209768 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.762731054 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761634074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.761704897 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.761002017 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.763059159 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.762101792 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762972622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761842209 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.763552347 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769820426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.76884335 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.764357474 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.762314594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.76183287 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.763425697 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.763463949 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763436562 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.762701632 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764434 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.764568438 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.763065745 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.762882911 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.762032859 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.762821813 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.763885195 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763364869 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765735927 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.769504187 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762800325 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.760592964 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.762778457 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763166237 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.762771955 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.763359155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.769730543 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767449742 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.773675434 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.772316695 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.768504679 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.763844269 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766712764 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.771260561 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.763058702 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.764163523 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.76361452 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7650249 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.764534749 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.767236075 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76447938 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.769634524 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.764114441 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.765057832 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771839231 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.76594341 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765464413 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.76597554 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.769938924 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.765361327 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.762443718 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.76583652 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.764073989 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771321442 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767252271 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765684806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766972797 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.76440787 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.766485287 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769907391 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765938833 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.767060884 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.763798188 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.765221101 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766455863 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765280598 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.762486879 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.766100832 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.765736725 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.770047783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.771882486 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.764047967 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.767512559 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.765782526 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.766592236 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768055647 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765885141 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.763891163 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.76504467 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.766775733 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766419878 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.766639679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.76869446 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.766597862 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.768732041 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.768298765 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76668139 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769379111 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.776795203 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.773203795 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.763679036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.765921789 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.767036468 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.769789545 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767728478 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.767774172 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768228138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.769020704 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.767489136 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76815483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.76806694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.770220488 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781708768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.768518193 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768598685 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.768699792 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771664547 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.767645881 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.765759845 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.768976348 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.770668622 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.770856548 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.776097063 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.768652598 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773871816 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768362063 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.770372112 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.77173952 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.771839182 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.775519764 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.772136504 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768365875 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.76909908 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.774311141 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.782896968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.76934606 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77842079 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797483602 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.769016404 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.77021904 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.769641942 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.76893588 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.770239721 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.771125944 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.769960419 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.768893624 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.769238994 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770242124 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.770266567 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77455574 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.770712348 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.769850861 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.769129727 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.770144086 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.770750522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767871719 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.770412056 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.77076219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.770356558 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.770444615 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.771075631 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.770864803 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783620534 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.779555554 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.770355859 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.770246431 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.767011986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.773165496 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.774476386 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780090002 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.777617449 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.771492924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.771269643 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.771448131 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771916802 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.769239945 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.771927121 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.77136059 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770583543 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.76866717 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.784811921 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780323125 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.774590724 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.771856026 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772391456 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.772186529 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772365605 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772404674 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77232645 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.772777511 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.772676003 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775458559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.771756438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.77191372 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.774491811 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.778868912 seconds)
  done (took 1049.537195857 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7692988 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769204158 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769960807 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769942552 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769347692 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769582617 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769978249 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769464203 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.769722758 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768902777 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.770794743 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770313653 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769341081 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770462859 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77027679 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770310573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769548109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77079495 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770008437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769564861 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770680627 seconds)
  done (took 38.871938001 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.772754502 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.770529839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770819984 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773142592 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771016155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773338275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771495245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773117229 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773323394 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770993714 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774526759 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774612402 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.771224795 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.771378083 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771272184 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774168076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774136102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770950044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.774970925 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771946959 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774576155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.771362412 seconds)
  done (took 40.701938476 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.775491328 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.775316236 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.774129795 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.771777745 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.774767994 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.771607301 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.775119549 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.774555331 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.77521904 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.776129791 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.774963834 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.776660994 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.782543731 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.78064566 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.777960981 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.774943723 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.919052595 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775373591 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.775829963 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.77535196 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.772780079 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.778768253 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.773156955 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.773372777 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.773885496 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.77619435 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.775956301 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.775214902 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.776660828 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.777581292 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.780098087 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.775882365 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.775560073 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.777880495 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776373609 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.776644097 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.780178365 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.777166518 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.773485669 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.77653067 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.786002176 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.794776958 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.777888425 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.781164221 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.776171132 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.77696558 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.780787077 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.783903893 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.773807039 seconds)
  done (took 88.921357544 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.776569847 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.777180172 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.774280199 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776700383 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.777790207 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.777197356 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.777673206 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.777156264 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.774840635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.774424354 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.777419706 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.774710319 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775396733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.776647929 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77824102 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775463172 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775224461 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.775256381 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774718278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774611558 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774708583 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.77856257 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.777494034 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.776775326 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777749585 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.775261559 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775794455 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.778399075 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.775616246 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.775762999 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.778417488 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.778643975 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.777528542 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.776409674 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774926451 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.779723331 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.77833288 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.776419601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.77860419 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.775123238 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.779039123 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.779296511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.778207645 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.778685646 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776572608 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.776978474 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.777561777 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.776504838 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.777199107 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.779941241 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779693113 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.777334524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779792621 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.776970929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779462348 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.779799161 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.776301008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.777324447 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.780357791 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.777283783 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.777917428 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779262961 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.77775171 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.779367804 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.780030957 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.777811207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.777911265 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780191581 seconds)
  done (took 122.568547555 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779946732 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.781342946 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781065381 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780101455 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781340216 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.780328669 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780544677 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.781317769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.781126345 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780761075 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781587997 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.780956016 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.781469608 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.780869367 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781352249 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781747989 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781671364 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781112606 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781927625 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78107745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.781884712 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.781840186 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781387855 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.78211037 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782751605 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.7824176 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782005157 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782069943 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781742901 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.781653194 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782162026 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.782484973 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782993858 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782326272 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.783127866 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.782429803 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.7835775 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782278416 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.78288486 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782951902 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783164259 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78306862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.7827091 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.78379022 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78231438 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.783447691 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.783623288 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.783645234 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782192917 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784002282 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.782869493 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783357722 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782919142 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783546792 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783604423 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.783170834 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782388478 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784106144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783411914 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.783366862 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783754542 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.783373243 seconds)
  done (took 112.215892286 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783032062 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782721567 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.780286449 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.780446658 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784099237 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780750154 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.78323821 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.783209445 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783447112 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.783600203 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783870084 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781727471 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780618311 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784625235 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781477687 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781023239 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78092283 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780764636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785698388 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78110295 seconds)
  done (took 37.362895004 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.781874069 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.784910024 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.782264752 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782667341 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.784335302 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.782303757 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.784937925 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785046855 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781780567 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784612586 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785657541 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785292983 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782438917 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783066052 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.785171522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782966315 seconds)
  done (took 30.256296744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.784303646 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.785999 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.784900474 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.786783226 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.782910134 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.783376712 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.786393954 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.783264297 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.783652767 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.786932757 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.785114309 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.786732751 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.785733117 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.786050538 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.783492402 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.785922853 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.784140404 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.783533951 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785694393 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.787516567 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.784629545 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.784006573 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.786387518 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.787449458 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.783304963 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.784515334 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.784016914 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.784468764 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.783545989 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.786822804 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.784063591 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.784279692 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.784075267 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.785335815 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.78926402 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.785511473 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.787328954 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.78792555 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.787317483 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.78748243 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.787445378 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.784932127 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.78704146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.7875673 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.785334506 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.788171025 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.785833184 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.785934637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.786103017 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.784993152 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.789785731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.789491188 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.788390208 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.789108965 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.78879564 seconds)
  done (took 99.944193916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789452855 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78958271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787209779 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.788366196 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788392356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.786217997 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.789401967 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785668098 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786522843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.788360694 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787327142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788911102 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786928078 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788213004 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.787091321 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789604966 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.78637355 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786206267 seconds)
  done (took 33.900296204 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.785954187 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786860122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.789069855 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.786740406 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.786642293 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788933205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786623871 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.78947677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788973899 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787388968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788355033 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.79102055 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790170724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.789585193 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78774072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787354248 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.790772376 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790206844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78779393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787373256 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789385438 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790075723 seconds)
  done (took 41.06861544 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.789320412 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789846234 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.805725161 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.808383846 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.811503596 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.821607688 seconds)
  done (took 12.549576758 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789836307 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79104351 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788829817 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792481331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79176489 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788917408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789367993 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789066631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792461028 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789397665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788767284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791181489 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791141306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788537264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792764167 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791279772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789148074 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789138672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789937077 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791780272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789246537 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79173608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789099766 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789651402 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788641677 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788742887 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791623639 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790066941 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788738794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792482592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791863888 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78893327 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792383744 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79131448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792946989 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793275503 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790249983 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793123832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792626565 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789505807 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793935935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793051402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793106177 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790101846 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792804206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79083335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790729066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791164655 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791071727 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793728068 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793411157 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791116508 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793725022 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793839521 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793791798 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794483109 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791813152 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790934005 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793222102 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791008078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791823999 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793586494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792550802 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792163722 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7942274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792507448 seconds)
  done (took 119.953281646 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791607191 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79116781 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792461382 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793312924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791427526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79112413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791675096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791027635 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791815199 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791896574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795256674 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79134436 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791696625 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792692492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791690487 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79203041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792885986 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79230475 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792814221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795496229 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792720774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791818577 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792796709 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793728016 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793358756 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794947353 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792495919 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79291717 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792638144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792919464 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792900709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792671167 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793235275 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793364434 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792507775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793524778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793098274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793575073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793707494 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796790996 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792963294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795681306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79496111 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794385213 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794035787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793845845 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795096729 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794397337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794979321 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793765475 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795130733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796131293 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795192319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795642423 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795351518 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794210416 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794052791 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793766814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794276524 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797186179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79415262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794112111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797509499 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794616745 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794524726 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79416457 seconds)
  done (took 120.104497215 seconds)
done (took 2446.397665127 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.850047046 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.089614827 seconds)
  done (took 15.668536432 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.959850461 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.915044823 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.797224946 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.815373473 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.798017115 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.816991747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.797119794 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.798188827 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.79827385 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.798692599 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.797571588 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.986446248 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.794066766 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.799025319 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.798323214 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.891501778 seconds)
  done (took 51.097063655 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.799607275 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.802218582 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.813037295 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.804860379 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.801738863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821546227 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.835579529 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.805471497 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.863723539 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.814888418 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.924429632 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.813347432 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.801198685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.863412348 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.813993798 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.817840782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.891758446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.878326384 seconds)
  done (took 34.699157179 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.881361297 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.809007236 seconds)
  done (took 10.429792984 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.811075412 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.811952671 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.80007662 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.829761466 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.817391954 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.828120891 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.822208908 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.811804002 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.803854608 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.82096916 seconds)
  done (took 69.894227517 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.808718693 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.804742732 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.803816925 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.801999516 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.794295306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.799045032 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.801885396 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.800009741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.498124955 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.839292085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.810063039 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.807714904 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.802129627 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.804457179 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.800074333 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.826313755 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.922886362 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.800567028 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.8000741 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.80897715 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.804095998 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.875025904 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.816118024 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.804642177 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.832680016 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.495402133 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.811144465 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.808905925 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.956840755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.800326906 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.803667546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.80525027 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.806036812 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.188876467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.081697817 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.805021569 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.813525623 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.811592142 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.800957947 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.94625769 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.804097882 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.80957782 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.781475904 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.057503271 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.908846194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.846953893 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.212510126 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.809131271 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.80567071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.834188183 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.80664425 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.805963288 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.817569138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.323318215 seconds)
  done (took 129.164383112 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799596582 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.098050846 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953199479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.800304871 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075861437 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00699271 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.742636635 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850521261 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.801544524 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004359036 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962658875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911938953 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802029045 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.800953201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798846234 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798805173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961479171 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870939247 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801048582 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.798113278 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828634085 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01100885 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.932814154 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80330209 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.821909845 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013580195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.92397321 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.910984036 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.106556453 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.799343499 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866613394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802877762 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.801978077 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800188798 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958862935 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.899582574 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892517634 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.803032835 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801253903 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800667288 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.46165479 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998399456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90249525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.944256538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050075792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007579444 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450930368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.802012989 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.445375727 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96679637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.014937042 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.009386594 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.928040058 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804429086 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.031308624 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.800093974 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.800162657 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039055554 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032034522 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909325367 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803634223 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.801401278 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.800694635 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.047935078 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.80382143 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.901151168 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805120186 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802375574 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.903379278 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912422385 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.034740242 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017077556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.836269352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.102943025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.286931703 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.017946323 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872078253 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041688607 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.803942073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802684385 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889355201 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.557462908 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960901283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052403809 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025916383 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838397884 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.403559055 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.802211577 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997438608 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990654479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.999860078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046716503 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.956996089 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.934063058 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.802257074 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.803137213 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.03106023 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943744118 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807352756 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.165329153 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039564271 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.366317025 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.834156564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09994199 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939585854 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.123428026 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.428865092 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804743072 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971935875 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.844169915 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.804541453 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803168682 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99546009 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.613983643 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803486984 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.54179273 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.869200386 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.805244106 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007493994 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.806979818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014157504 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808111815 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041275639 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.864863289 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839223228 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.977651207 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.047253085 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.598128115 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056683617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050570304 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.925512113 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07606168 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.534140015 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.806261921 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082276839 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807495913 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.804743073 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.97330249 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.806386154 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977245498 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807503361 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.034218369 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832974754 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962927824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810120342 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.040305253 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.843716254 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859782491 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.80914196 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929498199 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80935029 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.689128432 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962332896 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807180288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.805670056 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.243061148 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.805969077 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953884667 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.038935565 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832577439 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876805631 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.337244522 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807106575 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895317597 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835068861 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.287507124 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.805762774 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.964468912 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.779097239 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.233459467 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.807698688 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.047380241 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.0399497 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808630698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807386711 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.548054175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.516905841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.80715104 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.966647007 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.060915181 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.459651251 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011594443 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810756938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936947596 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.81061525 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.889246836 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153551214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.807453346 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.80889718 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.806991026 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.807629375 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.808530651 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.017243791 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840506776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.3246993 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.944202845 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027074083 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.121482242 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028925097 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859100953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.813123192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076314347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.813937156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.87536672 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.813689582 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832526158 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042730746 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815699904 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022125636 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065280814 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.73419902 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860523451 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.812221648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809458995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.808540417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962694866 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906679337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811812168 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.810778181 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922014875 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939494786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005089465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.402904557 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.888702197 seconds)
  done (took 884.600598416 seconds)
done (took 1197.282254785 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.808651352 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809836662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.797268928 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811651008 seconds)
  done (took 28.975856453 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.819016703 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.815517498 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.817598353 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816524989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.817484043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.815335071 seconds)
  done (took 12.649281105 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.859896096 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809395109 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81073197 seconds)
  done (took 21.228929655 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.885323009 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.2305566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.929669455 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.263396619 seconds)
  done (took 10.057390782 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.818781678 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.817741243 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.818237764 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.818781921 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.819690561 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.820673206 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.818203276 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.819514298 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.820880467 seconds)
  done (took 18.122787429 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.185361532 seconds)
done (took 96.967044869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.115246539 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.814825856 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.858610774 seconds)
    (4/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.399859311 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.181881644 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108571517 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.875226036 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.909527487 seconds)
    (9/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.165092121 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.465279075 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.953143226 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866900336 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853209489 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.838093447 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.821173606 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.917388783 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.20130868 seconds)
    (18/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.624878292 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195907539 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415056392 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.814165467 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.801476929 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.879740903 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.153691426 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.80093848 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.855622946 seconds)
    (27/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.17497625 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.920503279 seconds)
    (29/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.941698994 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.08109069 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.802110471 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.031200867 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.912111309 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.148441748 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.802495623 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.923575119 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.891373202 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.795111231 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.853460071 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.937430035 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.813402662 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.149397146 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.826430365 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.1551095 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.844044266 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.813015644 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.817333818 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.033244736 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.817798961 seconds)
    (50/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.978932714 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.933776347 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.800291309 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.155782904 seconds)
    (54/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.317719384 seconds)
    (55/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.819588983 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.697509815 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.213624842 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.889154309 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.064364044 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.817380912 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.360325858 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.712094355 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.823418352 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947056707 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.087841253 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 5.641054426 seconds)
    (67/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.124395358 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.864632109 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.883292849 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.442417708 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.031041959 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.162133941 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.064070305 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.418559292 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.903294707 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.344036533 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.921049518 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.499923849 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.615038064 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.309244383 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.123663333 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.821701955 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.948557814 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89869314 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.187985947 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.92370886 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.894109797 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.412230519 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.604281856 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.968749789 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.801714916 seconds)
    (92/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.979853026 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.843119369 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.880852413 seconds)
    (95/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.945946328 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.206890714 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.227195471 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.835843967 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.150314389 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.617683523 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.469228078 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.560289453 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.83660239 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.802267193 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.089278737 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.985319137 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.009514714 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.04330618 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.456833707 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.947659976 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.92157601 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.906886386 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.987072561 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.903011047 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.027711075 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.846306823 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.938564857 seconds)
    (118/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.902812001 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.844730173 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.221816698 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.196655092 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.270013826 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.844913866 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057430424 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.080130398 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.126773146 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.056408619 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.825526177 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082086862 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.083797433 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.844747963 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.023968286 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.990331429 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.806847687 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.99661627 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006077602 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.85001066 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.88243403 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.804639477 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.987784596 seconds)
    (141/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.01982659 seconds)
    (142/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.962864591 seconds)
    (143/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025587193 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.811705168 seconds)
    (145/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.749366938 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.903435381 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.045131212 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.850855492 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.846391926 seconds)
    (150/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.107881224 seconds)
    (151/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.024338017 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.034918893 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.127236975 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.526095 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.916687825 seconds)
    (156/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.979721328 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.822169199 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.584046283 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.209633749 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.92167277 seconds)
    (161/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.106174175 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.846913408 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.842456409 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041238492 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.788755578 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.16649989 seconds)
    (167/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.168304601 seconds)
    (168/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.092922825 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.977150891 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.076732423 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.166871088 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.823674199 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.475899842 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.907337792 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.905793511 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.328949706 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.82838483 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.850652444 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.519902293 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.843195827 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.849509477 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.099250783 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.8248543 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.624410069 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.128652239 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.206028759 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.850369636 seconds)
    (188/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.985126395 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.854053768 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.822330242 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011236773 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.510580817 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.976987238 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.937862532 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.970182009 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.864402366 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.924859651 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.923436326 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.826767221 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891654236 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.973909097 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.931352712 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.84444458 seconds)
    (204/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.02912648 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.891368041 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.934122709 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.898759667 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.428962437 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.734611851 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.815523594 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.580614809 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.988400646 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.420588798 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.634575629 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.028567334 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.82452206 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.297815445 seconds)
    (218/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.005115381 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.204398936 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.471741817 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.073317279 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.81431222 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146886401 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.025061182 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.164312082 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.853619638 seconds)
    (227/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.849320336 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.866247313 seconds)
    (229/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.851555338 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.825317842 seconds)
    (231/309) benchmarking ("sort", Float32, false)...
    done (took 5.572970677 seconds)
    (232/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.963087572 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.005281903 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.759503789 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.365327931 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.756576539 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.410882174 seconds)
    (238/309) benchmarking ("sort", Int8, false)...
    done (took 4.920991216 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.499397792 seconds)
    (240/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333541843 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.729777773 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.912352596 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.513344511 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.13159539 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.002702306 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.898718358 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.147563837 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.898433736 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.216491129 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.726712318 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.827044228 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.934359731 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.329616448 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.924571374 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.281395095 seconds)
    (256/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.973677125 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.85686899 seconds)
    (258/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.999468257 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.991910881 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135545449 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.831417698 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.869697034 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.886017459 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.210906129 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.095573151 seconds)
    (266/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.976303957 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.249190349 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.937006221 seconds)
    (269/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.753836484 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.95719439 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.878693843 seconds)
    (272/309) benchmarking ("sort", BigInt, false)...
    done (took 6.827744167 seconds)
    (273/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.119323222 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.830406002 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.302345767 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.861067663 seconds)
    (277/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.183242639 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.957155977 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813410608 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.831418973 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.700131802 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.459088872 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.262388386 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.01438126 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.844911103 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.812296064 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.208309191 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.898797859 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.915073217 seconds)
    (290/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.123606225 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213874531 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.968997304 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.853482854 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.547540491 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.676854111 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.498685097 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.023906845 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.416303822 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.857693401 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.33693965 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.883005717 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.987306341 seconds)
    (303/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.407451929 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.914612108 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.931149946 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.029759961 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.927816934 seconds)
    (308/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.835046579 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.853493857 seconds)
  done (took 1005.297571976 seconds)
done (took 1007.114495039 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.863067257 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85786512 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.840498074 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.86241225 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.954551737 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.875071592 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.851731438 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.84299903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.889202133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.890494178 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.841165916 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.874506004 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.843533042 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.842421559 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.840179984 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856145764 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.153837704 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.871595225 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.859387853 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.851573625 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.858890917 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.841501983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.892041357 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.874950783 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.846035783 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.845323305 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.846052862 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.861836636 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.954704533 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.847042614 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.845674407 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.854704885 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.153110648 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.869770704 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.837172307 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.863101609 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.855825564 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.852907553 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.847810627 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.875832456 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.297462449 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.852747123 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.845715998 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.844368414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.844200736 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.847704643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.846085142 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.850698597 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857159373 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858298733 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.293701105 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866812179 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.847957118 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.844938205 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.855581844 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.845889795 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.847521235 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86109793 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.864964867 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861066439 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147406757 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.877276532 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.846299172 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.862421978 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.853410072 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.330451024 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846808944 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.849696086 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299083653 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.857006206 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.331603364 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.86132606 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.845632443 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.859947954 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.877464528 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.156115039 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867799459 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.843398248 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.85318634 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.845180813 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.854873723 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85915706 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.849763235 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.845938735 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860117229 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.878935864 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.855206646 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.848752912 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.855014065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.866900041 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.854741417 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.859034275 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.850658002 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.840885123 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.855911953 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.849237985 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.849697933 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.850300381 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.851651718 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.856952166 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297382979 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872617676 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.84316504 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.842939051 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.845937326 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.861572313 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300396124 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.854982982 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.868252594 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.893976561 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.847605711 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.147113657 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.87915163 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864621396 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.855182265 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.849648477 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.841732743 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151402021 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32548679 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.870005142 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.849348007 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.847441676 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863495249 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.849055632 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.844369573 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.158285554 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.876438373 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863402044 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.970645155 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859049912 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.880632893 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.847295081 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.851091174 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.880972129 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864138775 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.880096764 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.85098071 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86449888 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.866536403 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.845750217 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.859631138 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858807109 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.849834853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.853507564 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.842594439 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.881904249 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862838078 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862105165 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.870097486 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9713182 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.84698323 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.148840906 seconds)
done (took 290.433212012 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.91668418 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.839194824 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.947872458 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.846056145 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.930253804 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.932165127 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.842188896 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.842870057 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.843576924 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.269135215 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.843041713 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.843551982 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.839335235 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.843109438 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92844294 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846937931 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84332542 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189883532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.846943055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.921522785 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.837840946 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.84363753 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.846946876 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.228541633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.838327298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.843625334 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.918282489 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.847023209 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.193642282 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.840071877 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.841666726 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.194809746 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.939356988 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.865136383 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.85732101 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.854113976 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.931693037 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.852047739 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.928771404 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.929617354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.949069977 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.888012937 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.848213975 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.842921084 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.850434425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.849442791 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.843655655 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.87523205 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.843067451 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.845391711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192799221 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.856996779 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.845561841 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.847088571 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.844447408 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.878784867 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.846538927 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.849882944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.941202919 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.850801562 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.911093988 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.231260095 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.230506193 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.850008047 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.845477025 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.846190767 seconds)
  done (took 182.868702343 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.916462286 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.922630868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.359778884 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.852876383 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.89928247 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.922290821 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.852366886 seconds)
  done (took 15.50337642 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.854260948 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.849304699 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.89956502 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.899069202 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.849393128 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.999393633 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849641904 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.861196666 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.847630569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.901782737 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.84987785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851160452 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.856254296 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.841415298 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.898548309 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.861951874 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966006162 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.8507556 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.851156589 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.004081777 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847871834 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.858358304 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.904966563 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.86263562 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.850311536 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.857416849 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.523590046 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851082112 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848864545 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.85045837 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848242614 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.89522652 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.850710689 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.85104142 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849175051 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.004395843 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.851502503 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84796752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.8510763 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.84605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.852068507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.851815652 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.852005858 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.848780268 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.851163476 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.875675269 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.851201906 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.853361315 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.852501921 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.853119347 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.90351391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.852711736 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.849867449 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.850834044 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.907664445 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859787504 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.853250995 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.849802581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.852166396 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850097119 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.007113559 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900058663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.853123412 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901725781 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.852605716 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.852531141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.852561194 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.852695757 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.947798492 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.85226812 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.900933218 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.849557688 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.011326484 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.876349596 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.85414383 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.855485902 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.855844607 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854274511 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.853905839 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.85912806 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.85048623 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.854284492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.859243013 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850968107 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850592654 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.996050808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.981735978 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.852487064 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867462924 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.861645656 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.851708672 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.907552397 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.854182143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.851559973 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909616422 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969724011 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.909387308 seconds)
  done (took 204.268564194 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.858915322 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.861859766 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.85549256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.86921606 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.853684811 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.853982192 seconds)
  done (took 12.937112234 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.855645612 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.856878125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.854299505 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.855102966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.854250626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.855980209 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.85629409 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856939435 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.859038558 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.854678574 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.855607111 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.856260131 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.855584269 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854599104 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.856570701 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.854505066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856312645 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852096057 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854017357 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855578292 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.998720851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.855309574 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855586708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.85558395 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.860314771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.855373683 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862299463 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.855298014 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.855534271 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.861497268 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.859639859 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.856096066 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.856515673 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860811572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.861246169 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.857783954 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859731477 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.856797906 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853246211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.856240238 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.857652367 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856445132 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.856848419 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.859106964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.857519429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.862265081 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.862356803 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.86554773 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.858211665 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.858678823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.858615923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.856635859 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.858019907 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.859148994 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.859153731 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861377674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.861499169 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.857281165 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.858093991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.859071543 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.857689366 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.857306407 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858611785 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.861907796 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.864722732 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.858326181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.858227095 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.862614156 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858196777 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.857477046 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.858946391 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.855610889 seconds)
  done (took 136.682505576 seconds)
done (took 554.05111014 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.092832215 seconds)
  done (took 8.879232927 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.026031317 seconds)
  done (took 8.89477523 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.489901649 seconds)
  done (took 10.276207063 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.865625793 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880471324 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.86492811 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.855499533 seconds)
  done (took 29.264323862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.859540561 seconds)
  done (took 8.648551352 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.866694128 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.851841121 seconds)
  done (took 15.541026473 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.05941131 seconds)
  done (took 8.84803914 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.934646249 seconds)
  done (took 8.728647032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.869804075 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.86046129 seconds)
  done (took 15.532706737 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.836168151 seconds)
  done (took 8.623495499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.537982973 seconds)
  done (took 11.33725958 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.862125708 seconds)
  done (took 8.664404407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.94198883 seconds)
  done (took 8.730249704 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.057302973 seconds)
  done (took 9.845501876 seconds)
done (took 163.601088212 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.855780043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.855072892 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.854322477 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.854076906 seconds)
  done (took 29.206336466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.892574664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.892827635 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.894363547 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.903474385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.895758083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.891705572 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.884846364 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.884986263 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.902485544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.895669118 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.894282928 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.895695726 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.894582636 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.885853788 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.895327491 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.895551413 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.903092497 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.894666462 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.88546917 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.895620617 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.86058872 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.90503419 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.895937403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.860336666 seconds)
  done (took 47.190082293 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.058500544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.931797363 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.014064534 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.912371306 seconds)
  done (took 9.706719689 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.912132 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.914352379 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.925847223 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.964082763 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.990563131 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.924203772 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.887511614 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.883276266 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.867674341 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.913683729 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.989692157 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.93006759 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.998398344 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.861194296 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.04846379 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.860846392 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.86077096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.913005934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.963984325 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.984443634 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.862085869 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.913282185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.916795192 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.931351694 seconds)
  done (took 48.008833553 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.859442557 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.869378071 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.866502179 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.86074416 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.860519297 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.861658677 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.866841314 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.861874903 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.881994788 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.862967591 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.860597613 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.860806474 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.860246285 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.861419754 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.860813836 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.874516359 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.875579166 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.861389876 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.864445867 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.86684019 seconds)
  done (took 39.089196955 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.855728899 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.792434513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.207308169 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.111939846 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.854310704 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.85509604 seconds)
  done (took 32.469884545 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.876222965 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.868391793 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.86215409 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920655981 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001513737 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.871364098 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.863742268 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.872624955 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909489387 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929632371 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.882378852 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.892116323 seconds)
  done (took 24.54279832 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.857320987 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.858044429 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.858076734 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.87540591 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.873861337 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.871052572 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.870720306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.8562942 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.87736766 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.881577721 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871476434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875674669 seconds)
  done (took 44.223389957 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949053316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.903253615 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.900627607 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540396418 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240435149 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06962271 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371377741 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.197747091 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.862889013 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13181366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910657855 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965912171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114073457 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406676295 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895949255 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.313217626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151610041 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071063344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88808525 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522464453 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922390283 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.103170524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.624077505 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914835623 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07173865 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992951353 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.120454349 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859943966 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993223073 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897477249 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870338657 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85985196 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134824963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233395282 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965433455 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870372508 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478690363 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.578815919 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.851630994 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.668119485 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.550961583 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977957088 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871472487 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860194663 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795256392 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061912157 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239975011 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.866332031 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.571004335 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860842912 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871881704 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949783143 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.864650177 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.677725822 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781356451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.865150147 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859896942 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867295218 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429465775 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.963848229 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099188671 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.840044092 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.953823953 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561781545 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26023082 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.00904963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.865152269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865528305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797271189 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.601941555 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916777787 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190766629 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.882385627 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511476609 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162071657 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.92005436 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805214258 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141042473 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.448562806 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.839947473 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090586375 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863105112 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798436054 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.896980184 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79859884 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142859391 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902802132 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.630733889 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904822298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212719781 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.874294744 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881309406 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887317442 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08830909 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.747582349 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864457026 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.648961993 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007064009 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885982129 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196243686 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798248699 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.867854368 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120566419 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.075947892 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.983714851 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35765648 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018144439 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481029311 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.918853256 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.058289179 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916550773 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.139320587 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920220897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969421707 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917590822 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865214351 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184414905 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.509437255 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.005920782 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.892018272 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993268085 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.18711946 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895009143 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93078723 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867664768 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866842452 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646505025 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418286734 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.865405112 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.867825279 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.990464136 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916985115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.866783131 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814918457 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.492599235 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866707202 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.880733814 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090176627 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486670084 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181903408 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800871542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194260092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.959569684 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.090265027 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.505513642 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.932375497 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126782205 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984446111 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.031599507 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9176832 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886819562 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964857116 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888495486 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.072795669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163769632 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.871063154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.870476071 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.61590076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902397748 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873350479 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.872311837 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617722659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141539891 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890009442 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87480243 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.756788524 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.881469633 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933773128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872923726 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878372055 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.410571074 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597712252 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.877050294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455107882 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09345185 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878968781 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.538020044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979565222 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.950096249 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138570087 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92602801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.803575129 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.579467423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.561186324 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869064508 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803658993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868209924 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877937835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879539416 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.066695261 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150217203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9110462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.534761955 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.909991981 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880982577 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.874428528 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868945849 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384029552 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975394806 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117170443 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919030847 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0134873 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.883065896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803655021 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.873556573 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874545623 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870130766 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.869797593 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902600752 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.542994316 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244537335 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133097972 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.479249371 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885113119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.565119893 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.933861436 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.929618478 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.669102522 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093157932 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.909568081 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892811098 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.882569882 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.617810096 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566477471 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438823781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185273319 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175311488 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304961202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.136973632 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90284529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20906461 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80702971 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.436308635 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931539789 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21304824 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817543712 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957042638 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.511963617 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206049318 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886680674 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099389491 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252577088 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.592606393 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008874423 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084377364 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907205819 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.088692764 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838567209 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.158547819 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013623475 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.528731981 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069861074 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222588191 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.541669473 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991427551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871933547 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.559596046 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958362667 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.584227742 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044268374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10880525 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.841882031 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336626001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882119279 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.099499691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233583352 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.073960217 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.996846513 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809715617 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885285343 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884196975 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.875426715 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.874441325 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.757673268 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.12739879 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885343639 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808463118 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.026042805 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181427036 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.778044533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.880437704 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874162581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190506697 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468700243 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042238152 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.020050805 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400443305 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882708988 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81081833 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808923721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.567870427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882200675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.851839913 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08471884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979218569 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792758105 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.007175003 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959591349 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131175239 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.890245306 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145052454 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1491863 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573199892 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902303126 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.976274445 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.536981431 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.97710833 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87622636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112050187 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628214845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104395949 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906346177 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.827368752 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876215966 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091609654 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876626938 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.75609927 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100201776 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.601135599 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.889706735 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201132237 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948370335 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.76608979 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91670265 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.969215568 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887664046 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956547428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886996455 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.887359834 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887881536 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923534677 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813082506 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994928033 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.891223469 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968448475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987532474 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403004017 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.884496112 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149418408 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232942043 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207539235 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936000319 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878260486 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878260446 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811924377 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028357735 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104174773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152223538 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009391411 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.994085745 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904281711 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.534503246 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.132491481 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123075537 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15345672 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.774554048 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438068341 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921760742 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.880324768 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889281142 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.090276525 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091027426 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184593704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027751361 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.00929927 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245608894 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15379248 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880753352 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880304256 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469241481 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.891411947 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570817203 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.921790471 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.812727793 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150544409 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890610593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257238472 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902998161 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.034902884 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.397091529 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556518131 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17013476 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.864345677 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.935778758 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152874404 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268693688 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191857081 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94888473 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892223304 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.989486795 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028673441 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.763166252 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881403148 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881791445 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930416238 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.591410083 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891649378 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164155131 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190738057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.88003767 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.766024959 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905258427 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.891888228 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105951473 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160877403 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137277195 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891907026 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88966212 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.697291058 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161472093 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940086916 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817431267 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.88698651 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979691894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132855847 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902758674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.335922061 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.594408432 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171834477 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.8850798 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905309335 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.10125195 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257770437 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209404021 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.419880745 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098427378 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479741733 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520633038 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187762199 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.888446521 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09531247 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188267999 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.88699977 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.019214402 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925521029 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.151492852 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194452074 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.889981182 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565933036 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.853952821 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226071176 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44331013 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82515423 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893672699 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.944056362 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88487408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016037673 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895692874 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.771438703 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092107036 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.6467048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157935023 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.890038601 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.871103156 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.588192105 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.218791937 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92063573 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027102756 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894467818 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.587236353 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.247303447 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140766319 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.021906828 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.895302315 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.889688989 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886409803 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873605849 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085800135 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.08315766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174385553 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.04565308 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.925161577 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890185559 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.10261604 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098016085 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.782390576 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018408458 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020217023 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930043569 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.792343281 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388907301 seconds)
  done (took 1676.596893119 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911393198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.947921118 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.894542249 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.002805684 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923225985 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936601659 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.025030918 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928713118 seconds)
  done (took 57.391744768 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.885729499 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083092787 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.896008129 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.886347624 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.895776942 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.88657244 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.055330163 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.898278089 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.896150317 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.897603501 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.900990427 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.886704619 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.196036212 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.912202848 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.887298618 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.879966924 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.896053284 seconds)
  done (took 74.682562946 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.889145917 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.987022113 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.907890302 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.900512799 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.843101758 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.900531572 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.714358095 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.937218635 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.890546585 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.121661045 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.521849011 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.911677206 seconds)
  done (took 90.349018074 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899527008 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.894590861 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.894461395 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.895100931 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.895867264 seconds)
  done (took 11.307035563 seconds)
done (took 2186.57930149 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.132986913 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.108642361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.117643325 seconds)
  done (took 6.049834449 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.035566954 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.082868038 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.20070207 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.208391731 seconds)
  done (took 10.351316545 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.167735516 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.267907195 seconds)
  done (took 6.255207375 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.279352003 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.893951082 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.267666864 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.886769006 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.884862319 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888564135 seconds)
  done (took 22.484996031 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.891373718 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.892409451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.889255109 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89273161 seconds)
  done (took 9.386093512 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.871158278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597917721 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872428328 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.8889454 seconds)
  done (took 21.051020725 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639485316 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.649979435 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.635493585 seconds)
  done (took 9.746036644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.339984815 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.777909383 seconds)
  done (took 8.939559597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.152280309 seconds)
  done (took 3.973407031 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.022113388 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.198659723 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.415219867 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.402560131 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495562556 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.607146418 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.220801038 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.144125577 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.291623621 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.334552606 seconds)
  done (took 24.954181504 seconds)
done (took 138.588299663 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.271712352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.255513709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.092714776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.230244555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.123022914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.08984626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.310782238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208944125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.734351525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.731836228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.266550559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.115604499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.045473231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.254117939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.045269561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.122154177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.115618313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.28875166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.961765465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.121102861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.315869022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866101993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.10972626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.879447895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.114410205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.043019986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.444000317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.124241072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.116653097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.45266519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.044415222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.273390944 seconds)
  done (took 171.991774767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.798070326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889570421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889528049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.889701591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.223995118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.892838696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890121024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.889371041 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.001985336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.989862281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905646881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.260555637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906384033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890174739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899726806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.890108266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.142194901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.896979761 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.906495466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.907605467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.911422212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.170440756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908236916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.201680505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.145771742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.908036949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.890756951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913236917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.895458547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905046357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.90980717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891036378 seconds)
  done (took 208.437376376 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.891846295 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894134784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896691969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891351425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.896134778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.898324562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89413397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.89167526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473937002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.469346076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.901610261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.900158302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898601265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892848383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899078239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891868099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.900508122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899067005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899907519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902319061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.9040697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.653176335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905262556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.645517233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.898690405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.897116295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.894098797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902147376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.90407977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904724683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903302457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.893117384 seconds)
  done (took 221.235413173 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.089655716 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.899682632 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.899955838 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.836526751 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900433888 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.900138352 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.896409094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095859657 seconds)
  done (took 19.359152158 seconds)
done (took 622.860623599 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360935292 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.206517059 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.082862175 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.927785959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.170583549 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.959995058 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.922596266 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.985688477 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.653315857 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.991167077 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.581014192 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.942899682 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.660668837 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.94851508 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.049315218 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.980456184 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.501401593 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.59571086 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105790702 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.996707126 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.101978512 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.858219363 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.998981361 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.670248251 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.684038298 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.910767309 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.103651384 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.509654654 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.935361929 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.092320597 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.634971912 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.304935447 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.936474058 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.921222329 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.976323918 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.956540717 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.269927337 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.934152351 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.051355677 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662823509 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.997186373 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.535133827 seconds)
  done (took 104.499167951 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.894954492 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.893350242 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.893030608 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.893413613 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.894265687 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.892980107 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.893009715 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.892648826 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.895774198 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.893225908 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.893919754 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.895657176 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.89395734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.894570349 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.893851952 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.893457718 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.894577454 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.895078487 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.89374217 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.893588298 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.894414644 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.894781233 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.907725574 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.894437043 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.89532293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.895059581 seconds)
  done (took 51.103885901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.906943576 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.049467485 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13318958 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.926342126 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.908270372 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.91111748 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.925509906 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.913097229 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.9106938 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909784598 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.003513306 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.914322041 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92737366 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129391756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.92266931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.908131961 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.907881519 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.907430254 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.056272208 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92267129 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.927240805 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.912576514 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.926533951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.920856799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.909619969 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908202637 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.911329156 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.379436761 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.916234706 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005386594 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.952325846 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.930691156 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.348499309 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.141413066 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962921425 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.916127195 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.909546299 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007706815 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.913772841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.909081281 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.927082228 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.914310299 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.131495374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.416764316 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.922577965 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.910838607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.390061256 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.018681549 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.952266366 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920754024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136930376 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.925720801 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.911553292 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.911125237 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.94666026 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.92053241 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.909537289 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.27576849 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.92152535 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.928099955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.9158548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.911568784 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.064836537 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.918519174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.052575233 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.920126859 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916804993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.910496876 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.133147047 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925863054 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.423019514 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.922944113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.910953265 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.006820281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.056984466 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.415205166 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.923375443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067458945 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.365310518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.934916143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.917690566 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.370094611 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.938080617 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.918490882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.912622707 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.913406076 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.912181361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.956300647 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92772652 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.363313739 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.424667576 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.289701056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.937914375 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927464131 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.912616514 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278059983 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.920731034 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.912171776 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.128864317 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.435268456 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925346258 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.919419834 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.407769245 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.926720317 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.932248697 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.921332853 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.140408859 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927151062 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.957458257 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.912432608 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.919419281 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.91515307 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.930654131 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.919160934 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.912436841 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.396660094 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.025279149 seconds)
  done (took 236.91892809 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.908042226 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.909092218 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.905299082 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.907547169 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.906401294 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.912317469 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.905883094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.906813956 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.913398186 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.907036084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.907245519 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.909682205 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.907536494 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.910530278 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.374409034 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.916618019 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.5211455 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909822983 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908414064 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.923578179 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.588998396 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.915991326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.908697054 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.930804981 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.910682881 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.910686474 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.918679701 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.949198625 seconds)
  done (took 169.149043654 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.916088775 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.098372793 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.933057856 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.95114093 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.92366774 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.914127509 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.93957014 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.936886157 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.920630579 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.913987324 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.9141524 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.977411326 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.930768636 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051914199 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.947632343 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948696596 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022138301 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.925143662 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.915157782 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.914113872 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.945392105 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.91302776 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.977817424 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047643849 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.937124564 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.033091601 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.921751796 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.916836522 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.916505907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033653295 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.933957933 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.978416206 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.945956593 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.936083036 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.03945713 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.033989349 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.02553379 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.948320557 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.921329819 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.915391739 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.915263638 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.905643346 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034253224 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.937974205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.918223599 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.025320751 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935359175 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.920001407 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.92709921 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.916254323 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.931104586 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.936235452 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.984907045 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.053550538 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.953300025 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.944174253 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942304597 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.191632783 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.928472132 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.018747371 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.911528177 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035449631 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.938243288 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.906326203 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.918094696 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.923797589 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.9462669 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951215441 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.026121728 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.926850161 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020672609 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.953146799 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.92713212 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.918568587 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.92099253 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037326869 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038809234 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.954324422 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.957176482 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.951593075 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.917188259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.920788473 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.907984467 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.936091908 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.925418973 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.036449836 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.03811987 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.927746466 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.921074383 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.920946286 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921221581 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.945231818 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047541902 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.955415834 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.021163622 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.99000439 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.996684559 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.933851392 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.932531305 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.923864925 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.984225686 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.936109525 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.931589901 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.236521217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.993429932 seconds)
  done (took 207.847729316 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.405981297 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.976284823 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.975192744 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.207754449 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.342054855 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.821144726 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.968005754 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.969244083 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.993868347 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.127233935 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.027714397 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98164401 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.958265716 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.94279318 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.968216137 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.989575891 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.972839919 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.272022755 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.087111742 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.146747591 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.950405073 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275012859 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.286740262 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.350700831 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.003921813 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.294502187 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.647953633 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.214568871 seconds)
  done (took 63.013780416 seconds)
done (took 834.358872945 seconds)
SAVING RESULT...
DONE!
