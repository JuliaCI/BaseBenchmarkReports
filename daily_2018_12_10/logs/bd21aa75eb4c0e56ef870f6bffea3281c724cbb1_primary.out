cset: moving following pidspec: 13006
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.331815333 seconds)
loading group "string"... done (took 0.565635882 seconds)
loading group "linalg"... done (took 7.671992769 seconds)
loading group "parallel"... done (took 0.172876124 seconds)
loading group "find"... done (took 1.19245971 seconds)
loading group "tuple"... done (took 2.120391141 seconds)
loading group "dates"... done (took 1.335200204 seconds)
loading group "micro"... done (took 0.249465673 seconds)
loading group "io"... done (took 0.985577514 seconds)
loading group "scalar"... done (took 42.176711721 seconds)
loading group "sparse"... done (took 14.099368016 seconds)
loading group "broadcast"... done (took 1.042295866 seconds)
loading group "union"... done (took 15.021765161 seconds)
loading group "simd"... done (took 4.869501704 seconds)
loading group "random"... done (took 9.899869565 seconds)
loading group "problem"... done (took 2.035787264 seconds)
loading group "array"... done (took 22.71375482 seconds)
loading group "misc"... done (took 2.049043615 seconds)
loading group "sort"... done (took 3.458475068 seconds)
loading group "collection"... done (took 19.649616685 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574717429 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143859325 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149859207 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130825918 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203482556 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157738758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157395535 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099330989 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.963804714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180518673 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153199997 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526874051 seconds)
done (took 5.177377599 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219804137 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095551102 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104089167 seconds)
  done (took 0.877232427 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077951467 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145978609 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095021211 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078729721 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094747443 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077629164 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094882978 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077536447 seconds)
  done (took 1.349305878 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086400665 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097548217 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082614963 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096435016 seconds)
  done (took 1.049454247 seconds)
done (took 4.2614854 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736881679 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278821434 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20821819 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464894449 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19636858 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218283622 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672334364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336683583 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252686651 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099494164 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144605394 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386104094 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137250464 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678564696 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090378224 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124597626 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179336207 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442520982 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083485615 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109845192 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116640059 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141676793 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128222492 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090678018 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183966708 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081767162 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194282823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108279851 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080499774 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276434824 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201687627 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674825329 seconds)
  done (took 10.843410022 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111530768 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133708786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097674179 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138678841 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134440228 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099138682 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084363481 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096933337 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122227683 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178776138 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114965272 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136892611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095074096 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083181566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115936411 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243996098 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11965662 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100087935 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101882585 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08777709 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137529525 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112864221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108802191 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094701395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167135213 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221277067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110095454 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125549248 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096426526 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112350653 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143528594 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144019544 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094702877 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080579247 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174018506 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123599189 seconds)
  done (took 5.141743838 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.085523454 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191316853 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121449897 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.111012721 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187130604 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081483396 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144388724 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094740363 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113584297 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257253888 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114034294 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161131773 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140599936 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115746694 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08134164 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099392195 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095329566 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.562086754 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157617046 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116526563 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114698867 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102963661 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103524213 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350531966 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102219071 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095613998 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081585995 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082284317 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160868832 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08215001 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142400705 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123337436 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100646367 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132177266 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191408525 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125535452 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117506345 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096773967 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078332835 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192721585 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088570599 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097164424 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103753451 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134672705 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135064724 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097786878 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081509087 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204234079 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098323317 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113471602 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.918022629 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182030663 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089834587 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095717813 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326081479 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099159725 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098418454 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082594083 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283722399 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193169571 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10023253 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081292125 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097867092 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121888721 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081943249 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384344678 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097692025 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.728332414 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085064587 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108283864 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082909472 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096286328 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103881887 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086960088 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115307289 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08011463 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098743244 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080422501 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096796987 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081794824 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094834743 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106588526 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078512513 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101566126 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080620754 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164464724 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079324454 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115574122 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127158653 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082897807 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09583084 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130517798 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083025495 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097860347 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133709121 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081319806 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108263489 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09871094 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14184712 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080946803 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125664259 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095587103 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126175099 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099010199 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113757395 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111240426 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09896012 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084676024 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095610931 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077535207 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164122022 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080476657 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097849519 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081395388 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11043395 seconds)
  done (took 22.34206599 seconds)
done (took 40.094295524 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318534102 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102406431 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102825301 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10254781 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100346433 seconds)
  done (took 1.487159489 seconds)
done (took 2.219805951 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285697599 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173726536 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095199761 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16529197 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093287417 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171569558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159872673 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111608953 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200667812 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094657325 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159545413 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093088123 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077074746 seconds)
  done (took 2.639603886 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09403629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114152597 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083300446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11074186 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076834261 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110856167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092799529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116016302 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108479462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086805949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093227645 seconds)
  done (took 1.82129077 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09405499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113303372 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082577576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110054453 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077681797 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11143227 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092574508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116398213 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109595023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087286851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092751784 seconds)
  done (took 1.819105693 seconds)
done (took 7.000492166 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091687957 seconds)
  done (took 0.817202348 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.917353558 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.862663621 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113131831 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150824471 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316380933 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192970594 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474380936 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125355954 seconds)
  done (took 11.070191188 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114007123 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113321668 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10225245 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085690098 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101332673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083407325 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100485765 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098535483 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081665846 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09910179 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08517503 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101628476 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100869489 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085635583 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098231664 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084321491 seconds)
  done (took 2.331373791 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119681808 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118013592 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105899133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108848179 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086806395 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103811465 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105146551 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087674734 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101855502 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102092664 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089430223 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104283961 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102792563 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078973809 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106500092 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106720969 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085855805 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10621512 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10662978 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091145359 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106864666 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094748409 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086302224 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105393892 seconds)
  done (took 3.253319399 seconds)
done (took 18.199968632 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157678351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107949309 seconds)
  done (took 1.002106298 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095565035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113275663 seconds)
  done (took 0.948972307 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097796142 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095447935 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120938526 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10859062 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080534596 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097148879 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119686556 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079759898 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097560523 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081204353 seconds)
  done (took 1.722506705 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082236812 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109747757 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100888327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094747577 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104913637 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094186316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088000594 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099734904 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109662933 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077672021 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102449913 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113483021 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086046696 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116067011 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104711739 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08334224 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10181053 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098868062 seconds)
  done (took 2.513753994 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079730121 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096644884 seconds)
  done (took 0.919893945 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081990482 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093440863 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080987766 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098377662 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093609535 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076650154 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094337007 seconds)
  done (took 1.36198966 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484400443 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135133662 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262475655 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101724938 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102992125 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303103626 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097959114 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083824782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102618614 seconds)
  done (took 2.475223538 seconds)
done (took 11.682902013 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09304885 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115255283 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112482632 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461617569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106160394 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097238621 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147130716 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246484981 seconds)
done (took 2.124966405 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143416148 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.603951855 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427081705 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238947795 seconds)
  done (took 2.022516159 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403071976 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100282495 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084295319 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082539976 seconds)
  done (took 1.424930003 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079917402 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099893034 seconds)
  done (took 0.931656552 seconds)
done (took 5.275668919 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080828466 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09651931 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11377424 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100105594 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07734934 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099506753 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07823463 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096463004 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08019553 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097232203 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095666279 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079910055 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096410742 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077541861 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093244337 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077585164 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096014418 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07744278 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096526883 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077309943 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094137927 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080186958 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094169377 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077797023 seconds)
  done (took 2.92020641 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099691862 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098341984 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102878668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08626569 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102626641 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086576551 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102900525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097303477 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085847816 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09961791 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084627394 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101546855 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099615103 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084818015 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099211198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101660708 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087172175 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097666716 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082446955 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101394379 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103331217 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081545729 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10145347 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085708498 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101144103 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100843515 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08262559 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099349792 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103649514 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085014999 seconds)
  done (took 3.601786408 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084979683 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094330085 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078499955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103423216 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079445453 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099089237 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079668737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098069837 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0814618 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096480038 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081274702 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097806701 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0805302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099631153 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080494076 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10019962 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108970337 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080227155 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096197028 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07990577 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100057296 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078638703 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096442908 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078942281 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097088508 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078989359 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096809022 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079643313 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098159555 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079020127 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099683189 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083047872 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096139655 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085826948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100040805 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077747641 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099506869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078845937 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096693588 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079043249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094833906 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095100606 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078464721 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101870036 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078518793 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097341708 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078542541 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096759049 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078346089 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100319523 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078639913 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095657347 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081311535 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098115704 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08448844 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096628383 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080727239 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096678316 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097719164 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079655132 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096581236 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079454652 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098800216 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080950929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112953055 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086649461 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097760853 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08206125 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098844126 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082500686 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099983642 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094116177 seconds)
  done (took 7.240918981 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083254946 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105983636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080010528 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0973535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076769825 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096713091 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098708002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079780347 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096837153 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084781909 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096278765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079635053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096592118 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107974014 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079525118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09670667 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085076926 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093601612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078421098 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099064337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078693608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099705913 seconds)
  done (took 2.756999238 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208582021 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10537007 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141492686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106618918 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083604789 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10742782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102873687 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088398401 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104802333 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087559914 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103061167 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105146894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084669716 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102694709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102653902 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087024145 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10496733 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088299699 seconds)
  done (took 2.680671572 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.202956977 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098803619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102726566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099492686 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099229518 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084528908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106672086 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109237747 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085196342 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100736044 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092213788 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103670067 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10355689 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083486723 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103933096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083821963 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104233378 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083878207 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11079222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106376003 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089457007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110958047 seconds)
  done (took 3.034701519 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096173976 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10191803 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118508388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084351623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097255021 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081594667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109192961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083161814 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110181298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103550869 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083597374 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099603809 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090042433 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101251637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106423611 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083963524 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102982438 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083351072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10296278 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079281226 seconds)
  done (took 2.688253088 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102775638 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09966749 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099256575 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091694375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100497164 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082150132 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109266662 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099933013 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082891397 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125233296 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099685237 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082629004 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109765026 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106928425 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100748793 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092471395 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111667929 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111333563 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084265976 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103178622 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126152763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084055113 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110061584 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10002977 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082302209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100757863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099440897 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088768804 seconds)
  done (took 3.558002121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081639775 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098532688 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081352465 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09885241 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080863057 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099276154 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081383723 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098398777 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084092355 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098774164 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082807043 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100926198 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083272274 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101274437 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0833331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101208075 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082894726 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098910249 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080689308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099275055 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082990259 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102269374 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082913525 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098952961 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080430659 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102900219 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081161146 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099791757 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083460863 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099611221 seconds)
  done (took 3.505101858 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09135543 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106490672 seconds)
  done (took 0.969787744 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079615319 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115290318 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079765119 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105288893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088147804 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102564157 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109905842 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088792968 seconds)
  done (took 1.54154302 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096367524 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111501307 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084787509 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115619672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111550104 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099753738 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171801054 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10164103 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087463147 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098032162 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113835834 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081370711 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107461975 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083387896 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107964137 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09017587 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100266442 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107612633 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086189725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099473897 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084579583 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113722552 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086000286 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097685939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103323459 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092508655 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114444723 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083497145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104863842 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107767094 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087570239 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094619739 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082466054 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102506379 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081745697 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112611264 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120193302 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086801728 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112904227 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085306009 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112666932 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095900496 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088929106 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108909953 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093944193 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102640704 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103836275 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078924886 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099085496 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086617922 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098216898 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084048015 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097921593 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091528074 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106934538 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114093747 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083863054 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104228081 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086754351 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107732803 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091442705 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105720508 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104948069 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085173172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110371265 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088791218 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113410011 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080661022 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097787307 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082922717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112119675 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126595048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089762579 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101716028 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101562035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080029703 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105220955 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084978593 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108071718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089896691 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100854959 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109075578 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092207944 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10327859 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087385223 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112526864 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100404305 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08505019 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098565606 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119158537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081074628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098118685 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079928443 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112454428 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086898986 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103104294 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082427662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110754329 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078071621 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102841606 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10425709 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085395006 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113992332 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107866485 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089250734 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110041739 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089574756 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102606723 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102770897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079656571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10266969 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084862348 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10896794 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078916532 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105845966 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085222854 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103815832 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111614385 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081457165 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10155113 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091168222 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108249124 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082880531 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100093314 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087290788 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103086578 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106421291 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09291063 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101982709 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08000301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099115846 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087229759 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103686703 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107555494 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090408032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107443181 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079089387 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101673893 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107789935 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09265877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102167344 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083198098 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107897035 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082749479 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099394708 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106050842 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085483902 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099445225 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087975742 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102835688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078577739 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106009761 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104208851 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08065973 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105542065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08754186 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104603616 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08578871 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103609603 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109493511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084443783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100796859 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084215378 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102421913 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096104892 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105206386 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078937267 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098064428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110938196 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080051895 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101363397 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081655881 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103831496 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083046372 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099622729 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082546937 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103102442 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113286759 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08790814 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102732326 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106213084 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094111787 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101600527 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084799136 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10064266 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083673147 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101803712 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109661909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088289598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106343981 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085034506 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097204831 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106725211 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090315881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09927356 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080609692 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100254456 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086367213 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107450826 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104371435 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083457969 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098759813 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083438178 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104504922 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085425016 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100555456 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080684676 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105671056 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099549611 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089539004 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102183622 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111230833 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086784228 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097233857 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088589336 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102416729 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089860067 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098080114 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079750706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101072688 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101447035 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082776479 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103965385 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076846528 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108535179 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090526306 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101116636 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081350987 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100941838 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107411006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08457523 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105235749 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086422848 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107733094 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111571048 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082631453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104183977 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093744703 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101728638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076573395 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107503858 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081789488 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100368379 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099833106 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081619521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103867876 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093165816 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110094722 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096068936 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085934913 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100588442 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081373095 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096788626 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087707496 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104973857 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083512405 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10837484 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102608761 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087041002 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10479015 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083862181 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101657614 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084715342 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105016922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101336089 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085817193 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100185507 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086184347 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100232208 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080461089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10286271 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083902916 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102635241 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08876137 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100828027 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101434519 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086445043 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102634672 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083622047 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101578763 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081836584 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105208492 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082908913 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101863546 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103605375 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07904155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108437862 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082674372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110095266 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082910999 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099256878 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107799194 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085837375 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106705699 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083903906 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103021831 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083496797 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101062768 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103575455 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090730637 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099478262 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09460889 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111623684 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102513241 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085362047 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101472298 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08438135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100678012 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084253277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10214851 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082513853 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102711511 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10584437 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085875782 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102962486 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085381162 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103968013 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082525217 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10339375 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077459803 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101606437 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082318805 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102209974 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112147293 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084119875 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104507842 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082092662 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103632374 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081986475 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099413069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109528555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092409883 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104040089 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109297826 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082867611 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103094883 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095235538 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096396894 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081287567 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100389949 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080902668 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109468801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102587085 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101353278 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10138434 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082330128 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098374875 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084425413 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100588858 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077260349 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100370743 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105299504 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08591367 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100355643 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084525985 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105257126 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084505167 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112771588 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101453371 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084315461 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10201165 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079848355 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100479809 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083389419 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105449836 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085232966 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100983432 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079830492 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101804501 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083577407 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103293537 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101823861 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084492196 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108971643 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082461818 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105372182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086561788 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096835888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104815634 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083250773 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10141968 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082624931 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105882823 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086537327 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103585716 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112016604 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08341021 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102931365 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084092814 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099962586 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082540475 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102156591 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083121306 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10140789 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103471411 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091498815 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100421164 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086490214 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102118731 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083249288 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11092843 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10382942 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087090398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110987711 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085861902 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104282446 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110063628 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087261277 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105409797 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085552056 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104177738 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088951919 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102152232 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10802832 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083705767 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102643483 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086001396 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100414859 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083182719 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103287814 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082311515 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110871381 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103290753 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082607834 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102939351 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082409642 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103393028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087580986 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110295779 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086501473 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106021577 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097244103 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080453598 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103932717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081881922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103918919 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086955082 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108980551 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085824983 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10364714 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10075874 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093489982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10888009 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087511328 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101198718 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086855759 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104358335 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104470941 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085070384 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102635699 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085117354 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108001172 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085873956 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102870895 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110311018 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087171484 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104718449 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085411608 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10376253 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083661292 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0979401 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084655258 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10474211 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108595268 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086021799 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102860486 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093869384 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102558739 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083691435 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107022739 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102074739 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090176245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097804225 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084708453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104176407 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085098191 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097437317 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082339336 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100778492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104929247 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083049442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097693156 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094940832 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112235405 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086633771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102926392 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100410056 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079123549 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09775451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08365517 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10432167 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085714107 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114288872 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081952941 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101645409 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09693839 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084570395 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105540399 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086900703 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10042256 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079512407 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101538608 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086350935 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108810745 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082193626 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103234968 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105770364 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086900825 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10159891 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088245483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100380163 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087746741 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117286754 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104657738 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085026855 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109610076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091226601 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104763894 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097837976 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08549275 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106350018 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083585473 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104981397 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084603965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119133726 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1066588 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083512494 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102375988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086280485 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102588465 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110994244 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085304787 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103715131 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088779872 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105305388 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092960072 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106196192 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111905971 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08811179 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106860695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082765344 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103716099 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082144635 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102584319 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104178625 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085990697 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108178224 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092706036 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102723999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114748419 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094437282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108908366 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080921768 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102695416 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082932233 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098951211 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086872923 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101546198 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10126394 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082139643 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102016767 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085464184 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109981192 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084907666 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104606379 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083693137 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097899365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085325395 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105546726 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104318702 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081155144 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102688382 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085616225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107273215 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088134794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104273149 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084981477 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105524713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1033074 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079995636 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109810995 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083347693 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106466795 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083528418 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104307222 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084539939 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107809358 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108524659 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085563155 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105812186 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095675445 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106425438 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100208167 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081460707 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108332185 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082153714 seconds)
  done (took 58.224219651 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14488997 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081061885 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099237532 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079154394 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113522706 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099067652 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079716043 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100043245 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080591096 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102817921 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079253356 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10050792 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108967658 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123783698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093212135 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104413369 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07890542 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100607823 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097601718 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080223655 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108751073 seconds)
  done (took 2.879357864 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10486238 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117591535 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11477325 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118988189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090144893 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115200602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114727248 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114948611 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098954193 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112210865 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117781581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115367625 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091561959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111694957 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110631825 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093303556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118894105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109597365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115869769 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095272096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113068849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113959328 seconds)
  done (took 3.230067315 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084775316 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102594212 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08510269 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098276464 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083252863 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098902439 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087477717 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101007059 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087066023 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102620665 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082045693 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10290904 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104192939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078406492 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10244984 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081651484 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151015029 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107373669 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083211506 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105072942 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078449901 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10608184 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099286874 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080666139 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102402422 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088361189 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104587031 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082208022 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103614417 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083391288 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10407195 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08136433 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106085154 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103351431 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083320754 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102462618 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083460473 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103508908 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07994699 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101540893 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08479931 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099496027 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084450116 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105377473 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08155501 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102302031 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085011006 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103611606 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078953971 seconds)
  done (took 5.456320875 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104964745 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162106529 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086633052 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143605473 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12191625 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112680642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087946322 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142535791 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103723063 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083484768 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123032895 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122105259 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104121905 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08952069 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107794535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104461411 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086433791 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103259516 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089262161 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104830064 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109139006 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091563266 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120948293 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119248067 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108284323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083740942 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103412146 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088817921 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11939583 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110090731 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109587858 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091199866 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121931956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110710182 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083523706 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107304054 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122365435 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085151282 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108119221 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10195449 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086371197 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109287191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111521254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102881316 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105158943 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10924804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084621786 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101581701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119404381 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086890289 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112610025 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121471828 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088724449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105471986 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109073282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101158753 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105287155 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102993378 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08770123 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119077494 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101458872 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08895218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120538091 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106399257 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092490999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120647812 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11010037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108999498 seconds)
  done (took 8.168793821 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094934465 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11080349 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122689245 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121220281 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091062922 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111160853 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11144451 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091073412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111663109 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116806206 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110976679 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133243435 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086355761 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114880374 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111285762 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091649356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11164372 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110613068 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091324767 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111950533 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111319604 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121193963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091038487 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121080214 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142304933 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105948012 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091318935 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112561967 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120706207 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110973699 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124308364 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091871971 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111038216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120739606 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123513247 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091207345 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103821037 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110803762 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092418355 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112119405 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105627056 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100784869 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111019736 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106123163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09104536 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111816303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120888783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124483411 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115210078 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097479114 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111673089 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120227575 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110974701 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092002212 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121576757 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14767749 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121247339 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121190777 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112266931 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100441222 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122022051 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129187207 seconds)
  done (took 7.692371528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10733069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115853227 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11766637 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10144611 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083166643 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109579975 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083051408 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102778426 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114633329 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094840029 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118282999 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110553583 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092733729 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118128909 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10881727 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112693432 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090390157 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110347432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114522945 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088891802 seconds)
  done (took 2.930267696 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093383779 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124074997 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085250485 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113711711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108643214 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091304895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107838343 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108783835 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08563849 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10880583 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097260858 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11797152 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106167248 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091769725 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116940503 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111897027 seconds)
  done (took 2.507679451 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099179309 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117438787 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120801456 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085145889 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10547 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081615183 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105930506 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101139705 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081637381 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121832356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085128295 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109096565 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105338915 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083835403 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102672956 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08782611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.1021872 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082471799 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10553669 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120358875 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09660594 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10458416 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085081457 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107692995 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106407366 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090453738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105899727 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103713094 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084050417 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106106061 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0862171 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113580383 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102471396 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084516993 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103381843 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083322042 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105578304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085596808 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108401979 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104823506 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083781527 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106129214 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085139254 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10721497 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081556463 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107519707 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081809693 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112132791 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103157313 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085737825 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105219836 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087882931 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106138254 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117349905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089533335 seconds)
  done (took 6.271993831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099261671 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109767208 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080351524 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103832669 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088235133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107853817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108751693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088358936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10881729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082398932 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10771315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089991818 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10833071 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109397543 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087374333 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108966776 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080925356 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107577443 seconds)
  done (took 2.622225407 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090648529 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105698443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09300254 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106709945 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084475814 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108808019 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081903244 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104372758 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103516818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085441738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106111491 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087775788 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104108652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087460689 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10569614 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085383898 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108066486 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104257815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086141613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101295301 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087931639 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104563677 seconds)
  done (took 2.976229658 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118647747 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125982499 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09230992 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231862746 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103578891 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132522326 seconds)
  done (took 1.648430449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109812315 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121877451 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106545041 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107497194 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115524336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086796386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108017928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108266699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117812027 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101351657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107696719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117887366 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118405032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097430297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114794435 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114667185 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107353538 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088640952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106839501 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12837626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087560019 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118106486 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10849014 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087219068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107936246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118551027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117790598 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10083273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10754081 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118261967 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114638343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087104528 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11963415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123598007 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088324878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119050475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108480127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129088975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114181901 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097851304 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109749465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115846612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09859374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114210088 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118914611 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108971648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092787071 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107427164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109366345 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135981801 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095392221 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117759744 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115305959 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118280595 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098822149 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135484583 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122075948 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118459736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115915871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123249492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118727059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094279285 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117935929 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123003738 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115166292 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097274142 seconds)
  done (took 8.14536009 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102009169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126427155 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108617945 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122867661 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097267824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108175162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108839281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087445564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108873738 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107710667 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152259071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087794908 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117419805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118296204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088193787 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108450401 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108723726 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118412782 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087717025 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136036576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109668782 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11888001 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09646789 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117874612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123210788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115175145 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108192323 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087734178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109856547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087770009 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115135242 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109390557 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117187199 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086786661 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118617064 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108611172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087174752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114709411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108694689 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114459475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097860273 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129472903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110063529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10820846 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101568964 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108871918 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108715912 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087163227 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1093875 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108162881 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102300911 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123599051 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12375717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118892247 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109126145 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088129831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109497956 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109753546 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088358096 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116891843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11857519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087949485 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136359073 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109935499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109273983 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118760212 seconds)
  done (took 8.052387764 seconds)
done (took 156.050812797 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213229326 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198807392 seconds)
  done (took 1.259951625 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098277925 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136782652 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098618381 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169624145 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107063526 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119192036 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139646511 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097916739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106636762 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085459089 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108116418 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087635255 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171440836 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085666593 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107337608 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109067848 seconds)
  done (took 2.683053545 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119307731 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.233493143 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124424514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106089879 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089875661 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110942125 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084538973 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112744466 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089595401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106647219 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08860478 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107193742 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084943794 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107405465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111003487 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087895956 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106627 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088491734 seconds)
  done (took 2.814742566 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113390279 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147292598 seconds)
  done (took 1.12285637 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242462029 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162240934 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227668692 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471263946 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.272032075 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.366017058 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199762492 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211001738 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161315647 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208763401 seconds)
  done (took 3.377894647 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117838522 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181516336 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317317382 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156419461 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10762746 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129770498 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156686289 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131575156 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122527424 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101221224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122656353 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11832535 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138436697 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094614297 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115663837 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11894082 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121154957 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114463375 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116085064 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095186188 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138949214 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085779469 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116518655 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114015605 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097962019 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120076244 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10621323 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085760298 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118107552 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094166105 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114170279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126355586 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11982928 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154993647 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122942235 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156468477 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118159871 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090272975 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1154175 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091167082 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12044057 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11939201 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125423521 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096464497 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105678179 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098134262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106089984 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084482973 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11482667 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119262542 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094095115 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114119069 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154547049 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118919226 seconds)
  done (took 7.40079213 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786363392 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155236661 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091110161 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876553135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136282302 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102381477 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77745021 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111231145 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254954963 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75842414 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13345938 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121262455 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2058129 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258101188 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925615244 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28642641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.666845247 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124179678 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150449364 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153079245 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11757545 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135856567 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108592285 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429242055 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117004702 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112388638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096258777 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119692614 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161076048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125583633 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112959689 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177991276 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245439485 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203391036 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094598901 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11123038 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111353356 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169741652 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263020454 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193413075 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180019655 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109174497 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089236907 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123605557 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131862518 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087124609 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184834894 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175799007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169095896 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115135507 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118841081 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097724099 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121952774 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165111745 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122327612 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309276856 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324443859 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090187706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121479045 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126294943 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259135288 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101179885 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224264979 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138835104 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212117642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090411128 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779772742 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170173868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111538264 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095614571 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119994405 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115124689 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099143247 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166652781 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407066115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123565923 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113800931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090365264 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227533663 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102593729 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112179984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160700705 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117116768 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121168613 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102864684 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122735198 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168654245 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251116679 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100669687 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119762255 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114875902 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102645444 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116784145 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213021719 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219761937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162828721 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229263101 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100487229 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185449064 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168853089 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119117756 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172184512 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11950369 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102057705 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122314289 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217949102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144192712 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122683781 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093954523 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118024928 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147227 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126875612 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096323592 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192466481 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458769745 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16953364 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109812797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126934592 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098846187 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161158287 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118015971 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261624376 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122140374 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169913855 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119470818 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087559171 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121293113 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164443828 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122567761 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099414206 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122128417 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11944995 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232638339 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216665692 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120936342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221931449 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183520638 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118676138 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171496447 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121297483 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167065302 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120371527 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098708528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117001035 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770784007 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100912584 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120646517 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115182345 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187145489 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08995001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123552972 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124788637 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086940579 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78269958 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12685283 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099114181 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.1246114 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118081991 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119866241 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096344848 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116131387 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161669189 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229344709 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120699015 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098021352 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124676256 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161606294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116842855 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124409031 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10350139 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125541936 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122091743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092709576 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12519975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168010725 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184644679 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218394535 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574380929 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111804313 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102934276 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228154432 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112250614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286158496 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098191183 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223699825 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162225434 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121300331 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317243328 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164505185 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187466111 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128402496 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172242476 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110488435 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117758585 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164171036 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089758176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117239253 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161610633 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125186186 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123418074 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962705246 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090308911 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225263627 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109546634 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172049999 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11834292 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119267308 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269257309 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113123866 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127658474 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165537086 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114822708 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102411458 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.875479719 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125212291 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100396325 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118635347 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221384539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164567117 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119573427 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096517806 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119797673 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163163551 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229317349 seconds)
  done (took 44.003409682 seconds)
done (took 63.513205692 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279732994 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21812256 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269030386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171238769 seconds)
  done (took 1.9023792 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17287581 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150554086 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121724876 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107697598 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151647765 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085356647 seconds)
  done (took 1.677694399 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363010569 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276926346 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2443899 seconds)
  done (took 1.77765121 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320012083 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249026609 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473897199 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32511123 seconds)
  done (took 2.353181677 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211832974 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132534088 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111657361 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103267844 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198302414 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246273718 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143080927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20258883 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098978484 seconds)
  done (took 2.38259181 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197555061 seconds)
done (took 11.180581668 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.234757897 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.180490972 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.175518828 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.292749332 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.229632823 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115790655 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.266320577 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.243675225 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.192060934 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.15095763 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.126662516 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.208838865 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101425709 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13686948 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115533531 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156414016 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121274659 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085815934 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228833512 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116835977 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194378687 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.163258414 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.124976633 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138235929 seconds)
    (25/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095673335 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.132107044 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119104091 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099557516 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112596922 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.211838312 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.158328847 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.250592718 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114114823 seconds)
    (34/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.123338297 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120237955 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116693292 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173883982 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138759311 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095963708 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.264141859 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164444026 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.214088523 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.20548405 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11713727 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169703814 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117833383 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136762569 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098481646 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119806056 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094775202 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.226896829 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181360107 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108423012 seconds)
    (54/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102879989 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123620867 seconds)
    (56/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.174327229 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113767531 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109289921 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224452663 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114485084 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.178146875 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140686411 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079279167 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111178766 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136907577 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093764423 seconds)
    (67/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076886523 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.227313309 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117157414 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.187168658 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.186312811 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085357729 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131919754 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094830339 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110549342 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088458283 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140549477 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.147438456 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066421746 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.200798127 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174836914 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149223608 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120771897 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.213060566 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087430879 seconds)
    (86/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.148406778 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191522725 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128243098 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195829299 seconds)
    (90/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137852791 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162232788 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119678579 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162888701 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070994426 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.126377294 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.119125764 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124673158 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125879567 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112607667 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 0.111317912 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144175623 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221703489 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09114672 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218133632 seconds)
    (105/309) benchmarking ("sort", Int8, false)...
    done (took 0.189244033 seconds)
    (106/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.151575835 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089086751 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111043445 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111305719 seconds)
    (110/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101114978 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097339685 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18426772 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067003007 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.208347258 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.090868293 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092802137 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140080528 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098026436 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174380241 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118167999 seconds)
    (121/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.311939435 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193882643 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150679648 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067786416 seconds)
    (125/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172248232 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.172590301 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09098444 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172761577 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067841808 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143839791 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.180290039 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094592566 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117988078 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094639896 seconds)
    (135/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117576335 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066512307 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11565949 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086083041 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.162996803 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092908811 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194741162 seconds)
    (142/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.099342876 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219315261 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107110165 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.089852664 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11304919 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118734282 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110572727 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066906722 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09698824 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.111264338 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136037102 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093761517 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.120700838 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108655436 seconds)
    (156/309) benchmarking ("sort", Float64, false)...
    done (took 0.170727357 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10984315 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085806874 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11731089 seconds)
    (160/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066926475 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.165912883 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094673806 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174729229 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082361283 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173879982 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112092309 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095585886 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090877925 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077861861 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077338799 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132154668 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095530264 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116710185 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067650802 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158591983 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125245742 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100884559 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090718511 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101954708 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091155129 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066017722 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094902072 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111672123 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066546877 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090054292 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066512298 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179524532 seconds)
    (188/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092541739 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111483676 seconds)
    (190/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129355276 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111642183 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116829748 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 0.149921404 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133645442 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090680256 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095988264 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136244729 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114071469 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109602699 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085638033 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143173153 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138014718 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090722103 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091811803 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094113252 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111083617 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092872883 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091248334 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092754553 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109064923 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067104849 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093255132 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117385215 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131382044 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.121492274 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109604328 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066549826 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116503702 seconds)
    (219/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.125154538 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119255339 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09501865 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091655929 seconds)
    (223/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090645254 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112495766 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085904077 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109869464 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092795143 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217688364 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.19458173 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086914851 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092654971 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088513338 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091780885 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094398104 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109313799 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087154296 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11071893 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087543177 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181172024 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067886271 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091772577 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.124453651 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190204641 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114545542 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06811147 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112282483 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100646953 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067575405 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.091681261 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190764585 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11368144 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091065375 seconds)
    (253/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067946684 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111183212 seconds)
    (255/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.125920001 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069193791 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111748269 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117493933 seconds)
    (259/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068235114 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092222904 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094465716 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086697789 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118751478 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068935453 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117643722 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087034875 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109849921 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067862761 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068526421 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093151269 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091742474 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109539319 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067114266 seconds)
    (274/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142625873 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214841693 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108011148 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093702136 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067124689 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067709138 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091992392 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09431645 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111332473 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06726166 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108632478 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084750289 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154684901 seconds)
    (287/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111969652 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120149185 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154247436 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15325809 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117518736 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171312532 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067113428 seconds)
    (294/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067493723 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103136052 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092105185 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139356417 seconds)
    (298/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068324708 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092104987 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089366679 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068006685 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115777952 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089639591 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111709518 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112555917 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092831225 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217465365 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067744337 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111564446 seconds)
  done (took 39.773521854 seconds)
done (took 40.665190055 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099687598 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149550968 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096774448 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135836022 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125241913 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091950919 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119512011 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097522247 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123967384 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125492625 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098572841 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094427718 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096375935 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12151762 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097017134 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139016888 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124149248 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09346704 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119898308 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086726083 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120020521 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087314497 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113098156 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069781633 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12274985 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094575645 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116863195 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120918284 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086656545 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111139447 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090410736 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119166633 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086890838 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125831511 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09340537 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11949757 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097152065 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120848606 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088620168 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111029472 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118753184 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086925047 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118543114 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095054063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116750978 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092780224 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119410772 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099363905 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1404623 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116152471 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094857387 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121335669 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097083116 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118682394 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091754943 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120798333 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093321641 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14084672 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119945731 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092461758 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119083101 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094815674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.1170402 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096400464 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119693864 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097534959 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124106167 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119260809 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097109296 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119225104 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086962127 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120300789 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09084214 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11101206 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096231261 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123060418 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08702985 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117037588 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094307722 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115788188 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110416733 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089319986 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112540494 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093353647 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114046081 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07017911 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091093086 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117011427 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086479168 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119172973 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117263963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093554538 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112660334 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099014774 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111230682 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092864819 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111965895 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087085307 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113341396 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091367515 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110878169 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090064524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120180522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089035287 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118266077 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099321792 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111226493 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.093455475 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110514109 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111003411 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101323884 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121928834 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087581169 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117105109 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086624915 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119160776 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087032221 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111450011 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08692135 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112157328 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093315502 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112835477 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090226672 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11904782 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101495833 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.110889319 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115201794 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090252518 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111247818 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092630761 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111971226 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087777587 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113352563 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078440618 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090428731 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111109207 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118680652 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090122379 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119690069 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089289391 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12072108 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092209105 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11816983 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092612755 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111172822 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074387136 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116670414 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089517749 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113391681 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087180534 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113740672 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086564966 seconds)
done (took 17.00502926 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087734246 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186823491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152569138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143030466 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109206451 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112465591 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123089692 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120289806 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113781302 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143886156 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111445591 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133001593 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149199408 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087317761 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113028035 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091405124 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11420458 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103479052 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146770266 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134332771 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166212829 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086581819 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148075898 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136596848 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121630324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114522845 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113473023 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091281365 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116451537 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103887835 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133583385 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091394716 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112433634 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135123827 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104951726 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122014293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087970096 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119899004 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087497927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113219324 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142516402 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110282045 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117532361 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11822163 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092164549 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11579265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089210393 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121628335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098307813 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117452635 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127312558 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157291874 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090799382 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123533842 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086839535 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123765911 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121921762 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09036231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113803141 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090316444 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112528064 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091262942 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128373473 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141923807 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091865259 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123475776 seconds)
  done (took 8.669321441 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104293936 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14049105 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106562426 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.148962195 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112358123 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088246518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113894406 seconds)
  done (took 1.77451565 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088273971 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136115929 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111974677 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136376436 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133275047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109125487 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123185772 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088918405 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131823012 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089311772 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13515476 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154143565 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090376981 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121291475 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138014904 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088803624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139584144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088408005 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117366935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11275061 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117242839 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136043842 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090346494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115457838 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102857032 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11523751 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163714917 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093968789 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116012023 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092100961 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112630992 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167680964 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105599945 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126631171 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088686529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128868472 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128722952 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086913401 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130170938 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094105959 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12929413 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090405681 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115502341 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087887364 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119423381 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124661258 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090090115 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115449792 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091977248 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135029766 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090262397 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128571106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091136169 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118639126 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090939445 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11973489 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12446104 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089835406 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133614993 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091108839 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132511177 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105298843 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128615139 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131540374 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092402004 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129417086 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103333677 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11810528 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090656266 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118256757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130368489 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087239338 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116922827 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099421875 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115423461 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114343163 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13921386 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090829414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126029446 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114737749 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089479633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115024746 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113201549 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119297873 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088934778 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119298739 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091920291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113323625 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087892972 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118383368 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087372376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115767479 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091724948 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114639523 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09219487 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131446473 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116107554 seconds)
  done (took 11.879642943 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09023768 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115643727 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091733643 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115606611 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090186969 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115595338 seconds)
  done (took 1.589827486 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115650995 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118096993 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104853787 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121546614 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157974046 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103814723 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130256288 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125108233 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107803938 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127836108 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130957629 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105614286 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137402533 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121911668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104344527 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121182457 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104619948 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125639152 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128817427 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09726527 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138008682 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122388527 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096536183 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133409837 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118803573 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096363586 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126090853 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103398772 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128661999 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124450943 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096774297 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119884487 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096529947 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123822342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130763809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096941473 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121736432 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120564331 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10036806 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119477832 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105734398 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123028906 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127916952 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095197278 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124894865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12163483 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09539307 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126089416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104849458 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120784253 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120770819 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096370672 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119024282 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095354039 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122662159 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124184941 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09447869 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13072021 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096016153 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122341266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119389609 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093962445 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124953248 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094122194 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130018814 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120128878 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096422224 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122451314 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122216069 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096425618 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119986246 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093471707 seconds)
  done (took 9.281330929 seconds)
done (took 34.147938814 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690138719 seconds)
  done (took 1.660211288 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.709688788 seconds)
  done (took 1.681941871 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.172081787 seconds)
  done (took 18.144076406 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499613905 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585523799 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888065247 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181477441 seconds)
  done (took 3.127780075 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948397606 seconds)
  done (took 1.937056067 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297866624 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259825042 seconds)
  done (took 1.534670673 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769704001 seconds)
  done (took 1.753530549 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.356501177 seconds)
  done (took 2.332844367 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333498682 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185710872 seconds)
  done (took 1.50521552 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545262197 seconds)
  done (took 1.530656058 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.022158386 seconds)
  done (took 8.013016042 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270066616 seconds)
  done (took 1.26783258 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300911988 seconds)
  done (took 1.290802014 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.537777127 seconds)
  done (took 4.526739548 seconds)
done (took 51.284830686 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099010972 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127944164 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10285962 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125633743 seconds)
  done (took 1.439105419 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101227649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122038935 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100978415 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121019152 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126414754 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096081548 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123664011 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101859347 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121360924 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096829674 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121178061 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121640187 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098748594 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123073182 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093810369 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12514011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099555608 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122053663 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124998082 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09773113 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119238514 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097514256 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125106012 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094552668 seconds)
  done (took 3.670211822 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10170771 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119661782 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096709987 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11846181 seconds)
  done (took 1.438764135 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100179468 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142470643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139514146 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100361776 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142985662 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135754748 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093068008 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117860521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094962033 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125588918 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090921843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149968335 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137824756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099673781 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127834274 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08857676 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11840451 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138027114 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100065175 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127576715 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095345513 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125210325 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090596703 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140785519 seconds)
  done (took 3.820991935 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170851842 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127285828 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13937442 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095988978 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160917645 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141811919 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089101025 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142392647 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088855664 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132178424 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118848287 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133836166 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130485957 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08899271 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11500722 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08785857 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129786245 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130216394 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091579653 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128877448 seconds)
  done (took 3.440973355 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098284727 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118216834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088309349 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117027782 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099147032 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121532755 seconds)
  done (took 1.641310903 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091288171 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115214207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090370627 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115625465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094917889 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115319293 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089056453 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115569898 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089655841 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115409139 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089551189 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113916345 seconds)
  done (took 2.236794345 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.493344029 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117247049 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11812504 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088947522 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123414084 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089483076 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130670256 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092280775 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142630361 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089472351 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116029483 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091564059 seconds)
  done (took 2.692875494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235498195 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12545779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289531955 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369065686 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155997469 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178891328 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279129148 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160923568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225668936 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167142389 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229903137 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198642161 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153513829 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190503247 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139471583 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146279462 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205361733 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248302866 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154468236 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209158232 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229937886 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166971275 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181335664 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15125112 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139491653 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173414932 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120611067 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104672289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234688273 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17666405 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216253273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163887174 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147039903 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211615771 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253777933 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221880578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288136817 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135770984 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.152255868 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166994249 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264996098 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13716821 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203855574 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15534718 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132568189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216384962 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165384103 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176857191 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15331735 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139626497 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195645049 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240368708 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194203034 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139577961 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304008108 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150541826 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176527023 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221493594 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250882178 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199516393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188170606 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12061384 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190789076 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217295822 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187150886 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176831613 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181508079 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149095969 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228896259 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190229099 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166142392 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221757202 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187328569 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139863363 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171451126 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174362752 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172684443 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259569176 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184361512 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122083085 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169734486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150887145 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133309613 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167690464 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125791816 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239639761 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117399762 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165081436 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246605987 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160404395 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159817109 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205751335 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231250238 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149336033 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084558145 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155914331 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155874892 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195885861 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140794546 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160364311 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163599245 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130952759 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186650105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124168535 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18457575 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091564411 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200408669 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18487695 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127000461 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134567598 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151302591 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150932774 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173953304 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228179613 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142984814 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107413326 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235080531 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178602625 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152437246 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178850114 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202700626 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145104184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151378537 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226991803 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217188009 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141314932 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203152478 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157509364 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136292118 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132817965 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18319428 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156139229 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162677547 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108295292 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211511613 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207987872 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12625932 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139236934 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19441892 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133645046 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105864931 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191039999 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120936908 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139592109 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153932001 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154261472 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184035064 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177795529 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155889213 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165868157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153355744 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25390459 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14368177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152376214 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149044746 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094601764 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220885612 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201454482 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131077641 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205821768 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171380585 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232894249 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171500505 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134747314 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177755092 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102885777 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121080577 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194623689 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167948964 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161316434 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.2243935 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20215605 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208171523 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18420854 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175207768 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174358459 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1678148 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155927937 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139973446 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160906388 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173713186 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123968358 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116843794 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135379291 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1487076 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145302459 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134068076 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198145129 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170455973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217513148 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160102455 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122704602 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207909748 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102009422 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174402323 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205562291 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147710881 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199287904 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195096331 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215205481 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116868783 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230836749 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093933659 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127559801 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14320815 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172091216 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134294245 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109057068 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165461832 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208001707 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183447968 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179191741 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238464469 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172092483 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192313434 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122068483 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141262589 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212546539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178312574 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192841658 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117137467 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149381594 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179184318 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157577928 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257992215 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168516068 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176677219 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234211982 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15130423 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132486305 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123839159 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223154461 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155620534 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178953779 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148632701 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142432846 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162720246 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10692132 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160980891 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212315055 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164226282 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190110454 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150949468 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185493999 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128564893 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165580347 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161127754 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168180217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081208625 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202738475 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206130635 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150187409 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168542183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217825883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105361097 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307664041 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242724318 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196276473 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139510114 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156317888 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161334653 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165837048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172540297 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179332332 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159617237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188045545 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160179615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137257788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141937574 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149538013 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123589168 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132225672 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149905179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176623929 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141324162 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185624327 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165088657 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159404555 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17310555 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15168356 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146099516 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152138748 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216692545 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21213367 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211488536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152610949 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180072585 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235727015 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098648066 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133307617 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134847185 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179061811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109197777 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221850739 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189308638 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233779213 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183082762 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223038317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113170911 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12023494 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158076073 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17602118 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210344461 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152697862 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161245912 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232765765 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120088066 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132657963 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17906395 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317710946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122492968 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22548008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080880423 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28166808 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124082194 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133640336 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137230789 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234535527 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136466525 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189103622 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172023579 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173271896 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164841881 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150654754 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19294549 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246329942 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203183122 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17949366 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134005844 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157553699 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176969798 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219518559 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158651158 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113526473 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231890545 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197158837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196273955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143329701 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172409044 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168619442 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158477897 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215486545 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10760494 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236516934 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135132526 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194932615 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155062762 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145112665 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177409196 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189429271 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141414802 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215923891 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183840413 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135204669 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1069119 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171090588 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205839598 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156703854 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100495456 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180741136 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125486069 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194219701 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259050504 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1352238 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155797602 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147906782 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10926802 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156008586 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15892105 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143028146 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16314724 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204097999 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135988586 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192656815 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23167913 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169819115 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17519912 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146951796 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694355027 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131315823 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196678498 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16051416 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234855585 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122354934 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201917046 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130606082 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195766067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197840914 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161638493 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232882073 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19511087 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.205297622 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10553522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158161324 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165327752 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144929595 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152590267 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168620048 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161527909 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15563391 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178825276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200318655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107791636 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139925367 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200559186 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160075221 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182494916 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179460641 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139445721 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174714004 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216698524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106218723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208282724 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208743569 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143781856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152936996 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134107573 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159554773 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263531439 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098077274 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234443465 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188407167 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159407107 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171289487 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148457193 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196044392 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157869854 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214309153 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149122677 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159760387 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156161129 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110243498 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131019682 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155831784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170092341 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149407866 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161508178 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139551311 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217400767 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096963125 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145370011 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294655382 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22075807 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216697587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136843904 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135790131 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162865254 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12402229 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205371221 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178426639 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136167239 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109140463 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138661992 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132784967 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137750953 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15535236 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199398032 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167455592 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236797777 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110169266 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28153841 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139860093 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156224591 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09001959 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132205974 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152154349 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14758499 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159879601 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193361038 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26379007 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147277403 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106708265 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150860367 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126694954 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109628467 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167354624 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162790875 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206136718 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118469708 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108525622 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158037653 seconds)
  done (took 83.697519165 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164081986 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13168947 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147163766 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201893138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176582925 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270341441 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209886287 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253828622 seconds)
  done (took 2.645869378 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09327398 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145407644 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158194922 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133942677 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090817089 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120227402 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344447525 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133055318 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116746216 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122981845 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173455979 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09409797 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551949505 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090286102 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120150763 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107206657 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092062603 seconds)
  done (took 3.771949617 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476679413 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.712787784 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511327718 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097171576 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.178595713 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112112216 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.773984871 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195714115 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113860455 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.481733969 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776670358 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165128499 seconds)
  done (took 18.690150291 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098664608 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121353953 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107692904 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135810179 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096706954 seconds)
  done (took 1.661517699 seconds)
done (took 131.831421461 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103760495 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40315899 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072144153 seconds)
  done (took 1.604434928 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107024648 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137800913 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110048098 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136796684 seconds)
  done (took 1.592592007 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097868803 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127178744 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109764877 seconds)
  done (took 1.430733687 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323174466 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189869705 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.163035342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105788141 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128890963 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10319587 seconds)
  done (took 1.434882922 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097791308 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127630553 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098668855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129134053 seconds)
  done (took 1.552617499 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094337643 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071681718 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102720118 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075252212 seconds)
  done (took 1.438175554 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114238724 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131710086 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105205875 seconds)
  done (took 1.450947513 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130480949 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13876213 seconds)
  done (took 1.369576647 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105891711 seconds)
  done (took 1.201750155 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118373663 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169785856 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190311089 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165522378 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233277322 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165560333 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142235504 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114359972 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130590068 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144728131 seconds)
  done (took 2.67437476 seconds)
done (took 17.627454307 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102760199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519203196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413926308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11746258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723154046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381049036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039474784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145968196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167433942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093827285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13860281 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675264054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.070029861 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472888776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.026582974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376421555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678304926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121577141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119821982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09441906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027882848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093270351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121384567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092682649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702852982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425953204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095666285 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374790194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093420696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125883998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38360011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122979211 seconds)
  done (took 17.227624555 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095300786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174253245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099323891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138243908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123223769 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095226686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123907865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094601403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179933748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12351155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111902416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121015908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126812555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095519771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141839093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09292831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124469875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093897937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121221633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122208274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112194572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120556232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094722537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12128791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095239598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134766206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094944214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120792827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121118726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098951892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127330169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095237183 seconds)
  done (took 4.837154707 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141360166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183276215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128261972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127365493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169119389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122972385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199807767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118849724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182650983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122945958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140137568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094020084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155956805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122617161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114453379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120635727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097710539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121545863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093455754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121970724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140553752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094008177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12284593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094240128 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1227412 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109056348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123202966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121492521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09402728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126924349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100973739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122956787 seconds)
  done (took 5.159980315 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096905248 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126350688 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109445776 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138302701 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09652024 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125635076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098364813 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124371377 seconds)
  done (took 2.020123928 seconds)
done (took 30.338416532 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111394064 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127046388 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107951103 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13439026 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103151819 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131617978 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092617376 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133543189 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135090496 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101333685 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137895129 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092031815 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123206974 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093161655 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134840178 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097772162 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132334127 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102920461 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133811806 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13269298 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094843042 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133516367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103059128 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133055109 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105554764 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133636615 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137501049 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100201927 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122628659 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095343611 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12500968 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104321534 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124618019 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106238634 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126733581 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097837116 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122908245 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094783421 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133537596 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132957249 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100434241 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133233794 seconds)
  done (took 6.018880894 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107536757 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140175133 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105846663 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081346801 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117107826 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081183416 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137392712 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08082398 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11042322 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108008939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074686361 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106397852 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079804265 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10190785 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077123261 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075824156 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10892238 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075818183 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076795877 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10613883 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080440518 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073158433 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108568499 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079487631 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075123507 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110069492 seconds)
  done (took 3.588521284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10035274 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135723347 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113911072 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184213314 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160832368 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099376172 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132241309 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111635627 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137115524 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120191842 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096295586 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149679032 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110825001 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.1288017 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092123593 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136916462 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.143329291 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094182926 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128029825 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113991083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138101221 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103399612 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142549133 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133027818 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091942979 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123021995 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096809285 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134853186 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097562253 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130668872 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125868695 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096642613 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123135973 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104661603 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125811414 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094587561 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142584794 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131690355 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102256218 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121747248 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096993837 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122541123 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113816343 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168552621 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092430958 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13075842 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128282011 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102879707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121373018 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111478815 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130964808 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092502998 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124904672 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092016961 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121846832 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107170608 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123774653 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123390224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103264516 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125120202 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10583401 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125222693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109400944 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121481462 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100815923 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121276585 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093465742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120823246 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144877288 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095054047 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163282691 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093841846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124072673 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102587674 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129631478 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127937456 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093808318 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13729475 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103291938 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125161168 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102049394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124920401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096010879 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139736753 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124157398 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094527381 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12271742 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100480928 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124110761 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09480141 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136357873 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094339509 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124985941 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111019889 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121449055 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123515478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099633749 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126224259 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092901563 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134588007 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098947488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.1224843 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103271458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121549441 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124774607 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102962186 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126193616 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091552924 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126913235 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099395126 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122712556 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094078909 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125818798 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095337646 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132783133 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100664254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126142269 seconds)
  done (took 14.847405324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22757802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214940989 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.237285038 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26286451 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134544701 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115496559 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210829335 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155664118 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123268311 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160292699 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162276973 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18303284 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138946707 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179057314 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139684992 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12241805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112591103 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163476949 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215151529 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289961662 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112823558 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131945302 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162354936 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159503189 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107249066 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133496819 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140352522 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10599352 seconds)
  done (took 5.733848349 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108588713 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15535325 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098862387 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144893681 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148426169 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093792968 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128073961 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095575623 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135456099 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136581236 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093096769 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129006807 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100954602 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131916623 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123496042 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102681055 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13196727 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09461764 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126033671 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097531532 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128999387 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102247142 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126328108 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092584918 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131664588 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121808549 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086758479 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142833092 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093077947 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14424946 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120891258 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099901457 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132705063 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094394386 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12301445 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095535435 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124629763 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095567121 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12479685 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091782628 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121764644 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078593722 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121216806 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107671472 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12870876 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079954826 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129200797 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127738989 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094198427 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12042803 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096437707 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125087106 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096402115 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130240042 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098659051 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124508124 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096761554 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116023855 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100360353 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124874899 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084890942 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091806973 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127904101 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118208077 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101837763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128075851 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092392585 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125371704 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097825724 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129128244 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095810048 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125654581 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092388937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125798697 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096696351 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127842697 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097108072 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122522591 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094077842 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123120921 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076370704 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123502767 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07490863 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126301954 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092727019 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122230968 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096437656 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130041604 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138837282 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095025309 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131634288 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095279915 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122230148 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097518114 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112461616 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097723919 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13879242 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14177687 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094342368 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121770661 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107298974 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125738355 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09328935 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106146906 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100970925 seconds)
  done (took 12.970177256 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127523147 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153231697 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095481632 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142427146 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155303119 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157611803 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100930453 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131616634 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095680237 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143137351 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094503174 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132188493 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098305995 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137396474 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157842427 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104126834 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125125136 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108431996 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13165231 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17068256 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112002943 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142502376 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108522698 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124528775 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099294036 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140649591 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161640139 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107949718 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136490862 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142498546 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108417098 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162473575 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112610671 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127652687 seconds)
  done (took 5.496764716 seconds)
done (took 49.75791763 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213691226 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427814656 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.205147637 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.082588747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.24750354 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.244972961 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.22147963 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.211695998 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.782519597 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210804033 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.463772449 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.82140241 seconds)
done (took 60.271140699 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.320474298 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339298092 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468692135 seconds)
  done (took 3.954365231 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.556833396 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.136137942 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.466069966 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.205626638 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.222085993 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494211772 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.844288325 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.556947407 seconds)
  done (took 28.060048293 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205913936 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.596444867 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.840862507 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.839118737 seconds)
  done (took 18.619929493 seconds)
done (took 60.652911592 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.226370004 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246043733 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.214111142 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186944251 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.341562364 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.234012624 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.676279562 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.24127527 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.224552434 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188640979 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227471837 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.227086383 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.223685659 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.288600061 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.215144085 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207027534 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.297475717 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.864071543 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.608336822 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209963796 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.214213768 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.235530084 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208741969 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.209822966 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.244630155 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.206363041 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219271512 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229682598 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.721768297 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212198597 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.215867244 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.458987131 seconds)
  done (took 190.662145214 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207825694 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.320528977 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.412841196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.260150973 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.801730469 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408160619 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.344830691 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.861253114 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225627699 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209321815 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.509217337 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208750312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.571104811 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180656797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.217964609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.286996532 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.404583544 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541349606 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225077087 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.48275916 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.228921136 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.51303186 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.447251684 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.440959309 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.222663095 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.273979432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228464376 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.250780043 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398313808 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.356098893 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.261416884 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.224205116 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825954426 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068529207 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.216606364 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.228515222 seconds)
  done (took 151.004804946 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.49516837 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210556185 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20970225 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21089197 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210713067 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.242114282 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210288643 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.766952918 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765315788 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.722337773 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.818514191 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.620257707 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469308599 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212120606 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306255582 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223668952 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211564287 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227267945 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.254548687 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211718314 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210993703 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779595698 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228300617 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.365080332 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389036628 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226471748 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243602173 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60147881 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211772987 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24426573 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540726809 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259840967 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211992475 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.57434336 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.227512793 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328597592 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213563471 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245617159 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21160639 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491820429 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212084407 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212574474 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.215223396 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895322683 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216618622 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.770539652 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212870973 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.159014328 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212374891 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212978286 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.787415643 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.823317131 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229032918 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212543901 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214643831 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.212770554 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213142544 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244894233 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.200570689 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.3209718 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229793574 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216166371 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246668067 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213108437 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213541759 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.311992624 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232727002 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.951248108 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292466456 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32776266 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771645281 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2147616 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311189034 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335528618 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214695143 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215291909 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214008567 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213680588 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.326296048 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214873423 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214254251 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639239586 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214349313 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388677385 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230707328 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.546975668 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311786586 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215670182 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585454457 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21599867 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215786988 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970936966 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313669933 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215951237 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215641374 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214139532 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63931636 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773884046 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505095035 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220784704 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.225079548 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.238162257 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.655871395 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768574058 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.857488245 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216816872 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329161842 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392274458 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.233788718 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.216923501 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.547921739 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217013854 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276726826 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216784703 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.614749551 seconds)
  done (took 366.958757673 seconds)
done (took 711.262698673 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.869354169 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857321154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.969059493 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.856502829 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.810432133 seconds)
  done (took 10.51018619 seconds)
done (took 11.660738116 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.404543123 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403478233 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277160996 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.404439052 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245506154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.421071547 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383150837 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.238633682 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318309784 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.297599788 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318516598 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270947454 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244753996 seconds)
  done (took 18.37431263 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.545681187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534137241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28250662 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546547435 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258184585 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521523551 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418360916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428288966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438702821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252426986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232269343 seconds)
  done (took 16.607011173 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544293175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538836168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284300677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.556881814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259682939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554314609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423745774 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431494643 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432678444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251977631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232433608 seconds)
  done (took 16.658887197 seconds)
done (took 52.791037804 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.228160854 seconds)
  done (took 2.376255293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262295798 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424385837 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244812195 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.233442523 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.229725487 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230512004 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233869453 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228509764 seconds)
  done (took 11.238345889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.226335397 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228310535 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.229849869 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.229051205 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226734999 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.225957924 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226317078 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225662139 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225933361 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226701265 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.229678817 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229362573 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23029997 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229155789 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.226620859 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231152336 seconds)
  done (took 20.796559786 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228221005 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.2272059 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226948619 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227829335 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226796452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227016163 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228680069 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226557984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.226406306 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226769281 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228652937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.22754951 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.228947045 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227599142 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228156532 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22847063 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227211286 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2286565 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.233498716 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227581709 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229232424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.228711516 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.230333867 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228954103 seconds)
  done (took 30.628198623 seconds)
done (took 66.191895982 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.379487923 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.008825876 seconds)
  done (took 9.540416843 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231121545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230571979 seconds)
  done (took 3.616011265 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.23113127 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230782332 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230767867 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.23035674 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231372723 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230557525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230391967 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230071641 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230769556 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231030299 seconds)
  done (took 13.458976678 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231116984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230401858 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229706343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.23198244 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231633942 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228580354 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.23148187 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.231786865 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23103443 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229260545 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.232774828 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.230182064 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.23197586 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229951912 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231469362 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229924038 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.23027744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231050227 seconds)
  done (took 23.307405978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232881573 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.233247169 seconds)
  done (took 3.618639248 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.230837667 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230665302 seconds)
    (3/7) benchmarking "month"...
    done (took 1.229695867 seconds)
    (4/7) benchmarking "year"...
    done (took 1.23004664 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.230560193 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230391225 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231031728 seconds)
  done (took 9.766206693 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233692762 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.414962962 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499007023 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.851702705 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233828738 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236641449 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.108965413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.236345845 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240111246 seconds)
  done (took 14.208804646 seconds)
done (took 78.672111342 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.248808005 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.244813086 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.421825491 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.238326769 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.249367548 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.57263212 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.246275636 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352936268 seconds)
done (took 37.733740564 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.237729216 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.027913122 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.033254827 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.228211396 seconds)
  done (took 11.444255818 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207891181 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.163890257 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210211484 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.267046013 seconds)
  done (took 18.004534038 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.27287799 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567020625 seconds)
  done (took 4.994690251 seconds)
done (took 41.839806699 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23611841 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.235389806 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231211794 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23388571 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.232629688 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.235329885 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.23270675 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233377853 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.235096651 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234047425 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.235283183 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.23466183 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234170766 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.233238729 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233657006 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23316036 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235482215 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232283913 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23520041 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232434243 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233369002 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236267612 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.233794536 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233830809 seconds)
  done (took 30.772801386 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.236200226 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234643979 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235864016 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.236726239 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234392871 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.235203257 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236562497 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.233333289 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236113631 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.235543466 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234019371 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233996595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.235988275 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233198589 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237101817 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233870697 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237675741 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234667459 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237387457 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234105999 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237205412 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234577191 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.234838397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23769706 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234767777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23319364 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236907406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234896323 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237017056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235102145 seconds)
  done (took 38.220743663 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242270189 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244264486 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237903655 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.236850068 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237719664 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236816594 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.238608399 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.238185913 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.238650558 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237654907 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.237875678 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.237873132 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238078745 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238217997 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239376666 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23867062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237879267 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238234436 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239386559 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238837233 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238947306 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.238357226 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.237928493 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.239117324 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237239909 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239089305 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239698714 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.239528355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239833067 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238938858 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239569225 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.240043684 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240234425 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.239389678 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240021447 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239110447 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24470994 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246940341 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.238598559 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239639658 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239333038 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239253374 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239186454 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240447254 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238817671 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240739924 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.240172058 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.240524224 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240172963 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241222156 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241363836 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241649601 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.24069733 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23990278 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240324792 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241089051 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241315056 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241936773 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24058662 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240785085 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.240711376 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.241776996 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.241903455 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241789735 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.241554043 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.242375142 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.24128605 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24160017 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242419086 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241668543 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241300502 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241898454 seconds)
  done (took 90.440080926 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.241579926 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239466646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.238975681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238381445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240756027 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241486458 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239071601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242405106 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239226227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242963616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242510182 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24018889 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240571162 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244227548 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242901522 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.240242277 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242663495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239749035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243943276 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24447867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244473942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239825765 seconds)
  done (took 28.472287236 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243461493 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24548283 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.241316177 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243715023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240120479 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243283494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243796366 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246048555 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244305066 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24195534 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242043671 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244237727 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240663048 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241385153 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241345731 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243128479 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249504343 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243401494 seconds)
  done (took 23.543097198 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242422628 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242477337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.245507102 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243002159 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242697932 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245542845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24226658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244837497 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.244038584 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24177406 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.246239491 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244704164 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245486934 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243015132 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244797645 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243638525 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245728507 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241802383 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24540985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241618905 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242620707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246460234 seconds)
  done (took 28.531056575 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245631131 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245519189 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.241367242 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243710335 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242809416 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244972475 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.247089085 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.242840744 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246769864 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.247143018 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243522011 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246230603 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.245732507 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243699377 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.244157305 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244800522 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246021461 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243994902 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246694033 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245418149 seconds)
  done (took 26.063681969 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24624957 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247340416 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247707047 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24740393 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247006389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248219538 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248153265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247682698 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248228917 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247676147 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247670817 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247901519 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247884197 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248420921 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248948234 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248895468 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248416214 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248919124 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25049001 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248567242 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249693626 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248447588 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249548262 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249334558 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24828992 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249475534 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248741553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249106539 seconds)
  done (took 36.121112707 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249789251 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248872676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.246552654 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247859393 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247484456 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24741271 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.247094034 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246023727 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250496915 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247545711 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.248384622 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250831088 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250044714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250236833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251674506 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250080993 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250170943 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248049813 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248317252 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247466954 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.25079744 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250652124 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25138529 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2485706 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249088439 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250645188 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24917754 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248248708 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251240207 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248838485 seconds)
  done (took 38.643017422 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.269821212 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269200393 seconds)
  done (took 3.70966905 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248972484 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250542691 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252439559 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248390253 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249248667 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252579206 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252668088 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248303263 seconds)
  done (took 11.174130419 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252761132 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252208882 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252716881 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25256328 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252452129 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252315995 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259180091 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272098813 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252974949 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253595122 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258795532 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25923642 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254501042 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252745526 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252654627 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255331939 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253468715 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253712375 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253764669 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254385529 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252621199 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255325816 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256658258 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251938462 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.253715082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263894694 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.276912958 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253893127 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253554943 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257783844 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254074247 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.252160216 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254087295 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254287558 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255802282 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253728859 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262089194 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274048165 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260506742 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273173824 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255167531 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252349647 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255118728 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256493869 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256643884 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255362433 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256338411 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253311831 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255169144 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258346617 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261552116 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25491889 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253238396 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258197189 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256291254 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261837718 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275148349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259041945 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.264613939 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.266156419 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.286365915 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280018001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25678619 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256152125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266468189 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.279638428 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262365663 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272815196 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.253877806 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.258038098 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262965708 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287538171 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.281508822 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257647688 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257107464 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258055593 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256544771 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258033817 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264505192 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.278034403 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.257908711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256907368 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267269249 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279762211 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256933378 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257044973 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.257891869 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257751113 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259011096 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267731286 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276195242 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258892716 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257098404 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258459188 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259579302 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258396227 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257037242 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258872807 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256369648 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259835948 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259086807 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262557311 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.267111152 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258358949 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257810744 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.264655046 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278613794 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258324781 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264515048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260113586 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259225513 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259732691 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265221795 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25689606 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263147469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268062778 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.260738337 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261581489 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26000729 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260253282 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269696899 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284515826 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261115292 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261264835 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263590652 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.271721456 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261010534 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262767627 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261780036 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258690832 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259537754 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26251951 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.262049358 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261586785 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261146381 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260325838 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258501036 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261047193 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261281263 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260539098 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.262481019 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26069149 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261694012 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262968129 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261142673 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261501157 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.267744849 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280187146 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263586803 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262268617 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.259708289 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262070142 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26227914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.262011066 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261298215 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262315791 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.261981729 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.26310294 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263315164 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263729415 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263433583 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263573956 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265864314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263774352 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265349681 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.26391009 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261207194 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263399756 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.26503421 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26252891 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264634211 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.261845278 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266576928 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270605212 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.264930035 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262115015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.265332628 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26238648 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263468166 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264572504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267483153 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.27112594 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263329107 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269070275 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283538604 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264080378 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265851755 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.263060957 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263331597 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265080739 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266875084 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272710039 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275548522 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288278797 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265585471 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269684584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265561241 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269107344 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266980698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265271781 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265363113 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266582783 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264739958 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265303567 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268103676 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265878573 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26475051 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267948084 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265914488 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.267505839 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26544182 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265619841 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266452223 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264138625 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267525617 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26421224 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265174409 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264358757 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264228331 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266042985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267772983 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.265850638 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272798201 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.265822398 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267450725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267772459 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265718521 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267091761 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268950179 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269305062 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267079179 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274718228 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285246323 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268133296 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273906556 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28534453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268699691 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269824323 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267934089 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266331513 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270680722 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275194189 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268283983 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267854838 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267105825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267565569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270071515 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275039095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285800841 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.26840772 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271430564 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270796747 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266437914 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270300201 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270137041 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269217367 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271702608 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271604405 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270862934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269214645 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268573442 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.271181943 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269568603 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272109974 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276517626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.27459204 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268410981 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271266322 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272168938 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274858859 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269516214 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.270190626 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26998181 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282607337 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.294564104 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275398794 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290722256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272172183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275619605 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.290934057 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273325151 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26985816 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270617962 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270875995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270515715 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271583515 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270878488 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.272098162 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271832071 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273194994 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277053657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271551734 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.271273777 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272762394 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272170078 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271746775 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26955298 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.273389307 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.273548132 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271874754 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270105704 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271639916 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278653346 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291914937 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274102848 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.272080841 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272469431 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.272695235 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275327681 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272111495 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275714428 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280748133 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.27600299 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281189707 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275015708 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28252084 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.273883122 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276566284 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280953223 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.271364838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27212816 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272663178 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273562403 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280919089 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293120602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274833875 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277684893 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274273901 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274521354 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27390476 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27459933 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274867504 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274847314 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281157358 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.293782844 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276720793 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275877723 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.272192179 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274031105 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274326649 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273616188 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275840658 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.275157519 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276490843 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274960387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.273673197 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275616816 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274950673 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.276281146 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.274226529 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.27624539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282422658 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297207125 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279755179 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.27603443 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.281112262 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295723372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283559351 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.295090753 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276482336 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276193898 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.277018514 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278635224 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.276882617 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277680324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277600041 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278641434 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281491427 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.276702198 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278269355 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278159325 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277448932 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276390406 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286954571 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300400322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278259065 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282271704 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.276265372 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.279611857 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281631924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.277154314 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275852014 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280834812 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288532407 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286121297 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278124752 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279142476 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277020698 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277524545 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.278774025 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278145867 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277900346 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279490696 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278486282 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.278543569 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280801107 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278607023 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.2800948 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280412593 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280442775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288704373 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.297745782 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280079383 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27799251 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.279902873 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279439336 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279678529 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278555912 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279466149 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280719157 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280195808 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285996366 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.286213946 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.28156587 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278778852 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280201646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278634682 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.280530838 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279665331 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279687116 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279888665 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.280219156 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281333241 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280157512 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280143609 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28209706 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280127113 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281903114 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283212091 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287441254 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280752164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279157749 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282013852 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282103333 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280061117 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.281040693 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.286780616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304084238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.291182862 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288769255 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.28498106 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.281793903 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285474501 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288614832 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279993939 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.280743324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28178378 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.28211854 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.282416028 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.284964554 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282058227 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.288131924 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.301265621 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282010232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290522639 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300463184 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282609795 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.283785019 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.285476699 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282674332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280647701 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283142674 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281468696 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289809444 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.303259462 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283192623 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284126197 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282361407 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285151483 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287282904 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283878073 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284588547 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.280728497 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284157462 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282631167 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283592931 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280618053 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2828674 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283724549 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286840422 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.29015766 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282782882 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285294033 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28393205 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285037965 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284992615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284466183 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282679773 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.283628001 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283655663 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284098441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.284525222 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28593086 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283643789 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286936414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.286970605 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284923038 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288367457 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.294836811 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293818028 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28338826 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284545633 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.28567411 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287801979 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284936248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284857179 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286139798 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287256294 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287208495 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286108456 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28703522 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289566707 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301543413 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.305918026 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286398958 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287758812 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29201213 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287363616 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284774192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.288724383 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288428402 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290583499 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294281972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286902144 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291900194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305309786 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287828348 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290985677 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290620708 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.294634694 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289158683 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28677564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287998864 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292460307 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304435559 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288325796 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299340179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316753351 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.307660497 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289077139 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.289283718 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288155813 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288257394 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288902459 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288908891 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288490292 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289517902 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288062601 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289469454 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292874811 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289240651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290237376 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290558435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286722815 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.289443283 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.286870343 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288170235 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.289651084 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289689556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288734502 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289357767 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289705586 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302151496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.316163882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290978755 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289867498 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286707454 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292739648 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292495729 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300301864 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298409844 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289262994 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290145412 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.29003335 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290318617 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289184598 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289684393 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.29001458 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290119668 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288934143 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302408787 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316002359 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.295162512 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290547778 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291643885 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292088672 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291724567 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291423816 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291462731 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.291795433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295054456 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294455068 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.292303246 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290984726 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295309531 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300294455 seconds)
  done (took 761.01039605 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290357578 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289995145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289873729 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290079249 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289529025 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289964146 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290215816 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290108978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289422293 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290465986 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290664403 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291395201 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28991031 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290708589 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290764428 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290766829 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291399827 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290614037 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291757729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289425264 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290986371 seconds)
  done (took 28.306797255 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293532711 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.291171853 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290217485 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294613762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291805591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293045399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29121277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293500428 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295539098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292574841 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293967425 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294190268 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292565256 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292647656 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291770653 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294656794 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294853953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291879457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295000775 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292241021 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295051504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292566116 seconds)
  done (took 29.658837825 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.294742802 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294717483 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.293585842 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29270505 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295556178 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.293037605 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293568808 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.295743782 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296024619 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.295043227 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.294486265 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.296765529 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302218823 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.30098147 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295856342 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296068556 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.440434684 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295330526 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295734601 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29553902 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293412089 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.300389246 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.313545548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.292237963 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.294741314 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295605285 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.296409662 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.296919671 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294760624 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.297781029 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.298556277 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296131558 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295838621 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297655577 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294959984 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.296937544 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300927827 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296690671 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.294705256 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.297608492 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306829073 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.318142917 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296791125 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302013213 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.317178428 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.297181216 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301862806 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305033829 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295826726 seconds)
  done (took 64.956331529 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298517145 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29765813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294596468 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297629299 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297641389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298869567 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.298684962 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298053558 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294731401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29655466 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298364052 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.297311724 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296706364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299450062 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29992141 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295718468 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296534159 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296057585 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.296288291 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296693957 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2964111 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299728184 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299802258 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29752137 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300303287 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297076198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297715042 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299462422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.297073457 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297728412 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299682934 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30030225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300814328 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.297503234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297521225 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.300426247 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299514556 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297662901 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300096838 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.297811647 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301583313 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300177045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300729361 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.301885525 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298390154 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.298756104 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299153839 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298882395 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.29926674 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302306985 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.302019352 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299859237 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301519486 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300031887 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302052737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.3019251 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.299872893 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299318504 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30233336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.300801425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299663017 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302159484 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.299586463 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.303535444 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302132522 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.299261843 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300520947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303217925 seconds)
  done (took 89.555514003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302744814 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.300130949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300645524 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301594661 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301039404 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301143895 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301106014 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.30105258 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301906206 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301201224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302896451 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302047585 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301637617 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301834894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302697088 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301819985 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302236175 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302886863 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302045335 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301809854 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302514388 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301936426 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302583584 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302952998 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302665918 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301654171 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302315001 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303535017 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303135871 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302956606 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302144696 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303138222 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302405508 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302321103 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304453881 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30294307 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303549207 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303105059 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30232655 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303517657 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303768105 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30369657 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304196417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303892172 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303741557 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303795502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303070684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304704118 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305925574 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304210392 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303698299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304899297 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304607008 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304404967 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30383934 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30488113 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305577572 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305070951 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303537904 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304489156 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305607101 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305842002 seconds)
  done (took 82.007522858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305825977 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306140372 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304770801 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303959155 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.307484016 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303192002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306420427 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306598725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306399638 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306004257 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306984539 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302837689 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302902238 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30615532 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30444181 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303781364 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303864225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304549789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307023904 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304167087 seconds)
  done (took 27.323898545 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.302768177 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307678298 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304456667 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303916477 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308046497 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305294175 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.307703263 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307615799 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304139108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307932189 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307131062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307434254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306272103 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305866008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308474614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305757682 seconds)
  done (took 22.120389084 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304849803 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307244329 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.306267662 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306025411 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.30487857 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306064607 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.308104401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305818212 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.305689941 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309757486 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308509476 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308969283 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309466639 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308125321 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305751617 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308568532 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.304315277 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305142939 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308562578 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308005891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306806617 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307346502 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309882375 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.30912488 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30714574 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308101091 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306020494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.307366071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.307632049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310340612 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30766604 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.308279822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307091928 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.307294492 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309603702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30825816 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309817819 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310609186 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310845422 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311055611 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310501326 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307266689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.31104394 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310542839 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.308149052 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.311973315 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308129467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.309781235 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309436735 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307794756 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.311162218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311763568 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311286932 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312569985 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.311446715 seconds)
  done (took 73.18595412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311919593 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311061133 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31065376 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31178276 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310850601 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.309465126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311428456 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311041497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310542377 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312380601 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310784373 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313372749 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310541113 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31309164 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310591992 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312940795 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310513748 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311291858 seconds)
  done (took 24.830334093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310123424 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311153062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314378926 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310875381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.31018433 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313676282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310783436 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313667817 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314148437 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311995793 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311043152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.313572823 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313393713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314207031 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311343055 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311579388 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314469342 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315417117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313359489 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310355575 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315240014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314232391 seconds)
  done (took 30.105614243 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.312583558 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.313133978 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.311674585 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.329722225 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332123921 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.336240879 seconds)
  done (took 9.16320246 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321542836 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314547994 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312466719 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314973475 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314446672 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313097816 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312205993 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312897105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315945735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313042851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313169539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314637136 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316152463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31236133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315401605 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315055698 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313649125 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313014949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313903855 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316629034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314706667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316316922 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313852432 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313470126 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314052127 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314008787 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317523146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314544631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313023163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316922451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316793107 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313295044 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316244138 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31559369 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317071518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316616287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313715708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316571956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318529221 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31479538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318270722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315499505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317485553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315330845 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318137748 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314961651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315359726 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314719173 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314388328 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318812514 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317926843 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314389766 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318419269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318072546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317802381 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318367757 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316383851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314962537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318145697 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315773123 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316406479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31918613 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316967905 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316051276 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318817062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314831003 seconds)
  done (took 88.085435332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316680757 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316456498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316406726 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318018181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316185715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316569568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316942618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315562864 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317122513 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316975512 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318791222 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31672604 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316789279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317852142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31741301 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317450953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316931152 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317430787 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317485644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320659602 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31798852 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318188899 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317580201 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317754402 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318439588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320108557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317119632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317608761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318304983 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318794984 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317167865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318630256 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317329243 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318338834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317577107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318694437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318556301 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31712945 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318592497 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321674814 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31846511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322226181 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318817399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318573951 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318992242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318738436 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318258874 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318916018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318272599 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320800297 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318653024 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318621402 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320220088 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318171917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320409055 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319034157 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319019864 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318505855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319513082 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322438471 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319666653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320184252 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323068063 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319791693 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320005889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319772905 seconds)
  done (took 88.253733047 seconds)
done (took 1775.414860646 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.330044122 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.428107359 seconds)
  done (took 13.993251534 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.48400432 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.436801195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320604611 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.354646448 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321611026 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.315451985 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.33993261 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.321222543 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.320859562 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320811373 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.320191315 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.5099141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31606822 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322357789 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.321489943 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415584905 seconds)
  done (took 42.984667375 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350432035 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327875421 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445946854 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.349327961 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349309386 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.519580165 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387473856 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326398537 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506301939 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369420184 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.97006897 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349975049 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326774821 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.493360143 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344739472 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.519846772 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593083841 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.974633443 seconds)
  done (took 30.742106126 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804412136 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.333769147 seconds)
  done (took 9.376603452 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.323820838 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.350843182 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.362380389 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.361379618 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.375079869 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.35973642 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.380179106 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.394637166 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.345261007 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.344704485 seconds)
  done (took 64.844780812 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.347417471 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327200557 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327796912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.325975399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.319163447 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.338149307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.326416231 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.331202956 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.263580683 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465819705 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.328203679 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.33529054 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346607377 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.329095885 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325895221 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.364090284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.482384163 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326592303 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325169329 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.333476065 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327947346 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417275033 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.370698068 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.32619197 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46076487 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.269240505 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335867754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.334318899 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.46268571 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327873768 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.327422053 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.327607318 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.328221683 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.94803262 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.821622314 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.345272653 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.353511074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33712189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.32800545 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.48939811 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330643453 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335289837 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.323016143 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.816587653 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465331276 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.448798137 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.63108264 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.347469366 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331169977 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392901679 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.332065927 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33081661 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359041132 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.100026826 seconds)
  done (took 111.894209711 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.380445229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.720149424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49188218 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.34618154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974635407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031812979 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340839858 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.633630738 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351207831 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323116687 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.658247843 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848166803 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.346420863 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.373478325 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.960980501 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37250697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323647074 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.086396144 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342369386 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.323786424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830104301 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324457348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.323178073 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.495968546 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363787931 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79908087 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.799259901 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.776305864 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343642933 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.323698423 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814197392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.355208384 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.336416789 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328200263 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596977103 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.70062528 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696951754 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.345905547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344818085 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323563199 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.347897182 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794159511 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.70643231 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.346431838 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325216986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814837416 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.344006256 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.32510241 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.332697571 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527935139 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.972731224 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.328669587 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.787295194 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326949937 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.636693925 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340751023 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.390952225 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828695899 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.344916275 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.414452706 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.387246545 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32671229 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32934947 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329908398 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327239641 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69355063 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.477871185 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.331196957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689731225 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829571864 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.349759156 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874105682 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.226147305 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347778223 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.429259125 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32696807 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.90108976 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845221297 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.352538731 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327744461 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679295644 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.347429841 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.659324217 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.34590201 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344494652 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841702479 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.336123434 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.372982473 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.329228238 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.34465836 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.951257353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330998108 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.626047654 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.35428127 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.328491847 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.32892178 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.33901861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329016715 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330011764 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.329084707 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870412186 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.34910529 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.309875486 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349327701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330075707 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330117144 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.330555092 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.332335158 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548545442 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.7035622 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.348967672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330752221 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.340616933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.331533599 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.521929157 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.331549104 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.656014647 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.350309114 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329770784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334734983 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.036161504 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355098039 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330770529 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.336933264 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254686256 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.535424936 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.349864376 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.332011631 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332445958 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346890585 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.64700075 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351648555 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.396325637 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331182625 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057130339 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382619264 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.344337063 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.629595463 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.335850841 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289761287 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.348838497 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33257501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641460123 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606764455 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.381311635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.34942481 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332014908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034803911 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.380579242 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480302334 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352006784 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.376803278 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532701211 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74025096 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332211843 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.933172536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.336690793 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547484448 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332535998 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63730394 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846813778 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.356675815 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333737999 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060829622 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.045800306 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.980294844 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.333751374 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.668732455 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.309201775 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.800886635 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.333547932 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332610622 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.758791977 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336217381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332954497 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.334191562 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.333098906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.474238816 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508553823 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.672255998 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333418219 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804230381 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.397518997 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336198417 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36271575 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.335878598 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.682316959 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411907743 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336768176 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.34011244 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.333711088 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339576336 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824171774 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.25988663 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.334735949 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488120373 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991426193 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.359705993 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333459799 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.845800054 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.593433534 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866447469 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.365509678 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.663774411 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.361094476 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37371052 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933062672 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.385887918 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827757026 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.353734269 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.335970928 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944186294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354049713 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682652686 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.337270455 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336913668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905009768 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.358574504 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.338805229 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.641983012 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.356976117 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58559895 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.33840296 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.367406533 seconds)
  done (took 1111.020007922 seconds)
done (took 1386.097276315 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.338020861 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.342040117 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.324515575 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339638052 seconds)
  done (took 26.60093731 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.342034105 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339871069 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33968527 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.338025717 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343754086 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337688189 seconds)
  done (took 9.294088639 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.437557102 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33924249 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339725868 seconds)
  done (took 19.369650131 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555926528 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.721840551 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719472818 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.713138015 seconds)
  done (took 10.964001987 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341341504 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.341757211 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.340899918 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343258571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.344452833 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.343883079 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343762001 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.343472688 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.344834603 seconds)
  done (took 13.338872126 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.539641516 seconds)
done (took 86.368827993 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990607445 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.472720465 seconds)
    (3/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.422382007 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.314461677 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.325896283 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.369241474 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.467866451 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.321306261 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.031349734 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.221637824 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.199005921 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.277419573 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.604675351 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.373662953 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.151473782 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.648322504 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.38755397 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.794121197 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.32670657 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.374184362 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31982237 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.340393329 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.362619157 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.776546263 seconds)
    (25/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.443093471 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.351662678 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.462573751 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.342590619 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.768940794 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.378196305 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.725207917 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.445420975 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.392825902 seconds)
    (34/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.760205546 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.851713564 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.384661802 seconds)
    (37/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.323351505 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.768216573 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.441770904 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.633456279 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.359685816 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.003244125 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.338977538 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.449996575 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.341086502 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.384243685 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.324464159 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.368213649 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.44742234 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352122839 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.322690049 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.321243116 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.107758445 seconds)
    (54/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.076417218 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.361607037 seconds)
    (56/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.370118248 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.387217302 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.756003374 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.360139671 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.015521724 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.3396062 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360872284 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.364883927 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.473416018 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.985119099 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.456159573 seconds)
    (67/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.789601198 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.885101677 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604677929 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.324026018 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.452911501 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.160100309 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.893677759 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.399974413 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.765296897 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.419199655 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.101458432 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.713490971 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.325235092 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.084753912 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330530416 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.325728872 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.356576644 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.175392255 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.366790962 seconds)
    (86/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.743499569 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.325316743 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.399492611 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.36546558 seconds)
    (90/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.532720959 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.325830708 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.413439955 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.324475231 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.325396781 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.37384974 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.344935394 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.81940675 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457140149 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.006218353 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 5.589041254 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.614216525 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.346279933 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.624847653 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.36207061 seconds)
    (105/309) benchmarking ("sort", Int8, false)...
    done (took 4.434361214 seconds)
    (106/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153128886 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.431801742 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363597324 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.536659778 seconds)
    (110/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.742319607 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.370924853 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.332861126 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.146205811 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.357185097 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.551724336 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.258091172 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.950145945 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.441572691 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.768884824 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.570249836 seconds)
    (121/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42884648 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.345896336 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.199945746 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.376984751 seconds)
    (125/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.62423604 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.338024917 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.326042646 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.327547202 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.67174377 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.824378699 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.868671081 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.390030385 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.629204444 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374313926 seconds)
    (135/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374364845 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.860850247 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.170160712 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.349262431 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.427283797 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610635978 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.347498218 seconds)
    (142/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.728270978 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.348878974 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.777560815 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.241295 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.355366035 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.457471044 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.350920472 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.508259272 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.457376901 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161772426 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.381603885 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.381691133 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.445761438 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.032509529 seconds)
    (156/309) benchmarking ("sort", Float64, false)...
    done (took 5.71271587 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.120041279 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.189457671 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.377465702 seconds)
    (160/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.61019608 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.347365501 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.367429326 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.334697882 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.950189094 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.330380101 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435887966 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373670759 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.612297814 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.343078881 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.261840104 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79744974 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395790398 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.377369897 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.310924698 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.471478776 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.479157664 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.91343714 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.347956663 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.08921571 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.351618012 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.642591516 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.35805365 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.075673375 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.164344922 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.44591426 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.823624407 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.350365684 seconds)
    (188/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.391385322 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.350559375 seconds)
    (190/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.740783624 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.621788571 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.404494408 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 5.397905739 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.38697017 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.610442308 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.419253069 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.220941552 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.353432456 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.575349753 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.360629193 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.420317016 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.896138089 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.416816786 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.333055563 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.421869606 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.838947733 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.379756274 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.046443339 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.868931003 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409505562 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.332490946 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.473623728 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.436098548 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.028074801 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.725782609 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.037482035 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.876797966 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.380863896 seconds)
    (219/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.884432537 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.010398349 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.566797469 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.465421986 seconds)
    (223/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.481205566 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.505030292 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.183270742 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.335559639 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.377880006 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.362210667 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.340662175 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.284397178 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.33498417 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.433211638 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.341993463 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.3806665 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.39529637 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.328925524 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353462591 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.388043416 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.366820616 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.77635551 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.345894153 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.934475888 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.378444998 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.43749208 seconds)
    (245/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.911651912 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.466922942 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.785593233 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.569359352 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.544212089 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.374113995 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.902842307 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.133735048 seconds)
    (253/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.062385091 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.578752856 seconds)
    (255/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.771942718 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.335627644 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.417003238 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.391089019 seconds)
    (259/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.337751506 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.409759793 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.924860996 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.371827985 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.750763881 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.35120842 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.47572497 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.972577365 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.879117195 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.25070028 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.987189985 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.336935652 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.451303033 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.187730436 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.354174606 seconds)
    (274/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.399939037 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.383070496 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.415234542 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.35476559 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.328000687 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.337168338 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.337002455 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.460680465 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.723322559 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.355086219 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.440904048 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.488794685 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.338226302 seconds)
    (287/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.463754592 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.188611682 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.4256818 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.467750767 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386098378 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.449121953 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.344256113 seconds)
    (294/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.032977328 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.402710655 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.426372293 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.336982829 seconds)
    (298/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232800879 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.345987269 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470920478 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.929797991 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.425525456 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.423356723 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.358836683 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.383546798 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.45134896 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.360921355 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.032635009 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.463483338 seconds)
  done (took 1051.096075966 seconds)
done (took 1052.355841834 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.394194643 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391035167 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372418831 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.393778801 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.484217526 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.398371558 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.383589345 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.374763207 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.421019693 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.422696586 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.371016147 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.39885831 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.37546592 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.372671952 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.373274406 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389127076 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.526889507 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.378634174 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.39018983 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.383127264 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.390858261 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.37141994 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.422828711 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.399311425 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.377891541 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376768163 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377391974 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.393535571 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.485975513 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.377146086 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.377361291 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.386604122 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.49053016 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.374452652 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.370557614 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.395004698 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.386780588 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.383245243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380188417 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.405842888 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.93054363 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.393217456 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.37710788 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.374901676 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.376414993 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.379909291 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.376781872 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.38264448 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389478706 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390146448 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.916989002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.410548782 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.378680278 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.377772968 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.387385494 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.376203032 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.380394095 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39324478 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.394751452 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39406021 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.474400056 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.381887329 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.379227515 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.392944062 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384088861 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.953197155 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.391446496 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381216766 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.92896726 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.401003507 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.953085183 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.404006372 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.379305637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.391489154 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.410091378 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.490662992 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.373012608 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.377994557 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.384367275 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.377032246 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389134006 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393056564 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.38282705 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.378936826 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393601962 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.402931112 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.388205716 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.379459394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387579965 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.397615498 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.385140003 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.389263023 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.382027024 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375417941 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388308717 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.383528014 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.382561974 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.382134459 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384542511 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.390268755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.929870799 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417608148 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.377715546 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.376665324 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.378136581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393691712 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.929105884 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.399825647 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.402137227 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.427247701 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382114403 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.480721229 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.383926619 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397904536 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.390500981 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.382903171 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.376927463 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.479654676 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.922288751 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.414390724 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.381917784 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.37801739 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39830528 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.382570399 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.378494183 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.496407332 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.383086152 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397158814 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.502276359 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.39332653 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414208959 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.379373292 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.384555743 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.406882559 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400474517 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.412531717 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384544763 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398553051 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.395677563 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.379061671 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.392260333 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.393628642 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.38415148 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.389784521 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.37809084 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.407433436 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397884724 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395045313 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.404160697 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.503376354 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.380026669 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.483020466 seconds)
done (took 233.935833407 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440300878 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.377979197 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4707633 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.376806493 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.479630623 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.481321129 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.375552339 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375877938 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.375862975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.799469785 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.376839322 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.376717435 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.370592479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.375233395 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460099337 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.378317263 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.375480555 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.721230162 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.377065675 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.448422528 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.378720358 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.377209847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.378524921 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.76180349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.374605073 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.377041091 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448433024 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.379321619 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.763439874 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.37293288 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.377877622 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.725043617 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.467390906 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398190321 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.389879979 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.386959734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.480612264 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.399263559 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.459577415 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461539643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.474813458 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.418123403 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.371982962 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.37621813 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380546579 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.381587455 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.377168445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406646712 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.377988174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.376810717 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.761588667 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388886542 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.387551673 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.378986828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.378349744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399979067 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377594903 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380309644 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.469014204 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.380194547 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44145355 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.806017423 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.764336776 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.381234788 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.382466965 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379143708 seconds)
  done (took 151.659435633 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.445881856 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.45463102 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.496816832 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400786704 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430621809 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.50208811 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.401385644 seconds)
  done (took 11.422003327 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.387527043 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381633482 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430247464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.430823561 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.383028892 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528876958 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383699991 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.3932743 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.381297042 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433847371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383654877 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.382307787 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.389624134 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.378920102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.430477641 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.39340931 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.497632004 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384449887 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382666161 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.539124955 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380557593 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.390721205 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.433823494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.394099961 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383747459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389180448 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.949867541 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383601889 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381463993 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38461818 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381565698 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.420514913 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384132655 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382979773 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380938998 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500039776 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.383522486 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38133262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.386486397 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.380696885 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383876149 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384783308 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.38502151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.382266861 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.385661558 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406147891 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.384906682 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.385817731 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.384743048 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385885079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434525937 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385469656 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.383299404 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.38345784 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439479774 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392317218 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384329928 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.382006166 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38627744 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38439209 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.540416382 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431148772 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.386485567 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43353949 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38545226 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387808672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387541568 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.386651121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439267373 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.386615505 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.43304629 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383607671 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.540824535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.408907064 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388967684 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.388800323 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.387919985 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386437058 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.379571221 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.392286476 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.384112246 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.387164856 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392729788 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385369575 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385102401 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.488544963 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493740067 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.383827909 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.399848141 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.391914848 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.384232681 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.439284175 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387589152 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.385189232 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437837751 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.501500849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.440812909 seconds)
  done (took 158.193617794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.391934829 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.39633945 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389368472 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403058932 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.38812564 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.386615198 seconds)
  done (took 9.65169587 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390388585 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389052307 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.388399355 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.389209027 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.388059457 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389231659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387747036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389774554 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.392796262 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388958606 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.390268697 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.389634841 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390681234 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.389377004 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.388801891 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.390383616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388346329 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386978841 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390030441 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38896741 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.493901212 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389366564 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388782218 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.389529893 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.395486262 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.389985916 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39738539 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.391365845 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.390403938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.398306108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.411072745 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391480846 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.390757401 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.397130564 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.394942329 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.391906983 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395006542 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.392191425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387918786 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.390920656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.392451671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39221659 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391361054 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391605927 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394089593 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39624786 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397490928 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399367104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.391991809 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39327429 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.393612845 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392461864 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394337765 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.394017394 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393068067 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.414103562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.397961719 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.392775199 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.392251965 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.393018814 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394616026 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.395462877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394078335 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.397174191 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391478244 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.394082949 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.393069621 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39765795 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392281846 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392660789 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394591731 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.390875847 seconds)
  done (took 102.680266144 seconds)
done (took 434.899261803 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.531144861 seconds)
  done (took 7.833485594 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.578146928 seconds)
  done (took 7.881522447 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.535645028 seconds)
  done (took 23.842991606 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.434717754 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.482375682 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.406413047 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.413067153 seconds)
  done (took 27.039427216 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.501855726 seconds)
  done (took 7.804748331 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.386563038 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.385926649 seconds)
  done (took 14.077957974 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.573266057 seconds)
  done (took 7.8762773 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.050525727 seconds)
  done (took 8.358366387 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386817789 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.411832254 seconds)
  done (took 14.373814769 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.3672506 seconds)
  done (took 7.670994365 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.044944538 seconds)
  done (took 9.349882604 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.393814716 seconds)
  done (took 7.697249053 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.385627718 seconds)
  done (took 7.688619724 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.031652423 seconds)
  done (took 10.33519847 seconds)
done (took 163.139423375 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.387500291 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.386831028 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.38872244 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.386865004 seconds)
  done (took 26.854038708 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.427675228 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.428576559 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.430204068 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.43867949 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43025852 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427501587 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.419811868 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.420026738 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439203254 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.431228618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.430055121 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431370343 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427897672 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.421301362 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.429281801 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.429764303 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439716151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.431154381 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.420332304 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43154292 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.396544022 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.439429937 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.431637187 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39674086 seconds)
  done (took 35.55279493 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.922584408 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.467778888 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.550802463 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447795067 seconds)
  done (took 7.693560147 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.4473205 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450407362 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461281445 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.502048426 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528554976 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.458489787 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.423128191 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41729571 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.403631655 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.45129459 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525269003 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.466509743 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.536372852 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.396641279 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.588433127 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.396613798 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.397365273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449303571 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499098885 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515491457 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.397468358 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448393135 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.455150674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.466384671 seconds)
  done (took 36.386764415 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.396968525 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.415943638 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.396760478 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.396212448 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.40535163 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.397262509 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.398815081 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.399802983 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.398123967 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.404651797 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.395175162 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.410531645 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39710626 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3976413 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.40262649 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.398511292 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.402855871 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397066735 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.397733081 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.403905999 seconds)
  done (took 29.318694285 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.391230147 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.249343676 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.743235582 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.646869518 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.389756836 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.390648668 seconds)
  done (took 28.117449579 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.475907921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635465178 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.398875781 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.794073248 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.88549602 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417499489 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.398288801 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.660751346 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.013948727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.016767249 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.460951866 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470476718 seconds)
  done (took 20.936203218 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.39831219 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.392442706 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.413096733 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.407816411 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.458690773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.42010981 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.404603103 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.392064663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.465963592 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.48214561 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.420861497 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.460212535 seconds)
  done (took 38.425601338 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480517953 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442973308 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.552091104 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406475346 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148170723 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606693901 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423315195 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846662895 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.399363831 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668750929 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400799979 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490638646 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653433449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398497167 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3952678 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.464752271 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648623722 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932052179 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396791889 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762664291 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428075637 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401957232 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.770948076 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.434075744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60815709 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.544767121 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656799903 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.174023953 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723747194 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414927642 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405529314 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395830135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669758364 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121788044 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519743099 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40688407 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399326039 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.94573999 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.398200984 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.751593017 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420605187 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40577471 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408361059 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398081201 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330889381 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402476005 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856956647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403891324 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.107649113 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398538069 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408669928 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492135156 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.402489016 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.971007048 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431391989 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.425370836 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.394260679 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494272311 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987803564 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235336282 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411774571 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.339488638 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407724151 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.675330832 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080103335 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.52022621 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.402043049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402413865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333719059 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.671389765 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422224868 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537827283 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.422672529 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061832797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164396137 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419513762 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337563465 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996905879 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416190487 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340784418 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630210285 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177058131 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339990838 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.352574375 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335343638 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17788019 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40947436 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.884219952 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422421659 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867981368 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.41274823 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418308333 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423385069 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626252294 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.278884475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401185991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.406210234 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519732179 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422204838 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846450899 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338323519 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.411955292 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659539071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612854229 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400167614 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.482327952 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652419216 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417203748 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.422420629 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413000992 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418993555 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.039138996 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437602067 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241131537 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425111126 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179705418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212415181 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415982243 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.509764405 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412353292 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664460018 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.233474437 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561499881 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470303355 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407397983 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402545989 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.786267376 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004548935 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.561631492 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.397863488 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409492592 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418652087 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.40137203 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364838182 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.402568805 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4041987 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.188066007 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.627479672 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406270491 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685405454 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338480706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541530177 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418233912 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.62755062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.700263082 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.421389033 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664868691 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416512223 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424453395 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421115348 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423883565 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505183649 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426228745 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.410381684 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668312638 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.407036242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408659769 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.815374531 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.18826604 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413411002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.410785129 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406479269 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066292092 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39692854 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408448302 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296879566 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.418922357 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474065649 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411613075 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.416397792 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.434802767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435382408 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.429143873 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401828716 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637434858 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417620499 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.717869044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490875259 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.620645201 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047573128 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438276515 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.340315808 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.117045066 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.09925121 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406375357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.596784499 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406944639 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417652357 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417954357 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411224446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043785836 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4280591 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.722426305 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.41928732 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417626466 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411407815 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407739089 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.397957802 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163944443 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420729413 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424479205 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551285011 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.420751816 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34114583 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.924126018 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412030621 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407473 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.185826039 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444170694 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.715345013 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921334722 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670375497 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41111426 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42051565 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.826112972 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.45018769 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.406433795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418002998 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41035996 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.434779582 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418472137 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.420623355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.752109582 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.789739361 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975100465 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207395144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016573237 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428530763 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.42354859 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298619039 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860164109 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344940886 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069490313 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617799256 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877384474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366640267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630464188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.706042039 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264618098 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421562745 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639762417 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406296607 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.421335679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421894625 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62153086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444393268 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426440419 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345525614 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.690137164 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663199968 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421086066 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489404594 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8637009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427539431 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189069118 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.492038073 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.909096698 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623405587 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.04983958 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.808391281 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422355541 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41821188 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91718985 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415550235 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940696577 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078075547 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436445196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.633022291 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352442534 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42347853 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422797632 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.407702149 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.896419495 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.426386717 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.668370637 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423210544 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347865154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413453116 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998989325 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.288168242 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418744508 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414013324 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239907722 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412984505 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744343837 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.431276598 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.390233356 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43587018 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348261788 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348125857 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.106293684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423086527 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384455935 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96656613 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.415270149 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432678631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421920232 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268102602 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672795044 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427973714 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050976092 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659193518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431400207 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436779211 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.515023456 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418236981 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.402300602 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308016556 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651194866 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415273437 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.667072733 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.585145224 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.322814979 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.513302569 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634264156 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309031773 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414839748 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720836235 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.152909052 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.42252843 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203158488 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459701899 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414694873 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434093622 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417749567 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435550528 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507922495 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427909698 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.426648111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426747408 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606554914 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439267827 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425993027 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.430593791 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509880943 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303984971 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.403750292 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.190507541 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057465767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233219448 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07486906 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450044922 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416185795 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417064337 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351233475 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56811579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946056047 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690938051 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537295637 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.416015666 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460864617 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421584458 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436087917 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636864485 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692585692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392207017 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426534543 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212617189 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.299908158 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430916834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.630466512 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975129881 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038093141 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543367241 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433339885 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874312395 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693628084 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508745241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418871967 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014270418 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.437446419 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.909082546 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.446359771 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42629539 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573196416 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429084979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15221625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.454827184 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.579535084 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.193164344 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845365297 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685446213 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.954775746 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.4306537 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062956279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.206061018 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685235187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490535317 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431051843 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.533897573 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571892683 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.422148596 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30321605 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420418816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268243135 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.131746084 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.430852972 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070701947 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705456018 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.417692089 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.425430716 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444035396 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.4313571 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645927147 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2090486 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647709957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434150991 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43068424 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.995000657 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064160138 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453768216 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355592937 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425503852 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701178748 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686613958 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446425886 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.874206177 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.133506961 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026446314 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.397743693 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445645704 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424269013 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208883374 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076257311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.461293115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98597504 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084253231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428360354 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702782225 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.42895982 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423708468 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707413045 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427171402 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437525407 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44158108 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.06512692 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288891687 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.439604427 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88944773 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.366741276 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651472267 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450110542 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385218013 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424383488 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.619721268 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430274939 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543581598 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435927492 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.429382446 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425389981 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.163596448 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716468879 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.430043318 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.404463083 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.426607042 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436900876 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527337708 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679345636 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43053255 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.098134792 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.777275055 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684026321 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435827143 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.41096674 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428970915 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425937879 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151238357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444030531 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440116421 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047590811 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.436470298 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.443386502 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429777254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.642038821 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637043197 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442265892 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446478083 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427274084 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447734458 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.325829292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199567734 seconds)
  done (took 1690.01215581 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447656494 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.479500765 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.471190647 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.519206941 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480393781 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.520048143 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.436682138 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.526515632 seconds)
  done (took 53.219802983 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.440398544 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.585992673 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.459841355 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.437818362 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435680034 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.438446074 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.930835414 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.446186109 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.436005156 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.437097918 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.440268068 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.429356165 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.149443577 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.441089585 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.43903204 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.429616267 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.436152945 seconds)
  done (took 67.15815527 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.43009964 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.907652491 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.470266821 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.433940694 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.058659258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.463475448 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.804604985 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.502871925 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.43205546 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.822457297 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.108698409 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.475873512 seconds)
  done (took 82.251077061 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.437256566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434941258 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.436816095 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436698095 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437178727 seconds)
  done (took 8.523548001 seconds)
done (took 2125.759519632 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.677846231 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.217096573 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.143879031 seconds)
  done (took 5.703707027 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.576220015 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.626900268 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.804269936 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.779511819 seconds)
  done (took 8.127780094 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.712027929 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.8191837 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.618156933 seconds)
  done (took 6.490045971 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.005362505 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.435018639 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.456454479 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.429347185 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.43509697 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.435860774 seconds)
  done (took 20.642559746 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432404184 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435542923 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433815917 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437973064 seconds)
  done (took 7.081114528 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.408751906 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.150911038 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.411108139 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.428615304 seconds)
  done (took 18.741620242 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.178970253 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.191632899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.178511723 seconds)
  done (took 7.891412845 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.430084699 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.279711783 seconds)
  done (took 10.050810943 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.737232314 seconds)
  done (took 3.078101945 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.566300907 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.762435325 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.561628948 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.541489037 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.082802104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.834665604 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.315698018 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.807562951 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.5012728 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.978126077 seconds)
  done (took 33.295460025 seconds)
done (took 140.025686006 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.61801304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.83440132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.632816956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.589766443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.666029321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.632908342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.775257568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.557848013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.092708288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.079578524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.628398833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.667773732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943141016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.836307957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939430492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.452826411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.663910835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.654609991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.274201614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43899201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.777020458 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.21942518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.456687597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.23995389 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.666838538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.586787659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.804545476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453095091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.442289209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.820891497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.587273185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433007915 seconds)
  done (took 199.810766885 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433671641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.450948044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452337412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451673035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.432742704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.468135753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.45159132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.450700392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.442434911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.432771861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.451395944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432386508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.43265011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455159827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.433791142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433067541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434026025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.437413452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433567859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433650507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.451535153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.451159913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.445212711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.442938052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435273472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436471291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.454038483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451194596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.452482036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433808255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435623647 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.451904542 seconds)
  done (took 207.532089526 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433887172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.452919462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.435713227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433932147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.433792337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.454744556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.455755754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.44596887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443557645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.440001384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44109019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.451853262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.435471476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.441808824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437627034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433456212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435273749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444417647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434087769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.445873291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.438540014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.446944764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.444502132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.435656404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.454622788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441002516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.434762232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.435647671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.450036306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436484836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444028193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.4360479 seconds)
  done (took 207.477103973 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.639500811 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.442981204 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445278216 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399245494 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.445160071 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.446163113 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.440843374 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.63614648 seconds)
  done (took 15.243919269 seconds)
done (took 631.412219479 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.871168353 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.558654817 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654218308 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46518662 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.331135168 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.483381305 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465621601 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.648173912 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.410901016 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.659239717 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.812128823 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.481019308 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.961789838 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464174613 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.740213474 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570241632 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.367285388 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.494457753 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804388443 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.07233152 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.741934811 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.99265259 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.672892625 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.389943267 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.976720251 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.989379545 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.26924619 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.35711999 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.484021092 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.80918218 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.343630153 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.537469798 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.536319079 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.534996817 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59172149 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570175114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.505330516 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531414302 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.674049448 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.751089138 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.081875159 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.222633358 seconds)
  done (took 98.231375435 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.429102289 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.42876228 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.427168923 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.427562483 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.429796044 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.426604956 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.426259438 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.426887058 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.427827441 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.427412213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.427848997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.430403616 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.428287279 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.428629877 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.427698515 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.428199817 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.428331958 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.429057094 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.426894731 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.42690671 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.427932556 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.426357796 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.427108405 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.428097858 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.428608964 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.430908385 seconds)
  done (took 38.482783532 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447734863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710845419 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.883484398 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.454092989 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.446968979 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.451421427 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533583874 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.449508956 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.451213669 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449651457 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.62699593 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451551957 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.486763125 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.915668506 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.449910216 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.449773724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.458448742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.447410931 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.720716864 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.457046702 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.556922933 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.449472815 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.53667354 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.458854613 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.472238362 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448928676 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.453602581 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.97714717 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.47025878 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.62798845 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.353034893 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.540246106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.928848422 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.91494906 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.355329601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.460426659 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.451915017 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.632341401 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45350252 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.451028532 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.53608684 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.451104706 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.895740265 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.089921216 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.470587342 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.452460968 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.999049583 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.651544938 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.724921337 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458883136 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921306797 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454750402 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455220855 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451587214 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.725394135 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.457119904 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.452095729 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.004878618 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.478738903 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.538532798 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452846585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45176551 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72785657 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.451585092 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.717573225 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.453024917 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.459395993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.473942001 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.896403123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.454357771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.111251851 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.472655505 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.453656182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.63005579 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.717287845 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.03760944 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.475790278 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.732757426 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945934185 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.55806613 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.463456492 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.97023272 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.564357259 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.464865605 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.456725116 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.456494966 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.454178769 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507721256 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.537163742 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.052211012 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.120843586 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.026509762 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.563378123 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.469555126 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.454803088 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.008524306 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.476890969 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.455879364 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.897051214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112227393 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.47437291 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.461916514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.115856761 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.476404113 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.542836004 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.460041457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.905430614 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45565643 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507596753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.45532547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.46296646 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.480255876 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.542120031 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.457632091 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.456413561 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.08485116 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.658757036 seconds)
  done (took 190.948353942 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.460346392 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.448052639 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.451653743 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448280152 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.447826652 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.45558239 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.449421969 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.447181901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.452847629 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.448846379 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.446497944 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.451486395 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.452168389 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.448967223 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.461104994 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.455589843 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.06359535 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.449226558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.451419521 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.448757393 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.27711359 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.457295159 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.449360377 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.449593344 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.452438688 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.45239001 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.453714055 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.451978044 seconds)
  done (took 155.444084097 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.458602963 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.082591905 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.476373493 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.604218339 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482075351 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.455196293 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.600478983 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.520537086 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.476596676 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456422545 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.456026044 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.791586946 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.460798441 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031016826 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.676518156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.624252169 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.030488338 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.47898388 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.458039307 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457734174 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.610631844 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.471922882 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.794051192 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086012007 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.479511753 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084662415 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.444258418 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460437509 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.458417093 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.089049708 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.478518661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.79641453 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.546108919 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.525468728 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.107445252 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.050530714 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.05111201 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.62551823 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459632469 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.459151883 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.458359449 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.442173349 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.088954384 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.478380635 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.461073538 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.079004656 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.481385341 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.461610329 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46462673 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.458344448 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.525809338 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.546571277 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818113499 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094174638 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.564864106 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.473921178 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.60668781 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.855137717 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462063846 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033763342 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.442430802 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.095302882 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.482890293 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.443957648 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461116085 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466093183 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.629308478 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.608042183 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.03573367 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.480283177 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034741267 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.650769135 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.46335943 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.460597258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46332178 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.093785654 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.055903027 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.651081088 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.613836113 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.681029057 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448173151 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.460905133 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.445881101 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.547333249 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.462151113 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.098942035 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.054994511 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.483358757 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464550937 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.463947992 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.464732312 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.660219657 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.116276051 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.569331419 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.027236545 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821891661 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.803204056 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.463872769 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.528490822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.482956353 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804958402 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.465479851 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525906152 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.93921519 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.805337987 seconds)
  done (took 175.100946432 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.728205288 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.791989509 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.557960224 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.608015102 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.103462933 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.047884323 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.773043957 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.610395437 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.581860651 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.742011184 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.714788474 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.555821453 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.65526689 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.545616147 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.257629418 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.55774835 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.582563422 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.616160802 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.58597098 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.54893043 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.153895146 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.770657396 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.648807255 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.476466815 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56676943 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.292693238 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.060269838 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.011142088 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.644629881 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.899017782 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.047160758 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665484433 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.501863815 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.198479731 seconds)
  done (took 70.472256069 seconds)
done (took 730.036285769 seconds)
SAVING RESULT...
DONE!
