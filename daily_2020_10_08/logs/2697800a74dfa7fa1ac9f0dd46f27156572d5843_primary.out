cset: moving following pidspec: 29011
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.792819125 seconds)
loading group "shootout"... done (took 1.186418481 seconds)
loading group "string"... done (took 0.417331518 seconds)
loading group "linalg"... done (took 8.033849284 seconds)
loading group "parallel"... done (took 0.241754002 seconds)
loading group "find"... done (took 1.357904792 seconds)
loading group "tuple"... done (took 2.019228444 seconds)
loading group "union"... done (took 12.991464921 seconds)
loading group "dates"... done (took 1.400153169 seconds)
loading group "micro"... done (took 0.211073645 seconds)
loading group "simd"... done (took 4.527037952 seconds)
loading group "io"... done (took 1.018437674 seconds)
loading group "random"... done (took 8.891776909 seconds)
loading group "problem"... done (took 1.558471247 seconds)
loading group "array"... done (took 20.151405144 seconds)
loading group "misc"... done (took 1.527467707 seconds)
loading group "scalar"... done (took 40.691108928 seconds)
loading group "sort"... done (took 3.352689819 seconds)
loading group "sparse"... done (took 12.13173647 seconds)
loading group "collection"... done (took 17.572093998 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519632107 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120392645 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126078445 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117819012 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182903716 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118994157 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125870218 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084554246 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.844689089 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13475997 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113379525 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425962968 seconds)
done (took 5.293537767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172828551 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0929966 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081685894 seconds)
  done (took 1.334269132 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063515393 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134037402 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064986026 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065740952 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065437851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064814378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064843801 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064323972 seconds)
  done (took 1.686072752 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071435281 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066045767 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064366294 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066518458 seconds)
  done (took 1.431470472 seconds)
done (took 5.871772117 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.23776888 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098383035 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286041767 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.44269967 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.604484719 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.09196276 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073357434 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069384379 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127396386 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320090904 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102065549 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.17914091 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088047091 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.164471694 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.98695992 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119628994 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084826916 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122035333 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09367972 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130570574 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.388808705 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076483457 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07191676 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069041189 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066337593 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645396376 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668121634 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.119752092 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082838494 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160046297 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115640183 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646944953 seconds)
  done (took 10.730699537 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090611688 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087718667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067624783 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121470632 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093532716 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069842306 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074457449 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066324151 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088410645 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12098878 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086940268 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095951587 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065123913 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067500334 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072226122 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193821886 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077745741 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079348999 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066123853 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078627557 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1032156 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07587804 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076018399 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075960566 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127858091 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170005277 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094989463 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096208776 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069538934 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07742316 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113058179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125655093 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066675931 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064034798 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117122365 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095325292 seconds)
  done (took 4.516664727 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.966230035 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092386894 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097671651 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.619436104 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064826314 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147310354 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236404353 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071627643 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351863482 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146555314 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140492157 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145449471 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.11529631 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067506188 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.236659965 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114805275 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.520061937 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066523833 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065194131 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063873203 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066386971 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065984839 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062211325 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067703403 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093331648 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085821597 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.157715641 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951860097 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.286982971 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06619872 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158632402 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083214726 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.353395333 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06898526 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08028605 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.440729718 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121373286 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064665517 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166890177 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114593136 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06323513 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118334119 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076428796 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067700965 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067628817 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067331861 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070206855 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080235326 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099092153 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066185512 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063545658 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168533498 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063277822 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064971491 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065720429 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148626608 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065056541 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138590712 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063216466 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067058946 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099966037 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06699339 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084255718 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092161489 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.336014579 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083076873 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.030042397 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066459604 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.000589911 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077652946 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065347525 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06855701 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066276433 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066160919 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066053026 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.07030365 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069182544 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067054565 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107819589 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065726286 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06898566 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06571981 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063266064 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070339323 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095722353 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06626405 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.492469524 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095454664 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065002223 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074124473 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10334281 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066250258 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069480116 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066179762 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065492205 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064578623 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065168902 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067852749 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094398452 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06302693 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069745713 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111576635 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062730572 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.133103524 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068042285 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065575236 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071480187 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067856473 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069437486 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065610842 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068378194 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067155254 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063808157 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.104472331 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065731687 seconds)
  done (took 21.647043325 seconds)
done (took 39.023753509 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32700738 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076490629 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076983104 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076592961 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076749666 seconds)
  done (took 1.891877949 seconds)
done (took 3.138011794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107257886 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062785753 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.09839862 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097018298 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064958311 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062830522 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096345338 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062587839 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096169646 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09758065 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099332141 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098858105 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062461705 seconds)
  done (took 2.362288356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069068687 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079788291 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080767985 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060345821 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070400596 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079736715 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061378536 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079182844 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085379998 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079801221 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07994839 seconds)
  done (took 2.06876365 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068095716 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079837307 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081540793 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060347718 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071388935 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080231064 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060943766 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080075545 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082726347 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080086967 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080092396 seconds)
  done (took 2.060097381 seconds)
done (took 7.727061342 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065185811 seconds)
  done (took 1.28765818 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.513753423 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.196480219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065928789 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083874532 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18828132 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.089891852 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.195035 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069286773 seconds)
  done (took 7.794289001 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095197648 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071546069 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067243485 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067422133 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065875687 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067500478 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065732303 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065617117 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067497449 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067310785 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067093666 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066783046 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067780247 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066858378 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06602975 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065616061 seconds)
  done (took 2.421278716 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097110958 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095652825 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07053532 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071152463 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069626809 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069014007 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071415377 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070074803 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067537437 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068781474 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070529407 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069064518 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068869461 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060854212 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070529001 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071160081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067393375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070478004 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071274656 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072546352 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070783241 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060669502 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068914652 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069951346 seconds)
  done (took 3.058071427 seconds)
done (took 15.797090412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171089795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072776142 seconds)
  done (took 1.470070354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066832305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06669005 seconds)
  done (took 1.375502679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071600929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059194496 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076148684 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067750653 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059743222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059562734 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074698666 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05976393 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059958408 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059926622 seconds)
  done (took 1.890770537 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061525991 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066961985 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065246339 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066375934 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064567251 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060525739 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062937522 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061254044 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06670206 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059702571 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06371566 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080227388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063164551 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080944921 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062883178 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063976154 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065420719 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062767778 seconds)
  done (took 2.426107648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060015465 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06013317 seconds)
  done (took 1.373955591 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062792632 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060761248 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063081249 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062261242 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060151126 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060227813 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060187612 seconds)
  done (took 1.67418229 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406993478 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119255068 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329524404 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066785546 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07416913 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246476991 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062294524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066617179 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066842316 seconds)
  done (took 2.726935902 seconds)
done (took 14.193480333 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080221811 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.177633007 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088803404 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.513553156 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088971315 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065376943 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110725766 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.16475264 seconds)
done (took 2.557176504 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.236687093 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.305530682 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.772521014 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064552302 seconds)
  done (took 3.393453358 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327893032 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077121659 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076312944 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065764574 seconds)
  done (took 1.808771153 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065897676 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070282182 seconds)
  done (took 1.389176888 seconds)
done (took 8.089574364 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063766621 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090657504 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062202118 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06281432 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061772885 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062599087 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062242252 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06185507 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061872824 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061936361 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062150301 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062116998 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061657945 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062655725 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062119261 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062220935 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062087451 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062585238 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062651705 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061907267 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062964645 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061927838 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062380303 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062772934 seconds)
  done (took 2.807837241 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077819042 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064149978 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065132288 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065158119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065722141 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064895718 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06532011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063814106 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064925977 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063466808 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06555658 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06561783 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063791025 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065141617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06336323 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065796585 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065259931 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063959915 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063606299 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065261005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064954312 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063741821 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065046265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064701954 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065620252 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065332861 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063656429 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064392174 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065621813 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065380512 seconds)
  done (took 3.222503297 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065078342 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058691189 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05968605 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078223006 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058629286 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061065712 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059970948 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058409525 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058520476 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059457722 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058877263 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058492832 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059683941 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058205215 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058323484 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05922785 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06290796 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076733137 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059047552 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058226714 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062719224 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058392319 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058326102 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058492619 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059044181 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058056842 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058185587 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058747586 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058518587 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059253337 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058256329 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06270448 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063168558 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058613927 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067929563 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06343126 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058608317 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062951657 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059942136 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058437507 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058935934 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058437076 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058418809 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058365321 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06909024 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058994871 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059404336 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058960001 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058925715 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058137815 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058302865 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060407728 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064470867 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060182167 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058210645 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059371325 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058117734 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059642733 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058397221 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058181748 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058371791 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061990328 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059634755 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058955075 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077054952 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059517021 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067833191 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060690228 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059609846 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062174051 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058791292 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075594799 seconds)
  done (took 5.649217334 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080917955 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083659259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063564867 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063773664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059200464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059010082 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066245047 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059271377 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063426922 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078751888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059075208 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063582613 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063471622 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063011718 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059257029 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06343432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066220518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05931007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059190097 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063308635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058958243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065695352 seconds)
  done (took 2.698555571 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136452461 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064188744 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102206177 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072152476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066876641 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072519197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064127897 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064412807 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064458196 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065000342 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064661001 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064724716 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066522158 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065126899 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064992382 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064837809 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064327412 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064938184 seconds)
  done (took 2.565546114 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075159605 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065089572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084182811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064758837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064590905 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063979446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067683806 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068042573 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064113054 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064137695 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068148818 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063797978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063999895 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064528109 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063581273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063936511 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063760739 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064477585 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067447862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067481587 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066947188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06781008 seconds)
  done (took 2.746737271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075812755 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063446296 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077937565 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064954582 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059024836 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059160981 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06398733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063280006 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063951067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062827826 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063754672 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058971545 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06472009 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06341718 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064847955 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063469777 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062835252 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063372675 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063280086 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058750712 seconds)
  done (took 2.562984062 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084167758 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0617501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061693949 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080292627 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060911007 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061681574 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080115562 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061108199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061234219 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082279443 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061201841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061405597 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080269129 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080129094 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061371545 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080452142 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079911678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080330844 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061614465 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061436706 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082911953 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061772401 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080281848 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061783487 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061746591 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06123914 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061460393 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080471819 seconds)
  done (took 3.231252511 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063283154 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06236293 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062280082 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06200909 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062409324 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062363594 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062172227 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062529388 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062323775 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062085574 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061760884 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061957538 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062374472 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062206442 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061959264 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062545403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062573859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062337692 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06222465 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06253051 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062190602 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062303446 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062175981 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063201916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062612914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062459415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062419765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062667219 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061934806 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062298606 seconds)
  done (took 3.154095826 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074452047 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070945814 seconds)
  done (took 1.429229189 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061366799 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075406807 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058482625 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070655484 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06713297 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062952391 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067440385 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066525229 seconds)
  done (took 1.80780092 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064900833 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088066261 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060529047 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060907246 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063342646 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127478497 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07275391 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.07389007 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07343837 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063402195 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060607189 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07211355 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060035143 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073148023 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06149244 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069455827 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067479874 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077473419 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072477681 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05919386 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07236799 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061077835 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059117124 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060844355 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060062811 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066954026 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075520406 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072130019 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068598228 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058068141 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078557433 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058954733 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060032539 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068535434 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063169271 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058882621 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095617079 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059846986 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064076035 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058998559 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070842644 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079634311 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073044952 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076186492 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060946724 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061086901 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058912671 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060841251 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062875844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068448782 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058984066 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066848548 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058545575 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060575959 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069531513 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059524397 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064272493 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068731935 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072475741 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069986077 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068192926 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074516204 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068447902 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066929356 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060099537 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078550044 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061536946 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072013256 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073498159 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06002495 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072533538 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058880242 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058488483 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058977809 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091951351 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060988328 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060184895 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059246314 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05956444 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060885697 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069046188 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06428988 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066348428 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062468885 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074448017 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068157846 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059308804 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065389388 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076341978 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062635536 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059353755 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075154155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062559222 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058478927 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075740615 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068992279 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060694604 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059891689 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062527912 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072383954 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059994074 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057787618 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070789934 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060196019 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061313251 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063171787 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06665532 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058683244 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068561049 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06357961 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060209346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.0573916 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062804494 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059435935 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05794632 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067596013 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058626572 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072313009 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065579193 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072461422 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073063731 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068638178 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073475137 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057970176 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057063026 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075296046 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067176421 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059094523 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074862566 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058635198 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068339119 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.19129026 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061465852 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069655544 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059397131 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062021216 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059790155 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064424695 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061609896 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061521597 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064901143 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067867501 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072121864 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060895763 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068634546 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059867723 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075332366 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069618212 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064078247 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063841456 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059768177 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071048024 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066320077 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069298878 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059518385 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059754725 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059585047 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070518397 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069235835 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061803422 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066107361 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064193599 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060379092 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059191952 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060647597 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063202684 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062788334 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060403129 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067208927 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068808142 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075399096 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066534028 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068623678 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058534851 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059273466 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061105199 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059341836 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064064198 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068212513 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074167329 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070983385 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079586162 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059437405 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069338248 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060536118 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075587916 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072264668 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060313227 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063882583 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059082419 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060495368 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06818252 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070462827 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072561331 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073946074 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064158034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06400873 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059246474 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074312935 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059689109 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067691307 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068979957 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063572588 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059309792 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060564876 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068375913 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064599328 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059300072 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074658988 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064923888 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059134036 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073416132 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059675093 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069802066 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059161949 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063498389 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065062902 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061424147 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069279252 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074301079 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058333368 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059802768 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074796512 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061304201 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060876267 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067429961 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07381623 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064420326 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067366213 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070052118 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069406631 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063811381 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06892106 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060701634 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068086537 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062100067 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070919672 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059469473 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076244844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058324166 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073976966 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05990765 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070084959 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059937682 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068343702 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.06016624 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075286981 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061048031 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060143087 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070242281 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057782379 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068035443 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058265308 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067115063 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064983551 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068277567 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060699895 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067660946 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059892617 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067226291 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062594738 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065820848 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067548066 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062789425 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057924363 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066428908 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068566022 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066548776 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.197469807 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062094357 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061452844 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070076196 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061786745 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061609917 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068167205 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06417024 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065571834 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061255772 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061700408 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060910079 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067955869 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069523309 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07691972 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068647098 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067415925 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069101536 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059541076 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074957245 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059232727 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067188527 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058543309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065178501 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068853306 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059385132 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078668037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060681858 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067934868 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071455972 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068777173 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063799223 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07687351 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063451285 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067974277 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067984085 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063950571 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065926878 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061600628 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068160217 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0690863 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070088956 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060920559 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067022093 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068647393 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061179716 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067012596 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060935712 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067388785 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060873591 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059018337 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064117175 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070811658 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064012793 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064522357 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0595444 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058468669 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060460538 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065902035 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064522911 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068356528 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074434022 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058291613 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060570793 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059345752 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065529931 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077145481 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068990671 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067301305 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064082823 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059105615 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060594158 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061151086 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059568106 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062947953 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058671187 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059366357 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070334078 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061099201 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064470311 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059680105 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060608188 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069184333 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064345138 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060167516 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065837493 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059406906 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064740593 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058671279 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060983861 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064024261 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059410123 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063038914 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06994663 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075696201 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066174859 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067937827 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060466042 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066961618 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07420721 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066083902 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060483115 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068644768 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058834473 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077182269 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068548135 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06793096 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068899435 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060070948 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075237942 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063757585 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069134284 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073891165 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060072402 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064955716 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058614457 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074363027 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063712561 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058666865 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066679144 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067420532 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064913369 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070298 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059956535 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06774501 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063694799 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062724385 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060413667 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060105398 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067110417 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074079805 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059161654 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06220213 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066145769 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066851574 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062957965 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.212276265 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069490501 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061789462 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062422315 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064453056 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061501647 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071810711 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06104341 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064707198 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064412392 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059768252 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066624907 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075845332 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068858148 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068806596 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059352767 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058894025 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077176066 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063307696 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063490358 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06770913 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06931582 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071343957 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069487894 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075984044 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060330678 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065730219 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071762668 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060368871 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.05928685 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063662842 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061262108 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068331611 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06894945 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066996157 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061394475 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065726541 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073043785 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060852675 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065070294 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064670507 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06031748 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069856356 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068170879 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068588754 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06104863 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059254546 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063014781 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068468058 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067629941 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06882529 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060784556 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065934181 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072615944 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066887822 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062671212 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059262259 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062303666 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068275775 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063858778 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059437789 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063807195 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063426703 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065718712 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068909204 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064177922 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059140457 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075830477 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067546667 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068857043 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06139026 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061234743 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060478992 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059682338 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070522055 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059004657 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061156114 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06457817 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061195043 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076630807 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06785243 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07500429 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060669785 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064271293 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059301792 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068879659 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064260562 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061590641 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07007909 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060386906 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074180658 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071172757 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067399176 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059624172 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064831941 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067480214 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074143287 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068913233 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068359119 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063532073 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068993224 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061428161 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069986859 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059476259 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05836334 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069581406 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068109092 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071721736 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059117797 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06968599 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061113034 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067479843 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067112318 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060961568 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061252833 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060954097 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068694094 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063838695 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068690759 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064320689 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075647358 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060321755 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070335039 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067951493 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069795559 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072722853 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070756862 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066841981 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059340573 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065824296 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066533414 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059527827 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063874105 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.0611736 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078543232 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059930497 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059434336 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.21256587 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066576694 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060779888 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066844424 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065087058 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070133237 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.078476775 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070082457 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063492932 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060598511 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064986401 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065286319 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058970271 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059097686 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06023096 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069507889 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063641852 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.05957598 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07832989 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061074632 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068088557 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070297387 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066380033 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060868524 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058393237 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06069991 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072617717 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075196789 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063645396 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068446619 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061319632 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069268341 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059514862 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068845791 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067929678 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067976128 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05990186 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059954956 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074387573 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074973432 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064226712 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069167343 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068905623 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061173977 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.0810758 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068245874 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061051742 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070383117 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062124435 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059094006 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058753441 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060760243 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070800855 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059207003 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061618014 seconds)
  done (took 40.983815576 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097509194 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060661913 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059532855 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059517017 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069855148 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060909834 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059621122 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06036345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060357329 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06163385 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059083393 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059425757 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06980133 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071945043 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068899855 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062983739 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059379682 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060122099 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05910518 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060025084 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068604195 seconds)
  done (took 2.739504798 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065610286 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074937844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069960978 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07590508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066993536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063507432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069914737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063546942 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070222421 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068339935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070294947 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063263533 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068664257 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068030234 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068573592 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063005649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070222329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06680475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063606918 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070369117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063541862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069765423 seconds)
  done (took 2.864134627 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062432544 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060031933 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070002481 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059296228 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059084983 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062384205 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058666968 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063940318 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063910477 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064067936 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068106851 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059940334 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059054294 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06467957 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058779481 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060020391 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.099456858 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059939919 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059904788 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058549609 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064026328 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068447624 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058930169 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059501906 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063419067 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062506618 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058683982 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061472283 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059937782 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063553211 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059909214 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058640753 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068094355 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067150799 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063420009 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06359345 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06093953 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059887933 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.05916879 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059132697 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067386457 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060265491 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059270267 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060464941 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067901834 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059134723 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058722128 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067964012 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059141306 seconds)
  done (took 4.445840719 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070275591 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109543417 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064791033 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090733116 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07133702 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064929862 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064816871 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091586924 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060618226 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06051172 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072348693 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072372849 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062440519 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062978934 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064714032 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061755846 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062607 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061284744 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06411949 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061719889 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064403644 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065645605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071376861 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071245869 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062692678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06173222 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061176767 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063427312 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071397296 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064827761 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063021276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063531589 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071435709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066721012 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061582069 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061709097 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072001109 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062126145 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061606688 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060428356 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062048619 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062847973 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066116791 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072312656 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062412135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066399031 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062092731 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059957365 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071591766 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061453602 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065144851 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072837673 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062887681 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062326735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063319862 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071767237 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061956107 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060997717 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062263123 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071930765 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060331567 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062723124 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072268492 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061719709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065044821 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072475666 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066753037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06262189 seconds)
  done (took 6.006586131 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069230829 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092525453 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069907435 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069956308 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069985206 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069773584 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069321184 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069454654 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069014793 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069602038 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069437624 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106923262 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065669538 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073069591 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069804164 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069190318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068885379 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069220527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069437641 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069233894 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069669423 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069987564 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069279071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069964556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071550423 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065790987 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069034689 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069006004 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069931033 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069411969 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071898871 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068800285 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069663906 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069892132 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071486008 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069221335 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059841157 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069138416 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069493893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069144941 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06605301 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06958031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068889366 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06603004 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069234258 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069230624 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069562898 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071797353 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076093564 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069880527 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069397835 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070023353 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069343231 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069429131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070074004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076320652 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070067662 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070415702 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069715833 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070133672 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069738853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075965297 seconds)
  done (took 5.782094751 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073661327 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066138201 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077819353 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061821957 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058901467 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069041619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059104527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059665016 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065598026 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06530549 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067346071 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068506756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07001424 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067282486 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067854423 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07002684 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067800935 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068290429 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066271716 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067688086 seconds)
  done (took 2.736022279 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076055437 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077891198 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065198032 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069064025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065447074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068352844 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063876341 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064765942 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065008628 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064632162 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069265245 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069324273 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06527415 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068077494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069141004 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067837705 seconds)
  done (took 2.470637115 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06810233 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066126328 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066075944 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060405764 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064425365 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060046573 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05984876 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059151125 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059368106 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073131356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060208022 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07220805 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060010877 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05926484 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059860522 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065532706 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059824309 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060171503 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0600783 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064690253 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066124118 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061605356 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063831142 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059916768 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064731186 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067020776 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061360672 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063857343 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060025511 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060427992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065436918 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066468237 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059815158 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060271662 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059281333 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059983393 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059784181 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060347417 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06536374 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059919528 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058815097 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064723612 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060070223 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060971812 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05920433 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060781946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059208109 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065455003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060431954 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065038932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060049712 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061975395 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062810713 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066822655 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062052912 seconds)
  done (took 4.812900368 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076547537 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063821429 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059064419 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059165238 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064427627 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06504045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063993946 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064073813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06487469 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058814823 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064583071 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063676641 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064902429 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064617142 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06510711 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064632705 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059036326 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064295636 seconds)
  done (took 2.546707846 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072558477 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064372145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068615846 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064811491 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063855597 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063980485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059816242 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058932183 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059137188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064124438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063751538 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063034931 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059532834 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063704897 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063589158 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063699225 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063681572 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059845187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063703921 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059303336 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063610412 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063117643 seconds)
  done (took 2.778122285 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086520805 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082269163 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123675097 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077824095 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086226377 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070506934 seconds)
  done (took 1.916138532 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092060651 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101409472 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063835571 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063725084 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072588899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066608522 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066375702 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067084456 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071985302 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070456955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067264688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071784265 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072772787 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06832977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072826286 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07435947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067079598 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066878897 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063932942 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074143382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067229998 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07198418 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067322553 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066890391 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06698764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06814055 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074373183 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070696267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06918596 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072297867 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074444853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067137224 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071737332 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070354009 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0640747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072123909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066940557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074583587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072026925 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068351568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064659276 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072424447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071982239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068852062 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074620517 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067214241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068542113 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067640019 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067068851 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076713922 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072153608 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068732814 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072157761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074759681 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074926091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076765745 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071293234 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068580688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07233819 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070970925 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068677864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072306148 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06853752 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070694199 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074415835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068500898 seconds)
  done (took 6.078718902 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097762797 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064788561 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067155553 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070935364 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068584761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067165357 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067228066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068834006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066718443 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064429482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101393596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067553583 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068461722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068681987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067410755 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066909614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067268154 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068839603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064683999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076749939 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067264146 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06871587 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068765937 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06914239 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070329537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074155016 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066865064 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066715344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067549211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067198281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068366056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066834802 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068729202 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064023672 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068297109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066787674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067501998 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068548636 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067053296 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072079384 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068466138 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074868953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067008003 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066827474 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07069803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066766969 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067368205 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064320124 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066814366 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064687204 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070777497 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070554718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070966343 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068786408 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0671797 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067177487 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067211574 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067213009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067874356 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074342442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068897126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067550362 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076292614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066958731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066868157 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068322154 seconds)
  done (took 5.993961965 seconds)
done (took 125.291294182 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209086863 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180316671 seconds)
  done (took 1.775020766 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073590371 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094939614 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073574683 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132556887 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070371711 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1041605 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102681871 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074185022 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069993706 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069598656 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069888569 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07224605 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134332017 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070306403 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070082139 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074888328 seconds)
  done (took 2.765028453 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104778999 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179142584 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11105953 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067820822 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104628963 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074115174 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067648176 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078462879 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071643738 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.079899247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074480386 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073033792 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069702986 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07292604 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071128091 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074180845 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07030763 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074037361 seconds)
  done (took 2.929648625 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095507062 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083281309 seconds)
  done (took 1.588700965 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152429255 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103692652 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.1418058 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317228424 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127028031 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.123648288 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126509012 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122565869 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108058213 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119347758 seconds)
  done (took 2.84785853 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105662579 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172603175 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307563449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11771605 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073792234 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095448286 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11951416 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080176169 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077238263 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078010685 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079404228 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074748842 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098545889 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073895955 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072657186 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074306103 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10232839 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07206668 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073078486 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073919281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103092572 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068493402 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073484201 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072056725 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075412165 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075543442 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07019381 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068557063 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073320693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072914456 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075829968 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09313631 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075705149 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095520302 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072529106 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.096469934 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072426181 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072052151 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073361029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071682789 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.0745544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074396811 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077590062 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075132457 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070602204 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072424528 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070365633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068557567 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076249469 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069026933 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075997743 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075712799 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.095360133 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069428309 seconds)
  done (took 6.04777799 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106148384 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103307091 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068253085 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110739235 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103271249 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068497905 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101976644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097787552 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10599925 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067596797 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067078639 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067438447 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073505595 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077475511 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111790624 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105110038 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068995866 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068115852 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104521213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104682845 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067048653 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098965084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097654927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103387799 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066366758 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067568694 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066631827 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066866748 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071509712 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072421722 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067221589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073636849 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.078508395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07256081 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065958378 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066381222 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06669601 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073364394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073604204 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073558717 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072335935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066824078 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066777038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067011346 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06754833 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066501442 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072420606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073421883 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072479347 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066794536 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067209398 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066611781 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067165838 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072572396 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072058741 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.073872653 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07314518 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066513047 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066637083 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068180185 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074309665 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074848521 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073655359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067962289 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074850004 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066465915 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075823026 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078207231 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066886084 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067072317 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066843708 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066567868 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0667445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072140634 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072137065 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067771158 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067050224 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066609844 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074382426 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072467012 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06662864 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072019409 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066786305 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066550469 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066940766 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067296082 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071457085 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073679707 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06690743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066392636 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066464827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066622922 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065948088 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071554547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072981898 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073262757 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072572175 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066877077 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072839164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071884815 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066831969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072849921 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066506905 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067129116 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066777061 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072385452 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072000044 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073472088 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065843408 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065907852 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071378294 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073673362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065396702 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.070771708 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072993674 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.208001063 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067606114 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079215227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068260948 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075293498 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067223557 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075063647 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067229637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07284653 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067234477 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066622709 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067678365 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073418097 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067606784 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067360647 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067977658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067731281 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073306066 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076330005 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067561892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073561801 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072987346 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067634317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072851031 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067010792 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074240295 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067194605 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06720715 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066626642 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075610823 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067212857 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066685709 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067024469 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074637634 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067476149 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07541273 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072980568 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066590601 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07617092 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07471661 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072162904 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075292726 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067351302 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067250438 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066702331 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067436519 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071937343 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07284895 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067534621 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06708866 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072389662 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075252243 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066496086 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07257107 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072474049 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072884925 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067164978 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066890533 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075735697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075210041 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073096855 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072799232 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073325891 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066474789 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072309052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072820006 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066799005 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078840862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067436646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076477285 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073211814 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072572613 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073096873 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074298893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074818805 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075232653 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076948376 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066915724 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066525659 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072985489 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066962045 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066838003 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072839782 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067571092 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067066361 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077094238 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067265002 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075230289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066772717 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073621959 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066710452 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067842966 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077162867 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067234229 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067180877 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072435136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066901258 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07303497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074702039 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072763293 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066864584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067617343 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07278962 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073317473 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066588966 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066763615 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066843198 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07213087 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071413417 seconds)
  done (took 17.79420444 seconds)
done (took 37.17213265 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21443143 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161785318 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.196953403 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112774311 seconds)
  done (took 2.204031622 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089311732 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09666167 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073979951 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063523897 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078298141 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063839721 seconds)
  done (took 1.915696995 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.247656924 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.182879204 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167361014 seconds)
  done (took 2.045220674 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211086279 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187405795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.694859672 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297651224 seconds)
  done (took 2.937566115 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.124591639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075469688 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06166055 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071911205 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.100317349 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.128574275 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.082599214 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103777817 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072511568 seconds)
  done (took 2.32959227 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.12630835 seconds)
done (took 13.036445591 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095672322 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080377538 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200114557 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077015835 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074707284 seconds)
    (6/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.219880876 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072575338 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071055964 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167918535 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074892376 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.180521298 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.191026376 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074278378 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178686559 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.223399021 seconds)
    (16/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075923685 seconds)
    (17/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073795189 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16954841 seconds)
    (19/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138828359 seconds)
    (20/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070943923 seconds)
    (21/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077077479 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072747438 seconds)
    (23/309) benchmarking ("sort", Float64, false)...
    done (took 0.135248887 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.178631869 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072731243 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.187614683 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063756596 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07156182 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185457033 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.17352602 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121240293 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.169866383 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131735422 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195724165 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074437397 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.225926423 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088484861 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224944803 seconds)
    (39/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.176342291 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090193912 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07206582 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120300954 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178385815 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062687281 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072217924 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110210422 seconds)
    (47/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064030663 seconds)
    (48/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.149183915 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088527948 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.083337395 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.145153945 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119172214 seconds)
    (53/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071701809 seconds)
    (54/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068097865 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.22985404 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092403332 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.065178133 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070539907 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073768439 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178851546 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063713092 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073151051 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136047235 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070943721 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065091618 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104723856 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084098274 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062211955 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077604235 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077729244 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137122198 seconds)
    (72/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092288175 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149647554 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153574314 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147807914 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191424014 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209284493 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062403291 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077404999 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074700667 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074664254 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146607171 seconds)
    (83/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062222572 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0878526 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071173863 seconds)
    (86/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072312253 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.083992073 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155634071 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069568203 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.350965525 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06415387 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066002114 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122765845 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064175318 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087037165 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169014795 seconds)
    (97/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.185381419 seconds)
    (98/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.16896919 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197094608 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088945147 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090422541 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143546562 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.213193553 seconds)
    (104/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.136479417 seconds)
    (105/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065240196 seconds)
    (106/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139547171 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076104403 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071350636 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084714361 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211171358 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06423093 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.0634421 seconds)
    (113/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072447699 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129597777 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0766386 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064667819 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074695462 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07294991 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066302134 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120283397 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072642042 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070671503 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063404043 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157663113 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173676036 seconds)
    (126/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.13490926 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225269395 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064307488 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130339504 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073160027 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064890894 seconds)
    (132/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071391227 seconds)
    (133/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.08552407 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071795142 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073679936 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064667501 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068268599 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071841182 seconds)
    (139/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064768056 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073734326 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 0.135586944 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071823807 seconds)
    (143/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071694243 seconds)
    (144/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065821189 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155381481 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122090997 seconds)
    (147/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.189810231 seconds)
    (148/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06838798 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071559738 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.094631825 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063251791 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127172674 seconds)
    (153/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067985799 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064038357 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062348117 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177381278 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063527677 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063836992 seconds)
    (159/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066731735 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141268719 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148636751 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066919964 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143817049 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063708467 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074466833 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063088273 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147481454 seconds)
    (168/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.07155054 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064690377 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068815576 seconds)
    (171/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063603356 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071287603 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064456972 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121952261 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062211978 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064422089 seconds)
    (177/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075064162 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084349134 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065589456 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188795075 seconds)
    (181/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064883327 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064028178 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072966247 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064124578 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070827974 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194271109 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155277714 seconds)
    (188/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073552954 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193474133 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063988066 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062783434 seconds)
    (192/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.17376276 seconds)
    (193/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062555501 seconds)
    (194/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075254225 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141818911 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148094919 seconds)
    (197/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062851271 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074405563 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062491079 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063157072 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063903923 seconds)
    (202/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124393506 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064929963 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088854634 seconds)
    (205/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063044323 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.205251306 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06996151 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085493383 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081272453 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065495167 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.06987271 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06260847 seconds)
    (213/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061896866 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.082056891 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064335815 seconds)
    (216/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.06340638 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074910992 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079141876 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063057108 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065510766 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.077994019 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141810007 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111933768 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082211911 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0698836 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063779411 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06385466 seconds)
    (228/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061684496 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070322951 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064249805 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063942025 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070143799 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062849326 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062511989 seconds)
    (235/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.209027644 seconds)
    (236/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249473132 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086891853 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065288394 seconds)
    (239/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062471099 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069162299 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061926726 seconds)
    (242/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.158678733 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.138156212 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063385288 seconds)
    (245/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062990803 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063540904 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060869876 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063150529 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070770853 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061437228 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063658594 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069733534 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063015116 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071411831 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063140903 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06113965 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062638657 seconds)
    (258/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062777498 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062181634 seconds)
    (260/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063065235 seconds)
    (261/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064908661 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061956349 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083032483 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062535716 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062909453 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081114685 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07002931 seconds)
    (268/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065289676 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063256268 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178569742 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070088961 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086200579 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086938903 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063107986 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063158839 seconds)
    (276/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061841413 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146718393 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062676656 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061751052 seconds)
    (280/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153010532 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08471376 seconds)
    (282/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063831092 seconds)
    (283/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063911916 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074816061 seconds)
    (285/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063362837 seconds)
    (286/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063260946 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084175281 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062024294 seconds)
    (289/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062030837 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 0.158140995 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062647135 seconds)
    (292/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062564923 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073600731 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.06441259 seconds)
    (295/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.06209917 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061862658 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061655764 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084565122 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062398281 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070408589 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063168475 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062062428 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063969346 seconds)
    (304/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062697862 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063696491 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062432801 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064990308 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061795736 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063119281 seconds)
  done (took 31.974490267 seconds)
done (took 33.44124454 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0952411 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092562165 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075675491 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.086422543 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083210263 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104839982 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076836467 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081271815 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084092835 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083159637 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081637998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.076461645 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078529136 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078716601 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075812128 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091433396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084296837 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076617928 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076960163 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068205418 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077301196 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06787514 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066979492 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074702156 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07945187 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074759283 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076713634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076445548 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067320496 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067976551 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072533416 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078460731 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066891429 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078620137 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07557051 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075155889 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076331191 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079652319 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065241807 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066576061 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077497546 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066424364 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074652761 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072669084 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071057799 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073791409 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074350402 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077061611 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08794404 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070029154 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077281011 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076864551 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076441915 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071829347 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070997625 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074212426 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072200783 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087499456 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074157756 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070022808 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075935281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075023463 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073163469 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073727862 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074019543 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077295975 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077235662 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072438584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076615854 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073035393 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065102596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074203407 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070598307 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06500933 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077092885 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079521595 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063779582 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069517678 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073696291 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073841753 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064833748 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069710715 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06429817 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070251773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069680174 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07198295 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070980205 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073140356 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064535162 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074195128 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073148416 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073481263 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064302301 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077412434 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064654221 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071907748 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065527166 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065441468 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06415109 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071289693 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065064293 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069919501 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074572281 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064606637 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070722525 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078579006 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066238012 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074456007 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06432235 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064772696 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075761247 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077016579 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065561538 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070014823 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064449125 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071577644 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064488903 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065002818 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064706269 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064958551 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069997832 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065740124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070144667 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07114968 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077211081 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064821396 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070167345 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069995966 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064947544 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07175645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065646501 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065020231 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064081612 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078198338 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069325871 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065393502 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071032434 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069254956 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07358134 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064105933 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073759598 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071016926 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069367332 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072013848 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065123935 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076478127 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069320823 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069311899 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06411332 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.204588 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064408651 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065385577 seconds)
done (took 12.973076372 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065712199 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.102964286 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072007673 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080540044 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076834132 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066351912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068475577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081092145 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068623004 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084596228 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09179389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086358615 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09095261 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064303098 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065774083 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066623196 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063831091 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.073053246 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079717673 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088180477 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093554691 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064955265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.067920107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081966147 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076244731 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081011891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067196853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06639522 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068607692 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081570314 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09009361 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065222071 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066202502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078139849 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079052238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072065347 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066413552 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068826625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066199402 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065184549 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067252346 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079214492 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071057993 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06945445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066579212 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066783575 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065483974 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067946576 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078078896 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068499714 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073041883 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076446898 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067175715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065690047 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064169169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069116066 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065492427 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066103705 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065793503 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065786649 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065592508 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068010575 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067068504 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065864987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069163583 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067753505 seconds)
  done (took 6.356776852 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080795754 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094103044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077944377 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078072938 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065527908 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066602982 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06581182 seconds)
  done (took 2.151385888 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066744296 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078354136 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080987886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082058575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.074910936 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083754533 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066308602 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096454879 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06483485 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079083171 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110323459 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08259004 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069238234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077859087 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066594594 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072493047 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066142721 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076036541 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073239048 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083347884 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069512903 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09458676 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080473646 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066510808 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085748404 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06943653 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06514063 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066352076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067228545 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067364432 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067078958 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104222416 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068917498 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077415405 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063814622 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.099177514 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071549724 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069206957 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067867603 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074126147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070594365 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067327437 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064054716 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06720144 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068372756 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069228259 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064446925 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066989879 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066581628 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077208307 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064988636 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068658392 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070473959 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070010906 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072695101 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06994365 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075588905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068684234 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077168889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074004953 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067383678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073219588 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072879641 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070235623 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07291017 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070104437 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069028257 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071033966 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066475696 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06789031 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068016589 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072784163 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065280213 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067645281 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069504153 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067621748 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069379179 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082650184 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082670171 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077937472 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068194492 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067565405 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069432846 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083051825 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070134438 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066747722 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069284381 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064827789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070353107 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067082016 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072439149 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067709243 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074465418 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067907444 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070524701 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072984298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065330347 seconds)
  done (took 8.656800267 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068636616 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067204123 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067476546 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068121114 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066718599 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066681529 seconds)
  done (took 2.054879779 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087745125 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066870099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082429132 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066740972 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103737275 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072514516 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073169475 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073001313 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.072144051 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07982298 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072243631 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074650637 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071810005 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070896417 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071594794 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067485315 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072015411 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069214157 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079314491 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071087769 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078787851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070102429 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070225346 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077145086 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068683625 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067091716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066913612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079572299 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081225678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073269723 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069920234 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068401379 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073760607 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07299481 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071741554 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073806742 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065804975 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071244916 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06812733 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06871765 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074415973 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070479019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068119671 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071296976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073298307 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074165503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071162496 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069625651 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.0720524 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071377728 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071558581 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06643752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068408443 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071321002 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074291147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07324914 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071241109 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072248094 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069953571 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075492597 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065977613 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06868346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072990783 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068540538 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070839821 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071588464 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074567962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070577988 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070486705 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065724463 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071242101 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06583894 seconds)
  done (took 6.814559743 seconds)
done (took 27.637377421 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541677415 seconds)
  done (took 2.137384588 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.575780342 seconds)
  done (took 2.210599045 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.661004233 seconds)
  done (took 11.299263079 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.287770747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.310706532 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723628745 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130066643 seconds)
  done (took 3.131193657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.740083048 seconds)
  done (took 2.392078245 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232725138 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223569448 seconds)
  done (took 2.112569209 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.338823031 seconds)
  done (took 1.981179859 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129693932 seconds)
  done (took 2.769305179 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.22058244 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155756078 seconds)
  done (took 2.01490035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.484899308 seconds)
  done (took 2.123982035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.25630834 seconds)
  done (took 5.895234007 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228637773 seconds)
  done (took 1.910596047 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233094659 seconds)
  done (took 1.873832638 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.155868142 seconds)
  done (took 3.796635392 seconds)
done (took 47.289343302 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082622848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084424068 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084640516 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080565507 seconds)
  done (took 1.947580249 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072845053 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068097695 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071665211 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071678329 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069986738 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070912023 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070615906 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06821211 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069860185 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068136516 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066649161 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068298474 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071156732 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068102853 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070500023 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071559077 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068129824 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067993448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071237064 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068120279 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07101138 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068316576 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06682256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068531694 seconds)
  done (took 3.308177462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077063954 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071148381 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073767309 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069683585 seconds)
  done (took 1.938479606 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07439733 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.0813559 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082377437 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087389103 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075140742 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074555673 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080114453 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082330321 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064097915 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083559551 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066471934 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065234421 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065420643 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082803853 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080238789 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061012316 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062604918 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074619443 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073903335 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076063353 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067132958 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064182155 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075590269 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073757919 seconds)
  done (took 3.423952823 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077605373 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063934272 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076733534 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088863779 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090993346 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064001691 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077412498 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091300997 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120827392 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06387052 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069847382 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064573318 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101543075 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064717639 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078099719 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103645661 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107089033 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067876555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096128186 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064177836 seconds)
  done (took 3.289229479 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075674058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067987961 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068720899 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064553329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075553805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071965369 seconds)
  done (took 2.080975328 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068062564 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066838601 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06566846 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065568399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070744685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066158835 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064912967 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066707568 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066672196 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066110733 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065454478 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064424987 seconds)
  done (took 2.444474131 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162603861 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067801084 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069207273 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06645649 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0708409 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065312977 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079603159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067154431 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082418043 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065211088 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065711018 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067089645 seconds)
  done (took 2.581467635 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100068578 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097957537 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142629363 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114247517 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091522581 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092175456 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.155141968 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132197607 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113875849 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067825837 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084870665 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097379419 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096770427 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13051742 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109466934 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071199127 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.109219611 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078560664 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111216752 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119142092 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112879894 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118837781 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090997341 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095821984 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104725282 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115043825 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070334155 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0693297 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145924842 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097897389 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090834614 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09707334 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10692337 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068228625 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085140314 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104332407 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08147103 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113657582 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08611945 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096521071 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079018772 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128459914 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103902424 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101118886 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128566715 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090689957 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108390702 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105119071 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080465295 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.11618131 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096135709 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088585705 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078262117 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.155298271 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086819704 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.107488884 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109004229 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079762014 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08582465 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098771756 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126656651 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103732315 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111515751 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.252767246 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.089260767 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090330996 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128286627 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083371454 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098433635 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127746604 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089904184 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074351552 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094264693 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067997482 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09494266 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105102701 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089554538 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108894186 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07518277 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124253588 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106976968 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071186694 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.114761002 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096752396 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152363346 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093141315 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098210859 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089108852 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.147555065 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082743063 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078355644 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096450721 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125374506 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092161463 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093702032 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125807659 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094262099 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086466994 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073184838 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087135985 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09875724 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104579934 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098902275 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086837503 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084876218 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093992471 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072801342 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078979219 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098427723 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08369395 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121172269 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106242988 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120548065 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077164924 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10271705 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09460453 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125183768 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114384918 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082214359 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105796647 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137302904 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110895268 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083131233 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097970974 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108216028 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106053781 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095228269 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135610103 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115245913 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088852109 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092353465 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093332921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.259017652 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151890037 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087656224 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.102761498 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135892836 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111212885 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089264651 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08216654 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093766481 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103071994 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137668273 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.093645451 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068951626 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089638324 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127826839 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074114942 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096995223 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090656074 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081579705 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079599742 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066712234 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101444377 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132792456 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111899766 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096068519 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.101341857 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068269193 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096720086 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101426637 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138263203 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114392585 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095574313 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096269192 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101587923 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078020868 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130114961 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.129919747 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089049976 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089519456 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120069623 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.093797117 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102309015 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112043934 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10142098 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098324823 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138294446 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118116743 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.121478131 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102284294 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121067167 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080110165 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11380097 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073107146 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102057799 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075250054 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10460219 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078033038 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109582937 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077831481 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09745465 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067436866 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071946278 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107853092 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.240830046 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084700184 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132160773 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127772316 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080152857 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099091332 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097971956 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099422277 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106075018 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088298006 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089110968 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076984019 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078466214 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096393173 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091986971 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104850548 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077331859 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074168269 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136598792 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101231219 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088573296 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093302893 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.117205783 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087109439 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085872621 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101031881 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135502989 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.11526427 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07863505 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089270674 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067611296 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082731875 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074389239 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106845787 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072963171 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107958808 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067233191 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.126546475 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084683529 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099362701 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094610055 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125526147 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088174039 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124975856 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085201279 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105641578 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091363569 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092525912 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107433059 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09361373 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103185088 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107873579 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091436596 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087396355 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117882163 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103094088 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114130231 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103129571 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132218507 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109147124 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073638473 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101553786 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097597691 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142217428 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098672735 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087837971 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094152861 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102313991 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080148576 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13905654 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.236757863 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084530923 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110415663 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087559712 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09502029 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075092473 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098754238 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092640668 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110414788 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097079114 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.091756965 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107554793 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108256976 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084373106 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085166111 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120326975 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126202308 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099359546 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09219007 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087201607 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097335287 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091833057 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106100431 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078822688 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074299257 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.06714756 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070705464 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115082039 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106009945 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095813131 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097015217 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09990432 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070394012 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085485691 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08814361 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080910229 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087857206 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112357767 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101084299 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12609132 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098900129 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083706032 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138273918 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124705855 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083052349 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09014388 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09862369 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076058892 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143818444 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116166937 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076010399 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080977022 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075600503 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0822133 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070146437 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101689289 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101209771 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074304644 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100610096 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095658095 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121420064 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094636204 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074786404 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077443569 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072859641 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073604499 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099678226 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075360953 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074752818 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126694148 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101564823 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106350204 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08272105 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073923428 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.278709158 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068655935 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129579121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080730595 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109519303 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079746636 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077974924 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08712582 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10338894 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103336158 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111204815 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069260674 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101099384 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151425449 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074201872 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074629275 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073193276 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108482871 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085649339 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13840514 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087850613 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089827515 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075878884 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125198586 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101123532 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080955184 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125436861 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078523013 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.06980146 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084693257 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108716219 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071078263 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073657401 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111422623 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.508235102 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088911118 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074098994 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086931731 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124309265 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081896923 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105911246 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115269534 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103813345 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.18186551 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072855711 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088627169 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.101214701 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095717987 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089821747 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077563766 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085140488 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0856336 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.082975752 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103660963 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078495841 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088969403 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079050253 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101350676 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126674932 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083839944 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099634365 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085307306 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088866495 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097274238 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109765779 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104351523 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086276049 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087166035 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106920891 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081707392 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076257769 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.248751423 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075098796 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076948482 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115315712 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.082083874 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091860067 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101251713 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.088677561 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110958705 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11610347 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109317927 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095861545 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07797106 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083865222 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086865313 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072791707 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077269973 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072961846 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069648439 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105017553 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083220274 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080198635 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.097506075 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106923308 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098296506 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104800194 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088448156 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095064164 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098044634 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123471645 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141664822 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095940856 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.120297941 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128808828 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074738659 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074053445 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079238813 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12875286 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.079674846 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090383118 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.233692256 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076471652 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080055063 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090035415 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105386818 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081410237 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078840471 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096857988 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107947487 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082899808 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079041731 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090959686 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106144696 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126013756 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087315615 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073729582 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105839965 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100157696 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121579795 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071859332 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079177322 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126085183 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085901775 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102331982 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080816881 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121067086 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129787315 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073141318 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087868867 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06974592 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086565145 seconds)
  done (took 50.10505922 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151203164 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.139948495 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080901239 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097033026 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.184913139 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.194484551 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116788421 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093631276 seconds)
  done (took 2.856264349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066885779 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081036192 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098731498 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081549967 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065612491 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067683326 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.196701412 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080291553 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065336547 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104031806 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074738681 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067791735 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.355915377 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064571205 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066205899 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075144184 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065969411 seconds)
  done (took 3.428094472 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36563647 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628236658 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.31861658 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073106565 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942705027 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087570965 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191618525 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136844956 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080652141 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541585381 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365372452 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130319939 seconds)
  done (took 18.624071625 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074689478 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073300454 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076575631 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076348338 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072535282 seconds)
  done (took 2.131651959 seconds)
done (took 99.828255269 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08105722 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168127023 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066404721 seconds)
  done (took 2.029260733 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.08115858 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07977715 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078925538 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07626074 seconds)
  done (took 2.079335798 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072704264 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074763641 seconds)
  done (took 1.903672195 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228436303 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171096756 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087955777 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080741486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07988416 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078793352 seconds)
  done (took 2.003354766 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06951495 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06973832 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070137865 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070862556 seconds)
  done (took 2.031330071 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066974331 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06486774 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067733177 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069969527 seconds)
  done (took 2.023431147 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082129751 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077081734 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077074334 seconds)
  done (took 1.991239834 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106628073 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094348179 seconds)
  done (took 1.956230065 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078737546 seconds)
  done (took 1.837137563 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088541274 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094205957 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137228324 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105048445 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137396541 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122823306 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075101168 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075904784 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071714879 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070615889 seconds)
  done (took 2.732843183 seconds)
done (took 22.915673799 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077486605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3649365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358316094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084812321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667199989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354578454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96878306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089137039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097148388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066980044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082486461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646344693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957557486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324020241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944895211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318755733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647255824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067321275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066554073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067050344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952193759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06635357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066769614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067458487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64706924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37146929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067574697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323353454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066330514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068381903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353960372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067304021 seconds)
  done (took 16.103979099 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068932524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119949092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070882933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082712487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06887263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068432407 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069439902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067550133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107693283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067462105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083817252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0669761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070643728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068086784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086644438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068204533 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068974154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068332055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070251975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068701948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085799396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067223436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068405881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068625866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067803382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080080395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070414065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067368938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067691074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069721501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070946493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069066532 seconds)
  done (took 4.140273016 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12000709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123036676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071935086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10702169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11509388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068372108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14789472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089014493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110888961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067306637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083812096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06775031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102894472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068789461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087563209 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067752747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069404343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068898753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067403579 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068025008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086182939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06772974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068354206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068444551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069298991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082162268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06846355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067621526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067737783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069798241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071789502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06903231 seconds)
  done (took 4.403954381 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06851044 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070560064 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078634237 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078833879 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065247026 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067690208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068569361 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065657958 seconds)
  done (took 2.337932505 seconds)
done (took 28.76546572 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077306164 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066841954 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.06977857 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085917354 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072220461 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068925355 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063538571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073041354 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0703245 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070066075 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072238398 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065478991 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068584732 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063751406 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070742239 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064548447 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071692916 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069312794 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070145872 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070957936 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067998726 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070646636 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074218965 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069926955 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069836167 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069920234 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074791026 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071795011 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065793827 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068173216 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067370224 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082304189 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071451055 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072191917 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065486159 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065818359 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070001642 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067840247 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071673919 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074974754 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067633074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074085817 seconds)
  done (took 4.699707521 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085955995 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09266015 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084239877 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080374348 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102767846 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081644368 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087933482 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077786506 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077038739 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08784016 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072605731 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077347256 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078760853 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071257615 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076891204 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073548012 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078582331 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072194789 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07818474 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077615679 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089074793 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070637211 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078029248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07871691 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072886626 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078551568 seconds)
  done (took 3.869629042 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07113615 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086018389 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090402475 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138610176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107954733 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081569371 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080919791 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102226172 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100362619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066933054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070601344 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092091895 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094664548 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073797994 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104960758 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084463831 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078727355 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068736945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073036441 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100750613 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090307374 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085460036 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099907506 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086595991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066633536 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075959423 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073383544 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082129156 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074062033 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079502107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070980198 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070175948 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067875743 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078340126 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070990585 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064160793 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088293607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078668433 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084318494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104921738 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076208802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067783404 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095422585 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130018778 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065874204 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068739054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070159092 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078749453 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06801366 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09536602 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084395335 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066386455 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085281808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067634869 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067459636 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081748386 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067863565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068321494 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078252548 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072303034 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086973877 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071599203 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08559293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066462531 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076878362 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067835877 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067798162 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065107079 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101333271 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073088853 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11647354 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067100718 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064520108 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078848947 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077413852 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072823898 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066069048 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083987223 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078178365 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069991647 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077726655 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069264759 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070009592 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102110014 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065429968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064780217 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064415153 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068405406 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069573378 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067114151 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079008887 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066053893 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069549406 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080600447 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066443902 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066889093 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06869744 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067784623 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065977099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076467584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070436834 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068198047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078731536 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067835377 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069463775 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080753493 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075859401 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065624834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067678302 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068383269 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068080691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070761235 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069659586 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068442463 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072460672 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073184507 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071815477 seconds)
  done (took 10.874124345 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159356723 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.14887499 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067810377 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144657583 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074773283 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071038764 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145474883 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085882066 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067000047 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06815211 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066672907 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094265599 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.08924813 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10057488 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071135381 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067316201 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092031193 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099526469 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147564829 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14325749 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089848792 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07444274 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069605873 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068357321 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068587793 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075707484 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082973398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074669049 seconds)
  done (took 4.429333073 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074075721 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108587359 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070916511 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090652826 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084977851 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067250468 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069313771 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068165081 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084646617 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07322713 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066837651 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071434246 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070611578 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06982837 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067766294 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073496651 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073378504 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065752634 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070941782 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071684139 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07692056 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092477929 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071001223 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067092456 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069266609 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066855992 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073934525 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076600509 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066873469 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097019369 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064779549 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071740746 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081344129 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067982737 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067581838 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067565273 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06739901 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06703896 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067662417 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065298618 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065103442 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071480007 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06620853 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07313896 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080481732 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074114145 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067862047 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069689041 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069211693 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.0637905 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070431385 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069982375 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069684422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075327585 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070667084 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06943552 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070371859 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095402789 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072597547 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06633519 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06598408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065882326 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068127852 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074698362 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083423895 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068185325 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065393611 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066770062 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07143605 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080842094 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066749756 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072519982 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064128318 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067550314 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069391899 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07090958 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068088179 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065589346 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066629697 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066971532 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067190973 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066832861 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06601409 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069553941 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064544913 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064993283 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067523804 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068166506 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073270818 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066230034 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069661684 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068662098 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065679847 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069247796 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072396163 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069884195 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086085779 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075222739 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067184742 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064565791 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08125306 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068530897 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066011446 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072860277 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070871654 seconds)
  done (took 9.324802158 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088681094 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06831525 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086727648 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093717376 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077489487 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072877093 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079720907 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068146333 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082374855 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065764799 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076071994 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065414533 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079745292 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075769096 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069039359 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076604603 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068897366 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086318862 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081816507 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065150572 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07532797 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079189625 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079579266 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084377718 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083980064 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084624822 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078763386 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069514415 seconds)
  done (took 3.996224154 seconds)
done (took 38.962890736 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.852109667 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.026274106 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.855349339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.089347369 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.903846111 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.877931856 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.084964393 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.854218936 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.992952968 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.888316434 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.125479465 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.28689788 seconds)
done (took 67.690635585 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.871029791 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.017404751 seconds)
    (2/2) benchmarking "String"...
    done (took 2.093215948 seconds)
  done (took 5.901858027 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.11390294 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.499207369 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.135593388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.857507049 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.862783665 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.373006047 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.663818536 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.339522412 seconds)
  done (took 31.524366239 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.033474923 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.077707882 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.590109823 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.630940762 seconds)
  done (took 16.168994285 seconds)
done (took 65.468229187 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.862702282 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.860763435 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.897865011 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.893683483 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.867358191 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.863893748 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.860475542 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.85941243 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.860478831 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.971315704 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.859386085 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.869579612 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.863628383 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.893785647 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.546709777 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.911923641 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.873690259 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.872635005 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.885215861 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.867376926 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.864521768 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.857708389 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.316408713 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.013805509 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.471051748 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.278791163 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.085168121 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.249897082 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.861678534 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.858102675 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.151215754 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.389431671 seconds)
  done (took 207.433246716 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.859478532 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.704030625 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.782415858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.901892834 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.168854572 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.03936366 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.954619001 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.209021616 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.864778919 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.879768744 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.043939129 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.859148915 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.067913921 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.804198126 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.893913882 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.945953519 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.998388573 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.050887506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.898916717 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.008756293 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.869943483 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.860012118 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.822835112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.013843597 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.900114945 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.879088927 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.873282619 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.873891408 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.047585979 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.977576017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.879995582 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.871988185 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.054117863 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.728691432 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.873689756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.891587186 seconds)
  done (took 172.149538656 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.054292142 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.868082991 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.862741657 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.916203448 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.980709864 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.862948179 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.540347941 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.871549726 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.275474086 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.865747789 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.86239463 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.861578387 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.863924219 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.87374493 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.991315532 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.865682127 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.879775156 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.866785248 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.887972425 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.863043143 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.863834362 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.860169507 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.864027157 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.861494886 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.859485676 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.86329645 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.545585693 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.106744695 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.852757754 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.850701018 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.383881051 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.865451415 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.021824763 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.852358501 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.941226352 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.908558895 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.974561968 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.854065152 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.06823409 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.932416716 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.854774128 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.851566685 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.91507446 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.86514871 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.851743251 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.851397224 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.855755509 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.917329843 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.114442278 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.853185349 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.972195705 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.348564453 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.854171563 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.853246659 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.851550651 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.458068143 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.852165345 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.852176103 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.858732461 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.863774577 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.852174364 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.852145713 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.23775014 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.922152129 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.06021449 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.855851043 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.338432763 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.855890963 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.263173092 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.937630981 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.849324539 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.85081228 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.85040235 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.851076614 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851466724 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.852748175 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.972476829 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.859869521 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.98123074 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.935761585 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.972557429 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.853619019 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.85026781 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.864479921 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.68620274 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.920596262 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.888057141 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.679149703 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.853232136 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.226850474 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.641031597 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851357749 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.851310101 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.863485721 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.854383034 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.852197159 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.854200956 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.931303178 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.852752073 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.851880158 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.975470765 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.580508234 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.85401779 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.255759036 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.856101896 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849702694 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.859075644 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.932857868 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.974346073 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.85379746 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.918544691 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.858009696 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.854525128 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.981084022 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.852396725 seconds)
  done (took 410.383658447 seconds)
done (took 793.876619321 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.500809539 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.44754143 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.551249319 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.486014543 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.454616433 seconds)
  done (took 14.226653692 seconds)
done (took 16.012108163 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.866204327 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.860081833 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.91168866 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.936513082 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.869650322 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.869637478 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.933137441 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.873362176 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.90548713 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.908498626 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.935426964 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.935524723 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.877146686 seconds)
  done (took 26.470645866 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.86501089 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.012890206 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.073823433 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.89617943 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.867214735 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.076242354 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.922018596 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.990228716 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.996048003 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.083990729 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.084539982 seconds)
  done (took 23.659912433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.863861285 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.001015238 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.072921685 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.900393314 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.865448188 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.075848868 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.92806466 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.993916333 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.999839191 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.078412656 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.092353093 seconds)
  done (took 23.66898174 seconds)
done (took 75.587012483 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.858395609 seconds)
  done (took 3.650294765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.87632644 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.051270281 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.855967748 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.859044574 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.858175203 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.857374415 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.85822829 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.858230509 seconds)
  done (took 16.864117596 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.857471449 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.856765261 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.856505233 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.857483243 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.8580882 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.858599228 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.858123384 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.858057618 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.85784213 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.857720923 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.857342558 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.858190625 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.857705912 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.857358062 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.857913928 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.858147399 seconds)
  done (took 31.512429074 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.860322438 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.85883749 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.857953209 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.858118839 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.86089361 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.858840184 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.860233764 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.85927005 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.858966895 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.860662822 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.860233792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.857914997 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.859346054 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.86001242 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.858969588 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.860223824 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.858362296 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.859647229 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.864045588 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.860679917 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.862020581 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.859361313 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.859467651 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.860240177 seconds)
  done (took 46.425493735 seconds)
done (took 100.250601791 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.718401684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.725464332 seconds)
  done (took 10.238980038 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.859728714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.860058176 seconds)
  done (took 5.51661183 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.859484289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.859839268 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.862246626 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.860958027 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.860541637 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.860579819 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.860469535 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.861837678 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.859244843 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.859271004 seconds)
  done (took 20.397100508 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.860639004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.863950037 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.861845783 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.860287339 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.861773915 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.860477899 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.860889217 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.864238432 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.861947631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.861685815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.86038597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.860893488 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.865000382 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.860707848 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.861390672 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.861749361 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.861168369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.863456905 seconds)
  done (took 35.306353381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.861164374 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.863190017 seconds)
  done (took 5.519219291 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.864334055 seconds)
    (2/7) benchmarking "second"...
    done (took 1.862938029 seconds)
    (3/7) benchmarking "month"...
    done (took 1.862863582 seconds)
    (4/7) benchmarking "year"...
    done (took 1.862368406 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.862047853 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.862823623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.863218245 seconds)
  done (took 14.834072392 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.863700643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.013372305 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.061687093 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.455872768 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.864291989 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.866350688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.746314857 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.866355189 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.869029386 seconds)
  done (took 20.40236903 seconds)
done (took 114.007164917 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.615410304 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.862802234 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.122507018 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.924148792 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.884817881 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.155895194 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.866550337 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.460442229 seconds)
done (took 42.686614304 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.946250821 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.864123101 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.894849174 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.896380434 seconds)
  done (took 22.453048768 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.864977231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.191906318 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.889180991 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.734491257 seconds)
  done (took 22.49767692 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243187927 seconds)
    (2/2) benchmarking "read"...
    done (took 2.213364997 seconds)
  done (took 6.25700101 seconds)
done (took 59.95215167 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864401425 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.865581408 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.863730781 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.864527895 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.864856481 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.864790599 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.864953979 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.866805996 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.865215736 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.865945738 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.864615038 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.86615474 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863596911 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.866126675 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865011937 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865103622 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866554989 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.868191063 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864370155 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.864676406 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86497672 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867066502 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.867385691 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.867853892 seconds)
  done (took 46.569699883 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.865050175 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.865341166 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.865264265 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.866785421 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.865303619 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.865520263 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.864997489 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.866305621 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.866541328 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.86561016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865619002 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.86540797 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.867607624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.866300216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867609262 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.866558177 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.866803731 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866617523 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867999426 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.867756571 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.86616053 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865549243 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.867290932 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867497746 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.868287954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.867992553 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.867978552 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.866931276 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867361408 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.868338246 seconds)
  done (took 57.796724579 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.868400402 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.868095895 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.869113871 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.867368328 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.868635582 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.867848732 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.867717889 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.867724221 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.867494703 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.868746715 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.868139212 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.867377035 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.867373388 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.867116437 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.868898576 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.867806283 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.866090504 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.868465667 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.867461583 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.8683786 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.870118224 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.868328269 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.867790579 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.868191474 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.868830352 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.870356325 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.871137103 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.868389398 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.868755133 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.869841094 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.869349655 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.870221234 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.868580979 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.870036053 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.868737676 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.867350463 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.868170155 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.867933357 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.868564616 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.868794202 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.868202211 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.868120938 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.869955334 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.867783134 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.868556217 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.867964455 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.86838839 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.870683903 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.869805446 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.869107854 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.867697168 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.869459334 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.870866251 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.86881666 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.868373067 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.867985123 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.868174927 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.869662735 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.872554276 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.870664408 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.869436013 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.86834957 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.869879745 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.870516837 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.871169117 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.870567895 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.869788222 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.870871283 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.87211167 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.870864733 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.869714941 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.87102167 seconds)
  done (took 136.369209724 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.871418674 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871311308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.871712292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.871146753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871123109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.872278669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.870577052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873085592 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871378571 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.87097394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871977599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873173775 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872694721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871822316 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872146202 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.871719495 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.872496952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.874153177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.871570934 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.872092472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872773779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.873556467 seconds)
  done (took 42.987773236 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.874158883 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.872327112 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.872226457 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.872667565 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.872404049 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.872740374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873267872 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.873031557 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87247142 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872967563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876405679 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87236816 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.870777574 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873170318 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.872399656 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873568727 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87275505 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.872459118 seconds)
  done (took 35.51930947 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.871451952 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.87354367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.874431186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.872609282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.872079005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.872712486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.874502157 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.874797085 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.873047595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.873585532 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.874387494 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873787055 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.874578249 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874196289 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873140493 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.872388157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.872079392 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.87195166 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872178429 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873058375 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.872147698 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873060624 seconds)
  done (took 43.013438802 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875379636 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.87320859 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.873111711 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.872600574 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.873437735 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.87442864 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.875074371 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.87205357 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.87323961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.874678675 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872622162 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.875027826 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.873946868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.872561498 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.873868054 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873686793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.876199282 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.87731277 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874141113 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873280261 seconds)
  done (took 39.285645059 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877106219 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875765159 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.87501093 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874962302 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.874441753 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.875690909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876986313 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.875225404 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.874035633 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.875695883 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875433718 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.876421305 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875953128 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.875051595 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.874362514 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875064762 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876009196 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876240171 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.875626462 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875817087 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.876348284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.875772202 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878209797 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.875340317 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.875745745 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877226505 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875916344 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.879748958 seconds)
  done (took 54.332084506 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.876655285 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.877823425 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.877050369 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.878682771 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.877229294 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.875416974 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.877114139 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.875960272 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.877549907 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.875953542 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.875750597 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.87482066 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.876065498 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.874871665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.878791111 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.876271904 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874932854 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.876611488 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875822126 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876698739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.87887001 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.875937623 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.877409645 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.87692094 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875866974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.876287447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.875903561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877556247 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877498155 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.876957434 seconds)
  done (took 58.10810614 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.89726044 seconds)
    (2/2) benchmarking "in"...
    done (took 1.898336422 seconds)
  done (took 5.6050887 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.875517041 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876468931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.87849138 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.877940736 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.8772544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.877139041 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.877037963 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.878361627 seconds)
  done (took 16.825995061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.876553418 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.882629963 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.878294242 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.87778285 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.877923867 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.886124885 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.878621908 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.879527683 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.881094079 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.880219065 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.882541989 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.881278615 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.884309762 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.884439403 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.878006577 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.878555899 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879777032 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8810418 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.879946733 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.87983031 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.882317558 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878442511 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.878527802 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.880007587 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.879625564 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.882780022 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.890008048 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.880316601 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880927611 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.879338553 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.88753524 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.878703381 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.878772096 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.88141399 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.87932594 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.879750477 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.887039289 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.880057513 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.880032805 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.880269384 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.882349892 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.884876827 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.885107097 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.888456124 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.880673921 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.880074536 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.88210523 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.881554506 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.880427704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.883401182 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.887575502 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.882768683 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.879922044 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.88148105 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.883927535 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.879975373 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.881211926 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.883735783 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.888136376 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.889144013 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.885438645 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.900974405 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.890722088 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.882035276 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.880888176 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.889548249 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.902561261 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.884371632 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.884323319 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.88111024 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.890413999 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.88118635 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.882711897 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.883575229 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.897731092 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.889091982 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.881950658 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.881962388 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.881632649 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.882607141 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.88402086 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.883021548 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88240906 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.884769961 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.891867059 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.905843286 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.882756205 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.881339896 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.885990662 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.88578209 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.885686164 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.885360976 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.882960971 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.883519624 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.885111961 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.886856761 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.881409103 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.882877367 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.881759445 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.8945992 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.883066604 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.882863301 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.887323101 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.890858213 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.884185469 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.887093016 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884682278 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.884001432 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.893124442 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.885096503 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.88471068 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.884109889 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.88569781 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.888040468 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.88563085 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.889000888 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.891374894 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.893946208 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.887453355 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.890708441 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.891100438 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.890348541 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.895589201 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.908487026 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.884838249 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.892507312 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.890395793 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.895631289 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.88864391 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.885896038 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.888871387 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.886078662 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.88524522 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.888693215 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.884750124 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.886211141 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.887298501 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.887298628 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.885167359 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.886503972 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.889050775 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.888830439 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.888944035 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.887030111 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.89090207 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.885867659 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.890948255 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.895538977 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.886273353 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.8869587 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.886450366 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.889105748 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.889737339 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.887439051 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.884539265 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.884501417 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.885774846 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.886081614 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.88819324 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.887825825 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.887391489 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.888096869 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.892942195 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.887105528 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.887804054 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.888321018 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88729963 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.886973626 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888553477 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.889640455 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.890669948 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.889104365 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.894341618 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.888721523 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.887573286 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.887626277 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.888070749 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.886402476 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.891940978 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.898384168 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.892197267 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.897247169 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.887251761 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.89687147 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.88923205 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.892448049 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.889524132 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.886949043 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.888572219 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.889609341 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.88846409 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.891723784 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.911506503 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.899636433 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.893556478 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.891734921 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.893359489 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.893258776 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.897623365 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.891275058 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891804075 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.89209736 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.890257015 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.88993713 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.889336808 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.893779734 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.889415281 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.889497664 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.893257486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.889992817 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.889584506 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.891291708 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.889842377 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.892585669 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.891385772 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.890826691 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.890445186 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.89146822 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.899271893 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.89281558 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.890754974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.889152644 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893377005 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.889656609 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.890285663 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.892905528 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.895123834 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.889066765 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.892575411 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.899186261 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.891483072 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.890674944 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.891416677 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.89153555 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.893073361 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.890811444 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.894266039 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.898208953 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.895171696 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.89123629 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.896895318 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.890469124 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.894273951 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.891245576 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.893750073 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.891062154 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.894252996 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.891988288 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.894482721 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.899390616 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.892575861 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.892910722 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.893192531 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.8953559 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.891772794 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.892960009 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.889818903 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.896230929 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.89897175 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.898495616 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.892737624 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.895756319 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.895160159 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.893095517 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.896601878 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.894661767 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.905907064 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.901808678 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.89419387 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.892059134 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.891968819 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.89607966 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.892496054 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.895155711 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.900713593 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.893255213 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.894574314 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.896547522 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.895393757 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.89319112 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.900644252 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893387011 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.896063185 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.89585483 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.896288003 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.894298027 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.893749631 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897456682 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.893280834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.89576142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.897565779 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.893341635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.894195163 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.89350439 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.905836899 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.894249187 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.894817609 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.902910844 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.895938085 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.894898768 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.898847625 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.894621665 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.895836423 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.896945134 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.894587226 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.898676749 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.894399252 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.899302292 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.905370059 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.901263225 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.906384529 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.89732616 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.907275463 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.894993972 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.894837544 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.898645223 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.899500474 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.903571573 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.896488426 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.895281582 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.905266707 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.897606991 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.897647261 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.8992582 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.896962433 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.897437363 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.896777411 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.897771792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.903153955 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.899599516 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.896067762 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.897943098 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.896675518 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.895442696 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.900952837 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.899238603 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.898678581 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.896592413 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.896665976 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.89659181 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.897398104 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.896997176 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.898334866 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.897372626 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.896029477 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.905042765 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.896075981 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.898126671 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900779685 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.895354799 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.906798511 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.895696934 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.895746953 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.897695284 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.896245246 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.899503936 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.896617713 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.896235213 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.897507125 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.897696256 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.898361266 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.910355332 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.90506831 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.901922172 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.900665243 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.898362905 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.898848008 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.906906063 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.919403683 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.898613812 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.901076555 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.901247127 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.907064269 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.900429976 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.904506501 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.904811 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.90655108 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.901380563 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.897803939 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.903213077 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.912124618 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899046916 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.898252724 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.898989026 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.904635405 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.900233506 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.89831937 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.901610903 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902129493 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.901124233 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.911827738 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.900464547 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.900635862 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.898979217 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.90004424 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.898466098 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.898481867 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.900456081 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.902047691 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.901683408 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.898782407 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.901237695 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.904966544 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.898540176 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.903016631 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.908171894 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.901199658 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.900367816 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.902215028 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.899284945 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.902152233 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900388879 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.900364013 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.902617033 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.90062622 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.901872024 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.903939824 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.909338626 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.901967112 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.899355477 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.899240401 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.905755796 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.902232238 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.901621103 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.902388746 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.911043008 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.904988239 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.911236259 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.90968085 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.90042752 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.90097037 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.908346607 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.907736963 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.900272094 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.900215258 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.900485012 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.903506565 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.902941594 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.903123885 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899982034 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.901839512 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.906255008 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.901500321 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.902556752 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.900872818 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.901784037 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.903709457 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.903676935 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.906782283 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.901143754 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.902474942 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.900722392 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.903279199 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.903646608 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.904916668 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.900294173 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.900972505 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.904576013 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.903713473 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.90501239 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.902227819 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901081786 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.905277044 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.902302031 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.901648629 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.902778263 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.902034127 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.903104638 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.907251101 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.910371959 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.90532697 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.904107696 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.904767313 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.907789776 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.902252778 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.902838226 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.902151361 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.903627159 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.9114977 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.902676696 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.903127928 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.903515904 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.9034671 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.909851521 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.904284279 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.909616451 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.904159633 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.904686604 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.903217287 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.908269542 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.911463425 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.907894319 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.9085352 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.912426187 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.909751146 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.907186426 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.904862852 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.905085565 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.905157232 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.908396076 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.910611912 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.911583064 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.909324492 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.906472907 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.909700032 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.904223411 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.907477195 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.904718587 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.904253546 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.90854495 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.914451082 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.914793255 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.904589222 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.906977786 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.906267652 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.909468061 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.918396013 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.908044266 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.90530236 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.90509688 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.906850066 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.907822745 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.912514217 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.914296442 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.910546847 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.906840754 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.911800359 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.924890593 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.909424071 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.916082325 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.937249015 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.907384446 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.906568644 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.910418225 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.906925926 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.906826062 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.910491495 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.906425741 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.915509081 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.907228836 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.906287426 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.916997312 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.906512418 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.906817456 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.905215233 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.907586339 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.912620678 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.906474227 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.914820119 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.906459394 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.90601494 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.906411088 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.911593688 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.906984985 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.907658282 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.908596874 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.910445489 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.90687639 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.906753142 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.918136104 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.908156372 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.909778776 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.921973695 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.919364322 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.913016694 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.908909526 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.908786107 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.915364211 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.914112153 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.909001691 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912872888 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.916592133 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.912671992 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.917391508 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.912315886 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.911841365 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.91051504 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.909961703 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.908668917 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.923155255 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.92271373 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.909305974 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.908712782 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.915041109 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.90798402 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.91666045 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.915927059 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.908511166 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.910643881 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.908226389 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.909511972 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.909515237 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.909506306 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.912505742 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.915737526 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.908590341 seconds)
  done (took 1132.35347373 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.909038629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909870885 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909780843 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.90992609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909884713 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.909585778 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.908747373 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.908029147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.908833134 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910896655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.909239781 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.90956732 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.909715049 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.91102446 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.911384273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.912063972 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909173938 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.90918699 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.910374977 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.909658763 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.910307896 seconds)
  done (took 41.94772557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.910086994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.910609346 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.910369747 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.91029767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.909891377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.910777745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.91053313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.91066633 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.911713232 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911382198 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.91098914 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.91077663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.911148734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.911903152 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90994205 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.910009943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.911050058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.912194007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.91121524 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.912418026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.912361919 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.911941005 seconds)
  done (took 43.884126554 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.911796008 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.914118053 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.914448474 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.911045693 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.911328521 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.91255119 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.91163344 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.914498463 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.91184166 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.913841309 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.920758742 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.921288507 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.91169356 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.917002172 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.911026744 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.912206127 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.05825147 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.912497234 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.91263595 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.912619489 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.91303322 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.922151577 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.912408618 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.913082049 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.913729022 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.914092746 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.912863839 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.912999464 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.91296377 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.913959721 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.917680204 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.913082071 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.915852462 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.917048417 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.914952498 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.914387936 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.917862866 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.91354395 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.913838475 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.913702615 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.924820955 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.935532057 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.913564192 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.913441844 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.923681021 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.914827008 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.914190947 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.919159943 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.923003847 seconds)
  done (took 95.836052155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.914987585 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.913651498 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.915834092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.914856147 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.913178943 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.914053497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.915703104 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.91369949 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.91478939 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.915079883 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.914722442 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.915630506 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.91466397 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.914861379 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.917282252 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.915644337 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914864517 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.915108045 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.915856999 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914609187 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.914942661 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.914678123 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.915438161 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.915377571 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.915447792 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.915711691 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.916968948 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.915564878 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.916168651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.915901623 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.915340171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.917754574 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.916630688 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.914989222 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.915974284 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.917535817 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.916737975 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.917402792 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.916104402 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.916366083 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.915867299 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.915825024 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.915578647 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.916931665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.917310205 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.921329792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.916354914 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.91900714 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.917570157 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.917756433 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.917482139 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.918275121 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.91820078 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.917685431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.918105881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.9174719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.91848947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.917504411 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.918427441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.91762025 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.917725829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.920088891 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.919083662 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.918681502 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.919103039 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.918506145 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.919470119 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.918778001 seconds)
  done (took 132.171189117 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.918248079 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.918911378 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.919456645 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.918083056 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.919117137 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.918708993 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.919198414 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.919926672 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.919029077 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.919356535 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.918552159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.919568188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.918939701 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.918243402 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.918996825 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.918703288 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.919618472 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.918284136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.918683942 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.918685563 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.919201255 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.919583511 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.919170459 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.919888144 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.919673865 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.92018066 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.919980451 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.91987263 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919492373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.919972315 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.920775143 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.920324569 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.920416224 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.919674813 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.91977376 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.920204918 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.920534743 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.920578611 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.921106209 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.922296331 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.920458731 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.921820684 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.919829098 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.919793315 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.919701332 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.919753995 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.92098545 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.921373089 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.920407212 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.920740645 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.921920084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.920856549 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.920998637 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920094045 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.920887879 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.92082786 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921640858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.921445967 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.92136047 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.921433829 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.9218979 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.920180186 seconds)
  done (took 120.889746456 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.920472563 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.920497623 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.92172191 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.921716403 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.921881702 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.92176637 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.921123006 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.9225618 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.922264097 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.920959397 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920534477 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.921826187 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922535848 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921736825 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.921315804 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923334617 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.923951797 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.922152292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.923003895 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.921737261 seconds)
  done (took 40.288065757 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.921831935 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.92062243 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.923819802 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.921416033 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.922644984 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.923738813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.922796543 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92437853 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921768584 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.922394188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.923353734 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.923222691 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923394219 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.923314424 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.923002629 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.923089852 seconds)
  done (took 32.616033086 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.924630741 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.924514899 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.922593295 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.922959368 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.9228403 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.923714033 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.922766032 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.923379663 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.923467963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.923641261 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.924472512 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.923468965 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.924720578 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.923839497 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.924216112 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.924157472 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.925615099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.92415187 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.925139888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.924393617 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.924061412 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.924456543 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.924119382 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.924276502 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.924718325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.925998704 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.925192566 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.92431123 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.924634146 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.924130503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.924617988 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.925260931 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.927367976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.929120984 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.925546244 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.926442392 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.925125393 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.925038167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.925626258 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.926185702 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.925530459 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.926764009 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.926746222 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.92645006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.927653968 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.92682466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.926348878 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.927090569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.925940699 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.927025991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.926866057 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.927384469 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.927220111 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.926600003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.925830742 seconds)
  done (took 107.740159165 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.925719706 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.926150471 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.927148781 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.926237573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.926867112 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.92625538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.927209397 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.92852729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.927162336 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.926542328 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.927405903 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.925530704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.92758269 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.926561964 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.927609149 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.927245575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.927256779 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.92628616 seconds)
  done (took 36.538795967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.927181693 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.92772558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.926605748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.927349755 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.928271869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.927164529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.927608637 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.926314427 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927959124 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.928288927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.927941286 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.929533524 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.927555651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.925985325 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.92785986 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.927296345 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.929571163 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.928084023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.927981552 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.927985961 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.926628718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.928815279 seconds)
  done (took 44.267214818 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.928150873 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.928234107 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.944957243 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.952346784 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.949508591 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.961249228 seconds)
  done (took 13.522807057 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928589883 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927620987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.92737011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927038109 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927605994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928250554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927815409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929405631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92850704 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928717935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92884001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928748374 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928889521 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928308004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929736585 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.929856337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930868668 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930380561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929124816 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929345626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930708101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930504467 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930556608 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930747065 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930719375 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931194939 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930785325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930587627 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930379927 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930927063 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930836078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93101558 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930473945 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931243675 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931219269 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930469467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932382829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930659931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931596607 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93037864 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.930288235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931096764 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931888912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931769329 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932316674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930938069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930801613 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933263301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932192322 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932140075 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930926604 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932858614 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932940332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932102315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931251832 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932263622 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93300569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930846548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931407823 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932289498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931975489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932485279 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931453944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932677023 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931533977 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932700351 seconds)
  done (took 129.282336687 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934687913 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.931623463 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932187286 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932747308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931419953 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932597144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932647473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931608532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931785607 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932093039 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932669483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933095344 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933088962 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931861613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933086385 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931615105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93366681 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.93250858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933417502 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933803346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932929525 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933232475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933686323 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933124795 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934526468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933751002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933998956 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933572691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93361031 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933739952 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93283823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934418403 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933313546 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.933972068 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933178435 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933644923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934663417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934500491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933469311 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933350093 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934097946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933974584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933256333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93333255 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934361535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935067776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933304611 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934875186 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934279277 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93551511 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935475105 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934242872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935083013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934681593 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.936351035 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93553558 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934753117 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933577123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934136665 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935673771 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935344839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935096222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935178032 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934682209 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.93578626 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935175711 seconds)
  done (took 129.492023885 seconds)
done (took 2639.045979427 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.947238422 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.232341041 seconds)
  done (took 16.044596031 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.106136041 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.059898615 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.944054572 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.976933072 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.944391103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.94458726 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.945905522 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.942916343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.942969353 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.945244098 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.9424905 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.127547906 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.949504316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.943863734 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.944452697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.035161149 seconds)
  done (took 53.567368332 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.949561062 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.946023007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.960854596 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.946569797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.949368836 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.968193766 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.977087282 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.952521295 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.010812634 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.96242905 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.073297653 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.963172214 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.949459514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.000992013 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.963272485 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.963828709 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.047551496 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.028777022 seconds)
  done (took 37.482756429 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.030000885 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.963489889 seconds)
  done (took 10.871033538 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.954746109 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.973375583 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.972057893 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.964227457 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.938702417 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.963342732 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.949528722 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.941891877 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.956367098 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.947427245 seconds)
  done (took 71.434697781 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.949828851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.947558982 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.949176552 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.944581119 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.941811507 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.949267487 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.945496931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.946180587 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.651983241 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.988922262 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.958257604 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.95399345 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.9475534 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.947284467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.944652377 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.970348301 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.116486159 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.943758331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.943198533 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.952378858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.946803862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.031834841 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.95941471 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.946614508 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.982178953 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.642455294 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.959919386 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.951330423 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.120920507 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.943765719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.944760273 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.157478801 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.953245034 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.372106969 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.262326303 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.954585907 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.957214632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.95302253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.944389863 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.130629072 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.947935221 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.952006402 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.809372336 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.23752747 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.047216968 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.991485553 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.304282725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.9505025 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.948437248 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.979531498 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.950565439 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.947226118 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.966288391 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.457866811 seconds)
  done (took 137.370468229 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.945907152 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.19153086 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.097834701 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.945937651 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200873877 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159780499 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.950132499 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990549516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.948533085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.144351758 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.20092414 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.048510604 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.948663518 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.946977279 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.942225594 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.9431677 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088034942 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.013968854 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.948754368 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.945474676 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.969619015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.147922312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.071168754 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.950507873 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.972443642 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.154833008 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.069088436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.047828805 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.729952156 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.945745197 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.007146589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.950110422 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.946276121 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.945288087 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.102007826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.039757375 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.028769366 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.948046351 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.944449385 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.94687577 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.711859854 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149914496 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.041911514 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.067197887 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.199638091 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.163642081 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554327285 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.947414639 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.573725933 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.112854326 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.152631274 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.153729543 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.067686185 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.949884937 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.495042864 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.946124705 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.946769436 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.170099248 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.168329674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.046732281 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.951236591 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.94822661 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.948248366 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239359256 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.951374926 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.03829268 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.951687507 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.946593154 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.040127644 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.049674454 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.178645638 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.170905498 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.9817784 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.276631619 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.447802479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.152842652 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.014634986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174822271 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.951921465 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.947840373 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025163917 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.793548597 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.201294803 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.230807099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.148399008 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.978605686 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.572682006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.948045149 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.13517631 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.137300849 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.18699979 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.193661241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.188950139 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.274824879 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.947410243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.947410939 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.23273256 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062464926 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.952753965 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.297227575 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.181765528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.438222522 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.974072256 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.234163092 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082401368 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.951708389 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.596460994 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.952198403 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.158938415 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.986209022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.952113618 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.95140866 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.139453366 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.865198527 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.950473599 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.883049397 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.010700219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.95396934 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152301921 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.952707346 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.19612279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.952115759 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.188706082 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.547871121 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.981117341 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.180502789 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.196422475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.577389554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195436901 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.194174617 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067015284 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.228553775 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.950319413 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.953969136 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.2151214 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.955665084 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.949733847 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.120163692 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.953677324 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09440965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.95609766 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.219774282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.973406039 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.187971689 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.953609943 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.1836739 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.984628908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002988722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.95662332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.078031807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.955978034 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.773892562 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.111839036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.955178966 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.951166501 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.722954932 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.952876425 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.104510774 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.178192961 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.973166995 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.02132847 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.493660888 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.931678711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.033346834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.976817455 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.242645379 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.952639631 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.203129138 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.934468544 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.421519503 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.953399005 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.69563819 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.192731092 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.953793885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.953263363 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.791857856 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.939490882 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.95352988 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.10898268 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.293621722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.723654567 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154191907 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.956678401 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081382958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.956211302 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.031828502 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.286883118 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.952120123 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.950914177 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.954134701 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.953888569 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.954972423 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.218544123 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.981932844 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.386689313 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.088978216 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209918435 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.260267966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.151919478 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.995647529 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.958968317 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.235170465 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.959760722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.01643359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.957229292 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.973595512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18453076 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.956622908 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.218562147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.189566665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.826534573 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.001332325 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.958822652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.956055372 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.882303723 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.099916446 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.043290232 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.959624166 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.955784455 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069130641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.07624815 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.140122229 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.634575484 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.107280758 seconds)
  done (took 919.745214123 seconds)
done (took 1248.381959586 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.956144164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.958492363 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.959901749 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.959879778 seconds)
  done (took 29.718558134 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.960750818 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.956090866 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.959295621 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.957319418 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.957343111 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.956662946 seconds)
  done (took 13.63326128 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.956121474 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.959792922 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.960506251 seconds)
  done (took 22.760980626 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.036013484 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.37861246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.100694401 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.39536741 seconds)
  done (took 10.799080696 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.960270287 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.959331341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.95931808 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.959848651 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.963681621 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.962406698 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.960048898 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.959824719 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.964116014 seconds)
  done (took 19.536178652 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.972971025 seconds)
done (took 102.304521488 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.024041433 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.960640098 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.956809571 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.961196921 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.032470989 seconds)
    (6/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.956912555 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.978825386 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.990714793 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.093474773 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.980121312 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.045752603 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.04265882 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.979471599 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.218539135 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.340655541 seconds)
    (16/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.962928965 seconds)
    (17/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.969352629 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.961314034 seconds)
    (19/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.203685695 seconds)
    (20/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.964917861 seconds)
    (21/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.088791634 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.961404084 seconds)
    (23/309) benchmarking ("sort", Float64, false)...
    done (took 5.656728467 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.061967652 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.115425481 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.260935392 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.355544591 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.973614483 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162230962 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.091763582 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.552341197 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.119027242 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.094046135 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.334947386 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.045527695 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.327434169 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.198721446 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.96284512 seconds)
    (39/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 4.194992668 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.961697458 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.839099754 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.091131139 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.959399567 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.053500702 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.037913438 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.084944515 seconds)
    (47/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.06053695 seconds)
    (48/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.441474588 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.352544656 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.379791622 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.176581187 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.704709648 seconds)
    (53/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.12794551 seconds)
    (54/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.089231345 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.336014149 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.960627854 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.619691537 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.969430596 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.207922292 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.962312749 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.078148219 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.982562697 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.234041135 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.97469482 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.96035228 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.43483671 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.771223858 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.053363259 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.506414111 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.458093425 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.051721077 seconds)
    (72/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.005854652 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.962814237 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.066326551 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.989850203 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.322906644 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.967908434 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.206772823 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.770210163 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.989001708 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.578596393 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.088804442 seconds)
    (83/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.168168089 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.308456225 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267239631 seconds)
    (86/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.978852257 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.272630857 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.225575276 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.061682017 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.218832991 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.070994342 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.176080794 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.761872727 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.953317107 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.93684503 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.906653156 seconds)
    (97/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.858289413 seconds)
    (98/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.189892469 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389064507 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.559453097 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.743606244 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.99828678 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.963492412 seconds)
    (104/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.044682215 seconds)
    (105/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.428289727 seconds)
    (106/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.071499062 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.613902396 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.993417149 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.865344755 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.232998721 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.287648776 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.049027248 seconds)
    (113/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.97476489 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.063924893 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.964065968 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.330596721 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.269617459 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.695800983 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.056892874 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.449784006 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.003304113 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.043465641 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.268372502 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.154199417 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.177692324 seconds)
    (126/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.102656439 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.972207646 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.186458477 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.075215451 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.982026829 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.185701086 seconds)
    (132/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.056882836 seconds)
    (133/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.663616905 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.046825223 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.216975584 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.097301597 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.054577529 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.044803525 seconds)
    (139/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.383482127 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.263225624 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 5.629024559 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.986226728 seconds)
    (143/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.976606855 seconds)
    (144/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.283478858 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.334244738 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.815567168 seconds)
    (147/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.813252665 seconds)
    (148/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.048047076 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.977938997 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.94479136 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.071396953 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.101687491 seconds)
    (153/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.117413521 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.595687371 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.983668912 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.965801987 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.968288326 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.169374348 seconds)
    (159/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.589054751 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.494044346 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.994007976 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.026697442 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.96683217 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.214339546 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.974337392 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.32289827 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.971198581 seconds)
    (168/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.370148882 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.382233819 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.983689846 seconds)
    (171/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.726352242 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.108277761 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.97162009 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.978848768 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.144309522 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.969688463 seconds)
    (177/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.6843256 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.926919116 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.167148215 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.287609117 seconds)
    (181/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.099262269 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.303838356 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.760314817 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.85013897 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.096436467 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.275474932 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.105187474 seconds)
    (188/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.105424347 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.315538578 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.305446232 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.165455094 seconds)
    (192/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.180237713 seconds)
    (193/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.973341806 seconds)
    (194/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.865938392 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.975534386 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.979078406 seconds)
    (197/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.142651485 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.996615601 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.240454259 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.28332998 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.974558384 seconds)
    (202/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.551405923 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.039692318 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.068572878 seconds)
    (205/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.271015579 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.286820964 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.317781451 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.088888865 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.087278133 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.972992469 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.009357436 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.272405079 seconds)
    (213/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.11654967 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.979762462 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.97399805 seconds)
    (216/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 3.776121932 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.62895289 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.263221751 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.970020101 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.938625379 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.325333245 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.974162567 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.11263607 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.849638961 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.097190458 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.975294877 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.251871808 seconds)
    (228/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.153412726 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.993473131 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.972812876 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.336382189 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.282263244 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.299622817 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.252770365 seconds)
    (235/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.73740913 seconds)
    (236/309) benchmarking ("sort", BigInt, false)...
    done (took 6.97230692 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.633574037 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.054901681 seconds)
    (239/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.056892717 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.990111373 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.070902812 seconds)
    (242/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.457872622 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.101696157 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.370540189 seconds)
    (245/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.106551205 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.817311084 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.104141057 seconds)
    (248/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.058531697 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.988420905 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.080524055 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.39078735 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.984654331 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.321306827 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.832630156 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.468843809 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.102693693 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240743412 seconds)
    (258/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.668042729 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.283428114 seconds)
    (260/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.060973989 seconds)
    (261/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.07039605 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.077445992 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.98853683 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.324093604 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.280813483 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.857823627 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.215710303 seconds)
    (268/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.037814588 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.827541074 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.078208516 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.993290748 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.748853055 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.000280992 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.099343102 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.356751605 seconds)
    (276/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.345435831 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.97329638 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.976233601 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.276655743 seconds)
    (280/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.251588923 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.316349822 seconds)
    (282/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.759706606 seconds)
    (283/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.181029724 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.97884981 seconds)
    (285/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.478940867 seconds)
    (286/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.079974972 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.992504726 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.225304813 seconds)
    (289/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.121637309 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 4.950941406 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.187420634 seconds)
    (292/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.346462678 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.908996909 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.290962954 seconds)
    (295/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.411084804 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.159648502 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.383011744 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.88439334 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.18157051 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.997663392 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.978541473 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.163800239 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.08529441 seconds)
    (304/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.37035004 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.976443365 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.217807879 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.978622841 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.095172416 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.374887632 seconds)
  done (took 1041.795073936 seconds)
done (took 1043.749917916 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.002536631 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.998403722 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.978502474 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.999106908 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.091914628 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.021971819 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.991270255 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.982416702 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.029359465 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.028773779 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.978061681 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.019309453 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.97959907 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.980375775 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.97951561 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.997402981 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.383689911 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.02686475 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.99930871 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.991848173 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.998426909 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.977401748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.029751218 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.019942905 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.984514799 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.983006265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.983607172 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.999413286 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.093850954 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.983278039 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.98400497 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.994667032 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.380723986 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.022857746 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.978115933 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.999690093 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.992716825 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.991128581 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.984181957 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.01361269 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.538232496 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.989533034 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.982324988 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.981886395 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.98109832 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.988706234 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.983428873 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.989685286 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.99732988 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.99782269 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.526519744 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.006888775 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.984756316 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.981061883 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.994264599 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.982121593 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.985998433 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.998232954 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.001444033 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.996786933 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.362879958 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.035387901 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.98481016 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.000318334 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.992282562 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.561851348 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.99042538 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.99114257 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.541562841 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.999976738 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.563085456 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.001938597 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.984372329 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.997798829 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.019318597 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.382747326 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.025450222 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.983408421 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.993811319 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.981124629 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.995870916 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.999468202 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.99051043 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.983488718 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.999845969 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.028038414 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.996704175 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.984196048 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.995178121 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.006112182 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.994857554 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.997739868 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.989847223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.982350529 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.996186016 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.98795153 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.988232384 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.988000459 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.988053677 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.99705058 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.540739471 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.010250999 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.981751253 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.982639322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.987925976 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.001005277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.540301468 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.995707872 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.008249874 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.034644907 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.984967215 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.3632383 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.035345612 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.002310297 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.997709734 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.988961127 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.983926515 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.364352856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.578722154 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.010082083 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.986484306 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.983830251 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.00322085 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.988052871 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.983875596 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.385363716 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.035610073 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.001438288 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.109385883 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.999112114 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.020498309 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.984016136 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.989633262 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.033295648 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.003807891 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.019463601 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.989209926 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.003065793 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.00346353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.985177211 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.998439518 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.999960639 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.987027577 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.994285281 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.983986787 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.032419089 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.002270929 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.002536619 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.009077395 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.110491883 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.984424615 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.364957946 seconds)
done (took 313.308666234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.084563395 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.986125754 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.079162657 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.985738405 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.088252592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.073086307 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.987851094 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.986136403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.987832129 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.516203097 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.985966698 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.991612046 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.98384143 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.98504229 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.068168461 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.987574952 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.987418026 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.278514182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.990217661 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.073649381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.987302136 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.98638545 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.985518226 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.512867671 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.986925485 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.987692121 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.071847005 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.988008075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.279998807 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.988342491 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.985314243 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.280878977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.072588493 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.999354439 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.995143125 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.998706081 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.090198792 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.997676999 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.068404783 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.068927746 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.081689206 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.020621653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.98490831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.991709793 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.993187659 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.98975598 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.988958605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.021212582 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.98641482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.994352685 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.278740167 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.995746414 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.994276521 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.988131884 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.988894872 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.003817342 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.989174904 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.990944449 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.073489746 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.989529189 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.07183937 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.514992073 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.521728978 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.990056025 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.988280614 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.98876591 seconds)
  done (took 192.77416828 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.093027089 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.062778427 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.097353297 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.996128481 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.038653378 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.097981159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.996460734 seconds)
  done (took 16.29858089 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.99570911 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.990273301 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.065202216 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.064100332 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.990433198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.167165927 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.004584628 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.997361549 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.018744756 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.993073201 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.626829103 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.066469175 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.998513915 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.991039146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.002789532 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.067056894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.992678092 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.99153862 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.100520898 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.139346291 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.996905458 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.000771485 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.017948877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.003307788 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.992371465 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.992216137 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.992106553 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.998495768 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.991718505 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.991584217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.992397719 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.055830553 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.992862487 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.991268593 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.992745168 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.993264851 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.99240079 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.993180433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.991091429 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.992582962 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.99204557 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.992005209 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.991880021 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.992206426 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.993222824 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.016190479 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.992771612 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.992350251 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.992752442 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.993392516 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.019767131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.995101496 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.992666801 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.997378268 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.040655749 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.998485852 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.994070049 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.993803488 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.994716905 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.994347094 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.994909542 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.1440675 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.067984155 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.994554529 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.067398091 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.15238642 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.993630353 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.993736898 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.993302734 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.087629835 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.994657566 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.068066814 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.994952052 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.112719776 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.995574313 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.174793051 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.01943657 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.998228439 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.997715835 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.993618613 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.001205547 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.993813228 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.997052109 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.001070944 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.999453554 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.993860347 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.99500226 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.996378702 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.002357365 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.995258297 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.045069565 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.994707891 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.996363329 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.135537162 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.995768609 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.105016038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.024010596 seconds)
  done (took 218.228615054 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.002719525 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.003296373 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.997440413 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.011909974 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.998764807 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.997507102 seconds)
  done (took 13.933475441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.999693276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.000225374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.995821655 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.996481779 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.996095391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.996172958 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.994673036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.998321169 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.999715856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.995285844 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.995285339 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.995800532 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.996425499 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.997102105 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.995514445 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.995971709 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.996227534 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.995906795 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.995524131 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.996348723 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.138155789 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.997012196 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.996188826 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.002161925 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.001039197 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.997250216 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.011100063 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.996118398 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.997194905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.004397759 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.001940858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.997359181 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.002957057 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.002966196 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.00236378 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.003455452 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.001877294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.99745886 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.997435781 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.997500941 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.997641251 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.997638883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.997583059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.998273448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.002074037 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.007344007 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.002327275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.012626981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.999217948 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.998184606 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.999541619 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.997772936 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.998788368 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.999286494 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.004933721 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.005591425 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.00365194 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.999762793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.001544802 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.004746817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.003029645 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.000152821 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.001728344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.002707049 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.004152435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.001132715 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.005920973 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.003961611 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.000269325 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.000868695 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.000803311 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.998758132 seconds)
  done (took 147.055849395 seconds)
done (took 590.230055959 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.041478711 seconds)
  done (took 8.968237083 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.050635255 seconds)
  done (took 9.056457946 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.016823865 seconds)
  done (took 13.944403534 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.017694193 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.033627985 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.019602444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.003867069 seconds)
  done (took 30.020547299 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.173158254 seconds)
  done (took 9.099504396 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.014349059 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.000543782 seconds)
  done (took 16.003882754 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.118162988 seconds)
  done (took 9.045356213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.01703426 seconds)
  done (took 8.963152195 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.008277085 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.033320329 seconds)
  done (took 15.986820571 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.005083119 seconds)
  done (took 8.931750034 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.787535506 seconds)
  done (took 9.797685624 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.017793073 seconds)
  done (took 8.96437571 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.072400729 seconds)
  done (took 8.999048754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.054177811 seconds)
  done (took 8.979755009 seconds)
done (took 168.686841847 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.999491379 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.000189998 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.999464062 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.999044317 seconds)
  done (took 29.924524539 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.036127989 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.035941086 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.045755859 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.036531351 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.026740368 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.030145891 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.036397569 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.036784941 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.027483348 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.034085755 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.037437963 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.034127441 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.035089922 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.045531548 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.045637044 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.034813187 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.035946478 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.03731727 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.028459757 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.046788012 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.037079523 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.03720643 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.002171649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.000959439 seconds)
  done (took 50.73296618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.189634872 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.068537777 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.156469687 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.048148281 seconds)
  done (took 10.391211084 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.002792708 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.065687597 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.054067885 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.056038758 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.088446585 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.105042814 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.055557223 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.213978347 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.118474986 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.129402311 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.010012508 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.022775929 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.028094536 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.055728496 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.106094156 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.002870394 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.002961418 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.118965118 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.064763554 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.215557643 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.003938222 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.058041773 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.098868872 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.057055665 seconds)
  done (took 51.663534502 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.003728817 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.011882147 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.011860135 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.005934788 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.005010248 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.005808927 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.012893481 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.007322499 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.025999177 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.007628809 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.005420937 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.004989787 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.0112328 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.006479165 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.00595802 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.018686935 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.019871238 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.006561092 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.009750242 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.012663775 seconds)
  done (took 42.128619766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.003346321 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.850273091 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.349191699 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.255413007 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.00324353 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.002372732 seconds)
  done (took 32.394763741 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.017567799 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.012795818 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.004598987 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.062146687 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.147712345 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.016013685 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.00542127 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.016816961 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.053965547 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.07584336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.027319358 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.034226572 seconds)
  done (took 26.40611781 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.0060867 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.008261651 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.007752607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.019295183 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.017164663 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.013702338 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.013416018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.004958589 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.021520087 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.026049116 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.014620142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.017590454 seconds)
  done (took 46.105488929 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.220269684 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.232773979 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.214856097 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.601541707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.007049553 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.908609816 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.62278174 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.640138959 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.29217095 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.97990763 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.971363912 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.887819562 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.246990548 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.008322026 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.256552652 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.930039763 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.00693386 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277764875 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009099757 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.006798876 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.296501741 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.058224026 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.221902665 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053953762 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.221966551 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.486373511 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.260447465 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.265433484 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.338611513 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.05520816 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.204630953 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.059692669 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.018721076 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.024871544 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.01285205 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.021665139 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277876206 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009155591 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.017658924 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.018266972 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.936053308 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.293199006 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.116538548 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.418387543 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.128332356 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.247956526 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013530769 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.199124973 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.074658956 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.224482011 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.107476351 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.221409958 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.934724989 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.29730731 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.128023941 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.01176043 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.014126778 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.708463435 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.249068385 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.092607417 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.296407424 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.115405621 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.011364437 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.098006666 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.009637474 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.123372407 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.379737828 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.014623548 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.007777506 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.017927823 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.106491514 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.222627038 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.01011159 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010657026 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.028761863 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.012749629 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.360723273 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.573123354 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.004253119 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.576453989 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.495817093 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.986237975 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.493910095 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.063232411 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.285669459 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.224609607 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.197712266 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.257611653 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.8992269 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.018797578 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.819152001 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.09543806 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.092318771 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.014825837 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.210000929 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.281416819 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.124700017 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.012928993 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.93898632 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.024902004 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.215681212 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.548707251 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.075967646 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.013281887 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.014516558 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.01662344 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.01594513 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.037329747 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.030441995 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.537889908 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.292762554 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.113510652 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.265198962 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.004043497 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.694222286 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.279334543 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.134985497 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.599545055 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.139913733 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.014622003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159042289 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.027789565 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.018406365 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.39240111 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.42496756 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.211065306 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.265749466 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.030868931 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.048321361 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.019753708 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.098166391 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.242543352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.016249752 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.252864863 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.255647097 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.677606022 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.018885426 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.090317753 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.024445453 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.229117355 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.097227371 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.540761897 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.224387611 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.596274615 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.00544409 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.516061451 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.240900238 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.392878089 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.031426668 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.201026449 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.053772847 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.718141697 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.941393302 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.021784644 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.344631488 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.049804675 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.112488056 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.018578532 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.018416539 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.024541811 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.097452456 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.086781528 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.090270993 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.943207049 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.019965096 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019544307 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.016675003 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.55842711 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.631589281 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.306996436 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.017970776 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078424996 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.018563911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.617762743 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.02153978 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.140157753 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.026307753 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.759808249 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.045010881 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.237906161 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.405803394 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.129683831 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.017981112 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.027627718 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.718492677 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.027573862 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.718293712 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.296787496 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.014024144 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.462940175 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.075546733 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.202931145 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.038288552 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.019222947 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.020810376 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.020159723 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.221623627 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.523199253 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.299864215 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.342361254 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.10371689 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.28213817 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.204308046 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.502532498 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.698740622 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.520168901 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.244901512 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.020123467 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021611392 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.66573042 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.026973303 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.235553845 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.223042298 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.286614671 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.305548259 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.430033602 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.025361536 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.037892236 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.261967477 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.02005089 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.450893034 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.033142415 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.34693051 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.829640061 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.280161826 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.085704427 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.032589682 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.657305283 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14329253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.979538845 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.138910356 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.947144678 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.636914928 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31106645 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.29214614 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.99933124 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.353621327 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.312146656 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.235621423 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.642871291 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.022264577 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.070702122 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.101930985 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.021771138 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.564460978 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.068515136 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068139321 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.026876364 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.020722037 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.024148827 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.695831571 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.102003863 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.142423801 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.680301915 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.53716751 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.938801171 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.286230431 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.073380461 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.463895763 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.056886218 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.235595004 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.027854508 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.613656319 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.077010825 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.286471248 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.974670844 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.236115428 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.217494394 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.050239066 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.029240576 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.948875032 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.907325203 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.028400684 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.220008509 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.916416306 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.025839226 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.311730204 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.640328645 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.067642934 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.025524536 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.30864705 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.381867096 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.27502752 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.03093438 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.237211656 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.146119087 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.943221997 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.510865374 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.610671731 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.725273197 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.036296838 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.229313848 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.31118368 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.318785012 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.068945144 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.094966943 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.290176145 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.997600366 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.026311278 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.547177645 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.123069551 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.26592039 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.327590779 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.540588144 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.357724134 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.450886475 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09129395 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.23476707 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.375685124 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.264097551 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.029770066 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.117801559 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.241660436 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.299052936 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.909559179 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.738003598 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.26914655 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.032628751 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.97638111 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.232992794 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.525698786 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.379981612 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.562730997 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.227318829 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.061214885 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.515064114 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.041812759 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.960814192 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.028195138 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.979931712 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.240716197 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.229150425 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.072876429 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.58447843 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.248303243 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.41495125 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.273831114 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.072997054 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.953911237 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.640378077 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.974896013 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.049244528 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.066724409 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.099851735 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.030763123 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230684025 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.467154581 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.076428458 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.559075032 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.225880426 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324823128 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.292595828 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.314167077 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.981401074 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301396041 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.976111385 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.662945159 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.122858698 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.120750828 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.028310526 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.032880681 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29928996 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.313244781 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.628653868 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.070425933 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.317014421 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.121907286 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.032026147 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.035429569 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.529091373 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.270677219 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.245366817 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.107264937 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.174658635 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.10345812 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.543842933 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.034256368 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.032817733 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.166334197 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.030625563 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.680112053 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.323601519 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.762061025 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.232831993 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.550967004 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.907784955 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.241553674 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.082628147 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.030208144 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.037669734 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.039122132 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.270432929 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.299583883 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.788206404 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.036111159 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.031309184 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.893301013 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.659632556 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.264484188 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.045981481 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.089126286 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.036270246 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.14866199 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.031305762 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.291217682 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.081259399 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.032534707 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.037303006 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.248021785 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.546548541 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048078624 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.731130475 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.23617077 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.034942779 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.519805162 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.492858092 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.29590501 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.081741176 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.229891759 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.281003556 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.546651553 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.231148209 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.03621617 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.258868184 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.035029828 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304532034 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309676909 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.034242789 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.249172178 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.536701318 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327781838 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.042966283 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.904731474 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.042821862 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.301935206 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.081914675 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.033526975 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.043792008 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.573493601 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.664743235 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.491233072 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.182256473 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.325915394 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.747247882 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.789898561 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.035698763 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.037886004 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.652551571 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.759156003 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.24857365 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.325282726 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.981475304 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.238582594 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.738477366 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.034150989 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.299621879 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.959845111 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.036861708 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.667335731 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.314896362 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.969992525 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.039899418 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.623984775 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.033723972 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.118922245 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.035505572 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.152292541 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.306626985 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.373241773 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.14333454 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.674917255 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.655576219 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.974448524 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.079261003 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.840838903 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.606900324 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.651324418 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058130695 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052881539 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.961759259 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.038971947 seconds)
  done (took 1719.252892265 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.038035248 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.10156457 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.102122512 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.095838467 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.104581445 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.114539311 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.081604774 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.067450834 seconds)
  done (took 58.667483021 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.036103765 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.052071207 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.040376796 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.037515226 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.052871824 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.036768955 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.256899898 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.05539535 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.04193772 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.042490517 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.037658585 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.038851805 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.373770259 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.070603569 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.036782259 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.039473731 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.047809757 seconds)
  done (took 77.272946827 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.039896527 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.333048844 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.094797763 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.041629736 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.89259228 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.058796309 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.134993121 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.063365517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.044142036 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.183805878 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.337914567 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.089385297 seconds)
  done (took 92.277564879 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.043088544 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.038773203 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.03896084 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.038043322 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.038476887 seconds)
  done (took 12.16581453 seconds)
done (took 2251.317948697 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.317281558 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.0966164 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.141403215 seconds)
  done (took 6.20061983 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.188085842 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.233567256 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.38426115 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.1060456 seconds)
  done (took 10.883017456 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.322986301 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.404027536 seconds)
  done (took 6.689903327 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.402050158 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.042212455 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.423118544 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.040364636 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.045786735 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.04506865 seconds)
  done (took 23.099761346 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.040864139 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.040680751 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.040136124 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.040590177 seconds)
  done (took 10.126277495 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.038745081 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.716854369 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.039514898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.053526143 seconds)
  done (took 21.811895333 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.181821968 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.049357312 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.178490878 seconds)
  done (took 8.373701246 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.187292894 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.877570274 seconds)
  done (took 7.028710552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.181157223 seconds)
  done (took 4.145458039 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.069516097 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.313581413 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.53923497 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.589718981 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.659548298 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.829278593 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.365006427 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.315140354 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.447970999 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.484610511 seconds)
  done (took 26.578366426 seconds)
done (took 141.084777498 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.40269859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.065973418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.239883514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.402567067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.272575937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.237887463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.258958407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.389137661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.076744826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.064435301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.406435376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.269032144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.203169863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.055600141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.21709223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.05702267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.267650451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.411497017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.076290366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.321968219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.269469882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.049861198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.245715323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.063049217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.26988011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.189646668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.59611109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.058340462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.229103971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.602354319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.190932165 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.464797667 seconds)
  done (took 173.892411222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.042327137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.042786366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.044522205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.046866452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.357688785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.044294743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.045173003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.042949199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.358887758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.34899524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.043194625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.341032495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.043732518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.043260633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.045622379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.043618309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.508902341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.045548912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.04550722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.045136193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.044617825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.189193675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.044420532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.206676674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.499287189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045954258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.045265172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.044659355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.045309233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.046147511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.044389022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.044666075 seconds)
  done (took 213.849978602 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.043793807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.047424611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.043572032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.045695894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.045789699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.045582234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.044726483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.045214857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.790175232 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.780169288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.044908606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.046046945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.049117386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.046547644 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.048839351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.046072348 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.045720437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.046988497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.046474908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.044257285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.044995678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.680830845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.045188042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.686124254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.045042488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.046764227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.046416681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.046665356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.050439225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.05030892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.046606052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.045716348 seconds)
  done (took 226.202610728 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.287424856 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.048006747 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.049219244 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.075938616 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.04995026 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.04838228 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.045416683 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.293748947 seconds)
  done (took 20.872996854 seconds)
done (took 636.798114922 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.435983508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.808907163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.190931257 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.075494601 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.343997599 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.121750885 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.06914797 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.130999764 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.911585494 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.147591589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.494589612 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.074323939 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.883060646 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.099100249 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.188271856 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.128978288 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.434925688 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.792622253 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.205107205 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.760749505 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.229409869 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.027825852 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.148989427 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.944141616 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.504700622 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.051584222 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.093627064 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.449356736 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.075036013 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.227075968 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691735608 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.36133612 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.083158811 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.06925588 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.124786545 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.102385489 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.284546613 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.080778416 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.187974303 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.822047836 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.745135198 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.794889335 seconds)
  done (took 108.370261423 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.061832258 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.057636351 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.057589984 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.058428575 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.065991908 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.056601179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.056608553 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.057100849 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.057684534 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.058163013 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.058448415 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.066722025 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.057590885 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.067241022 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.057531623 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.058373518 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.058357989 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.066061214 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.059913794 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.057994972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.058421077 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.058509228 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.053354807 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.057662908 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.057395913 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.059488291 seconds)
  done (took 55.527602167 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.052236138 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.215191835 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.288427801 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075378946 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.053465481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.054861235 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.0807523 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.058837152 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.054024579 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.05410266 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.170138768 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.056218209 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.063875084 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.290946382 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.069391015 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.052000458 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.053844217 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.053383456 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.220781241 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.067698302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.082013555 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.061149238 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.081523107 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.068309518 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.054634816 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.054060423 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.056725052 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.48625981 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.065111692 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.170218024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.097801281 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.084842109 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.4126339 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.305187125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.109411368 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.060803073 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.05255648 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.17730918 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.061326292 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.054038831 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.083156016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.061776697 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.292837845 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.586644167 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.070541086 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.054014707 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.486627216 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.189358407 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.095127356 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.066589945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.302412194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.072359869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.056138093 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.055682094 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.089817614 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.068741238 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.055592796 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.353649755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.073554155 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.08471351 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.063690194 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.0561789 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.230722606 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.064747189 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.217881752 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.065453136 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.061267397 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.056565424 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.295382887 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.073083395 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.599394605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.071029892 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.056418391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.17492626 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.224599782 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.509146359 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.071448613 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.231886734 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.430472938 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.094428052 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.067913528 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.469636557 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.09771252 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.068055775 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.057669731 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.055836465 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.056952116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.102657176 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.082914575 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.514030502 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.60055001 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.372379014 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.096832944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.069996936 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.058250053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.354649239 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.068221217 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.057951398 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.287475635 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.613329774 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.073262291 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.063813159 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.579579949 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.073485766 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.086167417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.069860197 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.308271872 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.075901895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.102109384 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.057596093 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.064036908 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.060465141 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.08793676 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.070283374 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.057829744 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.573154164 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.196479819 seconds)
  done (took 254.262001268 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.058431317 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.057860281 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.057601053 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.058430131 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.057377323 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.058773806 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.056265446 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.056007644 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.058743032 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.057238067 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.057667354 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.057808657 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.059795628 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.061010941 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.528028859 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.060926569 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.55595409 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.059803911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.05860153 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.064519058 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.671561017 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.063919006 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.058527238 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.061153667 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.058858983 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.063459418 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.06208842 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.11234974 seconds)
  done (took 173.277458699 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.061395105 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.13858608 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.073865156 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.108510247 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.073714177 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.061111656 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.236030254 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.085565738 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.067008544 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.061603931 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.063181399 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.093800218 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.072325691 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.162316226 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.100995962 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.169755259 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.166895958 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.071235347 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.063600426 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.062820936 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.110161726 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.07719009 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.094169814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.126342697 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.076103923 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.116971663 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.074824212 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.066391906 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.061775322 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.199542397 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.085079481 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.094984598 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.09710407 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.084580135 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.180954035 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.179520531 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.166990148 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.166389985 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.070009557 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.063457148 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.063404325 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.064296028 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.119138808 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.077021875 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.064384349 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.177993922 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.083409488 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.062920243 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.063457162 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.063974493 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.079080751 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.082653023 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.100356895 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.187831742 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.113009568 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.089914027 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.160382246 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.188384129 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.064074364 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.159949418 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.070045402 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.175940922 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.085294281 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.065145513 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.066517984 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.067251059 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.114508821 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.174521652 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.168524925 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.073756866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.161803335 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.121528291 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.078417744 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.065517181 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.066730633 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.121103624 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.175873184 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.120834685 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.127420826 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.100825932 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.07677817 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.065155732 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.065164672 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.093385802 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.076019132 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.178425815 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.185421562 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.073516272 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.066630596 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.067482807 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.067091002 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.090793903 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.129270055 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.107489083 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.173812767 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.104030279 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.106892382 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.075695406 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.080924377 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.071953561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.100954919 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.075077312 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.079473342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.350871497 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.09762568 seconds)
  done (took 223.10217006 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.445152747 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.113525344 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.141071429 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.335196396 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.434119086 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.054157814 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.106020237 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.117657261 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.125403651 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.248581163 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.178068342 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.158939949 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.105970172 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.088608169 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.113811052 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.128088569 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.143620759 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.411187367 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.309381048 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.638617964 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.110108767 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.41334568 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.457922083 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.49884161 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.16205714 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.513930262 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.699968059 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.215348518 seconds)
  done (took 68.462176641 seconds)
done (took 884.973001286 seconds)
SAVING RESULT...
DONE!
