cset: moving following pidspec: 6921
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332933041 seconds)
loading group "string"... done (took 0.593550695 seconds)
loading group "linalg"... done (took 7.348425559 seconds)
loading group "parallel"... done (took 0.171128013 seconds)
loading group "find"... done (took 1.171881787 seconds)
loading group "tuple"... done (took 1.781628725 seconds)
loading group "dates"... done (took 1.217822204 seconds)
loading group "micro"... done (took 0.227514497 seconds)
loading group "io"... done (took 1.037097711 seconds)
loading group "scalar"... done (took 40.368735521 seconds)
loading group "sparse"... done (took 13.395217374 seconds)
loading group "broadcast"... done (took 1.017289324 seconds)
loading group "union"... done (took 14.209170241 seconds)
loading group "simd"... done (took 4.698591632 seconds)
loading group "random"... done (took 9.477154508 seconds)
loading group "problem"... done (took 2.013679592 seconds)
loading group "array"... done (took 22.498667546 seconds)
loading group "misc"... done (took 2.032709875 seconds)
loading group "sort"... done (took 3.414437064 seconds)
loading group "collection"... done (took 19.238472746 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558447643 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14503831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118445805 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142139063 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191634201 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134933066 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145428381 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085776295 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986521688 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163732199 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142805458 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518534815 seconds)
done (took 5.164976831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.197075648 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088233925 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098677871 seconds)
  done (took 0.968831961 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066120463 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128837087 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081866638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067807601 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067524661 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0824918 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067626892 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065866159 seconds)
  done (took 1.350435956 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075087108 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069382806 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087362899 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070062901 seconds)
  done (took 1.088285925 seconds)
done (took 4.460849072 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.943146063 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.261346858 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19210279 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467209644 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152789055 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190726896 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66838726 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338110021 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216148896 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103043111 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106756235 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39261738 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1079382 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67415554 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076177375 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109359904 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161198079 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423014166 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084442206 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084466574 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105516077 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14293197 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103947082 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079026701 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16926423 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071048908 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154198027 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096444166 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068686774 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249747785 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191780388 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692222522 seconds)
  done (took 10.703418553 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099842279 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121938821 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069720079 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142780609 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122001028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072301737 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072083963 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086851675 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093244835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162358434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118752219 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124474206 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067887178 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070624282 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103371463 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232591094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094679794 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105064919 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074682511 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077278507 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129330837 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0992098 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08173312 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096523986 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152534747 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195591016 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098569577 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113156344 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069466161 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100078176 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131522596 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132978955 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06607186 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084357687 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160143954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096381232 seconds)
  done (took 4.71644048 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.110206644 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176463361 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094276146 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157158397 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087110488 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131731995 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067301763 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10267366 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255080395 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107136851 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492400386 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131115219 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088971972 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068542768 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088889015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068641495 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.614942297 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145863911 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105313788 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103630305 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075125495 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08824962 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359682855 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069588759 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06685823 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085652899 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060249976 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149425081 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068978535 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.262720538 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109893382 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06940192 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120727451 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.187556402 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097467672 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125760648 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083206467 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067265469 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172917908 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073293856 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085496466 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090609585 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098436106 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122776363 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12398332 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069992757 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086421613 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182828453 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068352794 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100797575 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065096193 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.947970078 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16676988 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078269876 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066025577 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297437715 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103851096 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068592626 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064700125 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26731202 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.160431573 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109514872 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07431212 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067452937 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086190085 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071275519 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373613999 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08708063 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.730893814 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07246251 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079701534 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089131624 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070267653 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093728832 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075723284 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104779394 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069533645 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069835825 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089199857 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06780598 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088557513 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089327149 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20884128 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089047328 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068243968 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083580409 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089870088 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114685183 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071116311 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065915492 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118042165 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065348207 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086250207 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068437288 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122000805 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067781884 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104750026 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086061379 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115053971 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083902796 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.129024499 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069353393 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117120628 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075085242 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117050548 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10196511 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069242625 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157731665 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065268464 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083702474 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067784682 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083231562 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069184764 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068527045 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100653132 seconds)
  done (took 21.508861161 seconds)
done (took 38.823278759 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311431163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096000134 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095018473 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077132057 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096430977 seconds)
  done (took 1.539030826 seconds)
done (took 2.36955018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151657317 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103930522 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0828002 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098510208 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083326546 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104199769 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118821769 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081911302 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12234672 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065882409 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119427978 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066169586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084445649 seconds)
  done (took 2.147209312 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083621354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085265507 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087986698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082302451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081498896 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083943764 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080637844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110489184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081923381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092482078 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066854546 seconds)
  done (took 1.764797466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081751584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084076375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088610091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083134689 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082975492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083708855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081083572 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106668563 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083150223 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092553798 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067165397 seconds)
  done (took 1.76891599 seconds)
done (took 6.50345198 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080042818 seconds)
  done (took 0.904304732 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.765988398 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.982329776 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085421461 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136748641 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.226177233 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158566853 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.460742515 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113821064 seconds)
  done (took 10.961165135 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.117028172 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094279055 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071232797 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092920057 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074745776 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091826858 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07534878 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072051316 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094443408 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072031046 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092761544 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07426117 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091080564 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072515961 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087879696 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073306406 seconds)
  done (took 2.237979634 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105596404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106194055 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095281493 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077738999 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093161594 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073957193 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095104978 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076074059 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091802177 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075551384 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.097109165 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077785 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093988324 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068633331 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096062457 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079597623 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093285588 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078058409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.097513812 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077709953 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098414943 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068086832 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093501203 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078717464 seconds)
  done (took 3.03320003 seconds)
done (took 17.966981967 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136580636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078496178 seconds)
  done (took 1.043173297 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084303964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100825278 seconds)
  done (took 1.020468718 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085318259 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083903379 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091136388 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097879203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084204166 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068363827 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107271305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069761855 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086141401 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07093483 seconds)
  done (took 1.679593148 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071351984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095685244 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073968764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.102246094 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077813486 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085307589 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077756073 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089529154 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083597959 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084370608 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073966062 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.104242848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075080294 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105765693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095421995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073046932 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091720577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071444785 seconds)
  done (took 2.371219266 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06862634 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068341228 seconds)
  done (took 0.977608468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070157142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064334988 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08511689 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067602533 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08273066 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064461753 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083712657 seconds)
  done (took 1.356737284 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.41793385 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110304571 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.276477387 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075149284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.111576419 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308151348 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069354391 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073451068 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09361497 seconds)
  done (took 2.417472298 seconds)
done (took 11.698963394 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082320681 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086489425 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117132034 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.446190512 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111188424 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067893706 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151085429 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221330345 seconds)
done (took 2.121790099 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129096226 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633198881 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.416263719 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219402961 seconds)
  done (took 2.11079925 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.390274173 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094407682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078019086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071010384 seconds)
  done (took 1.478053866 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067520228 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070268161 seconds)
  done (took 0.984861192 seconds)
done (took 5.54408686 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068468639 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068931828 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.120425478 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066112999 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089216408 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066852059 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066006149 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086949443 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068922045 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087755609 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070188886 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068184658 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086501716 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070109789 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068496905 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084457387 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067320543 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068075162 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085871906 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066682673 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08436835 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070482692 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066525278 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08433971 seconds)
  done (took 2.713919417 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086756627 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084962027 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074616388 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089874121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07448671 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091731648 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078752341 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068653035 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093827911 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071697946 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092295931 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073346222 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089069455 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073936706 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089096829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074864575 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093084742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070183492 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071006579 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093302171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074245262 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089302219 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072099462 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092928914 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072979924 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092282845 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071211601 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.087577822 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07492587 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091649291 seconds)
  done (took 3.302197765 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07343071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064083748 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084860809 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073996745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065752317 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087087543 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066099064 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084600533 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068120947 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065596345 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.087464654 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066807351 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065609865 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086671379 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067340753 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087808471 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084320909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065610754 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08585034 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067616503 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087679945 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067731916 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065796301 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085735754 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067287198 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065428514 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085598449 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067012187 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.084973667 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067467803 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069663762 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08894277 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068263615 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072881002 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.089086008 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066434699 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070010007 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086404465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067379159 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084073523 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066851139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066290903 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085041805 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07382345 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065999622 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088627925 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066929117 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086444475 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068337378 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06868619 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085963747 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066715271 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086503443 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068858926 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070044036 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084756541 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067809662 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066546569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0871113 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066362793 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084165814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067439047 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068329088 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08593017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082754608 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090178315 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068226282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068152256 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08673261 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069671232 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067971753 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09924107 seconds)
  done (took 6.283668813 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122071898 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094182073 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086484438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067977095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080913713 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066400538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069083084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083616724 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067432411 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090601317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066743829 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084951499 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069243789 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080866501 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085298106 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069510836 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091168443 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065980827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066148309 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089057303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067399628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089169659 seconds)
  done (took 2.608731944 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19365842 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090183757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111499182 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096030983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089101102 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077701686 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090301131 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075029821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072121949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091387882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070982729 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092606527 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071262218 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090177974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071048307 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090297919 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073775824 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089700063 seconds)
  done (took 2.490117007 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08052627 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06733036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108893328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06723338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089325341 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071614843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095142859 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078098544 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090950851 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069262819 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09690202 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183405204 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09056072 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070010791 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08805525 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071081498 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070905129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088077203 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07862148 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092956244 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074285692 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096825186 seconds)
  done (took 2.774335645 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083658947 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068725028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105024633 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087659003 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066517307 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067807422 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094942047 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069740455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09319795 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071882556 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087620993 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070736013 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074100296 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088720885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074369401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08853391 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071785213 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087282684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072168057 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06478889 seconds)
  done (took 2.444892994 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08975517 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087905784 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071677076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098271934 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071469957 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089508627 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080374464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089175607 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071166389 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114185374 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071470122 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088664843 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079963932 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094967486 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070568781 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097700822 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078915964 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098546678 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087696944 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073242166 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11356408 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071504809 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097932278 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071407277 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089449688 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071313839 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088995739 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078697526 seconds)
  done (took 3.248289558 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068818073 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067907811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083006996 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066264619 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065365079 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085316734 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067808872 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066649664 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088887001 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06757707 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.086583763 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070179448 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068873888 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08686101 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070218773 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068842866 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087778135 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067593734 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066210715 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086627453 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069323476 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08687123 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069737822 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066883218 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085515696 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07031709 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066093082 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086045004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069717882 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066969189 seconds)
  done (took 3.086505877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07899697 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093565532 seconds)
  done (took 1.034358523 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066520011 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082159498 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084516159 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071425368 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091236808 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070181924 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096796179 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074537457 seconds)
  done (took 1.496117789 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085302741 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079410342 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089063519 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099925628 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082368765 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086746117 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165505616 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090512587 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077195704 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088409134 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085684916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087366039 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07693493 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069397415 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09538804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076498258 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084966212 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076618801 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071421106 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087900044 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071537961 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100964795 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072512627 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085013377 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072303956 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078625588 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10231195 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070263981 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092469095 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077200205 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095135993 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064096795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069547541 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090120792 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067562297 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099523988 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086815409 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092638001 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078961533 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090147212 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08131675 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084148376 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075398485 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094285729 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081292709 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069558406 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090586479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064606142 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085476812 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073376284 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064446822 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089085535 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064495527 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09510497 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073946467 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079472799 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088720672 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070938052 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092104414 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074214516 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094461684 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073287447 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071924897 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089191907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077393082 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092609501 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081439125 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083794639 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064875495 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067895473 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.100524536 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093566567 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095829349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071260102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090656104 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068227101 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072528319 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091708431 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075091462 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095766097 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070312595 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094902465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078588676 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088485221 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07412234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095850873 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068655708 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071431039 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087566984 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087853749 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088194452 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067844102 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066148068 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100937123 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073121695 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089423385 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067630371 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095634892 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0648657 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07030118 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090565914 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070146422 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100590733 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075737392 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095551968 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078982695 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.097391791 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069979043 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091599225 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067276183 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071086384 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088553808 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077788125 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082004959 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073833697 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070302361 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089782815 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078628303 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087428476 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070685414 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095649293 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076441538 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067930994 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086026358 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072889276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088907922 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073977644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096876859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069352311 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064376845 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084299456 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073295733 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086930328 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074873035 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074595142 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093395403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064361854 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087237357 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075385446 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099475756 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071194692 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070608287 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096162343 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070708649 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089072035 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077833779 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091285633 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070129855 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075584328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090209808 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065075224 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092476007 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073019592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067966784 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093531018 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073406741 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092568077 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070806807 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087160489 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077501936 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070126593 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088724081 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069883849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087398052 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08267216 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089827861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066276527 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0663509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09742247 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06838974 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087658011 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069842853 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072328911 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089903828 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068378801 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087887574 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072450237 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099722338 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075574688 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069599185 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096473607 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081080002 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089098163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072908345 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088907956 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072337705 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070191838 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099648428 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074675474 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095456114 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07243604 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086218121 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076288776 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09566365 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070442161 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066928342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088010108 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074477171 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095018183 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074536415 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088907778 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068965795 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070049711 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093177288 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073396644 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088474356 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070298015 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074026467 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089261444 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076438598 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090693285 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080147496 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093461424 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065114893 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092304175 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068969839 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075666939 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085248261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068244276 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08709035 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072471554 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068293593 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092787595 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064377428 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095300003 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078684759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069343046 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088967977 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069745579 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095852975 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07232757 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091877482 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074733899 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075339812 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100354486 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069534916 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092343551 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082180135 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089400302 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065256448 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074425957 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.088728649 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068817655 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087597346 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068609444 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072130123 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099598819 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076251345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08328268 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072384952 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086905406 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069559684 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065063756 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094437309 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073445603 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090054464 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076964185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069769898 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090626425 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072745559 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08855098 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070934272 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08933697 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074062493 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07017139 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092887239 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068986945 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092725805 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069267974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066870977 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092688074 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070069151 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089567511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076892307 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068481529 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091054022 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072981134 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090558534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071021451 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088893953 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070864238 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07313811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09072596 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070290383 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0903625 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066209602 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077387174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089589763 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077884861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089766916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067537975 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07505582 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092468897 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074974733 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091547504 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071142408 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089974428 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0705976 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072380771 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097287971 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067426075 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101545415 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078495465 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090667432 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073206458 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06877265 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092924674 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069439861 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090438139 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071521643 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068874363 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089435219 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074956045 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093153319 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070728886 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09051028 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07269475 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069748143 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091077694 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064763567 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087399008 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070812908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069457726 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101829001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070389919 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088923135 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068967934 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070424158 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089815256 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065812898 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097970136 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07950177 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09059562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077090196 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089186825 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073113904 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099741792 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.068271681 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06807089 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087716358 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068653604 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095853004 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072734193 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079406322 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09047407 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069634883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085305443 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07186915 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068178723 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084809411 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068161219 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092052365 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070482199 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069128343 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090630812 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073665188 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090468855 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081830105 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087460901 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07223661 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069939488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087308309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069399027 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068349181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093427606 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07095844 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088161504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067649596 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069083709 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090599826 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071736987 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08924004 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072353673 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076926355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091069878 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072499042 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093381572 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064910179 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092309491 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070783931 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069226842 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089996033 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074627581 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09345034 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071910027 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098567587 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.071176326 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070293794 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090741486 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067455748 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088597862 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071022905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06932573 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08988961 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070862319 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09890051 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068953096 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072430593 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090247657 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070737163 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097755272 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071176188 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092089169 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078126487 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069180899 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092415695 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077457777 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094499776 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073292758 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091287246 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072464471 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094473802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069813774 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075648372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090735182 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071749687 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091295143 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068942554 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069805634 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090757806 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069449818 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096515491 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072294225 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068628609 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089962563 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067658997 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091381677 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074477049 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096614859 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074063485 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072240903 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085519412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067813111 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090205071 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069576431 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072099708 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093742864 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07588528 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091348937 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071324034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068819514 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099942724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07556163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094291443 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067899373 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092370536 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071626024 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071829236 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091682505 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070328168 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091277362 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074573693 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070752589 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089908956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07685018 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093839363 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072251022 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090868115 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072184856 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070446245 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085724406 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07143942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091306687 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076415676 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071474547 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091005559 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080879755 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087713111 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070493863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092410842 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07122012 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074188012 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.086124653 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072198982 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090798842 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071945507 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06451595 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089836482 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068427243 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09163296 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070046938 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06490105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10243213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07902343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093932385 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069215205 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088155756 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066837429 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065424114 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089601446 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071723496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090700364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081944242 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068072043 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089904688 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065611889 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089379607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074535914 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072488055 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087748532 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064955336 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088559075 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074179001 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074195373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089682691 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069815509 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093958395 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072563364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066930384 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095078274 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067309306 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093919874 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084098244 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09172033 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071409348 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096017833 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079818191 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070408278 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08718459 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070892192 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093676878 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070724725 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089975073 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072312207 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105691957 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075122841 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068869694 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0898539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072747077 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08888682 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079792906 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070327483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091698556 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074688672 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092455562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079068071 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092475231 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079308473 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093367636 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074583208 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068086895 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091266634 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068459687 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088063012 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072291671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070232846 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096086051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07747839 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09052476 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081052699 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101111231 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072348397 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086804618 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070543079 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068655422 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086204522 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071943096 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0875956 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069655555 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068387962 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090541363 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071829349 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09534938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072658341 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071196407 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091094234 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064929778 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071187319 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095049575 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071180598 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087486845 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07145231 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089595389 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07624556 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073465552 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08926483 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071652821 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091735906 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07202597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064657637 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097626273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069266456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092300764 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070649314 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070408221 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092427825 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073668136 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096388156 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071393808 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091801696 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079583058 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07142788 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088971432 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067304112 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096104466 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068812422 seconds)
  done (took 48.872700973 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109922357 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085342528 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064587057 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083873365 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079250022 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087117334 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06586411 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065954986 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087040102 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068939951 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086101242 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065537039 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094569424 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090613456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099244371 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09028829 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06640995 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06625624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086117911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06661647 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095507653 seconds)
  done (took 2.614285581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089195817 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106222289 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07991903 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104967478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095978357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081892273 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101645673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080987255 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105887092 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096175479 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084127285 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101212144 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077149916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.0986044 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076709545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100338626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103965618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076513605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102087061 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080929746 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100540775 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10001932 seconds)
  done (took 2.949545644 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070026446 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066975659 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090835419 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065259967 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068287705 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.086311204 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073133323 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.087924673 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074214103 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068325882 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.090685395 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068159009 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099804211 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068680377 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069495801 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.088769952 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.138104338 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073682581 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089703663 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071969748 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064611475 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093299437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065769306 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084951337 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070201484 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073522843 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091863608 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067435872 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089317059 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069799278 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069481467 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.088970256 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071331063 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068802343 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.090587375 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068197688 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089514563 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070044419 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064440799 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088469924 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070301941 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085106738 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070874607 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070259119 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.089264 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067990336 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069858253 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.091193052 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064619539 seconds)
  done (took 4.738230778 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088054351 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.146156513 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09457576 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12831592 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085757168 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.099583828 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073310823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129092863 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.089143782 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069496743 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108278094 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085347741 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092239834 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074345358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097289939 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070509423 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091584096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069492159 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09430039 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070136891 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.094884062 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077015331 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105676953 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.103644879 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075884146 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06907708 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09053566 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074180695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.104588596 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095260328 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07588085 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096246403 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086138094 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093166434 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069306687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09212305 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087807271 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091649223 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071612456 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088380136 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072952711 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094283285 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078040428 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107572568 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06999425 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.096293355 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070595793 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087075819 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083898748 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093160951 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078075652 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106197841 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073177414 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.092058541 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0739873 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106448461 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089199427 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069290524 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071169881 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103292956 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08630889 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074827002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104254666 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071762837 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097124095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08463001 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.096329564 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0736563 seconds)
  done (took 7.058131477 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079973257 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095330243 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085278532 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106522948 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096132984 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077952443 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096883048 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076408896 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097778875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080909297 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097431371 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120076609 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071042592 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100091619 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075713762 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097749945 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075690014 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098264829 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095854755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07754224 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096701555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084423146 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097324841 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104965123 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107448034 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092950799 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075866565 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097249936 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106149528 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077276959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108865001 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075164636 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097587836 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105475627 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08859234 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097543778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068990461 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097638192 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07596035 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097720508 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070905732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106311104 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096506148 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073215085 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097113184 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076437714 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106136269 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109109108 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079943808 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102923661 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076130912 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106619556 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096203433 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076949905 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106294257 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131081496 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085183834 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10638536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096767301 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085088806 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106551241 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11393771 seconds)
  done (took 6.681765306 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091861503 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101090689 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102503635 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06685506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067039961 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096037753 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068260419 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088305097 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07976804 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099022922 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081538873 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09510048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075820219 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103706823 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094372385 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077878564 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095350557 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073800246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100805747 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07300994 seconds)
  done (took 2.650230659 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080876426 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108290054 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071610374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096911135 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075035288 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075061945 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.094888385 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072631337 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09264859 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073321891 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102361097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080370318 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09293279 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077068203 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102800718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07660733 seconds)
  done (took 2.294608842 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083962566 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.102257613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085520855 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093102698 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068619865 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087982301 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071153917 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064604321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088952259 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084519423 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.093611934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072415459 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091801615 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068789058 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066089909 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096499963 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065606481 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089674076 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069735194 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.106788682 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081309043 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090409928 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070815932 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092979034 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0718672 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096448398 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071550251 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066481111 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090871616 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070233904 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.092822162 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077615217 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08874253 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069390907 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088182172 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068842272 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069234339 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.092212211 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071912865 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091442482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06887461 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090089633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070775492 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070198863 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08807182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070771068 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.086849814 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.077205208 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067417402 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.093112158 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069203416 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094349668 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070799285 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102030672 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07350329 seconds)
  done (took 5.382321384 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085716634 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0721367 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087456153 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067775673 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093590422 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072949412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07229077 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094181388 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071087336 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089618054 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0729732 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09355356 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072208358 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072137164 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093333497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072843697 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087635928 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073246282 seconds)
  done (took 2.374115181 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077196815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069105412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098238535 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069575183 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091295456 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07308993 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065714294 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090525321 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068328006 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090667316 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071142918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071272184 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090988132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071863692 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0911176 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070749974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071505963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090601391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069964978 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087274471 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073048292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067679377 seconds)
  done (took 2.648832777 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076780547 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095233842 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.171304105 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.115118306 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085254944 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.106486038 seconds)
  done (took 1.57873976 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093607842 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103683332 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070741449 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112411768 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079524806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093226825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072597845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092145046 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081289687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107380277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070611686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103495587 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102553095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08366625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099718079 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076866243 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093883455 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071171188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092324333 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111252178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072529905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102354166 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071837256 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093539431 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071916824 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102238967 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100949387 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086891951 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093293709 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081644188 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099466886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071177945 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10322258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106380046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073585582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103035856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07194078 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112712946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098534888 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080502753 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09473187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078257036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102606588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075875079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102425721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093000363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07807996 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093396476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072929597 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119291421 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099577744 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079865678 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100086456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080529495 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103139632 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120527339 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107291814 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081333951 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10067972 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107128911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081234191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10060135 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079852458 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108157285 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100158741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080003816 seconds)
  done (took 6.98373708 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085301584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111693735 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07251691 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108128308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101629525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072529093 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09243162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072517617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093357513 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07280188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137507922 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072052441 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102670265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102468164 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07248062 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093628941 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072769174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102018802 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071299193 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118960869 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093278492 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08072743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10234942 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10209726 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085448588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100333754 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070743254 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094808172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07112499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094777202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097965525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073235187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102442019 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071688068 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102279048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072194598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09376091 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077249073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094185864 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097770809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082429738 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112167908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071490704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09452282 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107593456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073030052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093494666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072267043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092526631 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073135038 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106693518 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085189751 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107792758 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101957656 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071837769 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094163425 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071406446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094434031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072071889 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099479881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101629451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072616336 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119282454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071672246 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095048333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102110944 seconds)
  done (took 6.886418194 seconds)
done (took 136.039097724 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205618054 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189098159 seconds)
  done (took 1.323613832 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071404685 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119061284 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082611939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130807612 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090060675 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101399085 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121153667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081757236 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067767609 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09006727 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068440952 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090020635 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13374529 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068015836 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090031045 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070102641 seconds)
  done (took 2.410632007 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105824448 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200927811 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112605676 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066268228 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102901818 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080020378 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088380375 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078951388 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095516134 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068367834 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100172198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080067166 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066174413 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101962962 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09626109 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082928171 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068181244 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.104677799 seconds)
  done (took 2.638643132 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108953367 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153002515 seconds)
  done (took 1.20161165 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205106807 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126295253 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211126447 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.446074025 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.223610836 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.309360743 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.18670409 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.18688141 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169144783 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175221345 seconds)
  done (took 3.16964293 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101649379 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176157989 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.329332263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.146244925 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092520492 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123497447 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147610926 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.116420223 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087985592 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.109108033 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107502821 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082772177 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124540364 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079235946 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100374567 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081081855 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128358567 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075956088 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102151722 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079108026 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.127567179 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069550122 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102300248 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077661586 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.106036829 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083085005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092486351 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070210536 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102058489 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079373863 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105897588 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121049366 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084583012 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13974648 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.110557034 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.141105685 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102335035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078591941 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077677942 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099392243 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08107583 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104447193 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10943541 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08171791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06649661 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101162644 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067340242 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090816289 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084298515 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103827967 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082577486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104841708 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136607806 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101028746 seconds)
  done (took 6.618913005 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782797559 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141762349 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076670703 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.848625609 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121282261 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08699477 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768394519 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097401585 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244810959 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77809049 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119274004 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080943044 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.216472826 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.227366809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948274867 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296917133 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.65974135 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108771097 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110357145 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137706883 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.17014773 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16484193 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.156929628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.415300378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101937524 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076027229 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143432856 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10502338 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147565734 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110565031 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078282195 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163737872 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26161574 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.168525397 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078663529 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098412783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074199196 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183445656 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232990157 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.201261862 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16562054 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071933017 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073804615 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171630063 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137976182 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071422877 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148191567 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182793951 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.159304901 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076625653 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104187665 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151174367 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146766135 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.151284655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10814934 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306298955 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280341935 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097555933 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128631258 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08801886 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248609722 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10761463 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.190631188 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145917085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19895103 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074500011 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789380794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.156286114 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094909388 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08162522 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128336509 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077162571 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169251842 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151782461 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370128598 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.17479192 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077437619 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095496093 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192124251 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086815345 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097425073 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14877757 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100480472 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1070485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.177276874 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156050916 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.155755385 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216686701 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.175238898 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.149596773 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077220235 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131637406 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103086604 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.199433599 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204974277 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.148484479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.199221076 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145676299 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.168245204 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155146624 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082151248 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.15668257 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127087896 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10948217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14797217 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.203635648 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.130772276 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086192006 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098995916 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14633233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13302525 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087136631 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16644713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154312904 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437774873 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149626109 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091979799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087689486 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165611554 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14778927 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079572335 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249932793 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126691917 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153404653 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128775475 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071233731 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127947147 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147348685 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107603131 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130314376 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147991294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103346112 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.226027987 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178213803 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106939337 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225179021 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.146102579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1032372 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157731156 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128268751 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153726275 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105104768 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148441064 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078034311 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779502135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146171753 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125331981 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099474642 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171127659 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074238165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106860101 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08959922 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069585077 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815506755 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113001279 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08260105 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107336599 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076079002 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126635633 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163225684 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0784323 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148665705 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217539432 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080541832 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126925133 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111830929 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14792466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101536233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.088227412 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11087493 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086291384 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128075708 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099025696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087199364 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175262789 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.148970638 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.181002763 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581510853 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074023892 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11092848 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213840002 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075125338 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.279200126 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144994226 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208664679 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.151816438 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083026211 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307660311 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.151165374 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172045683 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.113482436 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161222369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071723035 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168418094 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.152862226 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074515522 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102347236 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151895229 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15478548 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151898863 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968854937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093282087 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214044058 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071296793 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.15765562 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102425903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082001927 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.278009053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073833825 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177686517 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.152723276 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07667494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111404955 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.839139375 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108024735 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145242278 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102752941 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18259618 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172169113 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145247121 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146707306 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102810963 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14957816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.197774882 seconds)
  done (took 42.605129885 seconds)
done (took 60.901321266 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289681465 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195074226 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260084284 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151018566 seconds)
  done (took 1.930287998 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.1560314 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111267137 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125599705 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090735059 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.109242644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091454488 seconds)
  done (took 1.643969222 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.446783652 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.289668964 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.251216462 seconds)
  done (took 1.950204355 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.310893986 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236185134 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461161059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.307807281 seconds)
  done (took 2.391884225 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197802882 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118216436 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091843655 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087417769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16582184 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268903232 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128507151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193761783 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079936758 seconds)
  done (took 2.342340695 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207565502 seconds)
done (took 11.426935157 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.289842285 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135765236 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.179628802 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129176307 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118130262 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074383315 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.142322302 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.110597256 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078346433 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.098400414 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075083933 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082024881 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.18078606 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134997061 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101175293 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.318009273 seconds)
    (17/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.20575886 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16144032 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.246230537 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081636975 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138655928 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.258223817 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077731429 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10336586 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084438517 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.188405051 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.257993365 seconds)
    (28/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117796813 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157268381 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.202333407 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09848995 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.24112274 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077316957 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076387871 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108517486 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.294213565 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070733314 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117335812 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.2574313 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078395488 seconds)
    (41/309) benchmarking ("sort", Float64, false)...
    done (took 0.154326568 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081551574 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.17337729 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075390609 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094974649 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102817104 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.1037756 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083263024 seconds)
    (49/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.1556377 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.308789772 seconds)
    (51/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097704333 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070389865 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12217432 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0815618 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066734562 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143345527 seconds)
    (57/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128303783 seconds)
    (58/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075956279 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075330988 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101751616 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097787215 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167173725 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096949157 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076687468 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12871267 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.242073758 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137145358 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055315568 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092199275 seconds)
    (70/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123353275 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.120560829 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.070843535 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.102565829 seconds)
    (74/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105610287 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119210967 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.111705264 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12625649 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094770857 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.176604662 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147099228 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113667221 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.100279558 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079661758 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233076235 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064957311 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141997899 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078472842 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.173317149 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100673735 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.232736078 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.123353757 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074742834 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104816989 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057306776 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.252170189 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077949156 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097113942 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175431563 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.226011823 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078539425 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05659492 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071024582 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134632774 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070612676 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.175617517 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078255033 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07914196 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08241528 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073042908 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 0.166935776 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077687597 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119459275 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138285917 seconds)
    (114/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099405144 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109292176 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076631415 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.269336832 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.26049908 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079489336 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074722636 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.257183591 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101978331 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 0.173326025 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070903684 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.079950995 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.167715679 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.119825151 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077956642 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069200539 seconds)
    (130/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.142412841 seconds)
    (131/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.188872406 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.278496256 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105152196 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.111392039 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055866552 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069058483 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10716864 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.266086781 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17317162 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.225922541 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.102607725 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069996968 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069062861 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.182524918 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121977065 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099228791 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.318426465 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054803166 seconds)
    (149/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062737275 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094365288 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071215825 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054870329 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.10155457 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078961736 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.12966252 seconds)
    (156/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.112697858 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094755954 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058616489 seconds)
    (159/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.203965805 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07080846 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084524018 seconds)
    (162/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097127291 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.261494685 seconds)
    (164/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.238472553 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098771861 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151909939 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10183229 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107076267 seconds)
    (169/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082874163 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091298102 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078925404 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055826349 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055999468 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198640484 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144928448 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075782829 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094257114 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055879567 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069484013 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135770795 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.245717492 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057226193 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078626437 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08067813 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070657164 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162076494 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.22411914 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080039454 seconds)
    (189/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056533473 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054971533 seconds)
    (191/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053982138 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080319502 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06876668 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095939959 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097852061 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069640382 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096183959 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055003628 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06866706 seconds)
    (200/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243511679 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175988503 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.079416161 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075783687 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067449417 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101684733 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075347812 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101554408 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078881051 seconds)
    (209/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.257379286 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146683945 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116774822 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067777796 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093122818 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090799815 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053751664 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079224968 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100253072 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097747066 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067301863 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069645503 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.094600873 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057438463 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068065397 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100574592 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077114522 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056362456 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207314134 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.170332685 seconds)
    (229/309) benchmarking ("sort", Float32, false)...
    done (took 0.156037175 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097561296 seconds)
    (231/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054171297 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101859241 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.224932839 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.080931727 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068174517 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053744291 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078931177 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056380745 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06627316 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086557215 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100656848 seconds)
    (242/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071553459 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152845511 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133487729 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.221513817 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091529999 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054923069 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054209118 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163980307 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053804706 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091117356 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092183464 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090578372 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150523739 seconds)
    (255/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076503065 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055092747 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064199683 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052995124 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079321149 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056127463 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07071188 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10129407 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099765706 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.096740074 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072205258 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077881942 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099788975 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056949795 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069098919 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.088720345 seconds)
    (271/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057761938 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065517482 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119443048 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085903716 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054767423 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096408042 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090551663 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095431236 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071548787 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064938298 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.103454735 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068805846 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053120373 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092202976 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200000427 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057262615 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077123047 seconds)
    (288/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082150292 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093649253 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099286227 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112239411 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07535351 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.100374616 seconds)
    (294/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06563295 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092782691 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057193502 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.210495168 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077165008 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054379694 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095332841 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067449254 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068806284 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.100437842 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133748718 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078314103 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198602103 seconds)
    (307/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066629094 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055297607 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054500959 seconds)
  done (took 36.622498152 seconds)
done (took 37.585355816 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086359435 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12011775 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080606086 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122082045 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08725146 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107998503 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07832064 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106958188 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086125143 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.11175384 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08568426 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057984833 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105637929 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079719747 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104747097 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09896849 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.109133646 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07741533 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.10227062 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06995103 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077752845 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095377314 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071781632 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058033171 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.107671585 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077187757 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.102876624 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080360847 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068692218 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095939068 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073045138 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.10216986 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07096756 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08319874 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.102446876 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077780954 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104869406 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082278592 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070388368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.096154556 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078940043 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093774929 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077715316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076633267 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.101053045 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075927995 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101539157 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086667191 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123849264 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073243181 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078256328 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.107769841 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081204652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.102933088 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074058842 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102795583 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077275271 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098217865 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.104821837 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071924822 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102741944 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079567766 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07427418 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.105144172 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078061237 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106606307 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080735384 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09968211 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081364634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074675699 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.095466683 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078505025 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097173513 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070863697 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080230216 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.106347466 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069779188 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074652826 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.103221857 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076046563 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.09466903 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073297254 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071090146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100967205 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072667353 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057872255 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.098956246 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076774556 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068387729 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.104375655 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075105306 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.102169419 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07271174 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103767727 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071284639 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075531997 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095130627 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071197738 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070855242 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09946071 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071033538 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071568024 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.104803506 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071716674 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.099644117 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086211921 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069069652 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.101979968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069183806 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092318373 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08834921 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07940873 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.096037294 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07296865 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092875528 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078631654 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068777592 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094478909 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070323479 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06904033 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10074994 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069686523 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096321397 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078491599 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083392508 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09832575 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073399354 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07116747 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094189099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076119886 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094000338 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070946103 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071611104 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.092045315 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073796135 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068769626 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102685042 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073366461 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10202197 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073369003 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078401089 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099468891 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076750853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074490307 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094409204 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062702318 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071221022 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094366227 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070038063 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091063441 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070435498 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067686606 seconds)
done (took 14.041884136 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070152019 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178559824 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131401002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10066005 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115798971 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068095234 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104427963 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133332445 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072860538 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133441784 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091272718 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113240373 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14377797 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070289119 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06911412 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097925225 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072543538 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.119994283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.109475206 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.117352802 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150963434 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069694133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129315264 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094563026 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117921033 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134305631 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070349191 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096166055 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07523524 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123487028 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091870975 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07093567 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095023981 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129336782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100597387 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113051948 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068699297 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112080604 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069682887 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067125648 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120749976 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128176093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083584971 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109462353 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070907716 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095658467 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070079823 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113700029 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093836851 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108498957 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115337042 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140757319 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07335286 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109767412 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067993581 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115045702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086451699 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094506312 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069274985 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070217981 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092132101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073709453 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115716381 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096607669 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097499202 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084528704 seconds)
  done (took 7.604292423 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091146616 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.123224389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090809865 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11423311 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070924242 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069651211 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09658116 seconds)
  done (took 1.68410578 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072971865 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092952949 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.121545427 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094599896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.118709407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117075604 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082711242 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07113528 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.114059288 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072172787 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116617603 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109358202 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095388929 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076994797 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117939518 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071668884 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117457595 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072077572 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072847272 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120491663 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073622561 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11707187 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073841567 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06871621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111947952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071004533 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14712002 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074864874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098475954 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074698211 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069204067 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149298237 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.113385046 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082048596 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09685922 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087894602 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.112198387 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070137466 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087578643 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103835001 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086162226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097868638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073290716 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069026875 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102281427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082345993 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.097477094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073184261 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073690682 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.118942937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073050573 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111729197 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072696724 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073909312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097891766 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077818781 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106051685 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073686202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115597754 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074477635 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089700005 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116462033 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086268411 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116511796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073860199 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111341058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087230434 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073461483 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1004615 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074711585 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.116299938 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069535061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072585341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110472681 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07269207 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121953802 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095317219 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099441565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083769849 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095263832 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073087638 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071157406 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.122787237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07627842 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095731529 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077764226 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075073771 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095419096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071383794 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075043739 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095776561 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073460523 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098261672 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073696404 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073732326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.116541573 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072752115 seconds)
  done (took 9.893829879 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073964551 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07156278 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099270267 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072691735 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071400657 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.098425439 seconds)
  done (took 1.527894117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103222796 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098118647 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086473917 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098895695 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.113258544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109868011 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088105428 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114628577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088999913 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108284637 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085694697 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112758829 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094192065 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105023382 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086980719 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10489842 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08829431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108450196 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083487817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103246193 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092656134 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100792098 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077746293 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111043681 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074588297 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099332504 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081827116 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105823655 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08406383 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10950704 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078071086 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071989551 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100616578 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109190298 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087460099 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098451014 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078499922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074291011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105786668 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073296916 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112878395 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07769546 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108273823 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075244453 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11181667 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074116668 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099821958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080800777 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111276866 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075828937 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099048352 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076880769 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09644049 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076477093 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074224634 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112251684 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098269512 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090278522 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077941818 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103600332 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074250409 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099559456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086111099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099291386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084311707 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.099352782 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074309307 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101504157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07851113 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099559633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075902417 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07254426 seconds)
  done (took 7.714348875 seconds)
done (took 29.442032697 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679448713 seconds)
  done (took 1.707755579 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824127561 seconds)
  done (took 1.855393444 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.839148806 seconds)
  done (took 17.878838821 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.690148143 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.853788204 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.834979322 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163001956 seconds)
  done (took 3.574941286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.921358806 seconds)
  done (took 1.975278876 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.252605052 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261859716 seconds)
  done (took 1.550406267 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763568428 seconds)
  done (took 1.806624064 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353245807 seconds)
  done (took 2.39204933 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355146356 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19338393 seconds)
  done (took 1.595194058 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547432472 seconds)
  done (took 1.591764663 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.289116813 seconds)
  done (took 8.338220665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241143048 seconds)
  done (took 1.30459533 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282735345 seconds)
  done (took 1.33125664 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.475519029 seconds)
  done (took 4.528552507 seconds)
done (took 52.468473594 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084804807 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084621447 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110854659 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082804783 seconds)
  done (took 1.403061605 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084334044 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077372074 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10936279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076790208 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109298698 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078006215 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10525259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08313376 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100850046 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.08058106 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076944707 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103350374 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080629977 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.105090662 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076075662 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079130009 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108437544 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076697285 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.107382789 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078030555 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100961087 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080780808 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07954496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.10361872 seconds)
  done (took 3.220366422 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083582258 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075941191 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103903179 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077254807 seconds)
  done (took 1.399220937 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083945222 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12336368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096133932 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.106320883 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100856102 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119285803 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074236331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073209816 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.103529929 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08088884 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.098008509 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.106414346 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.121384058 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08084489 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109948051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071742614 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097188131 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09545961 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080827397 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109522309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074996714 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.107717395 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073130888 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121721713 seconds)
  done (took 3.372306405 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084129232 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132157798 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086602524 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118752041 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099757996 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068872429 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.108450496 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096527855 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.160812391 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068885173 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101997188 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07002299 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103242152 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070971308 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081216499 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.143320588 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.144783227 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074719119 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127612294 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071950916 seconds)
  done (took 3.071131639 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081875208 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073819194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097086447 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073915788 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080455873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104011693 seconds)
  done (took 1.577257146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074863766 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071115753 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096229049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072412253 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076016328 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.098242219 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070922531 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070059761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098288811 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071582676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09574341 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071957972 seconds)
  done (took 2.029255481 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.47633891 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073619633 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094526825 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070177947 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07338635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094308604 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084217392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069755471 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121175884 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0697634 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097014581 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073493941 seconds)
  done (took 2.463908523 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274659083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083132585 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348622235 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176913037 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147349182 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165590467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107860773 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147360522 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.211795931 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14629953 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242200085 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209065119 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142932542 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199962474 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097318423 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138153199 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220233915 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20955711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137528048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239949843 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193857997 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16574515 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218649664 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135003578 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116031026 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181923947 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077871351 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110198861 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248197517 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172167569 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185531265 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145594826 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129510423 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246048307 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235204895 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180340613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169622088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117364057 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163516921 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17858415 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277045996 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121629008 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205324768 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142819553 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113127313 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183635796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155829065 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.155017517 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14233702 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120191095 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18391273 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254332537 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203319961 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095201333 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145287429 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148915569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152894715 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134611051 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262559106 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233312734 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169650966 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076302301 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129706714 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198368718 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19104403 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152095719 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164919268 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123810985 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181683831 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19941157 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153792955 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210046832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.169936366 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123282244 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15652466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180215293 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193338405 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219073386 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162850083 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105720577 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163134237 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136072387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085934218 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175458717 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079305307 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247780563 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132915985 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.150427661 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145611269 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144526558 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11842938 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232650254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218375859 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137374868 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072178967 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137802312 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160340559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18681956 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121691213 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142687301 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157207051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.109833579 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178486074 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079415985 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162093072 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112191185 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162263049 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170878002 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10870124 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162636494 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135199565 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109885539 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200671044 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208398466 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122946183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087840641 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240937047 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164143003 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140855948 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214846047 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204357484 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.136617957 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135395654 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186751626 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253019654 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122409887 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236830948 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138087391 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091045196 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11983452 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164483883 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150726665 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.157197259 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087532594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18506077 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214145726 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107048779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101120317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203241362 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088158522 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115305461 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149067972 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134409266 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.101246679 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131681884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13848601 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176345481 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185328771 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114710424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188032209 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105465357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233209212 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12358197 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.138894859 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111076195 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100226493 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172084551 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23106449 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084458041 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239476579 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164526833 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140104359 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156418211 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114273195 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179419846 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082068517 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.10281623 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179628447 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144368709 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142177077 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217592249 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110090554 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163345455 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188140466 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174354218 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1717993 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.173092492 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141113793 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119946237 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147438386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165093165 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077652929 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127405076 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11532383 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137721958 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102451163 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118029452 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183204635 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192421546 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105323627 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151103471 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132577409 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19342003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.110209199 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170779056 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.158628979 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12923054 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199170656 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231958703 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175244487 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137097947 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213778306 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077728683 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078659731 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.124496942 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167647413 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1188616 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08890812 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179281855 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195272943 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167887051 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204753742 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119619754 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160434569 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232084232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076686049 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152329408 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192531585 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191292455 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.141911317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125227269 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132332412 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190641755 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140483448 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265826465 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154179377 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162775517 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226017424 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.111081216 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119295164 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138993452 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18150559 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141694909 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223730852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106236639 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122946672 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146606683 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113584752 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139320092 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168368635 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1562008 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176342758 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154425744 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201449092 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083589282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154861393 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161985748 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157172848 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096301174 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158578021 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239945824 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102414924 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182047243 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201170075 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113137143 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132210673 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255022901 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215682352 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118033839 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144546212 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159678265 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171623642 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157999337 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182930805 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14726842 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174967601 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148315298 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11835451 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094954599 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134919924 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144336664 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130762132 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151428691 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155316725 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099982265 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198319091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148657436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14582759 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158170162 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10531021 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12501762 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103629101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252369516 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159274499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25137392 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.137944735 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.223294987 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244641206 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082949814 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084196747 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114898508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180814968 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118961725 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174668088 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.131069209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112451067 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193136054 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187856485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131086631 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073713464 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148546089 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175542568 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14758206 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135212174 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14304079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242121298 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113072438 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114746311 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165840164 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137163435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111916757 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252545613 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09494009 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103097922 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108018714 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087021563 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169505858 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230088812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117013628 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.137488062 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155704239 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187764971 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171706387 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136964107 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103577795 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146372907 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216104892 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169137371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.096988684 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151122077 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198493215 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203367537 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142959898 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.131692703 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245308614 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201127366 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.241782913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.123614669 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153906299 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15257752 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149354678 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186619086 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11891739 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243098562 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090228857 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205293309 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14004393 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100357737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19649839 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104471708 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123894132 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192713557 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182652937 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091726527 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129884968 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151345869 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162220234 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139347083 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081320336 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179521339 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107948036 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178195345 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244948052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086370632 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140681642 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13115978 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114499774 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143585451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111160337 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122537614 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.153532801 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252291192 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098525461 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226786899 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181510861 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152019227 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207736024 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137648278 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.674435766 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083833165 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230523916 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157365625 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256744847 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134282955 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158703985 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148213781 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161862905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185068847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143394887 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.213787385 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172217353 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161456116 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114800719 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139823966 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14951616 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095088066 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143059809 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153029121 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152780331 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136794313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.158626889 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197239235 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089603895 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131107305 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204930075 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157948512 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21530728 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182474819 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12020453 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157587145 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184079042 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115448958 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160901462 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230956004 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146186712 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135264284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087179304 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141920524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249206217 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077832592 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236545056 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16293853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149569929 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152413987 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159645291 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20303381 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1440302 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166319395 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130608755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150070054 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154134182 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091125575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113416679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142321984 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152216429 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106580008 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138785035 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.156665859 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20329816 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105459487 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100676148 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139200405 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214120263 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257178795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096574011 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118048681 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155949692 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151140206 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154503595 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165560824 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115434226 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089939015 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.118009395 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.119213643 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.148135954 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154291333 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138099942 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147780203 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244711295 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.09104118 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262274247 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129839772 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116800215 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100051767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082494092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129875965 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129730552 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137727807 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102031341 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244412898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.131528713 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123560074 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101195457 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106855833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090376623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171069104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148267707 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160178415 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133315059 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096820285 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145794199 seconds)
  done (took 76.13603454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139766006 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110503767 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.128618279 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.181264538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153964562 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24528226 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188830751 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230703987 seconds)
  done (took 2.514190838 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073591103 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124190467 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106904701 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120534881 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09525718 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071629317 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.312194799 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113641377 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068691375 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121356877 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122887072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.099316291 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.494420172 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070269634 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.102502378 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.09306568 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071325971 seconds)
  done (took 3.384361646 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.456391787 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.666168449 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.460893115 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102615726 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.973391633 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115562816 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.498883031 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169346145 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097409983 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.440497859 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727986674 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163161811 seconds)
  done (took 18.00618172 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081201502 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072215312 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115486845 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089845818 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.104373016 seconds)
  done (took 1.591784872 seconds)
done (took 121.206638184 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086175287 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389676423 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05578115 seconds)
  done (took 1.614700031 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090937971 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089376088 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.120947906 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088237025 seconds)
  done (took 1.531703319 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.080014124 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07938103 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117505606 seconds)
  done (took 1.416667375 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.303634436 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171064693 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092751214 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090001814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080846973 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108342115 seconds)
  done (took 1.420833053 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079919333 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078094702 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104847006 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078764762 seconds)
  done (took 1.47308274 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083052059 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056440009 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057960372 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086372485 seconds)
  done (took 1.423825284 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094833703 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108466177 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084707639 seconds)
  done (took 1.422930348 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114630031 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116978463 seconds)
  done (took 1.374316135 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087112771 seconds)
  done (took 1.223834148 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098648607 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146715293 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164339227 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144452735 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175829307 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.145523952 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118713369 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09071217 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10912232 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119757679 seconds)
  done (took 2.455989427 seconds)
done (took 17.134963063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084494639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.39559269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364479766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122142216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694589742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384527096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003991431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123255355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111709674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097886867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087213301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697665663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027758692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352167182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015368007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324744767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680539948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07079156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09636018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071813596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987422976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098579131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070564202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096957439 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653842214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374114225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09857297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325686052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096841223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073511941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35625844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099108537 seconds)
  done (took 16.262867491 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076641376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148504956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078013316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085658916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101468514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071993897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102713924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071805087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152482667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070991834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115255777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070761955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10143977 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072543617 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089417066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099582129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071940521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097240038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072588726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070814115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118509487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071637262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098077464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072488845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070157416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111393607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071264943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098168213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071894797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072201419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10201315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071994699 seconds)
  done (took 3.990005837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121433315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15890348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076800121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132904944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143260062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074362372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174865296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097668881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156878822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070737162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116224746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070296684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132744167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071120006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118053611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070987219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098743512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072929493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07012093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099151936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089961178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09724394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071452292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070508337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099445035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083942295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098459795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074548973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06976834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100913877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074026765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099900015 seconds)
  done (took 4.308467621 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078384281 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078728277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113936077 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08805409 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099455455 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075664116 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074830575 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100747255 seconds)
  done (took 1.852630391 seconds)
done (took 27.543994156 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085024543 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073459159 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104115637 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083829235 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101807723 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082888848 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069489544 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105107171 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078020598 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10150657 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080523231 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06944294 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101916184 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070668637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076376889 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098884771 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081872862 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102850393 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082792824 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109870973 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073786848 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076949295 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104451586 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083460019 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109763053 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082580211 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109539434 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077223125 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071484534 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10130221 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079494817 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115649687 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073069909 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081534955 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099529766 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070113904 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097227634 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071934536 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081611351 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105830896 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073592704 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105402579 seconds)
  done (took 4.838299488 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096612631 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097793035 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.122401161 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066453819 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102162347 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064932634 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120073469 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065700908 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064489623 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120633307 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060646407 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061473359 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089796585 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057476559 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059796882 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058417644 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091272912 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059139605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060220674 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088538873 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06387353 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056181075 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089764101 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062767196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05857955 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063647788 seconds)
  done (took 3.154253034 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081332657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085858668 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120009725 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130548573 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137938046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077468425 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110259001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08873185 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115189855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070228061 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100481479 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100580833 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088260198 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105867091 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070526389 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.123136996 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085306 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09879111 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07793934 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091229406 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115504256 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080700192 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119437868 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082828725 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069305937 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101438221 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073518162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11232593 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076501292 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107176143 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075898399 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072826806 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100753779 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081740757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10274089 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073102847 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116700457 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08157696 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078732119 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099746339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073800823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070595654 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120820724 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114174816 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098779235 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076743362 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10623098 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081337107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069627879 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117463265 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079802053 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097693457 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073924661 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069204605 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098677887 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083595503 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099941121 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073430163 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078302311 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101951949 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082384668 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101285671 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086917234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069069136 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10694114 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069218797 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098662213 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070263575 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092021286 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10029938 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110195997 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10072967 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071011862 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107006945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078132283 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075617683 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099482041 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085639829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108527083 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074606831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078364443 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102354466 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073531798 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116506523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.0734278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071994312 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10038984 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076860727 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100199457 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072941452 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084078916 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099561883 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073275766 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11558073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071391718 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071513499 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105865898 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075375746 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097783513 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083528695 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.1025821 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072090485 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079426111 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098772859 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073715569 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106462208 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076318722 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069341349 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103540296 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07596541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097386079 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072748867 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073104397 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099287455 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080187664 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075739282 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103949621 seconds)
  done (took 11.723510622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.202715658 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192980447 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07260822 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185069427 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080242345 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112418188 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186331035 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101335695 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100490145 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070878956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099731021 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110751183 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133590644 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147115889 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083568546 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069943173 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118631476 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139904098 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18858169 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153261503 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120328082 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077838113 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101326131 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071990669 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071321257 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110384986 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086930341 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111114818 seconds)
  done (took 4.46978111 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087994471 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130446668 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077347233 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118507925 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095867748 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097265228 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076901577 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071427868 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11198945 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08288071 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098926407 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077570242 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104653681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.081499259 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070716912 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108425257 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080517491 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099693884 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075411805 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074283704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105926281 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083918512 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102899118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07028364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076399864 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099485087 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066854548 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118383066 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07002481 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121541322 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068455872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104938986 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081077156 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070465058 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100211537 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072835831 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099492963 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074309632 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071292366 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097066788 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069715607 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060058694 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097840605 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083839031 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10452993 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063651947 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07608623 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104903317 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075810316 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095406259 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074351602 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071877336 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101828523 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078753704 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074727338 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104897551 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073929679 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096480377 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078235242 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072014762 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09476986 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070208621 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074679924 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099204874 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078277122 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102598126 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069705435 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071647134 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10363155 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077292671 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071000287 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102715817 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067630284 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100650472 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076268059 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074727477 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102719194 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069118623 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069651468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100141772 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058302384 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09806658 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057745108 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074205136 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096652192 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070243994 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072181068 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107497713 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083835568 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101015656 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076808139 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099040437 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071473872 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073029137 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093853403 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074477726 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084522034 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117031846 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070431996 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097725245 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083933718 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103674568 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070381293 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058123057 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10632835 seconds)
  done (took 10.186453588 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099087511 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122056655 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074669039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084231872 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126008656 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095323306 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106751207 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077637802 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070839405 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117046234 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069842506 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107003328 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074621567 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078625725 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124807785 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077693033 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101532177 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079465131 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104881068 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.108522147 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082285038 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114648997 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080347116 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100008687 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075906435 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082150035 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127747017 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080020864 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108762493 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084091671 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108134023 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099020117 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08548929 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104547025 seconds)
  done (took 4.408051312 seconds)
done (took 39.918331755 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.245095015 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.45183662 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.219186875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.187023261 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.235776313 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.233692 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232647022 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220535553 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.247302714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.2177306 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467418984 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.93498923 seconds)
done (took 59.052384434 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.316212422 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.363392274 seconds)
    (2/2) benchmarking "String"...
    done (took 1.506466171 seconds)
  done (took 4.030197768 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.582948598 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.216618445 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.513822351 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.223627674 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.22036612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.670098086 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.912272535 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.099614428 seconds)
  done (took 28.011889549 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.226850399 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.594676055 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.700950836 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.683007553 seconds)
  done (took 18.363721086 seconds)
done (took 60.461971621 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221366745 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.270753903 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235355117 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.207876017 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.333667709 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.246182277 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.489293569 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.451451497 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221178661 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.212904043 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.237817155 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.224307226 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.234658806 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.501384507 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.227720204 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.223647649 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.30489268 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.699822666 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626648548 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.233335017 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.25727213 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.259072544 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224519237 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.228767312 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.245574821 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.222586531 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226384581 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.223769131 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.592806498 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.22739003 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.325041769 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.655400807 seconds)
  done (took 192.247267142 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.226096434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.375664387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.444259947 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.279205894 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.84326726 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.424149715 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.357540954 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.904631938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.240106957 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220839068 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.47502316 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.224212233 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.559732535 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.210068016 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.232945203 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.327482513 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.371142117 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.572574557 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240694602 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.484605598 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.23811396 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.43670525 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.380207786 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.474044708 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233990635 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.260578408 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.236841109 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.232802015 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414781344 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.307962249 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.250117765 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.238395556 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815868222 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.085488895 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23805137 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.242926311 seconds)
  done (took 151.263617452 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.509496357 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.227616832 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.227477033 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.227016604 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.253675279 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.224214814 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777553991 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776711349 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.73115347 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.947239371 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28286453 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.458725593 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.225161172 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319701338 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.237647563 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222300065 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239114832 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.254710859 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228039824 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224286881 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77580256 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.239550701 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.270975753 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233523341 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226979043 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256725569 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621402052 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224775251 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255646495 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.544221539 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.270532085 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225185205 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.540329519 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.843933278 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334778703 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226094416 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260138262 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.225535136 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.49574448 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.227530569 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.226093161 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.232421947 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225203557 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.820536373 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.225020868 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.781590615 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226212753 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.126092149 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22836661 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225942423 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.227868055 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.63186119 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.691699934 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227028328 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.227185601 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.229156648 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.230984887 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229410377 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259178292 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.927952028 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325039355 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.232010246 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228817821 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.232699669 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259583775 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.228483247 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.231255271 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230280924 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.534231712 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281762291 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.334669538 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782490651 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230607576 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325472915 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3467907 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227328761 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.226810043 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.230227741 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.229942606 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.336036806 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.229129223 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.636758447 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233034957 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229657601 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288487736 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323724727 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.230194433 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533546523 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227810158 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228799515 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.9297374 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.227677838 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323014822 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.229461814 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.229401239 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231897217 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.638591599 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78503581 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.42250257 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.230310615 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.958496686 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.230053157 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.654526793 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757337952 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.810263108 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.229071821 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340099166 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233682618 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232617049 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.23020843 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25947709 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.232278375 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.291943877 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.230701064 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.629247944 seconds)
  done (took 349.535095398 seconds)
done (took 695.714534601 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.910102777 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85832546 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.994690982 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.878125253 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.858994927 seconds)
  done (took 10.664703399 seconds)
done (took 11.833388541 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428725402 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.429926256 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296263533 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430448937 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262884549 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445394011 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405191699 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.253136832 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336582596 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.311972926 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339453515 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280311205 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258499795 seconds)
  done (took 18.643573396 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553883077 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544316835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295396343 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551065551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270103363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565556407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43843136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.450845457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450255046 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246215454 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243171637 seconds)
  done (took 16.779824557 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554302561 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.552113592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298227144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552947198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27039585 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559640339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432406531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.472984948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428095367 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246216626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244495187 seconds)
  done (took 16.778702211 seconds)
done (took 53.36991462 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.240541215 seconds)
  done (took 2.404160102 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.275243353 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.435944395 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.257238355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.244537241 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.241971451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244461291 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246564748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.243186391 seconds)
  done (took 11.357514987 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240609205 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.243120859 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.23952671 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.237719686 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240195305 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237391776 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.241138419 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.241265648 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242858176 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.237488224 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.240306349 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.239933018 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241281671 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.241053839 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.236008173 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.242261198 seconds)
  done (took 21.011577611 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.242970345 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239426546 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.238270328 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239080768 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.23881168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.238144259 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.241003836 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.24069367 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.238456945 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.241247138 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240909073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.237380748 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.24063936 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238266181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.238424357 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.243573474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.240233064 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.239222622 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.244577314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.237333605 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.241857657 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238989904 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.241746733 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.23854761 seconds)
  done (took 30.931236638 seconds)
done (took 66.875483822 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.364459655 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.926212444 seconds)
  done (took 9.455717543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.243071627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.239162046 seconds)
  done (took 3.654763069 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242370047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.243858587 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.241761173 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.243676548 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.238985367 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245245304 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242014807 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240475321 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.237403507 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.242006265 seconds)
  done (took 13.587731828 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242645104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.244546808 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241264221 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.241997386 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.241021256 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.239005639 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.243342625 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.244268766 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241793295 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.240849804 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.244570403 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.239400069 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244918886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.242728818 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.245365558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.241946071 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.242327683 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.237857955 seconds)
  done (took 23.532724195 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242889113 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243294854 seconds)
  done (took 3.654082992 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.24372009 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241066571 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24411543 seconds)
    (4/7) benchmarking "year"...
    done (took 1.241159922 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.238671684 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243132411 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.242846661 seconds)
  done (took 9.865247885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.245263831 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.436023304 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.517498668 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.847081318 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246503133 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24824674 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086385669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.25025636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.250907975 seconds)
  done (took 14.297960818 seconds)
done (took 79.220014786 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265031349 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236410779 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.155176142 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.241998782 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.253494646 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.579912738 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.251220535 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.361609915 seconds)
done (took 37.518517918 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.250755741 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.934507511 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.980597066 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.253783452 seconds)
  done (took 11.340899332 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.223866762 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.194605087 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.23909557 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.27350525 seconds)
  done (took 18.103830508 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.878049343 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569313139 seconds)
  done (took 4.620056736 seconds)
done (took 41.488020795 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247730856 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.245143718 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.245736509 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.245534783 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.248616097 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.243889863 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.245956483 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.246742415 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.246191701 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246933889 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248479197 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.246558828 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.250943649 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24810422 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.250335952 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248375735 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245765853 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249424421 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.24276651 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246040845 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244483746 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250238561 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.246078322 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.246569276 seconds)
  done (took 31.096560729 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.251161976 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247149058 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.247594471 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249521272 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.247734809 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.248201149 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246805817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.245573751 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.245605032 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.248048214 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247299516 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.245109549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.253474338 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.246888908 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246870733 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.241189455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.249747116 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24567967 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248884065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247965869 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.249492142 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246542523 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.243681392 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249610297 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246558269 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247093229 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247890753 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.251034071 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247746729 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.248201272 seconds)
  done (took 38.604921429 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.252140705 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.256233675 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.248564292 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.250416199 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.247769887 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.250599017 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.249177626 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.250095073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248740663 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250565795 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.248671664 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.25074539 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.251059623 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.253470024 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.250305689 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.251822701 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.251498242 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.250279643 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24788219 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.252027689 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250628094 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.248393794 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.248528646 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.249370165 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.25223917 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.249018946 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.250201918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.250176915 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251856121 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251665141 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252504797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.250601774 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.248681191 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.250202017 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.250697766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.249801842 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.254243038 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.261634627 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.25366363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.251188321 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.248510693 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.252976098 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.249518735 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.25038378 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.251474191 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.250495309 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.251912608 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25234328 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252663549 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.250700562 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.251957031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.252040095 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.250299262 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.254736559 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.254177793 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250034624 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.25435596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.25442575 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253246153 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.251272253 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.252847617 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.253243898 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.251583159 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.255275749 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.253497984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254435199 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.252388631 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.254276891 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.254392684 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.253600882 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.252611889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.253685753 seconds)
  done (took 91.293302227 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.253955718 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.249671336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249567553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25224015 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250753227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254965603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25382759 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247736294 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255236479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254649086 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253073467 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253434315 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256016352 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2553388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254820849 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254374668 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253694325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.257589351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255048235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253837733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252503579 seconds)
  done (took 28.75322121 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253768853 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256031592 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.2532926 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254936343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252208581 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254925455 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.253430104 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255128725 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255575986 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249753185 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252747952 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255584438 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252381931 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252414991 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253494968 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252004066 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253748526 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25214615 seconds)
  done (took 23.746231561 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.25182937 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253690353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.255498865 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25251956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253134743 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256032061 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253765497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256395902 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255898869 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.254227805 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.259155898 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255571941 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.257249832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251116314 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256192437 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253726254 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.253991716 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25510918 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258379507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252698406 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.251185462 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255840628 seconds)
  done (took 28.789445808 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258297005 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257417389 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253198357 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.252907065 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.254319424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.256457694 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.255792386 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.254813911 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.259445941 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.256186608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255761402 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257865898 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.255256358 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257032867 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.254206295 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251737006 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2587541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255970907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256677078 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254858341 seconds)
  done (took 26.298891909 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259062552 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257514462 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256872279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261977025 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257803142 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257489959 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258510256 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258068031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260883515 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260054557 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261280767 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25835183 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259935994 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259784626 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258118462 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261171433 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261260778 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259255522 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259771313 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261769495 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258622128 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261329814 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261565836 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260230445 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258429772 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257583882 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260406191 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256049488 seconds)
  done (took 36.44980477 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263052701 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256098228 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.254916037 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.255603045 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.257427781 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.25648237 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255387481 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.256407652 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258192906 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254881431 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258443718 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.258116888 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260967339 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.256514041 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257337722 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.259036102 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257096926 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.256977553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25640175 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255309528 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.259855843 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258503355 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.261513549 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258277295 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256435901 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.259698045 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256541968 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257283053 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261854756 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258117302 seconds)
  done (took 38.920273353 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279664604 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277488768 seconds)
  done (took 3.739934273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255970588 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258491056 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.259208881 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260442071 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258877988 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261249379 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26165398 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258680135 seconds)
  done (took 11.25934141 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.263672423 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.260268957 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.257773376 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.261098904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.265839154 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.262587851 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269381543 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.277477127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.265279781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.263568472 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.269460342 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270814159 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.265529009 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261357689 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259277797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263686681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.262378297 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.26336195 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.262794462 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.261624014 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262836025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264534486 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265982212 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.260070984 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.266074167 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.273833559 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.265029339 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.261669081 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261263276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.267883795 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.264070121 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.260040604 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.264328573 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263888755 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.262048581 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.263838898 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270142246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283529854 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.267938326 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265020459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263282339 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.259531827 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.263313727 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.266011287 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265390196 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.264197473 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.262694047 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.26029945 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.264288325 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.268407078 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.268542992 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265738399 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260125772 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267900691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.265227059 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271390121 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.283693148 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26688003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.27531416 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.275543744 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279202085 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275155502 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266631005 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264760195 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273863476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.291496295 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2713455 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.278640596 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.261631473 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.264331458 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.269630928 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277576287 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.27689893 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264735535 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264197224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.262968104 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26548185 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263870504 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272568859 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.286598617 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.264719976 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265924838 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274403606 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287541554 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.264447802 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.264860661 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.265532185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.264600066 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.26563556 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27641009 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.283960403 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263768843 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263527916 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.264213053 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26673932 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26434696 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.264866193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264986551 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.261346601 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263851498 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263762247 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268249724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.274360429 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265165766 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264495415 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.271063776 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263764115 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26459888 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.271453756 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263933959 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264457208 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.266358066 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.270780528 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.262832211 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267787937 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.273268649 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.265188198 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.265727916 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.264876727 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263512755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274117215 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.291224358 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2640313 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264039962 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.270098388 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277355076 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264518717 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267655725 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265924331 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262771123 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262393911 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267338452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26531057 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.266402865 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265829974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267335466 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262488197 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264316738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266078079 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.266505867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.267517385 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26682205 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.269007074 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268369816 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.265938547 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267866987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.273982963 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266810649 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.267453667 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.267234248 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.263528796 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266798701 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.268296103 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267269887 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267643129 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265129899 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267216852 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.267956001 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266185061 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265524639 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267066055 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267923309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271416989 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265902934 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.271561793 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266966265 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263559386 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266453354 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265885315 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266508781 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.266416187 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266376446 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270645228 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.275328533 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265973041 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266811682 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270155746 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267986344 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266835223 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2671231 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270449047 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275531995 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268408991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.275144655 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269057255 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267329821 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.26849346 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268370988 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268495788 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26876179 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272744612 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275400716 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281326885 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278463895 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270210234 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27211533 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270490884 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.273440558 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.27289912 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268475536 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267861383 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268972879 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268441815 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269672186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270044839 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269524709 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268291224 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.268293749 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268749403 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.26845926 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269486307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.270567728 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271117297 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266602024 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27009694 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270076618 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270042764 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266653219 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267891709 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26895992 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267873841 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268854741 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275706904 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267059083 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271822354 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270723701 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270499237 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.269602175 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.269883242 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272419379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269778556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277076786 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290335089 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27168609 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278083744 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288825384 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.270196265 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273193238 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269749564 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.267973406 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.27325313 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278177781 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268338111 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271437407 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270208521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271072193 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271105444 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277619107 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267931775 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.27178971 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271588268 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272300648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268143161 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271600311 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272301138 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272917106 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273473114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271474845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.27056664 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273386341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272684195 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273079472 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272264992 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274567937 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280588988 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276794827 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.274021288 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274254523 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.27422114 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275670726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274152315 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272035091 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273765438 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284804906 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28264088 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279855898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273479441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272140986 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27656613 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273135918 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277050922 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272598301 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273477255 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272887879 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273120196 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269308857 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27497127 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.272881171 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275275718 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276461341 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277319916 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27301247 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274785891 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.27400241 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.273212763 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272836291 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274631706 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272982742 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276736721 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276747802 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.27442177 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274809281 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280900247 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293387298 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275690977 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274524236 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.273989274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273605773 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274821838 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274833492 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.278227893 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282900381 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278578004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283775452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27585562 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284640361 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275428353 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278318474 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28288985 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272728868 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274428851 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274796339 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.27526432 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282142908 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293088956 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276570318 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278896368 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276419638 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276026823 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273915175 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275813837 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275316211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274864016 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284168949 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294739375 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.279582139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277261518 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271973384 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.275024583 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.276165379 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276012784 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279456687 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274726843 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278380485 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.276805318 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276545937 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274771475 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27619947 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275396163 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.272536223 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276751759 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282696297 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295450674 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279365502 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276398161 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283847608 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276995061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284149412 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.295516963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27793576 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276228302 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276558809 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278464331 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.276817596 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.278187951 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277207155 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278837123 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280777036 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.277912206 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.279697561 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277737637 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276933252 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.277514441 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287581664 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301554933 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280735521 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281670339 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274675975 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.279661831 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282802194 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.278318237 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276479029 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28229427 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289016157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286111919 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278708309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27846177 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278908433 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277681843 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.278401849 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277584192 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.278052567 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277338265 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278613153 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.278611971 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28225731 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.27831021 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279569616 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281989375 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280137819 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288320546 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.280181737 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282027575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278595796 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.278894638 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280729493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.27903861 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.279477379 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280187142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278991232 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282005997 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287124556 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28705881 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.281715368 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278732854 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279296857 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280735682 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.280547301 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280385447 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279726223 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279477918 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282119585 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280089896 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280628657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.278594866 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279007188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280682857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279606 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282906072 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287639131 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280281116 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276872583 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278836047 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27947178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280456044 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282591259 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287519897 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284474869 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292423303 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289083518 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284439294 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282025821 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284323538 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.289005682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280736644 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281239579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281014451 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284030807 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.281831215 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283606448 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280759765 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287493755 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281319493 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280319197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288466636 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300737173 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280792854 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.282491148 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286680343 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282108959 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278416653 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.281337616 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281431542 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2886627 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302097431 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281626548 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283097675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.280891525 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283528837 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286930653 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281264086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284037864 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.278380852 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.28263124 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281525689 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281186904 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278614316 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281439957 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.281931028 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286107917 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.289723927 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.278708133 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284123704 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283594816 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282651001 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282889537 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282349664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279346257 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279121935 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282793681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282445923 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283733167 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.284520376 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282590886 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285165428 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.284777947 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283478152 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287282684 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.294690726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290609924 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.279947295 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.282750256 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284149626 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285926943 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284329804 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284393687 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283857945 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.286146828 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.283222865 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283034776 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28257028 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287093111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298216744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301734638 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284249652 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285244806 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28774426 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.283574138 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282370096 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28296748 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.287282746 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.287926859 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.290930185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.284619879 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290402735 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303908211 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2866183 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28784401 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288548143 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.291677653 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.286915281 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284858972 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284880268 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.28879341 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301971234 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28405638 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295412149 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314683578 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305394487 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.286304156 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.286519475 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285362246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285313655 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.286744734 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286488307 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.285595419 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283708355 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.285710708 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.287246025 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290319619 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28749669 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.285032463 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286215413 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.28673641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287573051 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.283688071 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.285165298 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.285262594 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286699204 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.286443158 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.286652118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287244638 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297861809 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296219901 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.285151023 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.285885673 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.283704726 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290070997 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.289979044 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297962837 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293511687 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285337161 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.286992481 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.288090621 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286167709 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281994975 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.287810353 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.286549824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286522615 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.28442208 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.300909838 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295960239 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.291489685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.287737699 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286138149 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.287109406 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288880053 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287873272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287665611 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290146978 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.289135722 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291624818 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286522136 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.287257915 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.291619041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.295490282 seconds)
  done (took 761.942503406 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286448015 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285419708 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285616023 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284600296 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28564962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285401625 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285191384 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284758112 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285846855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285696782 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286359214 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286405051 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285138378 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286814036 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284925264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285668899 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284512224 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285569852 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285292913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28498558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285475927 seconds)
  done (took 28.216436561 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.288616424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286720123 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286080033 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288417871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285652179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288138684 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285380449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28845492 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28779984 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28484237 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28742491 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288607278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286230437 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285264284 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285560685 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289481369 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289016413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286846848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288108004 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286281171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289404406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286601849 seconds)
  done (took 29.539474011 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289900897 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289800918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.289072318 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.287100947 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2884054 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.28588928 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290357734 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289040917 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289224655 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.290714532 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.289517468 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.291079552 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.297021879 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.293576497 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291881297 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.288841544 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.433088135 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290676164 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.291653939 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290068625 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.286998857 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.295421793 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.288169769 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.287523286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28969409 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.291206886 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290438757 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289393126 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.290498754 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.293319293 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.295099533 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.289965108 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29147109 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291921604 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.290539165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.292316164 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.293234162 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291127492 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.287704405 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.289725529 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.302315135 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.312385442 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292284366 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.298605647 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.290367229 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.291464674 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296050738 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299207941 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.288714255 seconds)
  done (took 64.656233246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.291590233 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.292275836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.289650512 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291188252 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290968119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.291472483 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.292750883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292082615 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288690726 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.290547808 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.292400274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.291571534 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291014419 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.293383059 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293181341 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289400548 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291289468 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289846978 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.289991596 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29043308 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.290976077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293199116 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293971168 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.291227766 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29404108 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29093179 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292302996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29510566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291486848 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.291802035 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294730662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294025869 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.293631393 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292533569 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291047938 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.294294268 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293264063 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.292116675 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293972138 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291588372 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294573172 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293111794 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.294567688 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293848625 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291642907 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.292567827 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291994242 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.292272944 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291894379 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.295419657 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.294628158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291179848 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293988905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291992341 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294255958 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295026689 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291284017 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291601012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294608691 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.293057538 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.293384685 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295760738 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.293641978 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.295466195 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295544731 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292772122 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.293367385 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295443418 seconds)
  done (took 89.12558914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29679981 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.296130644 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296470655 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296646713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297632249 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.296745326 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297575104 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295810168 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297985233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2968703 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295857129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294398503 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.293822688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295339142 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296844364 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296186121 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296494059 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296273304 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295407745 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295883612 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296056275 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296116566 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297345925 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29616375 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295733535 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296214503 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296150509 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296116341 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296918152 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29571015 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295294144 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295945489 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296402933 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296196984 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296602474 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.296759283 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296599247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296249623 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296251212 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297065754 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296167597 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296462452 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297822248 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.297006873 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296836309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297307211 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296425919 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297643709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295847014 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297350198 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297675042 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298562633 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297364476 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297345947 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297175476 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296275671 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297316229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297032614 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297164201 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298590262 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297509441 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29636024 seconds)
  done (took 81.618600193 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297580766 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295536026 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29474595 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295708506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297289496 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294052517 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298087505 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297209099 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298780627 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296477594 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297855406 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296005561 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29419032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297997775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295715285 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295111795 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295015953 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295440379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29879055 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295644203 seconds)
  done (took 27.156331358 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295641319 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298676452 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294962743 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294666866 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298064291 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295515142 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297585168 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298639125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297042461 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298697485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298227734 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298228158 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296867649 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297816199 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298983093 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296665135 seconds)
  done (took 21.985557652 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.296422445 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.298875703 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300108754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300016435 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295794247 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296327131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299182139 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.296749485 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.297183835 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299009107 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299272671 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.298531359 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298945312 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.299590174 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29627071 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299975726 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297715186 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295819348 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299221972 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299676741 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298408611 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296676271 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.299303887 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299058426 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297787859 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298994512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297568421 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.298766735 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297493295 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300840031 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297787004 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297995404 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297507325 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297516449 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.301577365 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297385399 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299467419 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300227176 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.300383535 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.30064242 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301105741 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29788401 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.300402019 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300365579 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299077506 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301282174 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297864586 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297907271 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300177857 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.299653812 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300147672 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302480726 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301365266 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.302728602 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.301788764 seconds)
  done (took 72.676547086 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301924957 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301699635 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298599591 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301741207 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302119999 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298532958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302317425 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299410547 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299154133 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302215618 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300207295 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302454831 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299538992 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30185117 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300171457 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301708354 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299424045 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300222435 seconds)
  done (took 24.647018432 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301218545 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.301031012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.303184539 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.299406322 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298926766 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302569935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299356966 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.302957641 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301519569 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301016661 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299931282 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303406976 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303383973 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302715813 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300739812 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30021753 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302880374 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302657192 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300097356 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300436917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303322235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302428511 seconds)
  done (took 29.867565773 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.303839592 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.302985235 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.32030259 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.346788299 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.334282428 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.304523739 seconds)
  done (took 9.147792981 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302995889 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304026495 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301603923 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30403306 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304028638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301500978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300207417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300646854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304763419 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30226124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301051351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303932589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304870576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30088919 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30432457 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304399177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301763011 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30192518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302438501 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305231464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301840405 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305054787 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302221593 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30327249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302742467 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303632136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305104566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302903249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303454965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304882726 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30480771 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302226468 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305125181 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303460895 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308191284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30540319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303290939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306270987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305320876 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304022519 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305116261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305093497 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305815836 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303734811 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306003891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304095989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302452068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302207148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303046575 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306537021 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306194941 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303719254 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306295672 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307195597 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307555258 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307021326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304764509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303993765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307369009 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30478308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304289478 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307068794 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303992904 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305873444 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306923098 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304709178 seconds)
  done (took 87.313048631 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305424123 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305687787 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303643847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305572957 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303567947 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30371813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304112693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305099224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30491166 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304125561 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307470111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304679203 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304708332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304390453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30422858 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304678573 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30482518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305009436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305173965 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310685124 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304132694 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305931392 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305249136 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305304099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306085316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308178229 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304821084 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305353229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306138796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305989425 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305875301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305396861 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304791345 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306645131 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305516453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305512305 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305342354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305539199 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306285008 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308278455 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305834156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309064712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305788035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30734826 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30687287 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305966778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306092619 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305685978 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305994183 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306079737 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307055942 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306329372 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306572354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30614797 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306272719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306391083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306839636 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308136856 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307015159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309645195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306379772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307010768 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309006947 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307195281 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307012338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308393378 seconds)
  done (took 87.43814646 seconds)
done (took 1775.457687763 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.324404159 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.353005902 seconds)
  done (took 13.918563018 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473121882 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.426330266 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309337161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.31634654 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.309739774 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.332141855 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304877893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.310437726 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309887597 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.308741455 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.309460522 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501999884 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.313379195 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.309942237 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309349407 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40241791 seconds)
  done (took 42.789895286 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33762487 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.315729217 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.432575224 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334374916 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337669191 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505204172 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371677841 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316306748 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.495526067 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356375915 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.984267337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339849697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312775327 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.491321887 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336390495 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504124048 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5729515 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.990947281 seconds)
  done (took 30.577724846 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782619101 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318639724 seconds)
  done (took 9.344488339 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.305925769 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.3105226 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.353001004 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.349584504 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.347501453 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.305426122 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.379264936 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.379895403 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.328147803 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.321561757 seconds)
  done (took 64.624085935 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.334318914 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314320206 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314557582 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.312738859 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.307246977 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.309168847 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31273143 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.308144102 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.100117535 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.450541544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33391918 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318994639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314265505 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.315734411 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.310638167 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350422576 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445472011 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310919943 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.309686138 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.319040658 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313961782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403010525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.3580865 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314639951 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447420849 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.105371639 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319585134 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320484921 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.425232785 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311980261 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.313363086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.314902777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317519521 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.889075187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.780396885 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32746929 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.339451718 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322406923 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310704345 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446351607 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31565615 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319731018 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307545025 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.751738089 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.478547209 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.43730825 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.667582103 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321124125 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317323958 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.377322933 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318149358 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317181875 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.346255251 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.096526092 seconds)
  done (took 110.694014433 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363911511 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.798118544 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479848397 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329458961 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.166305958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014962443 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311465686 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611267492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314468384 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309868333 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.654302491 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838182314 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320247354 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.377465242 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.576981153 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346621586 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308797745 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.122785848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312326492 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313300643 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737688949 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326655392 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32121983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468751689 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346892611 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773746532 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.790510581 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.682620313 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306621038 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.303695744 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774196793 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31083256 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.37424403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.304474523 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580343539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664577646 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639742851 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.310588641 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326520863 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299390387 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.334903992 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761110002 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645953242 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.299955555 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.306968131 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765648126 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.300799437 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.303645366 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302192191 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50211845 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.335513848 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300623998 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.722923213 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301794622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.660647976 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.300355244 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.312076775 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792554063 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301491424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.341875943 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311354038 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299300952 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307677053 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303461352 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302039351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.649603912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.645657835 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.3043623 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648480944 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.761397434 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300656222 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825256236 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.231843866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.311326625 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.381145459 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311254003 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.91038552 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799038624 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.312211362 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300050558 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638431613 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307264168 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620065263 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327393275 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301185009 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733241559 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.324784702 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.30787776 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300584248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.299021912 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.961638854 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302894396 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566843172 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.338734647 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299853445 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299337943 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.349237148 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299764797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300782705 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.300709146 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821272204 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.303979862 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.614136648 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324608586 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31097553 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30087233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.300679655 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302433497 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517180619 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.743045059 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.308742023 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302235486 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30100082 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.306958344 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.437713493 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.30042691 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.603712286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30231446 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300677637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302344168 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.996089284 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.332425489 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311053169 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.303852299 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.169018377 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.514361733 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.319337749 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.302495077 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301135014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317490255 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.686428195 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304812331 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.320391334 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305013708 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001558372 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304842454 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.333572335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.992213168 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.305147226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293734198 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326147021 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302623736 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608487245 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576478526 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.557074151 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304563866 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.303428186 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994139337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.341367413 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451101351 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322968727 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298411521 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501912903 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890880768 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304208957 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.891404419 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.301500404 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514208606 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.303172049 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638193505 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787705014 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302953179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305919805 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005025284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.987853108 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.939593702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.308059604 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.635687187 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.274894387 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.757454898 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303188435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302788208 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.801489225 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305300415 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.306428119 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.302732136 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30349705 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.456253048 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478183751 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.819713209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302967445 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758016176 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310925001 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302856262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308344781 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306590567 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.654246736 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348165508 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.304611293 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336739308 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.303129443 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304943254 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770132235 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.181453838 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.306001709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456906952 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923593079 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.303065395 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303604051 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.932532038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.763297111 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.80444887 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.323606175 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.602684268 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.307521409 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341949789 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059130944 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366211352 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762488564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302601085 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.301996875 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887573684 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.301647909 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.659327189 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.301359482 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310944022 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820105819 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30254753 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.306415009 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.589797433 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301592313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547235022 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.301829641 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.311452923 seconds)
  done (took 1105.793689962 seconds)
done (took 1378.98469959 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.303127892 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300891501 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.29288767 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304640442 seconds)
  done (took 26.44179547 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.311412387 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.308539194 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.30931887 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.30727844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.308763377 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.308873422 seconds)
  done (took 9.094505122 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.366323051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.301169706 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304917792 seconds)
  done (took 19.211920829 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.51973828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.545906269 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.66765748 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.417960663 seconds)
  done (took 10.391793668 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30918858 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.308119193 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308816164 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.310641002 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311647627 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314026759 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.308943011 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309258291 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312480643 seconds)
  done (took 13.033039816 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.068099525 seconds)
done (took 84.481184614 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.29193479 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.328052042 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.648645702 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.016198505 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.37756864 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.36468896 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.355266986 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.426750004 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.419125858 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.542300541 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379185095 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.341713451 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.302251223 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.649157951 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342166541 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.531237738 seconds)
    (17/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.519984472 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.305187444 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.322698295 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312360522 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.916724171 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.28806703 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.314435825 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.387921351 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.452010398 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.489800368 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.593663878 seconds)
    (28/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.132841552 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.399908374 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.986202007 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420520157 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328356255 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.635102403 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.328607256 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.302699953 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.618479601 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.400053195 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.725684282 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.857401579 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331951864 seconds)
    (41/309) benchmarking ("sort", Float64, false)...
    done (took 5.541593398 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.309491904 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.292271519 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439624981 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292309293 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.633909106 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.562253208 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.328177348 seconds)
    (49/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.331220191 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.58774336 seconds)
    (51/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42941875 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.359984042 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14831057 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.417338674 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.851925419 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.377855612 seconds)
    (57/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.291854428 seconds)
    (58/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444129356 seconds)
    (59/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.312893236 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.319528454 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.212338691 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.32919837 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.313872817 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.017867846 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.309715019 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.136070208 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.106995232 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302772398 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.641189211 seconds)
    (70/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.305275706 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.320285696 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.440725875 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.389622088 seconds)
    (74/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.095105453 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.304981531 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.511005695 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.929229253 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.142722398 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.416267802 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.290398182 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.5792219 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.661560372 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.332396267 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.849303149 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.940645135 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.672010233 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.366658159 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.305025136 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.307863386 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.671995329 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.698476959 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.430899163 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.313569497 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.013948671 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.03756887 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.503278596 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369237338 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.105818404 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.854093489 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.860032451 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.705486859 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.41491677 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.662480842 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.705990077 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.320885278 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.332254103 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.405789366 seconds)
    (108/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.723192685 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.369715052 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 1.821362513 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.331580557 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.720775694 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.301649478 seconds)
    (114/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.585880797 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.020328098 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062449303 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.779758862 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.79533061 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.549946533 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055396125 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.620524621 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.578667094 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 4.356235825 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.310274248 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163828188 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.898843756 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.165993282 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.438183505 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.947982852 seconds)
    (130/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.520324605 seconds)
    (131/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.871811704 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.809303911 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.327105779 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.520167299 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.516478677 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.941248757 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.309922175 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308059857 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.159327401 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.633303379 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.333779325 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.389372982 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.071578895 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.88871288 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.364220662 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.613405726 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.337734334 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294047671 seconds)
    (149/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.687101951 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.307442839 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.315076262 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.219850504 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434248208 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.33076753 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.675514364 seconds)
    (156/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.659595344 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.311018758 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.309149369 seconds)
    (159/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.312406633 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.718241026 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.487029956 seconds)
    (162/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.390351182 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.505549473 seconds)
    (164/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.296972515 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.378435984 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.417295567 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.35452576 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.64149714 seconds)
    (169/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.430158202 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.233802428 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.150521188 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.078830741 seconds)
    (173/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.617914792 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.406603544 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.322487701 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338766971 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.219790892 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.577126387 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219418164 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.312803624 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.399654623 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364550851 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.354257521 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.913374412 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.911307973 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.31240388 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.891338572 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.604207666 seconds)
    (189/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.495633993 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.61245959 seconds)
    (191/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.138191934 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.737525249 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.369028683 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.327134737 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.602869547 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.35727573 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.347300859 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.657076579 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.137888437 seconds)
    (200/309) benchmarking ("sort", BigInt, false)...
    done (took 6.313030073 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.313480675 seconds)
    (202/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.499128513 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337029214 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211705454 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339085634 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.050091399 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.988453606 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527715689 seconds)
    (209/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.509060741 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.335358612 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.682115372 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.224345891 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.069929357 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.714756628 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.155536466 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.473390861 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.361777557 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333580429 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305777178 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143041779 seconds)
    (221/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.325225691 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.300005349 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370778637 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.397604645 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337574759 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.302087426 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.315112441 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.311654684 seconds)
    (229/309) benchmarking ("sort", Float32, false)...
    done (took 5.334543037 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.159434 seconds)
    (231/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.562895062 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320919624 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.348857178 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.925241141 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.521967612 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.865973503 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.369173115 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.741174543 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.411150062 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.724529639 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.38312609 seconds)
    (242/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397246332 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.389487055 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.594314475 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.602070146 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.725244845 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.557340137 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.930858803 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.427530218 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.298451877 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.561727351 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.888214405 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345357842 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.315269567 seconds)
    (255/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.759492314 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.6295018 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.090000946 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.087651444 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.96999605 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.660215817 seconds)
    (261/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.401133952 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.339461383 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.770952973 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.886048391 seconds)
    (265/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.442052256 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.702346081 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.809083591 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.313223252 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.726159524 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.744676139 seconds)
    (271/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.891588592 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.560708665 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396609396 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.649409817 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.632687747 seconds)
    (276/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.3721835 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.685300451 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.778540731 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.440546215 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.331496113 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.416202645 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396569807 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085595249 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.427604299 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.314405978 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.300142186 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.044862485 seconds)
    (288/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.832628421 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331118513 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340558365 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.387937632 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329764761 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.355947326 seconds)
    (294/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.06291029 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.317728874 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.789475062 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.317399639 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.342596015 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.4511141 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400527375 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.74464691 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.332563553 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.356674327 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.4231153 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.918674487 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.317166377 seconds)
    (307/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084561576 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.913344163 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.545325537 seconds)
  done (took 911.366013984 seconds)
done (took 912.607833975 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347058829 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340610414 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.324594998 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.346272017 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.43593713 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.353921614 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.334715241 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.3263081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.372636047 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.373659813 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.324016063 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.35063707 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326134791 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.324790602 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.324237388 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338581452 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360811814 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327697742 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.341596883 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334128161 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.34166843 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323202457 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.373523566 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.35230997 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.329295006 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.32876252 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.329166696 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.3447706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.43689463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.328352522 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329224685 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.336487464 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.35478336 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326887956 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.320184441 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.344801112 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.337502951 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.335820876 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.330094868 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.358548377 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.719745429 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.326579369 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.328502737 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.326911207 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.326991676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.330260865 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.328022754 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.333362741 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339568369 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340024 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.706521546 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.341745207 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.329410845 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.327030906 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337396907 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326395099 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.330302365 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34247761 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.346623171 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342227594 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.353032774 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.335371192 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.329107132 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.344046655 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334888153 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.74839593 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323683064 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.331733032 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.726688154 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.331949245 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.751049708 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.335685757 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.328813511 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.341651434 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.359078281 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.367580942 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325412225 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.327143424 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.336011661 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.327207933 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.338648867 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341141338 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.332398292 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.329376153 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342305226 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.357452002 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.338796135 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329633234 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.338047415 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348951342 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.335721903 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.339211752 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.333612732 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.324034094 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.339251331 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.332808813 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331409482 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.33125914 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.333693866 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.340397137 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.726409297 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346755929 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.325159479 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32690474 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.329306636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.342941761 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.730600044 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330780889 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35175318 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.377210096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.330848592 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359372388 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.335663842 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346005315 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.339349162 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333432357 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.324535046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358719865 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.724043781 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.345479046 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331830633 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.328435024 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346503054 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.332288785 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326365965 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.370758701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.335730393 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343606334 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.451935947 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341143241 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.361813554 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.329358367 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.334798211 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.359098459 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347778915 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.361988522 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334416817 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347268484 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.346924347 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.329007295 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343525021 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.34334317 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33290558 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.337298928 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.324880086 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.364068877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344594418 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343707847 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.35339272 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.452785148 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329886382 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.360549493 seconds)
done (took 224.337423442 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.39299269 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328997386 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.414246448 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.329872844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.431343581 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.429480239 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.327993634 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329208169 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.328441136 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.708572686 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.327954586 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.328257382 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.324414775 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32827579 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.413611849 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330296169 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.327054458 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.671475221 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.330973376 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.4020518 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.329343146 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.328196588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.330451524 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.711445366 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.327074761 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.325606204 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.402626587 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331062687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.675843834 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.325627754 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.331546082 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.676703666 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.421975122 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.348601597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.341853523 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.339183373 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431963999 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.348713043 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413130636 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.413160339 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.416580569 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.3708054 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.32982799 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.325734389 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.333474858 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.332726482 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.329714849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358236453 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.32802094 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.329872057 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.6721324 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.341096767 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330225164 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330310902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330189493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361760183 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3303054 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.33364366 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.423223564 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.333686189 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.395824088 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.713911649 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.711294359 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.332668254 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.331053358 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.330530504 seconds)
  done (took 148.278732501 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400469341 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.406614484 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.444041487 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.334449057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.383398289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447762191 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.335171655 seconds)
  done (took 11.014666626 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.340049191 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333930749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383780051 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384888092 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.334927666 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.482635687 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334248487 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.346151754 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.331783095 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.386709478 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.333495009 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333730189 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.339966941 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.327760864 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383276913 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.346587252 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.449557186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.335830787 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335526566 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486783362 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332299481 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.341679521 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.386805952 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.346247044 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.336012476 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341597584 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900559561 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335710942 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332814876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.335115448 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332595922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.372659482 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335387491 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.334574406 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332537609 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451185154 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.334937508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332641135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.335523707 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.33490995 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.335095565 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.335457915 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.334927805 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.332548905 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.335223616 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.358304936 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.335117617 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.334972053 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.335178427 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335730648 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.38770701 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336265754 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.333257285 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334492912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.39242821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343058536 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.336154515 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.333884903 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.336072885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333239552 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487657599 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383587921 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.336371234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384187906 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337463574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33744558 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.335864904 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.336378042 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391668649 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.336300251 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386357805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.334168988 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.491656945 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.360880373 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337683501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.341024989 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.340693483 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337722048 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.332572914 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.34376703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.334573711 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.339288519 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.343990231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335174394 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335662272 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44069123 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.446982905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.335156602 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.350794708 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.345223456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.33622118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.391831059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.33802146 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.335934487 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391054417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.453864698 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39232954 seconds)
  done (took 153.443297798 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342768954 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.347885778 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.340685076 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.355246712 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.339107799 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.33849469 seconds)
  done (took 9.331826149 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.341726525 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.339548684 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.337590993 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.338360097 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.338928059 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338453216 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339584177 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340617844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343356639 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.338685771 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.338462903 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.339305127 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.340013259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.339086148 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.340132354 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.338888693 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.339346715 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.336686297 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.339539132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339684077 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.435983954 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.340770996 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340008032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.341592853 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.342790632 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.338773862 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347473135 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.339358631 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33945522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.348211536 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.342856861 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.340335708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.342636901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.346544152 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.344791086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.341236837 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344640903 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.340512833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338295945 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.340549924 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.340856536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340938517 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.34071253 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.340838444 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.344105886 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.346199707 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.344921273 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349103377 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341861089 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341378475 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.34068031 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.340443741 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.341004966 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340814676 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.343689451 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346242089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.345699515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.341245798 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.341681089 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.343289884 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34318123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342261587 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.344772599 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346595199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.349791856 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.342038196 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.343818476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345504075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34279057 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.341317484 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.342937241 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.338680996 seconds)
  done (took 98.97407507 seconds)
done (took 422.304400445 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.655373865 seconds)
  done (took 7.927476931 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.411032169 seconds)
  done (took 7.683333235 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.110377469 seconds)
  done (took 22.389112269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.428495736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.451539592 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.339223565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.33994106 seconds)
  done (took 26.832211752 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.683257922 seconds)
  done (took 7.954492157 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.338005316 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.334882045 seconds)
  done (took 13.946054968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942345039 seconds)
  done (took 8.213480069 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.006948856 seconds)
  done (took 8.284259183 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361930848 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.366169464 seconds)
  done (took 14.253997889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.330922745 seconds)
  done (took 7.601625462 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.619471135 seconds)
  done (took 8.892980804 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.347797149 seconds)
  done (took 7.621065143 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.389182908 seconds)
  done (took 7.660742175 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.36856014 seconds)
  done (took 9.640034178 seconds)
done (took 160.173802381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.33665905 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.33910748 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.337829113 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.337987257 seconds)
  done (took 26.623384107 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.375600271 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.375796695 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.377943507 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386059522 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.378295924 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375731111 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.368033133 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.368269001 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.386909763 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.378790498 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.37819392 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.378512395 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.376200097 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.368349993 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.378694582 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.377937483 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.387322567 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.378156411 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.368870148 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.37935356 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.343786988 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.386271619 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379409017 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.343816232 seconds)
  done (took 34.270223193 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.539355859 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.415254223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.498787228 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.396519522 seconds)
  done (took 7.123130692 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.396276594 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.396580195 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.407893291 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.448638319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.474457436 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.406484667 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.371570624 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.365120257 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351084027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.39662055 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.472015741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413674153 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47993761 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344377365 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.530848764 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.345008969 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.344372119 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.396637061 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.449660171 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.462493648 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.34470094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.396501743 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399997471 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.414233079 seconds)
  done (took 35.083676711 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.343903534 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.352211714 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.350995769 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.344861368 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.344802691 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.345136057 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.350281958 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.346069261 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.365797137 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.346038684 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.344708623 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.344202358 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.344575563 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.345203619 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.344465337 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.358233956 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.358637491 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.345331244 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.348805089 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.351405273 seconds)
  done (took 28.25177836 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.339462115 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.193000463 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.691729125 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.596046305 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.340225726 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.33947126 seconds)
  done (took 27.776456573 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.413930287 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.555296729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.348877811 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.693203693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.769528491 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.347319455 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.34739501 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.589418817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.889999089 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.886140681 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.40374398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.414165803 seconds)
  done (took 19.935755296 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.34829727 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.342980865 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.342542671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35977637 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.400998282 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.352108749 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354258727 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.341791187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.403885158 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.407726449 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.353299864 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.403169198 seconds)
  done (took 37.68749781 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428409538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391413582 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.286593305 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242868697 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059224319 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991287 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.245542341 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800935229 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.344955225 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616112705 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348265827 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43306636 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598209113 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341929071 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362381935 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.329665227 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568542553 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837455089 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344318432 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.296710247 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369061203 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347323411 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.406224456 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.371914307 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553669519 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.325414824 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.601760367 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.116968792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624233893 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35547795 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352663806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342385575 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615904977 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983420136 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435981906 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352225868 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270847241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.973054445 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.347265829 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.315800797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352331606 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345476967 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353424943 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34220729 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276326942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348585223 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810216965 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.348942092 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.053135446 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342991503 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354185683 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437420994 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346557221 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.336554067 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53760363 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.258095074 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.340973692 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349588855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91064663 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.836569733 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35309171 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.280010338 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.885306518 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.383564214 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976987395 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.445176604 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.347058469 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346962714 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279153542 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.360021709 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362556328 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48176916 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.370066504 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005700182 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082591937 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354981344 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276639588 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902199655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34701542 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.296188947 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573908576 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119427422 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283834624 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.290465617 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279544305 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044916722 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355804087 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.722452375 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353562026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802134515 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.356227291 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361153741 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367897126 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570452238 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.229890719 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345260067 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.353797795 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464281807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366985658 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.80551314 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280053809 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.349083005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602877337 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.557746687 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351932985 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.33757705 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565788856 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345076435 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.377186221 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345638165 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.37849173 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.948550869 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359869062 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.819387594 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364655786 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.120703827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081643969 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347983887 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464026909 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358253678 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591621712 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.111750992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243839954 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415063956 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351019403 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347137077 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.409449944 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200234192 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.234011973 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.348883999 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356636354 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.359526326 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.347559689 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296215987 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.350580725 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359591313 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.126705938 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571144839 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346973683 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62549061 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2809423 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485158032 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364254324 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.570999636 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.544399535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.3468526 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607210204 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35979926 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365221123 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361513275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367011466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444947068 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369587518 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.356865581 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608608717 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.350565103 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.351535766 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.4006606 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.130854659 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356060398 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.35357872 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261622539 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950428323 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322662392 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351275782 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240402185 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.362263348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416021556 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35414381 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.358571265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.128341637 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.394585348 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.355190351 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.346150506 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575738154 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359664854 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.399476646 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432767788 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.561661888 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958170627 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364633953 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.283542809 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.059859299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.041383258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349923443 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.540519037 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349912654 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358102766 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359739277 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.056013855 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958677678 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354048814 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.325463267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359014352 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361081619 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.355047365 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350350686 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.109587042 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858211432 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364686674 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363961278 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493342305 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.363576136 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284383561 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.867444712 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356109648 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350984494 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.128474313 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385477419 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.341853887 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834998808 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609542289 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.116491152 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362540371 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.506351678 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.385153531 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.349974367 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357135401 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363404038 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.35603447 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360629749 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.361207473 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.378835433 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.802986634 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918532271 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077689933 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900191756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279725366 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.364304572 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.235970739 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819532907 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285871579 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011221912 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538564511 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.818973809 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295981624 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568297013 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.563538754 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102470703 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362131631 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581600774 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28246162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.367615591 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367461433 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564733547 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38713355 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352786236 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303673667 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.639537222 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625671056 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360489809 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435601243 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815074987 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364353436 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.132879068 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.353366856 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695507034 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528351991 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.900473238 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.740568971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353632459 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376775354 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845450117 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357626104 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.879223444 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989324552 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354231799 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.573923233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29310957 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.364794229 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.365125361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.355695049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.619803694 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.362260212 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.613850482 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364806888 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288394244 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354955627 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907394379 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216736926 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36014752 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355048161 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093182452 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369035777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639849505 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.361202387 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.099865539 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360758643 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289296098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289217348 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.047127958 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364522401 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325504433 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855659107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.843961848 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531911678 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385067306 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207554162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613586644 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.370326322 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968198189 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584164869 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.358591881 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377713861 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.455989918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368142315 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.346291522 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254846462 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592323292 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267448846 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58154298 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.284727132 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.26452263 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355711625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568133843 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.255581116 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358092571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60327908 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.068816877 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.363178662 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070683592 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381309583 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356923002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377080755 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.900683369 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364128056 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42777686 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368717748 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.36789323 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368290833 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529735993 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361796099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362329394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.371343788 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450317966 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.865938648 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.108179322 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.132763386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977136043 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124166767 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974402771 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372551049 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357393614 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358959347 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291981526 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506830874 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.883445525 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631178014 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477824694 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.982423002 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379773453 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358816343 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362169778 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573246526 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633077668 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.228351544 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368509762 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024378159 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.241630516 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369241062 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.570154857 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863717703 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922989004 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482341367 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369941712 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823790038 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633625423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451815213 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359118955 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953784508 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.373550045 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713837533 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.366214058 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370883563 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509745428 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370540943 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00612121 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.367987261 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.514888496 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.132715934 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.364302345 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619911474 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.833243529 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372123285 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970868922 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088570844 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62370616 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429962358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370138601 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.474330427 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50597269 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.363227927 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.245373323 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361246811 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208041775 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.070299907 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.370085789 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981255516 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62666632 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.358530013 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.36497861 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385905336 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.37018959 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58507934 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069844134 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587086069 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371138614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36991552 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.933872081 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973193543 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375325451 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295747653 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.364785042 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604025066 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599417168 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385565119 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.813766342 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.071603079 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926444538 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.338023754 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383717059 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36441842 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094884283 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976927793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.119816492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86493099 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.023756868 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362521841 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637542436 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.367386575 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369286547 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640015496 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.365033452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374728478 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376023762 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.977906035 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12312898 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.385456456 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.385201218 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.300969556 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609954617 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121270648 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299257016 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362773369 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.55120361 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362880951 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482354966 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374627859 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.360416878 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366576023 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.121943142 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651614406 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.368880433 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.364863782 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.360579286 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381224211 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373172958 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635166773 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367729232 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036384511 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.713988091 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62163647 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368307022 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.351412399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.366832212 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365359128 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080622637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333071709 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.073605554 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930615721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.370523261 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.375715252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367130585 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.581379862 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575140625 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378474911 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378547686 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369837261 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381332238 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.269485215 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136860364 seconds)
  done (took 1597.871959844 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.411645868 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.3917847 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.402135861 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.406166819 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383541449 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464246544 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.425467297 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378741618 seconds)
  done (took 52.563739975 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.365861844 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.516237153 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.394613004 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.367256794 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.374522097 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.370739186 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.832660525 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.373574319 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.373906956 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.375001486 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.372498118 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.371408214 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.047891173 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.377864797 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.371213637 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.359949109 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.374786435 seconds)
  done (took 65.926086068 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.381394082 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.875590099 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.459559761 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.364625651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.268624882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.371681629 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.128809524 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.405703917 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.37182803 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.58452168 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.014221225 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.410509041 seconds)
  done (took 84.93851851 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.374323289 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.37374798 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.374181555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.374486866 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.374204517 seconds)
  done (took 8.171518073 seconds)
done (took 2027.499405301 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.730410972 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.068277629 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.006760062 seconds)
  done (took 5.376287006 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.514974234 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.56313352 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.683604494 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.690539358 seconds)
  done (took 7.754657897 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.645710019 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.756994604 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.559557187 seconds)
  done (took 6.262654777 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.753543377 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.374848934 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.488937019 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.367441766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.367773679 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.367628419 seconds)
  done (took 20.404259226 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.370555791 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.373006042 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.370555085 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.373491562 seconds)
  done (took 6.78987544 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.353966636 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.067615165 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.353385622 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.37139203 seconds)
  done (took 18.447801371 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.117757801 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.129841055 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.114409538 seconds)
  done (took 7.664017716 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.367474197 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.215549287 seconds)
  done (took 9.884824922 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.668106017 seconds)
  done (took 2.97035829 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.505515559 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.696412752 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476986144 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.351761749 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.503650671 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.136327855 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.984899069 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.567911288 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342323172 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.511772673 seconds)
  done (took 28.380584858 seconds)
done (took 127.584878443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.113397082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.611230932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.574229764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.087904482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.789442207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.575080278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.582693796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.052418998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.594297407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.587425673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.089208517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.790092728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.738713272 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.612334679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.740001412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.612150374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.602224799 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.153494774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.773499424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.005874997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.583942521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.724660085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.921139561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.741672779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.603551125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.52539526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.305077344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.61467416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.94377201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.324065586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.52628181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.180186071 seconds)
  done (took 194.984264624 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.370248061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.370162318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371591288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.395209537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.372333351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.37059321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.400012081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.371355231 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.37390951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.371798247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.371355044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386192137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38627519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.371491461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.37175854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371823705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.371721594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.371385495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.387441194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.371620563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.372088442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.385568377 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371466455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.371303891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.371532365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.38657005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.371795987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.379543659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.372569432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.372357183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.371879009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372540531 seconds)
  done (took 205.333535669 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.371619366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.372820143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.373825469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384654414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.371748532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.373193624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.374769165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.373670095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379000528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.372426029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.372761231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.387645268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.371338371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.390358049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393943272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388226539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.395848514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.37379001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.375555078 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377236925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.37524981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.372536943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.385353365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.37833899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372016905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.374495271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.373235884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.376134864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.373617561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385857293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375813387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.373956603 seconds)
  done (took 205.398861519 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568165608 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.379983116 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.380441701 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.313910177 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.380139841 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.379621262 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.375986355 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.577002912 seconds)
  done (took 14.663337756 seconds)
done (took 621.685068768 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.666770921 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.380245114 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.575699856 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.400772736 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.183976007 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.401617706 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.39986387 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.567770769 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.304307882 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.570414416 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.62823252 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.400186762 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.764064667 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.399375936 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.644240079 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.498670575 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.235206666 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.359735108 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.714118035 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.936378011 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.656644061 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.822113127 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.570600329 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.316037907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.770213594 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.816302611 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.067556389 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.24845129 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.403736017 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.714303798 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.0809077 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333044501 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459190183 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441814925 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.496965776 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.476006696 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.292090502 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.438802731 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.583247153 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.585602408 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943483807 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.129278376 seconds)
  done (took 92.986916307 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.370802783 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.370749491 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.370866245 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.370790684 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.372614364 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.370850083 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.370727586 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.370068358 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.370145282 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.370575771 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.3703251 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.371967763 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.370511948 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.372374778 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.370930193 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.371093094 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.371856849 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.374055335 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.371291022 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.371303428 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.37214359 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.371215395 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.371535663 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.371786397 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.372603308 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.371720809 seconds)
  done (took 36.96678561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.383496865 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.639020297 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.798624327 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.39241605 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.384285861 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.38822637 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.460080693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.386688632 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.387063852 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.387739472 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.537194564 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.386764647 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418866298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.821039851 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.388252038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.393752652 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.385953606 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.386034673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.646626502 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.395219761 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.480900813 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.386550256 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.462888183 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.397136187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.405369178 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.386572511 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.391464363 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.903217079 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.388152426 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.539940479 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.168110583 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.461588045 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.858161223 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.807238485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.168990328 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.389763472 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.386837594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.543138811 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.387555176 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.387625509 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.462740071 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.387710344 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.806130194 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.013062312 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.403900245 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.386257631 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.924160688 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.543353269 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.629958639 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397979365 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827949265 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.39046269 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.388210666 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.388544168 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.630569713 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.396721012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.388067029 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.920648541 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.410491569 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.463099821 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.388818841 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388256259 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.653852747 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.387937508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.640929086 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.390138524 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.395307947 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388087651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.810276209 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.393212315 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.037005474 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.407556113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.387504482 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.540133583 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.642005934 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957836953 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.393857978 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.657006087 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871558853 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.463477467 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.394185376 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.89399473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.467605097 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393628091 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.391502152 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.390526118 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.389074688 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.434875249 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.463695468 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.961322828 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030539906 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.936219698 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.483182318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.404091039 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.389584632 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.920155841 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405749612 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.389934999 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.806186614 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037580836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.40872518 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.397929103 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.023354833 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.410456498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.467778922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395947925 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.818281623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.393572131 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.434961674 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.39047053 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.396624196 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394364535 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.467423676 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.394577706 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.390409367 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.008900276 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.566340997 seconds)
  done (took 182.083872902 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.385084565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.384234764 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.394167739 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.38339464 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.384419819 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.39092915 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.384734973 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.384598339 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.39013296 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.383927116 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.384162107 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.385976735 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.385937772 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.387492854 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.393111936 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.391503083 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.999359477 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.384333287 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.385854676 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.384864583 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.183074893 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.388876057 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.385454378 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.385589865 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.38561241 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.386812455 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.413622293 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.38879996 seconds)
  done (took 153.585487297 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.39271418 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.945501507 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.393260536 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.520980405 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.413240546 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.39020064 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.519867688 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449235473 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.397733959 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.388991553 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.389074868 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.693973224 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.394785795 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.891067232 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.578850313 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.523795654 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891245111 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.39305559 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.389694264 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.389911997 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.522395455 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.400405816 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.689670653 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.945302949 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.394231344 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.944832901 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.382107191 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.392138642 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.391565873 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.946168041 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.390872383 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.688848882 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.469010823 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.45360774 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.951305316 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.894060724 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.89548494 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.535654588 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.392875618 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.390762634 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.390593904 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.382590159 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.948364711 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.394591512 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.394225712 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.943778218 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409564616 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.394719746 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.402581836 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.392237059 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.451697765 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455189679 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694990176 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.954614967 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.470269192 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.41518472 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.523209455 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.788170353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.396877497 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89544037 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.382331605 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.965199924 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.400187709 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.383448241 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.393583826 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399062965 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.540407775 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.521911974 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.896884583 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.395954082 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.896733093 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541698494 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.394996853 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.392571918 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.396187386 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.95141666 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.898575175 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.540998572 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.529270037 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.586070369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.387751393 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.394876093 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.38415712 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.470993515 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.394433167 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.952209706 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.898969273 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396567853 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396763363 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.395420439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.395680142 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.567127987 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.956651621 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.473021351 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.90153099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.717162195 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.702311797 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.398366665 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.453561547 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.39748374 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.702251527 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.399955315 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.452090731 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.855047335 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.702845251 seconds)
  done (took 165.395941299 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.636822301 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.580944788 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.487939217 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.508639332 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.975715982 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.96554918 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68795397 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.521156668 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.505247457 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.638663043 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.549043264 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.489455863 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.560333181 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.473013149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.145554419 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.466402326 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.488034181 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522532897 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.490052869 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.409876919 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.035623218 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.679022498 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.564052409 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.346323749 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491099927 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.180311564 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.935053704 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.946404957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.572090317 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.672001758 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.932003442 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.494484248 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.370569417 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.060961581 seconds)
  done (took 66.708838153 seconds)
done (took 699.035884446 seconds)
SAVING RESULT...
DONE!
