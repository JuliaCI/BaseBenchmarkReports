cset: moving following pidspec: 9708
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.425654984 seconds)
loading group "string"... done (took 0.580535949 seconds)
loading group "linalg"... done (took 7.338160998 seconds)
loading group "parallel"... done (took 0.15743326 seconds)
loading group "find"... done (took 1.170883093 seconds)
loading group "tuple"... done (took 1.834764015 seconds)
loading group "dates"... done (took 1.338201686 seconds)
loading group "micro"... done (took 0.225164187 seconds)
loading group "io"... done (took 0.966880664 seconds)
loading group "scalar"... done (took 39.401736289 seconds)
loading group "sparse"... done (took 12.583561788 seconds)
loading group "broadcast"... done (took 1.009774572 seconds)
loading group "union"... done (took 13.181766296 seconds)
loading group "simd"... done (took 4.878532122 seconds)
loading group "random"... done (took 9.942507573 seconds)
loading group "problem"... done (took 1.929634134 seconds)
loading group "array"... done (took 23.337463718 seconds)
loading group "misc"... done (took 1.860774595 seconds)
loading group "sort"... done (took 3.887355 seconds)
loading group "collection"... done (took 18.889736982 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.5141284 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128375391 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120500764 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122465128 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15036279 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115237951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127330003 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086780434 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.788688448 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151777344 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120596913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435553504 seconds)
done (took 5.178847276 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173246425 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08258388 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083559507 seconds)
  done (took 1.303271608 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066368637 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123084875 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067633177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068260682 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068804175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067591404 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067461359 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068059246 seconds)
  done (took 1.671234884 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071880229 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070382669 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067893494 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069323688 seconds)
  done (took 1.420804271 seconds)
done (took 5.783460267 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.797443097 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206179831 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188046459 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.421809744 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133867194 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162811917 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643395145 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309201751 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189496422 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082582498 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108307585 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336163916 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111899268 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643529315 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076982992 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093445754 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139838719 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422420684 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066911334 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082491026 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090208132 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130014736 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084902407 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073760786 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147572432 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067490816 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141626659 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081943884 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06573018 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.216560848 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174090327 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656538786 seconds)
  done (took 10.327947659 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095885294 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099540783 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07005358 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1288925 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100078384 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072460015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072829362 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068549998 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089941498 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132081156 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09224666 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104758075 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067286121 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070682232 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087044256 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207348981 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.0827762 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084121953 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071957167 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076846393 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108432069 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0807202 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079984143 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079359166 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131248106 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180959695 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09910811 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099297392 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068729594 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082986329 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116384843 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1281646 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067054282 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067790638 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127784161 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095816184 seconds)
  done (took 4.662427442 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011206748 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145163419 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094033485 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13659762 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066347636 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112521303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06739348 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083474886 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216095098 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.445998587 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591107006 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11396959 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107529872 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069665206 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070498865 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068517175 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.490664488 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097360892 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110993355 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084868957 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072735037 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071947954 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357421136 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070771718 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066274188 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070429058 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058939502 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129472912 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070424175 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956314837 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130334061 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068302288 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10240446 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170863721 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090206508 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144906792 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06853921 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.199528099 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15763318 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073026835 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068130457 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086541258 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114970585 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104875587 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116423156 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067263006 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069061831 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164946017 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066361654 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082049857 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.632906881 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153864577 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079012482 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065768157 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259388872 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093282031 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070599179 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065848082 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184419928 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135828055 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06952884 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068955776 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069945569 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072525034 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367996692 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067438996 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.920456474 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070123677 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079429219 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07122653 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071631042 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065889684 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074871827 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074528804 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089598068 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066216887 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068464552 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077429031 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067977361 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067172101 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068894799 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086662854 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.378497217 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067108678 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069411424 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065057978 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066263252 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091290869 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098757157 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066156709 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066302843 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10097712 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06812205 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065366026 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107022254 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068019068 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086279062 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071276979 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113840717 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.167776887 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095452691 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068161876 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098462566 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071863645 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100719546 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081835306 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068788908 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419449521 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064730624 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065188753 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071010845 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067940327 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069190378 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068785762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082300371 seconds)
  done (took 21.356209763 seconds)
done (took 38.498488943 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244317711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077688614 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079705446 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078918081 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075096582 seconds)
  done (took 1.785348293 seconds)
done (took 2.994948851 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12502427 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102236696 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066247779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100206082 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066448523 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105275227 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103913957 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084213427 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10329663 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065350806 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103066117 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065187436 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065692452 seconds)
  done (took 2.385144792 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083715261 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086617645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072066228 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085811367 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065396289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085291738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083289397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091864826 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083511044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074936373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065202613 seconds)
  done (took 2.08051433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083076114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08597453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07184733 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085199541 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065378902 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083879019 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083608466 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088580442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08391536 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075820114 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06543896 seconds)
  done (took 2.071909491 seconds)
done (took 7.733601038 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076715221 seconds)
  done (took 1.267055804 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603359174 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.157453181 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081246831 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111534929 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189466527 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120238024 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277131993 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086758989 seconds)
  done (took 9.000878345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091933131 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069662332 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070929602 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085013668 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073683118 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073513412 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072639899 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073883709 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070089024 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071123394 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070372039 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069608996 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072125033 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069693308 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072691812 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072560117 seconds)
  done (took 2.443156199 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094787919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093043459 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074854795 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076693723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073642536 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07344562 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075575389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075076772 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071962398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07401274 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07618292 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075040499 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073102799 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06612471 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075441759 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077242081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072256179 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075562107 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075403282 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076065379 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075276788 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065274565 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072898285 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075776852 seconds)
  done (took 3.121576558 seconds)
done (took 17.032526587 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114546959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070991157 seconds)
  done (took 1.383571396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081062174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082238379 seconds)
  done (took 1.368908343 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083405327 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065983605 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091726869 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078930719 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068162054 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06734372 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091543652 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067928447 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067161401 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067576331 seconds)
  done (took 1.955222695 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067829258 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07762726 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070662177 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082478572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075837829 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065217962 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074670672 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069319247 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0805265 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063829526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072835536 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084346614 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073052432 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086647321 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07465509 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070452707 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072986959 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068904382 seconds)
  done (took 2.538134251 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064911634 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068448578 seconds)
  done (took 1.343107507 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066506661 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06445345 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068237965 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067761537 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064574794 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063332736 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064487764 seconds)
  done (took 1.665235031 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391146773 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115242666 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318186092 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071970223 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083768195 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261048576 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067132048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072590402 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072673785 seconds)
  done (took 2.70910275 seconds)
done (took 14.176198288 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080131656 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086042952 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098700257 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380631624 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093405888 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06765157 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115911053 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192404476 seconds)
done (took 2.336382911 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211235398 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639585861 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411359443 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212622629 seconds)
  done (took 2.480958079 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341302226 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089487041 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059874003 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068442742 seconds)
  done (took 1.78253587 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066147397 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070589199 seconds)
  done (took 1.358597929 seconds)
done (took 7.056474446 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066332755 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087975159 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06590011 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067804494 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064881801 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067141652 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065252121 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06501458 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067699857 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068227133 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070155349 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065207331 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067853741 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067711126 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065232346 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065159625 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069200477 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067782339 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065669975 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064943644 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064929005 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067633468 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065517005 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065009822 seconds)
  done (took 2.875655357 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084314353 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067420404 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073095368 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073023785 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071783065 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073555838 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072776285 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067868963 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072774117 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070135835 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071220682 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071381592 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07016861 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07165584 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070116828 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071514174 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073967452 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067612248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07020175 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071272825 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072989067 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068056991 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071281717 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07338938 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07120461 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072800791 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070035737 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067796568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073209328 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071149387 seconds)
  done (took 3.378572173 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069828986 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064228234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065449273 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072205969 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065203363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06644502 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064479626 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06530119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066151884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064728422 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066083998 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064569929 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065374692 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066781275 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066041755 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069291708 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080985465 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065772718 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065103972 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066242332 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068445316 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06520451 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065678163 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064640136 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065140008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064440232 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065103162 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064592446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065745366 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065108703 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068448511 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068317478 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06517723 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071467583 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068712127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064547383 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068746499 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064046862 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064916602 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064657977 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063967368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064150825 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064487675 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071411205 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065113841 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066005155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064841426 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065812784 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065084718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067225054 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.181758649 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064560108 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066507393 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066079611 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06879915 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063892366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065858683 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06409158 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065026139 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064363409 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064129117 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064017819 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067047248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064868763 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079186987 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071200928 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064436855 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065974534 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065361432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06708074 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066419331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078417804 seconds)
  done (took 6.144147727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089914833 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087902282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064826014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066720127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063120812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065381916 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071725282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065403462 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066654624 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084148002 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066370679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066415785 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066788595 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069096533 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065558506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066551207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073781657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064047077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065417143 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069174249 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065715256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071970249 seconds)
  done (took 2.779548114 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156545674 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069935844 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106164206 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075419838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071287675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077237036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07139258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071542861 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071852626 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068927002 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069640705 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071265585 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071524401 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068501157 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068847119 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068580697 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071498895 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068562285 seconds)
  done (took 2.637129321 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075756681 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066146416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086377474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065067498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066117197 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069581008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072242722 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076124933 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069681996 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067198612 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075397125 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069876594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069844457 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067124502 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069736971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066677962 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069350249 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067151855 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075517802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071261163 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071771862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075611229 seconds)
  done (took 2.802670198 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079945149 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067500705 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08253439 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069885811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062781408 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065496393 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07156367 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066776245 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07162947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068853864 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066722091 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065839842 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070446833 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067574038 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070549947 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067286337 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068987967 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067046731 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069355666 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062872553 seconds)
  done (took 2.624409782 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086020762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067610446 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068040819 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075993259 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068983159 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068791704 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076635722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068496807 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068500398 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089896455 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069308773 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069031284 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077270445 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07427627 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068675335 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076436366 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076892133 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076304955 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068867852 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069039996 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090434569 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068520605 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076683418 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068594582 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068775385 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067986081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068067336 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07339456 seconds)
  done (took 3.290981317 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066506937 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066225795 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065151425 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06545106 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06506967 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064923354 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064632075 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064434429 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067489723 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065109731 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067352199 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067279047 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068026234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06768311 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067872761 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067603996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067214157 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064997801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064904681 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065222963 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06761008 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067664632 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067567932 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064813724 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064802008 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067262829 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064994484 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064806079 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06758537 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06481408 seconds)
  done (took 3.230781684 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074748111 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07354193 seconds)
  done (took 1.395628665 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061823547 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07975003 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063871085 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071677975 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071418902 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06834156 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075046998 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071217754 seconds)
  done (took 1.806157129 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08163106 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079579602 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069604692 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082150955 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078883901 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08516649 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137261414 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069092094 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074505982 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065463748 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081628221 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066945928 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074043526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068365233 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074357152 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074430138 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065241938 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073910419 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069872148 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066225407 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069395871 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076034561 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069622637 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061999378 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067331172 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090015271 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079391193 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067461649 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071109367 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075952875 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073781103 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061866883 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06780464 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068340514 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065987537 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077873909 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083646203 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070901456 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076884201 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068523822 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078789399 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062861053 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072907254 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074489893 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077941574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068869389 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068622638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062423816 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065924383 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070349994 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062794614 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070906526 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062427556 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075124601 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071676187 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079492242 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066924284 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069597906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070548669 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071808183 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075089811 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070153833 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070327309 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067794708 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077884685 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072580197 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077224578 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062700618 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061647428 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06570595 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078573244 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091400553 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074222888 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068109541 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06822801 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065086353 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0704877 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068837123 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074365487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073953636 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067765852 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073118473 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075059103 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068247836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070587541 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076379168 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065633554 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070753106 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065442829 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084798731 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066389275 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065957127 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065084246 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078452545 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071043898 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067454244 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065391026 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075528633 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061680653 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068681164 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06866579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068468327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078230062 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072697932 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072857692 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077482116 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075429838 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067549315 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070204241 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063730136 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067274133 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066311243 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073119348 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060393708 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06946357 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067960842 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067149394 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075367861 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064969991 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066717524 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.20046505 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07277545 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066122243 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065730764 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071897886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069106241 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071810581 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07757588 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067689406 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063693579 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063671106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072059315 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068678028 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072180685 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073895324 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072091044 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062380914 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066315351 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073605167 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078301176 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068382076 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069072175 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076591549 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069634546 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06755433 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075160756 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071001732 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067809844 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074747994 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06952723 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063599528 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072213101 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070593401 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066699512 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071784274 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071768715 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071076817 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068881436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067421201 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077078992 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069090957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066909889 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068867443 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066730727 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079097476 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070146676 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063265744 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064992874 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077955892 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066413966 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066952704 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067724488 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070214006 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068671483 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065830482 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067696225 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070125582 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079570692 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072010486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069345119 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072696375 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078877991 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067996223 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070094382 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067109963 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068685601 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068175279 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07606764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073031294 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072178947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070281319 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064718186 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073314848 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075524297 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066775577 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065602878 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066641749 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072067371 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073595088 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072342584 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068563468 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06573055 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068376854 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071234414 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070755406 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067406354 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066753309 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074730827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065962603 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075060323 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068324459 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078169176 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070776881 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062248178 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071390128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066116398 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073636081 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062801127 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065954356 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066897698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068524169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066998107 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070655437 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061753655 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075236164 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075347399 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068412505 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0668466 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0675272 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074442591 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069148926 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071572474 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07111054 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073389254 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077768219 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06595157 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070296597 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07741965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067077623 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060764214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072063667 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066129316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065713596 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065271132 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064823699 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069430979 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.204369026 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073493162 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061705255 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070930711 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066746884 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067230142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063403573 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073095116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071509331 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069164808 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075341312 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068847484 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069154912 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072306509 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067622287 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068782229 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069367515 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071774947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069856842 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070546248 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067942998 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07195611 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066732595 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065824749 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070331014 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068996972 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068844356 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074808153 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067433213 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068283007 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070758819 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06879617 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06893776 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068395835 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067446653 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071507618 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068825747 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068942746 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071058733 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062498057 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075905411 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067180685 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076234744 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068609721 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065985748 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077210791 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070680065 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074138248 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070088287 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068970626 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069548406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067378144 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070943681 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075253054 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066549393 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078857608 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076343852 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068974975 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071442724 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06891712 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069654068 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066827823 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06870733 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06820839 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06738885 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067654747 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072725799 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070790783 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067613837 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069756262 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068489716 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068320278 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069386433 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062165638 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066685605 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066869625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067671824 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077359201 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068481178 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067391109 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066796126 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068691169 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066591168 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064668675 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075930405 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077534529 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068437051 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075743664 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067196635 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069912684 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079055761 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061746991 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065809075 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064934472 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065474606 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075208562 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068351845 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077339398 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067686561 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06698673 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064865967 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068458568 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066321005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062465295 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065479764 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072336515 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067390548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06711849 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068164027 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070828106 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06859294 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078063037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067013612 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068745474 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068170087 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064486 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066079333 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065969685 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069101933 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067378677 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064642868 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063607531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06638468 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067458226 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068307257 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069339721 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068290531 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07367126 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.200116525 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070358354 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071858605 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063198158 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072087353 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067849155 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068424419 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067329091 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072512634 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071699582 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06903768 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07748682 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067809591 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069576157 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068598679 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065824071 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068384323 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068359205 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068601992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068046817 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069463471 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0773093 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066575606 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072307075 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068136331 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06894448 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075168966 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069721223 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07147023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075314194 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06849855 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070775921 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076958642 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073166159 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072333173 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068900833 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070899431 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073851431 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067199278 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075339832 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068615874 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069256528 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070511981 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066336223 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067334047 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068545313 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067467892 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075157697 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069690124 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067990552 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066589223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066152189 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069482921 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070991517 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076156535 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070955035 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070911649 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062204063 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065107537 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068269718 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065725998 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070106158 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070294602 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074356261 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070023227 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067782689 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067173005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076440119 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073402974 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071420778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066555513 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072032574 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069454931 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06988396 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068454302 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067580648 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069010804 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071558373 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068860375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0671755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074994725 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07108427 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06902888 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069155974 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068598248 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068073388 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062425695 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068288067 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06993345 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073150758 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069925702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068209715 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079515347 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065843753 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068666454 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071260198 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067223618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073096168 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063152551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070106417 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069272477 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069057539 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062896872 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066839033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065892084 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070267959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067232635 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062822361 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078701409 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077354666 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071083028 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066580074 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066569751 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062603066 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062529874 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067104976 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068493927 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069127196 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077740978 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065892871 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066601432 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062094502 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067187623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069833113 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069582157 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063700691 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061602508 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065711726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069440625 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.204490992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064694089 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06817908 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071647912 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070929601 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066429317 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072520681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064990257 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072193694 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081828794 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068858854 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069400328 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075391576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076812607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069149863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063693078 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069351727 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071942538 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069394514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070350972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069140125 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084464551 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07142387 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067481255 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067332112 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071309758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067646671 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077460762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06988882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068812495 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072854431 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070663296 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077221883 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072174504 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07586572 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071486111 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071471967 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067320956 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068700785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066349038 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067405074 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068795552 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06852471 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073421203 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077436442 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067585486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079915512 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078297493 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070216071 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064869158 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067993285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067425369 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063476749 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069339464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066194859 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06616648 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067387101 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067344361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069402916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073186676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068648551 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068950174 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067381565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061865219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070682968 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069791378 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068394493 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063974455 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067899489 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068338589 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072006846 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071180145 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065250963 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069184763 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069704144 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06840401 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062618044 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074431579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066639085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069835505 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066752801 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068133384 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068515023 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071922625 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072674664 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069008231 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069986763 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071529978 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069776846 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064590324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064899366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073351811 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065831789 seconds)
  done (took 43.525349414 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099618638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062656676 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063530011 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063108851 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074375898 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064264245 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063078287 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064809885 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064333694 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066565477 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063354324 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063413408 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072203801 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079045807 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074896345 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067694111 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063229625 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064327864 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063193182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064383065 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072594605 seconds)
  done (took 2.768422213 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07290341 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077705032 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078318123 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084221418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072512563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071598598 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077421353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072368718 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08089498 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074598893 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08020547 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07248125 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074852069 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074246544 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074622792 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072007017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080105523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072570828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072176937 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077709784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07225541 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07737088 seconds)
  done (took 2.977871945 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066249927 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066506066 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069971464 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06255098 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068228775 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062575516 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071073488 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065213073 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070749412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066183805 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066489987 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066557186 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069369582 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062678293 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06724905 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065140379 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110433401 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070496335 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067085871 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06772965 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062288036 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069121076 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062126278 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062753238 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065902521 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070814758 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067653201 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06496713 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067153963 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065958016 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066705788 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064555754 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068213387 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067808656 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06627108 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066492767 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066900371 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066876756 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062285745 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06515511 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068014983 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063200802 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067391372 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068420519 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064941111 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064542149 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06903081 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066788339 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061645091 seconds)
  done (took 4.614682074 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078514246 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112195227 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068532908 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093948367 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08209327 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074241613 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070792007 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091831921 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064321635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065532604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083331235 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0810312 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067073579 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071896234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073657516 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06754915 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067801128 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065651169 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07060144 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066147745 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070872307 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07367654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082093572 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079898537 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070495274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065558618 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066460293 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071272317 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079922964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071059274 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071447329 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072513065 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082313083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068442661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0658066 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068926159 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083350058 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067095868 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069235304 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064376755 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068901942 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071446979 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073566777 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08337569 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066911594 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072373743 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066620803 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063614171 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079452457 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069303353 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074615032 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081236799 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070431194 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066773055 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070998307 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081753765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066613428 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064715917 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069785608 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078838882 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064687913 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070756313 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080615783 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069116692 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074049386 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081270059 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072051518 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070440199 seconds)
  done (took 6.452046388 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07514136 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094929348 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082463636 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084358775 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077050473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077051927 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076653153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077389528 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077572471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081984002 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077311691 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118452856 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072492999 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079691138 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076666449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076466178 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076758001 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0766313 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07678448 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076049974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076703518 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084726903 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077011027 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084168116 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08167609 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072574961 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076453146 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077049728 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084496508 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076843673 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081070485 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08570888 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076855752 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084923923 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081134273 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076462811 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066964432 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076652092 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076869735 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076697038 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071493981 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084770704 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076153786 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071969504 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077278523 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076399494 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084524285 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080865373 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079310825 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081282836 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077144729 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084454949 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0767195 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076471387 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084871262 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087906295 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084483375 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084513493 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076787405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085125987 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084748352 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087803236 seconds)
  done (took 6.301176087 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081656577 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075546086 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084174247 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063052097 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065767258 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07343356 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065523317 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065391026 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076318861 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075889506 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078339597 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073275984 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076329761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078192506 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073310169 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076420627 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073849158 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073567462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076049776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073526861 seconds)
  done (took 2.817564807 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074724988 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083337928 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0672782 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073684674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070335761 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072967802 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069521918 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070835403 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068208248 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070516436 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078091916 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078261723 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068444163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072886866 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077697668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072948598 seconds)
  done (took 2.501848684 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083876442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073758258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081599091 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067637968 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068300218 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063462499 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066907133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062276215 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063661416 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079629264 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067032197 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077397498 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066613831 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065756434 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06366177 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073163618 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062890935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064105898 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066757501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079465578 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07115684 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065171108 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070189656 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067059228 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069504544 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072178606 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066596148 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067295423 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064602933 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067320838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070082584 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070570157 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064399153 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06545281 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065290061 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064386772 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066613577 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067079484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072295746 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067078976 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064768337 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069386838 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066995856 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067780273 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063191845 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067286768 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063664736 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06900224 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065054501 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06989076 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067368434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069808355 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068034355 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073857454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070141648 seconds)
  done (took 5.102440325 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079639459 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06943781 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0622475 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065429477 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070495111 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069246181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071309278 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068750895 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068853258 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065933934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069225401 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070167691 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068773984 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071269412 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069145683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070758604 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063382033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068617232 seconds)
  done (took 2.586663891 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07051576 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065894337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074787756 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068086555 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067681865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069575553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063082647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06584538 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065908102 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067107022 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067276289 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069438396 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065712756 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069608082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067051564 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067130876 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069740554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065860821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067133715 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063107825 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069344282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065488667 seconds)
  done (took 2.823182489 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093924634 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084730258 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143769991 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081295596 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086435321 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073151976 seconds)
  done (took 1.903128489 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090680925 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100295252 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066688702 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070379103 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077865615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071272591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071001464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071614282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080059227 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077748003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071353256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080074177 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079933037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07954111 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07718907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077422616 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071635998 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071164093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067583262 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085695043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071652279 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080479263 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071787456 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071110367 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071884979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079639292 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080377237 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078253986 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071478008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079864981 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077774643 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071590864 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080758029 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077800325 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070498198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080518665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071770564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086010307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077426913 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079837931 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07036337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077727887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080006434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076473476 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080044132 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071375689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076203792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07189347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071334083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087391013 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077199901 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078988618 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080318742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080376717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080254118 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087587028 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077593854 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078920486 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077278486 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077739517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080137512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077848675 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079341944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077637694 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077491353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079518798 seconds)
  done (took 6.443067956 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103540422 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066616777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070555531 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075760041 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077429636 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069501451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069774846 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0697013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069939676 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066843926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10776216 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070267369 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077388713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077351755 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069523342 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069336336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069785556 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078103398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066803392 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085618428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069473901 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077456007 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077237687 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07714689 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077657839 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077620912 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071701024 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071735087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071514468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071360367 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076447483 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071908796 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079597984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068402788 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079753798 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072117865 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071431486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076548445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071793684 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07808621 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079845541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086171712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07205718 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071150743 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077538051 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07207745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071360232 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068290255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071735284 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068648551 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077451577 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077406573 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077903179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079373083 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071850261 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071792136 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071919334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071512245 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071359768 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077642785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079375411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071504826 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087748292 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071665611 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071411783 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079820878 seconds)
  done (took 6.306126872 seconds)
done (took 131.308830479 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185222179 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165619561 seconds)
  done (took 1.684179788 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067564988 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100465806 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08021684 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131348043 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065833296 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100392785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098444853 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077854844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066222667 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065252447 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065583311 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06818268 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131217524 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065981401 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065761619 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068328203 seconds)
  done (took 2.665787272 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098308314 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165504873 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103269784 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066448107 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100332057 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072462095 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064478097 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074784115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070999694 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064745671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072244776 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069996962 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064678799 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069791502 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070601876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071857159 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064302438 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07320304 seconds)
  done (took 2.787177233 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098985966 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090945779 seconds)
  done (took 1.541920466 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15598402 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105235659 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144104266 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351184445 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166110832 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127384636 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127510952 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129815203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121354159 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123112427 seconds)
  done (took 2.89971389 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099179588 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153778059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265175019 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116715633 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072065868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094132555 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118137268 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077751208 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081198185 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082519236 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082977382 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078862556 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101753647 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074251926 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075382275 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078335486 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105136166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072965924 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074712293 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078405083 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100958381 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065232874 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073213988 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073118357 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079813594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079883949 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06715621 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067098093 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078669414 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076086127 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079063705 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096057584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079470936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109142187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072670286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110114689 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078691939 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076030673 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076410434 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07617086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081201948 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08120061 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074667227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078581296 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06704172 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078730512 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066922638 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067183227 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080161723 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068564934 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080008156 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080680105 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109632313 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068354509 seconds)
  done (took 6.054723263 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102603137 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106170978 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071011705 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112852005 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101947291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07181974 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102858163 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095127771 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103918874 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069505949 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068050808 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069771587 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082013057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082580681 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114772017 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106564645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073499072 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070845243 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106094499 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105288241 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067896627 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096555275 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090622899 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103137353 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06718727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069920706 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069165108 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071954562 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079380917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079944259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072187031 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083287423 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.09164665 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08067609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06885683 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069541399 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069953349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081108684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079085392 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078699936 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077177496 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066916848 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068559666 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071280162 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071803719 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069687567 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080923642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082974556 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080900177 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071482473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07201384 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069776042 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071275484 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082855817 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079970261 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084117344 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082491924 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069510092 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06945939 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072460953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08053493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078787104 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079198894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068934708 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079330392 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070043521 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08383484 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088065226 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070177903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072030972 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070824748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071123046 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071613865 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080177629 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079835351 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071493534 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070818245 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07015437 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082668325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080527664 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070404485 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079118211 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068649283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070421643 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071310757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071205978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080152952 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082622905 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072021938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070160566 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070734424 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070566326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068918335 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080356633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082761105 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081973938 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081024346 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071514852 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080487401 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079003933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071010939 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079611478 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06903613 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070788755 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07010392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078581919 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.205623955 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080101138 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069597123 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069408213 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081149679 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08320525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070976652 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081276719 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08289322 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082026169 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069482607 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0833067 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068452507 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080233485 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069507536 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07919426 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068470093 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080120618 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068500829 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067798985 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068170702 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079144427 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073734328 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068832925 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070618102 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071472459 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081765384 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085908146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073276837 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080745255 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080635643 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072739833 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081486917 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071023471 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082560947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072580419 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072189078 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069433594 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085146266 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070500339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070586882 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072273485 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08326716 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068196988 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07945446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077314237 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068044612 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081670808 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079802925 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077000636 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07999101 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070522044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069115087 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069644737 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07068883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081182314 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082376942 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072495314 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070583001 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079902706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081528485 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069432914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081105158 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080960073 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079936689 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070069852 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071739157 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082556 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081363195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077982317 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077665824 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079109583 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068265451 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077901609 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077739023 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06729486 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0844315 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067865285 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082218091 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078594094 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076246966 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078642477 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079850623 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079730585 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079469105 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083240673 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067693336 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067539433 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085374543 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067982883 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068799668 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077871898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069034027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068998092 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08295979 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068049251 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079966511 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06737446 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078685091 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06630345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069145155 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082705859 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066353881 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067500549 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077356412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067515995 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075723097 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077885319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.205938763 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069221485 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073031173 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081619044 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081125445 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070587481 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070082191 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07286485 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.0810059 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079943683 seconds)
  done (took 18.883759708 seconds)
done (took 37.875510479 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215372555 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154607575 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182304346 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11786904 seconds)
  done (took 2.122145755 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117225369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101216085 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092253095 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06464178 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099007319 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064189407 seconds)
  done (took 1.927501118 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312523252 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211477012 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188104237 seconds)
  done (took 2.09624649 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205571761 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192842866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419090586 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264109644 seconds)
  done (took 2.578512283 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148782512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092238942 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069122516 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086164458 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136411383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160061128 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100169996 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124834675 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078887623 seconds)
  done (took 2.434223823 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148765902 seconds)
done (took 12.692781747 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.193820481 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124022039 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.13033247 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.16921278 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103496199 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106094956 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.223117976 seconds)
    (8/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.178946293 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082980702 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204717259 seconds)
    (11/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081539914 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115277966 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.189109974 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103861225 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084721918 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079434352 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113724069 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074448311 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206799995 seconds)
    (20/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07579741 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073463335 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075985093 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.207510326 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196832424 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07788732 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082351725 seconds)
    (27/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185780026 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051560481 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10346397 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.235072141 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164407547 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073406085 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075680884 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102856354 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.146583038 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156378445 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065881761 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097887647 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075438986 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130958583 seconds)
    (41/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122520312 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078237414 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 0.134634114 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066700841 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079085255 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.145492418 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052208442 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074641147 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090252559 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094599221 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08698238 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073789609 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179042673 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062888931 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083654194 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052220435 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068950855 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052240001 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156488792 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.207249503 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090059745 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070485502 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202488478 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073792637 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09206002 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078577059 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091529935 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077389922 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094553814 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205828201 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066888934 seconds)
    (72/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081749923 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077449563 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141741842 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20131714 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144923802 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105321457 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073989657 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113176747 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073104169 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052003822 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094185937 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075714413 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115904359 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.153392925 seconds)
    (86/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.160720894 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065758002 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.296727602 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.069064595 seconds)
    (90/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07329158 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078241233 seconds)
    (92/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074507118 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052818039 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078278269 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075347492 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052093783 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078144639 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069970268 seconds)
    (99/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063657148 seconds)
    (100/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.116463814 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158591103 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051991022 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128041705 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128689998 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.143223287 seconds)
    (106/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103907873 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075565379 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070081558 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094888799 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114454118 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066780279 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.147065692 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08724305 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094520647 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052771176 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071750213 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107582546 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075117975 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190607601 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099959892 seconds)
    (121/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078190386 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068678213 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103525025 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095154413 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.164452217 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069766945 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141512637 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073133996 seconds)
    (129/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112588762 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062379973 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053300678 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095979445 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052472618 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199822418 seconds)
    (135/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062681031 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.140462861 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075289771 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067749796 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07472838 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054746241 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09785219 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072905435 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188662216 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074683724 seconds)
    (145/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081235237 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159406952 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130455191 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073569886 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070648132 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074251505 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066612969 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184313562 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052710369 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067084794 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067359105 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075514585 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167705571 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053698605 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090724742 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075338153 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067047933 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053814546 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176326845 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092575182 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.229240189 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054278951 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052263341 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.385977563 seconds)
    (169/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.112377689 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144964191 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068316635 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052380391 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081308473 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 0.146664685 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071732103 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084029266 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052171382 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0672007 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053973185 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.179836353 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066653524 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095176775 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159865441 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082589227 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063032074 seconds)
    (186/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093046872 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073712479 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130571492 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051914598 seconds)
    (190/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068741834 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076325358 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071638807 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052474006 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101780914 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178624049 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065554975 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053086917 seconds)
    (198/309) benchmarking ("sort", Float64, false)...
    done (took 0.131910456 seconds)
    (199/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078410477 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051820954 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052870441 seconds)
    (202/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.225856318 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072558249 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071374996 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053487113 seconds)
    (206/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069062509 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071793782 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07490636 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054136075 seconds)
    (210/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079111245 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077467274 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075284641 seconds)
    (213/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075572741 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211816345 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193902749 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067782738 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067608186 seconds)
    (218/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062836673 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06710077 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071670598 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073988191 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092529968 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053116165 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065937121 seconds)
    (225/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075021956 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068057598 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069991324 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140674422 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161412594 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067400499 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054578154 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075564439 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092718572 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07614265 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068335751 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077821515 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067809464 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.072254263 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053782958 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068455961 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112811668 seconds)
    (242/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067134882 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064702716 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068783903 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067832338 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161565019 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052468862 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066722809 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077791593 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07435091 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068282729 seconds)
    (252/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062315687 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063615068 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053138336 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112615076 seconds)
    (256/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052296458 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099134055 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074766241 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091245623 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.119521938 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07104804 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06962601 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05282976 seconds)
    (264/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052965189 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066322944 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089708323 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089960013 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137570713 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065988149 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06722057 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068745094 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053194883 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067486965 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07471519 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090124501 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065773958 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067350743 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05230121 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065933354 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053708569 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053881948 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052260463 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08961183 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075239041 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13353056 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14291348 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052786231 seconds)
    (288/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073300612 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053486302 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052376885 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142560392 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186751087 seconds)
    (293/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08210878 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067401685 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05232326 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052992171 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073471539 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117764372 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052306911 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175517883 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072864902 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145608233 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056249611 seconds)
    (304/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073681015 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053154499 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066503105 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052585333 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075865319 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052444798 seconds)
  done (took 31.6034102 seconds)
done (took 32.999489788 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085043159 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097207524 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078511632 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097425295 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084357447 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079762799 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075252855 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081119923 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083417207 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084686081 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081992837 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056420832 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076887622 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07681485 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077078822 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095139572 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080899558 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075325655 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074779657 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066480226 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075156523 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067329615 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069216955 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056021881 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080913821 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074142289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074421498 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076127746 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067420688 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067372625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071088403 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075905464 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067165626 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08045775 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074424321 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075249624 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077096692 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080000276 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069434337 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067161506 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076674108 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067798039 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075750591 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076052069 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074391066 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073511753 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075446328 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080459233 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095557271 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071167357 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077449206 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078356183 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078316398 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074819716 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072063319 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075528567 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073324944 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095463842 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075743314 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071187484 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07680192 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076676002 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07377636 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075869472 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074757296 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077766456 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077853442 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073248215 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076755352 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073328702 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067239737 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075267593 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070891366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066852269 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077943235 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078497063 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065790842 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073040208 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074612553 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072348584 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066181998 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069691726 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068423986 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07319846 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069577365 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055156702 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07133875 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073898322 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066215866 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075172505 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073505535 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074620501 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069078375 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077692532 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065985956 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07247516 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067101321 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066965844 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068949436 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071304987 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067135401 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070049194 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076619137 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068398611 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073547037 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080461276 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066524502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073900022 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065609236 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065889449 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081305579 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076822535 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067349141 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069776758 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065654143 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074392026 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065706599 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066248169 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066473784 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067093054 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073052717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06655915 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069291039 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07400376 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079814255 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066622958 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069955458 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06903398 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066055167 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072127062 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066046795 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066017187 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067454237 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062669167 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069013295 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065931783 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073600701 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202795097 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076281068 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069588681 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075666083 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073003986 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074821608 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073324144 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066490402 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061055088 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070690332 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070671788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069830375 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066861242 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069081135 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068265157 seconds)
done (took 12.760666918 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066318208 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145651431 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102252287 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099171778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088717118 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068792739 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078850834 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104890666 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069637264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105079956 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090873244 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08963667 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118479637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066747553 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067874653 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072440719 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068809386 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08315819 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104822814 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089625488 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12069733 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067065135 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097462975 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09217217 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091243898 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097841192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071326142 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071755813 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071565263 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105737066 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091465771 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071913464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068510099 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102548993 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097303316 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087040648 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068255794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086321731 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068401385 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067548469 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06918323 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102099201 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082293594 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084291572 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071813764 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07072164 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069087233 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087054673 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093538237 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082010083 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088869329 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106203087 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070934197 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067140572 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066076712 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088649793 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066856927 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070339157 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067793641 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069563605 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067504033 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070573901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083638203 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08408097 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072241214 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082149539 seconds)
  done (took 6.967034798 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083389999 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093382514 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086698518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086739079 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067588138 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068123918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068080505 seconds)
  done (took 2.042926917 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06572571 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091568018 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093297132 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092374323 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087244378 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090413011 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077771926 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068412653 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091573467 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069419719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090517821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10583708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072070107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076202778 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094290018 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067968921 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093723333 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068218482 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071627548 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093253926 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071060094 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098444127 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07181965 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068622116 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083174968 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068617465 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117229506 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073092522 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070007957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071195303 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065985881 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111183975 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083216205 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07687638 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068390222 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0835904 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08402121 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066853696 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085257948 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078014975 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083242032 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069464921 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069283081 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066777529 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073235199 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079457354 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069135763 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068795068 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071119128 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089074517 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06860891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083282728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071545233 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075073079 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069961 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075324011 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078856525 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068763539 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089048262 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069579598 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086455015 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085936877 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083155746 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086174347 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070937744 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083025324 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082719048 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07103847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070912104 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072501511 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085704555 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06696612 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070226321 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079398176 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070441294 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093691185 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093318339 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070240384 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083745117 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068826271 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06872669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068561736 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092939616 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075048905 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068326884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072778019 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07159288 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067502279 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068287613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072668719 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066524228 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070413078 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071731987 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072200501 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071672134 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086383037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071144997 seconds)
  done (took 9.038906603 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068777212 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070136727 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071107287 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070703668 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069980017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070475044 seconds)
  done (took 1.93416686 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09490981 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071682452 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084811723 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07562075 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10897746 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090374249 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091153028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081534466 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087334958 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083115247 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090216853 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092138845 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.097268756 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075559331 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090078773 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074829139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090790419 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079030528 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082636196 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076597909 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091007813 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075704597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075994214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085391999 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07909306 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075233723 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069724871 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082003966 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081954967 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082081601 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075249313 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078598415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073360309 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081918632 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090566671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073416684 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074504013 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079579768 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07512818 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078804672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091472267 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075697719 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077492677 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080416607 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081196537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073226181 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080393597 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078616403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089852372 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080151835 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079709979 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074177284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078640623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080031361 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073141741 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081141483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080434871 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090316831 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075286247 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073120682 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071757925 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078387293 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08136339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078696042 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082986614 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079692856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072862567 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075752935 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075550216 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074346745 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080098378 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071509938 seconds)
  done (took 7.306628282 seconds)
done (took 28.766470067 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53564466 seconds)
  done (took 2.012936065 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620797873 seconds)
  done (took 2.121972318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.605159814 seconds)
  done (took 8.099706381 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416712613 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.509281891 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732174383 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135505237 seconds)
  done (took 3.336843452 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.699716088 seconds)
  done (took 2.204676096 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215860712 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20940461 seconds)
  done (took 1.939612278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382282734 seconds)
  done (took 1.882156789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.150382688 seconds)
  done (took 2.653516093 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260801986 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178214369 seconds)
  done (took 1.942383162 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.494576663 seconds)
  done (took 1.996588973 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.874906674 seconds)
  done (took 6.381873571 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213242178 seconds)
  done (took 1.76168266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240673536 seconds)
  done (took 1.745603526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711626321 seconds)
  done (took 3.219706916 seconds)
done (took 42.805934115 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078936092 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081981371 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082578313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081127164 seconds)
  done (took 1.818804433 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076722946 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075199215 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078922166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075249237 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079307684 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075202881 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077496669 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079169246 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074101244 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075132937 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074753919 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07461543 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077379894 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076399483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07334848 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077665711 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078439939 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075325428 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077645014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074727924 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073081891 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076802949 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077391179 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073563403 seconds)
  done (took 3.338092874 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077265482 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074973153 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077557469 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074047278 seconds)
  done (took 1.821259484 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078022674 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098473453 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092383776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079741285 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094969475 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089929281 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071308195 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070948974 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072416052 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079952178 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069902226 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098057253 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091101318 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080070067 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082049911 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068196116 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070529776 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090119359 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080276057 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080623999 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07190294 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07959064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06998866 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091228263 seconds)
  done (took 3.465687819 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077627105 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107021625 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080862995 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091793479 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093504281 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067262369 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076886638 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093822409 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129473861 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067287585 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072180414 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067036098 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075402852 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066869775 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078880733 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109789901 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113979691 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07099108 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09935665 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067152499 seconds)
  done (took 3.226478747 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072223242 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071640211 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067326365 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07089003 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078502628 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074422043 seconds)
  done (took 1.955706833 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067439339 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069658808 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069133966 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06905444 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074039659 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069203779 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06800212 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069282636 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069309275 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068429322 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068294446 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067585326 seconds)
  done (took 2.346437697 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201343979 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070996535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071451614 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068686329 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073258033 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068657859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082778189 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06954746 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094051258 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068557618 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068320538 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070112905 seconds)
  done (took 2.527356234 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211170261 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078461583 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246602813 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143574365 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115178303 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119322048 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10711851 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117353681 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146388876 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104617872 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173665433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173084066 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111493519 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140730256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091394264 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10335723 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159956144 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167466756 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108420241 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172494502 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150779156 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12948096 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152911746 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10988886 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109298795 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126867022 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073492624 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082479723 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175351433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137740025 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149255709 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114599786 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095951802 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18227966 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177074283 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146398898 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141347462 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085991482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108077235 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139110577 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203423936 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090834364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164284702 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109695669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219137819 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137364353 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124045204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124657322 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109923619 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093034917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149421867 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188334043 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13907626 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089174345 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116356226 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118441218 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119872009 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106922134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188569279 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167372941 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132434376 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072756846 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102369027 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159702533 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138342696 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113778 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129235058 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095063302 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140409256 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16075228 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12459699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150388616 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.134671756 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091499357 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123060825 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14544037 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132324837 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164173338 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124227485 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07490513 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128703322 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106061259 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083126777 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148230633 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077514244 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181862201 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101711582 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112266052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117247384 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112289116 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112020818 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163408082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146303743 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103818949 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065848402 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249065256 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121697832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151727993 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090571728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112393689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122916499 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08001529 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142240877 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077203999 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126110549 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076832214 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129152255 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131241162 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075751566 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125792972 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106943618 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103902532 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137072342 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166882593 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091709642 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08485556 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173502364 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126648076 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10760802 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149273715 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161902879 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104680335 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105886567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155875688 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184447806 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092208943 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168137217 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10997726 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086625484 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090629365 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127416943 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115676825 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127452911 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084014216 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122186821 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174569617 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07730441 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098560506 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13786898 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081335794 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083516919 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109841463 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110233488 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.0988777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100841174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102987469 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138926841 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1230014 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105697677 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123634486 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097429481 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316986902 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090569837 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105201744 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108682341 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071784203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142555541 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161327498 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08042363 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16748106 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126233825 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109010257 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122529005 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086248218 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145686816 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081582471 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072309985 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14983647 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114340704 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113606839 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155234766 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109134725 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131365863 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12358434 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140541656 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134627083 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134645821 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108022857 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113722721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129992606 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075353858 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094126035 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082512332 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107604575 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099905695 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085613227 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146298517 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128080575 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103322035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114300338 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098834461 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150754171 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078313021 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132651969 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123310121 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098455764 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158257065 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15776104 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133843467 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102753986 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139437941 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070820953 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075881887 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091794058 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125310518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085041759 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085598445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26287535 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152590481 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133318375 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142102514 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117182084 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123368155 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157402551 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072355029 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120088412 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152347522 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125772098 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107607055 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093579707 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102042699 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147058785 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11330425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189064165 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121495681 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126592924 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158168298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103334171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081853969 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105991477 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141991062 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108504116 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148861635 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102611021 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091043533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114165684 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076579227 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102232105 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131278123 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124398675 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139758468 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118497232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136692711 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079856886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120885324 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1253794 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126610668 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065928072 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12212184 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164233264 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09528385 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118369111 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154374308 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079329443 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12863155 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178917479 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144938315 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22633004 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110574906 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123538979 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133018936 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123992219 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145179281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112447828 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138514038 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10917865 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086941941 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088805168 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100057672 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108746564 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098608464 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110754919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118145233 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098019896 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136723143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108135699 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113846691 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121507958 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101351622 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092338063 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099834297 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180918207 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123122876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176811481 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102297006 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150698476 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168251856 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07756663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082227813 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07967932 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144096945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086881688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134353679 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102183669 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110414319 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127871109 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148080451 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098618398 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070612552 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111865389 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138342669 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117312808 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101292133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106852271 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169539194 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104691325 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08156326 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118270896 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108857977 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105983706 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177758082 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063495393 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100342364 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078724156 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082734925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131121664 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29911038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081794289 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106788155 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124564177 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117043164 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132927534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105500675 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103589923 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119610138 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155987034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131735363 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093177179 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115756737 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132793494 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161241171 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108712267 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098784055 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179188635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159061803 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165357295 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09162827 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118749235 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118622603 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111006841 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143379242 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086061484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167369728 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084862271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140836886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107572397 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093184331 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134131135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.103167251 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090803864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153144118 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120933499 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086058459 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080221338 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121949483 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123894165 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110181174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077814082 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14375362 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075886782 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136802732 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163238278 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082129699 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110805727 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098941803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081913113 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108839081 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104971223 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089596447 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.242863073 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175169676 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090165814 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154783224 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138612283 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114567646 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140275739 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103334136 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64048376 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078495329 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154682436 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120538879 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17782262 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103927913 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122801647 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113035967 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127847271 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150270048 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107852507 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188295128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13657242 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120781728 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082125727 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105971503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108220349 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091609788 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110909081 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117718547 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120475553 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096792998 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120000668 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129269592 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084838939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09843661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161873982 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120890382 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147252303 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143137145 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086844583 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120254522 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141989381 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083206399 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12601314 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158171703 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109744281 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101404786 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082498552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105218262 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162733005 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074957501 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164590662 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265934725 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111289707 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117803004 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117865281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136208315 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112213228 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124150442 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097322372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11408621 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116737163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085112369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078872854 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108675516 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115953308 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101910495 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10145482 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100571312 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157713355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074466854 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102995728 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106617431 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14942575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180776841 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091854315 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084989449 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123446702 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118397074 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116534889 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125365033 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081610379 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084416288 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084037111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079547177 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112992104 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116549435 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108060266 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11454067 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16909043 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085446167 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233808997 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099289538 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109029899 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072277792 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080566357 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099080828 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102902749 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111189867 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105069185 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165377827 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098298974 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093380434 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095577721 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076170339 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085517339 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133715305 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11363152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119757618 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101241312 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063952052 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11086409 seconds)
  done (took 60.387418611 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104248963 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082401622 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097951216 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143572602 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121919398 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202742925 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152555939 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188497997 seconds)
  done (took 2.739064762 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067348544 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09460761 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105150224 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084887382 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069084995 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069922046 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239825517 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082834913 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068460283 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091556701 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08092487 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071159874 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.434694927 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067934916 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069272093 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063547901 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069721433 seconds)
  done (took 3.449083491 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390204403 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610827027 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.380670551 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07211538 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.443142847 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091337228 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.13236159 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130415925 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072315727 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537047331 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.710901981 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126461078 seconds)
  done (took 18.321300223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074457513 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071215358 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08662081 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086351166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074714841 seconds)
  done (took 2.015166721 seconds)
done (took 108.951665955 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080963504 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398628536 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055051212 seconds)
  done (took 2.100696929 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08417305 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088697842 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088709577 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085916492 seconds)
  done (took 1.977353252 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073034939 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077821925 seconds)
  done (took 1.775297375 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239770972 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172822378 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090543835 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082257004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079898942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080098128 seconds)
  done (took 1.869907602 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071928449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075245653 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073763545 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078334325 seconds)
  done (took 1.921790368 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076164407 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053825734 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056556692 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059660093 seconds)
  done (took 1.871056511 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086053092 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07984338 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080204809 seconds)
  done (took 1.872058756 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101584301 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085816368 seconds)
  done (took 1.812305303 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08183452 seconds)
  done (took 1.707143019 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097578863 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104022719 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135959006 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114988832 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14448058 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114048114 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087861684 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088037437 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077120922 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088072134 seconds)
  done (took 2.677576372 seconds)
done (took 21.788612906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078391893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368615353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362678672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094124171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671304918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358726024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992504334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096449998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119331389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069488002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087957552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65143107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.016446071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32212508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00329218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325424901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652792656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070214299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070117061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070652978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977947673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069666739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069954069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070480919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651593028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374920925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070301639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325256752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070214759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072091583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356748919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070468605 seconds)
  done (took 16.274688853 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070469303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124376266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075573073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088604716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072671699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072197434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073861373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071006309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125455592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069934754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088643496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069714706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073893492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071584257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090948257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069874327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088356821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070388659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070067999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070605422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090595137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069634782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070569961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070578318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070326714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083040333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070902431 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070169882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070593925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071968938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072934156 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071350939 seconds)
  done (took 4.130504381 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116926931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131403143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077019338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109869695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11843331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071938434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151628409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097461228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133676313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070344426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089110066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070517279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106155787 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071139862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091996902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071507063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07178936 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071611575 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071121374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070686166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091146886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070278013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070961288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071330379 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071302718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084206263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071422398 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070699408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069251952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070577227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072248507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068328205 seconds)
  done (took 4.387862801 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072503541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076907968 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086165438 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087125516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071430295 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074503236 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07522873 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071733795 seconds)
  done (took 2.258324335 seconds)
done (took 28.683867569 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078385364 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070185875 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074636549 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084330842 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074999994 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081255499 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068876633 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077019726 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074668771 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075177322 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077031064 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069711065 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07284705 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069643515 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076381039 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069936931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082191205 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07426189 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081561666 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082600039 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072107729 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075246952 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077495237 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081894881 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082638593 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082015794 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079842908 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076487483 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071018355 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072956581 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079901326 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087322546 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071146688 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082386367 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0699341 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069697132 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073320168 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069652545 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082535247 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079185096 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071774093 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078908204 seconds)
  done (took 4.825198268 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088827241 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095949979 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088186536 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063721515 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069861979 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067673808 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091985711 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06186141 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061535702 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091380892 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057381009 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06184651 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06603848 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055280249 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065202189 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059209991 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064158601 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057181959 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062130461 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061826676 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091450277 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055275631 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079778808 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06545913 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057835918 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063355668 seconds)
  done (took 3.45221887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073904939 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089233583 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092612752 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135078114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10936412 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081792726 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083480066 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098419487 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091444273 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069410979 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074031441 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095179753 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093575382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0849013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067103399 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.0861715 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083620318 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069071001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07282316 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095574712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086337266 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085933797 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098212097 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082445694 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066061246 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069238816 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072432411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083145325 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075033502 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079696324 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073695734 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074222102 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072055701 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082378684 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074201817 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072206716 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095692564 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080253366 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081428127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070473542 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073400455 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070912727 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095787276 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135377953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06926136 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076800712 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078658685 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079419766 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069971605 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090106962 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082224726 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069353844 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072597182 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069504374 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069395949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083335513 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071527253 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071947681 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078919565 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072667356 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094302784 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074531947 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085943501 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068879033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077462608 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068463758 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070298256 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068677677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098475963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070880069 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11470813 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070207864 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069998737 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079252261 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077024282 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075541974 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069541639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085739435 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080289366 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072791943 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07834069 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072886657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072615385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092848724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071448764 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070809495 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072203287 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075971279 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072435955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070943149 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083184363 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068830902 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072497699 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08720679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068776337 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070412604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075345804 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074314439 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068942332 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081612021 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073757755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070169018 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079457788 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068827638 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072429653 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082520502 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07557249 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067934457 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073937836 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075760659 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06963135 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07081505 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072871541 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071105828 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07842415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075992613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073915354 seconds)
  done (took 10.882164808 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164879874 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160795782 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072854683 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151982287 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079958028 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081806462 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154579832 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098495552 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070040167 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070550919 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071163598 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114503377 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110545577 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122366308 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081310852 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069581003 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085923738 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119124242 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156619213 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150783154 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087228385 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079009378 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072000408 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071124193 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072405174 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08106567 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089981631 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076390275 seconds)
  done (took 4.494145547 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080982614 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100727397 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07672021 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093070116 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093924344 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070007689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072623678 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071862655 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083373237 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081034832 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069159083 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075768875 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075913756 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072808817 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070612617 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077411583 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077424792 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071350516 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073782881 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075460032 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080579771 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095006837 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07381505 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069391933 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074945632 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069203275 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065790425 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086262889 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069568196 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097485668 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067438346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077886998 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08442708 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070341895 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06966681 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069686026 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069276781 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069081991 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071357532 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068105841 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068080031 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058917747 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068183831 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08120591 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076137846 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057604292 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074060624 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074460833 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074763281 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066706449 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072324725 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072246882 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072406225 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077222234 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074900593 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07467245 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070220467 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07637346 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077743683 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068812125 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066630184 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067836699 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074077009 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067534093 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077904967 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074116142 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067785454 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069516604 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070945509 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07607274 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069006246 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072588711 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066575381 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07107469 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073963022 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07119308 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070592648 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067509071 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068944191 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069276031 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056983191 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069225239 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054730327 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072213556 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067685307 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067965715 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069686439 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073984212 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082090657 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070348514 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075701619 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070274525 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068410547 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073015765 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061984372 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072598976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085895829 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084628709 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069605399 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067373784 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085154134 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074476529 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068383425 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057685783 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077379461 seconds)
  done (took 9.363051245 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090166864 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069910665 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088565878 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096587583 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089584724 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077631753 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079694676 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071452238 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.0856858 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076240564 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079918344 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070657162 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080272762 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080743143 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07277859 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078852613 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07416492 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086023371 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083624515 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069888627 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078770672 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08273803 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09297189 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084717244 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083249376 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084604646 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093582985 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.074969151 seconds)
  done (took 3.964970743 seconds)
done (took 38.620020919 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.731519539 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.889775828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.714283159 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.08420107 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.820404188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.833789341 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.792731159 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.712465177 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.906256647 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.747970862 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.920199294 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.805355721 seconds)
done (took 64.613719337 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.765577946 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860582558 seconds)
    (2/2) benchmarking "String"...
    done (took 1.992248785 seconds)
  done (took 5.506572085 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.002979312 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.273505247 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.959033217 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.711703624 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.718749966 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.042068343 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.530192456 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.246837095 seconds)
  done (took 30.137087049 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.832251921 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.952101781 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.394398792 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.425359715 seconds)
  done (took 15.30508889 seconds)
done (took 62.45895321 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.720729468 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.734093905 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.718393886 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.696617363 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.77084537 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.721487727 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.17100043 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.944962165 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.713350688 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.704495711 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.714760083 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.150753051 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.725761615 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.05267649 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.715524861 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.720157011 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.768448643 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.226843941 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.872005232 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.72874149 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.734315299 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.738888676 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.722079377 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.849338723 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.739201808 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.717380742 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.178558841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.719048422 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.338368515 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71519137 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.748395555 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.278545848 seconds)
  done (took 203.707047279 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.714516082 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.551461795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.626488902 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757739676 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.0638314 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.898030802 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.834272937 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.112020612 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.720467675 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.734790215 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.8910126 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.716472533 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.928060041 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.666122094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.744931636 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.800565211 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.891006316 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.941499611 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.748823539 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.8921342 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.739512489 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.698002389 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.643094492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.886620778 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.747338963 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.723060802 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.725909656 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.751784187 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.911027846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.852955222 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.727990239 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722063075 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.92174602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.589773101 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.734974449 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727046837 seconds)
  done (took 166.994892054 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.095878697 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.716599032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.715920504 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715135658 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.722078706 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.716423533 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.836510992 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843251331 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.315355028 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.496246725 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772034454 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547042488 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.716896988 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783908007 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.731137718 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.721905852 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.731799844 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.742974916 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.717614199 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717387754 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.840717311 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.729008028 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.819724853 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723851524 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.717482408 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722646126 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.088891534 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.716666878 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723728774 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.959920229 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.716892928 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717110905 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606149458 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.973480905 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806676768 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720011532 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723967966 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.718872716 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.937756468 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718833935 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.719534424 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.721860699 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.718880944 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89581521 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719323028 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.840027794 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720748903 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.206787837 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.719417995 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718552577 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.412666042 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.403633247 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.723367053 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.719048383 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.721248416 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.72003354 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718885863 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.725116521 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.429832782 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.794299124 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.721489218 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.722357462 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725713257 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.719828866 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.779716465 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720324028 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.937109034 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.774760204 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.957586717 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841936424 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723854933 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.719725028 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786905704 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814570064 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.720955148 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.719352819 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.719262249 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71974167 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.719377869 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.802137534 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.720825543 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.841318763 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727495976 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.721085892 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772478854 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.72108196 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.789147332 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72172998 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608993246 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724617977 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.720184718 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.01249071 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788070769 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.721978392 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.72120587 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.721619173 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.842783192 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845696295 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487897043 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.725338359 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.430114679 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.885186684 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.912462146 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723116816 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.966511053 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.722460767 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81328573 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727991358 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.724423773 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.722075854 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755176426 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.723027896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.778492099 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.72643398 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.096438706 seconds)
  done (took 396.95424477 seconds)
done (took 771.46480588 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.392208012 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.357306526 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.473875999 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378687683 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.348225355 seconds)
  done (took 13.614793529 seconds)
done (took 15.279078818 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.816642415 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.818820685 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75133996 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812665947 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748623257 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.812591107 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.798717725 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.752275164 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.780323446 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.751889122 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.782541541 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749257015 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.736034211 seconds)
  done (took 24.776593207 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.962038748 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.96313496 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796483925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.966152468 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772289673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.957788974 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.890098556 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877712196 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882562072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741207613 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739674246 seconds)
  done (took 22.214374463 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.964087971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.971293548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802767008 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.969935261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776014258 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969763587 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892822987 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878595802 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.878585245 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741789739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739362124 seconds)
  done (took 22.250943137 seconds)
done (took 70.90614709 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.733681822 seconds)
  done (took 3.399809972 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758588111 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.915084562 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.740216208 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.736642397 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.734271921 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.735381096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.737757012 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.733533998 seconds)
  done (took 15.759177123 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.731689325 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.731591048 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.73187001 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.734209399 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.73398781 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.73423068 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.733601474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.736483965 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.731879636 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.732167325 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.732185402 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.731619276 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.735543809 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.732553046 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.735247853 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.73528773 seconds)
  done (took 29.401578348 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.733681459 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.73212951 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.732349192 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.732978593 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.732384431 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.733276417 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.733843167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.732509968 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.732571188 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.732958374 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.733399792 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.732809535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.7337729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.732400136 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.733734541 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.734546569 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.732526348 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.732199215 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.737269474 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.733734061 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.733101125 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.733373717 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.733377235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.733465141 seconds)
  done (took 43.269495005 seconds)
done (took 93.495576641 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.619787255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.118945606 seconds)
  done (took 8.406906082 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.737152654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.735239377 seconds)
  done (took 5.179861599 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.735071787 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.734773853 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.735257858 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.735201853 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.735525216 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.73559872 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735102376 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.734725877 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.735325184 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.736077809 seconds)
  done (took 19.021083531 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.735713477 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.735348779 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.73329348 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.73636187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.73669539 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.73361717 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.737256204 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.737166572 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.736637909 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.733753814 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.736883436 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.733969117 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.73791706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.734345554 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.736802897 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.735203434 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.733178122 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.735017996 seconds)
  done (took 32.908600862 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.736838203 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.736377513 seconds)
  done (took 5.143065486 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.735311603 seconds)
    (2/7) benchmarking "second"...
    done (took 1.733618337 seconds)
    (3/7) benchmarking "month"...
    done (took 1.733842654 seconds)
    (4/7) benchmarking "year"...
    done (took 1.734461157 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.734501978 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.734093566 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.734949888 seconds)
  done (took 13.810687572 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.738258563 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.895088296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.958238217 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.380709007 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739850889 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.740686271 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.717784212 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.742213215 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.742227357 seconds)
  done (took 19.326220044 seconds)
done (took 105.464820732 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.566603502 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.732646288 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.055015539 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.784451739 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.787849355 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.070504913 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.737507171 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.04265319 seconds)
done (took 42.448773115 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.786285281 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.282126857 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.310331519 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.190923776 seconds)
  done (took 12.456095593 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718646809 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.257712914 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.771577086 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.332230743 seconds)
  done (took 19.774361003 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.102099378 seconds)
    (2/2) benchmarking "read"...
    done (took 2.078900108 seconds)
  done (took 5.85699277 seconds)
done (took 46.546925706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740032343 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.738647449 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.737337167 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.739282019 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.737006146 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740306031 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.736812374 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.737058304 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.739778673 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.739788226 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.740041155 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.737022079 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.740534979 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740497192 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737444663 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736650561 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.741365395 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739992849 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.737611201 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737650303 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737374017 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739533912 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.737633865 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.737537223 seconds)
  done (took 43.400015809 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.740682499 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.738415143 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.741041483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.740817698 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.738641508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.741508429 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.742129385 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.737680382 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.742089259 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.742020986 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738508586 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.739625873 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742356195 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.738004274 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743510596 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.73905128 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.741856636 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740916159 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745069667 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.739484324 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.743904014 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740076376 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.740679734 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742947227 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.740639297 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740360196 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.742250062 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740168341 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744147413 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740882542 seconds)
  done (took 53.903513146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.747205665 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.75055942 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742897016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.742262821 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.742867805 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.74294976 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.742671857 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.742666491 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.742813889 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.744005636 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.745036427 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.744982113 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.743864023 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.744653525 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.742701208 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.745174742 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744004423 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.744625342 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.744928088 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.744604333 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.745104833 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.744992974 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.744199198 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744594625 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.743817273 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.744094317 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.744524694 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.744026103 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.743436499 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.745438876 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.744651034 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.743587105 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.744490456 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.744115036 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.743782198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.745011884 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.748981388 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.751602652 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.745529555 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.744322043 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.744972507 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.743434885 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.744004674 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.743805658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.744888194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.745094734 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.744692745 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.746007964 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.744379005 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.745362239 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.74540835 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.745583498 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.744804482 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.745558236 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.74551808 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.745257586 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.745231015 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.744553134 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.745883998 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.745506715 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.746011023 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.747667792 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.745442078 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.745661363 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.747760944 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.746299774 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.746592487 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.745893169 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746207072 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.746429296 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.748980324 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.748117129 seconds)
  done (took 127.323713359 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.747268426 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74472055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.744525448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74379083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743281262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747206444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744469866 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74685979 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743332595 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747611656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74753614 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744515778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743541037 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748103743 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746651283 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.743384615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.747557974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743939754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.746718715 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748466737 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747308196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.744930735 seconds)
  done (took 40.085213408 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749857631 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.748287086 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.745167606 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748744189 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745810789 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747382984 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.74847485 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.749002113 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748454397 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745005344 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74616766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74920912 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744825029 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745153884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745610629 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.746700151 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748433926 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745277823 seconds)
  done (took 33.127477768 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.745916781 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.744473852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748017604 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.744745325 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.744904902 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748254859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746222757 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749496135 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.748159622 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745841646 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.748436188 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749079396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.749017654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746136986 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74962857 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.745907397 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.749948681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745761401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749020315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747041557 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.746896424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751514379 seconds)
  done (took 40.124956974 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749615989 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75113202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746086913 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747624104 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.746764151 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.749655723 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.75048054 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.747326517 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.748999752 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.750271749 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74657557 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.751344409 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.746845317 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748749773 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.747428652 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748522481 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750933727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.747282864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749531959 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.746462089 seconds)
  done (took 36.653643536 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749171173 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751344528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748827643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749646731 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749060585 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.74932937 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749925903 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74974412 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749445694 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.750788802 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749844934 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750530715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750517474 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.748737549 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750852934 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750571864 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.749444762 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750249378 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749935693 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750232514 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750712622 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750384279 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751142244 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750303502 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750144942 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750277028 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750970857 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.751010585 seconds)
  done (took 50.686579528 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751207269 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.751240786 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.748886392 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.749290208 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749077798 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.748642769 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.748542632 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.749321565 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.751777886 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748229472 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.752417194 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.752129027 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.7528323 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.752192884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751312439 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.753471326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753358347 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.748999426 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750317108 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750424228 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.753199018 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753145668 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.753254599 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748919367 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750413817 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.75347256 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749836494 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750464306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752357852 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750495787 seconds)
  done (took 54.214299293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.771599363 seconds)
    (2/2) benchmarking "in"...
    done (took 1.770318122 seconds)
  done (took 5.227014311 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751458564 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753464754 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.753670355 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.751732596 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.751036092 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754086972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.752816742 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750221203 seconds)
  done (took 15.704997864 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.752982599 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.753014529 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.754441581 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.753226528 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753583213 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.753181925 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.757119383 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.754421106 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.75346949 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.754220335 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.760224281 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.763255428 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.756981868 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752623155 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.753417435 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.754501052 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.755411169 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.75356739 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.753692712 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.753940759 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754071758 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755048996 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755174577 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.751679129 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.755970843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.762204164 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.757458629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.755927404 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.7546318 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.756671701 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.753746602 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.751967583 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.754472587 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.755176295 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.755481047 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.755367462 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761507945 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755326452 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.759180407 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755879242 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756270963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.753194568 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.757056348 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.757794152 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756429593 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.755428329 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.756035114 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.752582396 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.754377952 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.757377746 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.760706184 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75358647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75291612 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758034938 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.756303699 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761148253 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.755344444 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.757782857 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.764570756 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.76445421 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.768156457 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.763720662 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756861595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.756254575 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765795664 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.779437326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761378605 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.753026907 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.754226792 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.756905587 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.761584553 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768835729 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.764612592 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.757344296 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756027882 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.756200141 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756898709 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75677067 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761418661 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.758788447 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.75715067 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757503078 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766357499 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.781210378 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.75498425 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.757122949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.757299798 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.75604465 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.758222936 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766848873 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.757502362 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.757427228 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.755857985 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.757356162 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.758294628 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.757649453 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.756804135 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757657864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.755083856 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.757893178 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758498821 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761908217 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.766080484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758026064 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758299271 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.762960839 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758684981 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758081938 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.76361175 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.759517805 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758673251 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.75887408 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.763546266 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.755415869 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760957985 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.767118593 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.758209588 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.760773249 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.760345028 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.760326388 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769693247 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.7864578 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.760581146 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.760387194 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.764186598 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.771017413 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759041196 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.762137185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.760559244 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.758115759 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.757507159 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760894712 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.761685119 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.760263841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759266785 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76088251 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.757724323 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.761418033 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.759694366 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.76080751 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.760754661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.759345236 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.760423244 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.761068215 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760173586 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.760851659 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.764158943 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.759777023 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.760902356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.760887765 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.758744995 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.760798291 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.761316529 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.761814198 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.759970794 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76092182 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.759983639 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.761496513 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761316112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.762463209 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76116384 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.761856549 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76524257 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761522387 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.765044173 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.760582257 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.759275225 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.762662413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.76109907 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.761732768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.761739337 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.760874164 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.764841034 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.769757413 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.761638237 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.762504478 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.763830095 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761455698 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762813634 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762877991 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.765232472 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.769878578 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.763044437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.767443087 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.760918749 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763095059 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.762035696 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.762264752 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.760190661 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761643055 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.766419172 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.771406803 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774825631 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77005923 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.7630207 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.767531007 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.76364084 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.767383099 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.765353996 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.762873975 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.763917065 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763916186 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.762532926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762888304 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.765544527 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763033944 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.761656003 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.765664154 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.763989471 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.764546846 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.764895611 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.765112608 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764689823 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.761035025 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763796383 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764273904 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.76328076 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.760506075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.762251646 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.76316599 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.765468958 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.765311686 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.769765722 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.76231661 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764082005 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.765953474 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.765152081 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.763152652 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.765200788 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766202262 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.764153627 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769955338 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.764511839 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.764602333 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771081282 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.763159851 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.763404804 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.766459614 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.765877979 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.76228347 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.767941253 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.773791932 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.766289041 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.765984593 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.765683623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764826723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766082309 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.769557459 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.763226195 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.764609319 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.766645059 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.767515955 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.763586732 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.765978861 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.766181309 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.765674774 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767023565 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765734442 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.765875758 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766367967 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.766002233 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766523709 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.766026586 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768858538 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.774475163 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.769643693 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.767065229 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.768303465 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.767651211 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.770631789 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.766706131 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.767216621 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.765811568 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779877434 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.77476171 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77223302 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.767906449 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.76783979 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771571976 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.767821744 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.770228696 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768329225 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767341437 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.767058095 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.766593153 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.764473387 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.767473047 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.768372127 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76705646 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.767965291 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.771615503 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.768098268 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.76696635 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.767744785 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.767791135 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.769862272 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.766591859 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.767905598 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.770057302 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770418512 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.767886243 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.767339069 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.772937637 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767076259 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.768409913 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.767240935 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.76844113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.767864545 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.769113278 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.769164943 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.771855171 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.776759749 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.771899105 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.777488839 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.768926954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778074324 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.768447083 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.771739773 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777896993 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.767233408 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.768315079 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.768981467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.769124167 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775181564 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.769160498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.769931861 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.774220019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771040157 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.769849429 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.770131715 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.7706744 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770392027 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.770648024 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776470922 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.770698244 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.773841102 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770526259 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.768523448 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.769968154 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.770146841 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.769094714 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773001748 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.770398245 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.770265082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.770779949 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.769588513 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.769967151 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.769975647 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77121904 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.76788458 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.771326479 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776779761 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.771976926 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774766659 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.771804578 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777672751 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770848484 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.776226924 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.77187757 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.771339671 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.771578537 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.7719081 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.773867645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.771082768 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.772058592 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.771878003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.77376155 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.776746361 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772622906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.774682764 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.771520395 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.772519204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771066636 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780902256 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795466204 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.773547789 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777279288 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.769092385 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.773746156 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.775894416 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.77273625 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.770612575 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.776074177 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78459175 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78136585 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.772544436 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.773280872 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771801589 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772948746 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.77359133 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.773516001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.774069957 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.773806516 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.775105873 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.773228337 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775818263 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.773708603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.772384244 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77413791 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.774188511 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.781446676 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.77377462 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.773863675 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773465984 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.773789015 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.773234648 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.772578788 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.772748057 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775071749 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773969164 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.775239003 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781579468 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.781397355 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.77708345 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.77304589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.774419218 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.774808752 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.775353069 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774620058 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.773801176 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774948666 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.774813563 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.773811113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.776565266 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.773610812 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774220312 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.77525339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775205844 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77801257 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.780948134 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773713832 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.772515673 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.776106873 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776265003 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.774008835 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.775436852 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.781573189 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777908277 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.786811175 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.784451711 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.781458717 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.775714171 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778441761 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.783996971 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.773952978 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.775309764 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.775662234 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.777022401 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.777702071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.778798015 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776749767 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.780732625 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.774306602 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.77483397 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782073683 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.776929632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775963161 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.776274382 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.77931156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.775863575 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.773659675 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.777108994 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.775631994 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782036391 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.777972698 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777177218 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.777374323 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.77564477 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.778098078 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781273612 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778244416 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.777279901 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.774498122 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.776561356 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777192742 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779116043 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.775110745 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.776595063 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.775985591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.779803872 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.784261182 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.775391679 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778882588 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.777864841 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.777136266 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778853263 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778318182 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.775962699 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.775174036 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.7782449 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779102759 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.778141189 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.780508343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.778004918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.77992398 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.780185414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778527379 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781898277 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789079361 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.786507365 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.776327276 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.778672536 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.778851791 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.781321411 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778562973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.779346815 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778644333 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.780901586 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.780144376 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778891021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.780130088 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.781865428 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.793088505 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.779381237 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779113584 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.779027216 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782350619 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.780213725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.777337986 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.779570461 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.780335243 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.782042952 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.787904162 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.781160074 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785280049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779755871 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.780410981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.784659094 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.783653396 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.787807579 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.78324137 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780704572 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.780484078 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.785342528 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.79641792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782074369 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790798357 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810517365 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.780887233 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.781320239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.780703605 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779499785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.78214628 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.781921451 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.780729923 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.782713554 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.781824605 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.780997246 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783742302 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786068361 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.782010951 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.781117123 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.782434982 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.780512835 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.782842417 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.780679439 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.782589858 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.781701912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.782391656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.782968163 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.782038506 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.782529195 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794597906 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.790698456 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.78176066 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.782668753 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.779271017 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783906233 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.78465551 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793925993 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.791473581 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.782371184 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.782125417 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.782853498 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783201815 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.780599476 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.782368976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.782094178 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781295403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.779170557 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793924538 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791759749 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.786387315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.782050203 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782743985 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.783145677 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783866383 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784088588 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783354311 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.784698233 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.783796651 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787420358 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.783825927 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.78453853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.785920525 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.792497618 seconds)
  done (took 1056.54674873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781369885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781146866 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781704671 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781409982 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782490951 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782692406 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782753513 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781599089 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782570602 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781151523 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.782463104 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782086441 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782171523 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782754512 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782842593 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783561216 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782062376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.783116468 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783540998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781465785 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782612006 seconds)
  done (took 39.143825389 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.785551736 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.782099923 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7821262 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785456677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78240083 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786031843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782588873 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784822374 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784322121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78221148 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.784650963 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785491906 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.783420487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.782377789 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783584197 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785298331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785043417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78364035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.786746361 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78369993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786447678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78327766 seconds)
  done (took 40.969368267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.785721832 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.786219516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.784244874 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.783580021 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.78664985 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.783159654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.78601906 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.785808117 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.786592963 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.785559663 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.784909817 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.786669864 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.793571731 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.791350465 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.787533265 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.786738397 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.931281881 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.786099465 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.786559323 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.785925971 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.784156218 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.791199956 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.785631049 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.785522079 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.786843763 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.786860186 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.787189674 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.788632284 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.787998318 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.788722564 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.791433995 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.78810354 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.786467855 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.788786886 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.786734165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.788172242 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.791932806 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.787621552 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.784557325 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.787398033 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.797497317 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.810712936 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.787544932 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.791279294 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.78793654 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.789654523 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.790379897 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.795297481 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.784936944 seconds)
  done (took 89.483013504 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.787755537 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.788893593 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.78483502 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.787468078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.787467101 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.786891525 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.786961119 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.788076658 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.784902544 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.784606211 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.788180131 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.784263386 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.784863663 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.786537317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.786804692 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.783588863 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.782854576 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.784447353 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.783395572 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.784360322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.783367561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.787206912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.787872652 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.784977113 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.786862406 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.784284695 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78471068 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.786990679 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.785223718 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.784923113 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.786728454 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.786522914 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.785894781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.78425954 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.784014109 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.787424959 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.78677987 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.783664247 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785994252 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.78380604 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.787353611 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785139167 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.784982173 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.784094321 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782692438 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.782724518 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780309901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.777393065 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.776804441 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.779793661 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.778312168 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.777409171 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779434852 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775576128 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.778572876 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.779053153 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.775517624 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.776898287 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.778242551 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.775435602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.775036319 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.777982502 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.775151744 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.778482417 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.77664584 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.774633943 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.775794507 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783166302 seconds)
  done (took 122.963858011 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781408249 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.781964495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782996082 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781469857 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781253358 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.782323371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778354282 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.780075319 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.780060811 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779573809 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77888302 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781262513 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.78064682 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781266075 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.780184009 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781043116 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.780398031 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780550854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779637956 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780515774 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.779203393 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78086083 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780188287 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.780362199 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781069758 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.780795504 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781575175 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781045586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781108692 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.781055399 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781036394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.781448193 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.779718931 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78098804 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.781684251 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.780688487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780499155 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781082824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.781249741 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.780663111 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78145322 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780545924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781906175 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.781030927 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781457017 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.782011262 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781204686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.781381868 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781982641 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781494393 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.781081693 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781929363 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781569222 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781722243 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783077718 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.781810984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782827835 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781591725 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781720003 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.780872098 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781936596 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.784041907 seconds)
  done (took 112.146658199 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782724671 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783218333 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.779826226 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.779667363 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783003561 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779306695 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782576983 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.784117949 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783263853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.783258095 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782110134 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780059575 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781319565 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78377387 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780936935 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783287393 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780786614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780935134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783576212 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781253097 seconds)
  done (took 37.354016638 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.782465305 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782945298 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.780417175 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779476133 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.782567946 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.782365346 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.782694719 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783767643 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779572739 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784498876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78243053 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784456982 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78103298 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7818482 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.78297897 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.780416691 seconds)
  done (took 30.23006667 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.781837206 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.783892598 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.782817094 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.782657451 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.781055481 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.782396693 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.783304913 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.780802811 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.779897104 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.7835285 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.7821986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.783084719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.781337319 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.781460188 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.779215838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.782718598 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.780716778 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.778303977 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.78226002 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.780841867 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.779218313 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.77947274 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.781473807 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.781173541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.778185644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.780342637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.779410624 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.779119752 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.7781225 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.781102775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.777253102 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.77772867 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.776475445 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.777949896 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.778934442 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.775606375 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.779091843 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.778458401 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.779981349 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.780241628 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.779163104 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.776572206 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.779347935 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.779712561 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.777399624 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.779525405 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.77745739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.777758604 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.777133842 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.776828067 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.779939799 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.77972019 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.778990967 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.780315647 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.779658859 seconds)
  done (took 99.61003099 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78022635 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77951453 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776386671 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779871104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779653373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.778778645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779370731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.776739422 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77804776 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781469279 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.778411622 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780657709 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776106404 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78014709 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778197579 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781013784 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.777881844 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.779115733 seconds)
  done (took 33.733528862 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.777527795 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.778468116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781304709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.779266441 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.777679847 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781797441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777912553 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.781537121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781654306 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780927434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77889541 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.781345889 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781768645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.781123159 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779478709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778661603 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.781272688 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780878607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777914775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778532108 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782054696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781304867 seconds)
  done (took 40.874355607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.779304878 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.777375076 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.795367327 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.804057444 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.799488381 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.815679314 seconds)
  done (took 12.483435276 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777376489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781506362 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776327844 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780673795 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780521498 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777112069 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777783369 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778966163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779702521 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777898389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777218461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780019086 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780873415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778386804 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777833331 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7779145 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776110041 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775776648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776829978 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779198477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775211645 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7784538 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776541026 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775755998 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777021481 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775820069 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779349369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7765465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775593055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778444326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777718109 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774210481 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776810409 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776290497 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777845886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778632937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775252533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778311155 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776926925 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774122166 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.776455199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778474303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776554758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773196248 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775304996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77428128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774882291 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772733943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772559593 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775831667 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775617343 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772294171 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776244759 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775043059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774447622 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774907066 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773057095 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772086295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776157806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771848122 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772883902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774486568 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772424285 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773312124 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774736812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772587924 seconds)
  done (took 118.949135451 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77275588 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772564842 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774070623 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772763661 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772103726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772040279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772201367 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771631107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772577932 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7721299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774249859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772458141 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772565568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771062159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772308417 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772726945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772531417 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772457756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77156717 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775907613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772134043 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772717204 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77309929 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772467358 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771890632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774863724 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772314656 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772588215 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772752454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772105601 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772908341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772848048 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772685647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.772374919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773129852 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77221497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773818393 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771708356 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772846646 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774938209 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772783682 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77576324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773945105 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772780459 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772481156 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772120553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772192451 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773605586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771817244 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77259059 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772257233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773026702 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77365909 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773844223 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771972558 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771409079 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773095375 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773215646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772946522 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774965061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772714471 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772378037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776133607 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772529149 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774211929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770928858 seconds)
  done (took 118.718432246 seconds)
done (took 2455.330340925 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.80348781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.824162541 seconds)
  done (took 15.3342685 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.936138237 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.887256208 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.771846941 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.815949593 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.772664255 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.770315261 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.775250986 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.772963187 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.771064998 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.771208943 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.770933757 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.95877886 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.821883407 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.770625518 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.772278035 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.865247192 seconds)
  done (took 50.717497354 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.772872838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.774552626 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.785500276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.777067831 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.774946564 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.7868581 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.807603157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.776614503 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.807387992 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.788959223 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.843847402 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.784427687 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.772906675 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.822309442 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.789195267 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.789418907 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.86569345 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.84997005 seconds)
  done (took 34.076581906 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851474782 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.778259307 seconds)
  done (took 10.343602514 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.786253943 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.798052719 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.786073267 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.7814606 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.797305592 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.7715645 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.811547786 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.815055611 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.80276977 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.768607875 seconds)
  done (took 69.628310189 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778332892 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.772719304 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.774148947 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.770861899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.764310599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.770779698 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.771355935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.768371603 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.454531578 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.811139235 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.78222606 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.777080386 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.771383964 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.77332931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.770258682 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.797048873 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.884551041 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.771516984 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.769575199 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.776546736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.772110726 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.823974265 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.785418555 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.773434511 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.802511963 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.461210942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.785361869 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778199052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.882819726 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.771530102 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.771639471 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.772910359 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.77453693 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164423393 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.050788039 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.77453049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.782176727 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.77985593 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.770425698 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.893312559 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.773883404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.778897774 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.713735198 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.021997172 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.873243793 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.815217198 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.189134466 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.780545286 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.774608359 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.803667953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.776341202 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.773806328 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.786227465 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.279012529 seconds)
  done (took 127.331452889 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.766232883 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.031925395 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924737553 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.77102016 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057611798 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9756495 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769717438 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817988155 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.77088565 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001351448 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989802946 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881521308 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769830527 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.768572875 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77038111 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.766503671 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.929813073 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.845980259 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.768958915 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.767934652 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800890747 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014231443 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.903897311 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.773315053 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.790719405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981382177 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.906099426 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881229627 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.14264603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.766919652 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834395699 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.77002752 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.768378206 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.768651476 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927058453 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869234662 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860813306 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.771922702 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767847746 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.768703884 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.444834166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96566307 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.869611341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.91434292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020307201 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977020245 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.560764027 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.76915343 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.505019344 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.932225907 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005049267 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.001743231 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.896335648 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.772657323 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.284731896 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.768736806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.769069604 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006549388 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000359388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.875452444 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772779848 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769819846 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770601116 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015958233 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.771177573 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.865725868 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772372846 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.770318266 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.867938889 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87593529 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002034513 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986028798 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.805006954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.091221737 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.2523364 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02081633 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.841670836 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006577145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.773177625 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769766332 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857762212 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.727315767 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971649672 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023196755 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028386483 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812080168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.496579664 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.770749925 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.001090089 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997764065 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.075817304 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013686305 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.925467103 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.081962178 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.771220068 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.770100836 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.006471816 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.91054072 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.775151206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.129534986 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008553801 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.344490245 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.802568228 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116805636 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908387051 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.776305401 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.414950275 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771803362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999428965 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.815540402 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.773144313 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771717392 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.995002293 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.851149294 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772099024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.399879041 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.837798957 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776737191 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008118366 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.774402874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042049953 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.776023173 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012193104 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.750957301 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807920608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.004673185 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.014046941 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.776365875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020934128 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02057313 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.893541779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.997155986 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.405402125 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.772140603 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064238104 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.776910141 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.773752398 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.947002752 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.775351287 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.922451353 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.776879433 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109465808 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800280655 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929904685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775441568 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032393888 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.812117887 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828862385 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.776112548 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908711454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776347449 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.658520694 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.930636233 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775678148 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.774020255 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.5060662 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.774219292 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932412524 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.008805819 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802983538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850107793 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.448949146 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774781784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863858622 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803000753 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.128380913 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.775061339 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.992026341 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.777864845 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.311269535 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.774558862 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017344009 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.961890421 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.77842361 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.773544605 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.688706008 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.775184631 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.775207449 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937604382 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.037078036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775731242 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980707475 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778552683 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917903815 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.779915927 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.850772994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.131825501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776433059 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.775644551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.775329713 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.776533849 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.777422905 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044065159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.808379661 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.309890438 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916000761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049902123 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.098923243 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028770951 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.824342133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.778292064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027501864 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.779824783 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.843314182 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.778991989 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.80136539 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012455546 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779476469 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990539999 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060592787 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.698119154 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828286364 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.780102998 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77747961 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.736729738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.935811947 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870995401 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.78093833 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.777989608 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.903944026 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.911358175 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996581262 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.77955392 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.112523072 seconds)
  done (took 882.548257043 seconds)
done (took 1191.687389015 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.77839979 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780408335 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.765865314 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778145308 seconds)
  done (took 28.821034504 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.783509769 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.779306309 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.781926546 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.780122638 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.782315531 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.779737106 seconds)
  done (took 12.401361941 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.828589016 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.774193662 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778402966 seconds)
  done (took 21.095902025 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.850604397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.194852643 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.89548251 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.222032252 seconds)
  done (took 9.877434359 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.783565818 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.783287533 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.782539833 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.784546441 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784295661 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.786296081 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.784406965 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.785309742 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.785791591 seconds)
  done (took 17.775846787 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.127031252 seconds)
done (took 95.815936562 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.908150286 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.840687258 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.105594844 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.97922078 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.44904567 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.034133987 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.120905454 seconds)
    (8/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.944718958 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.782947317 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.99667422 seconds)
    (11/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.868397716 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.804202725 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.978692091 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.173890826 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.935799436 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.826024359 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.876422792 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.812610487 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.969776872 seconds)
    (20/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.804556433 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.921437721 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.30810537 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.052139177 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.769601388 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.718453808 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.981654791 seconds)
    (27/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.762638098 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.372726376 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.102416951 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.766835453 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.361061836 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.910309871 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.861708804 seconds)
    (34/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.912116955 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.109422325 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.875876669 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.886459137 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.778675541 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.807114233 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.764435009 seconds)
    (41/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.847739131 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.781491955 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 5.567038861 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.114771182 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.781615187 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.197726666 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.767876068 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.940310415 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.831524481 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.560475713 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.042605581 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.806366413 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.085085159 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.142772679 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.346995554 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.097384068 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.847920897 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.91433809 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.889097489 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.767215671 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.808459021 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.845012598 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.781087061 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.808294821 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.076241661 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.795131178 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.784669507 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.790400579 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.837621352 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.596265573 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112173923 seconds)
    (72/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.532129826 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.153837612 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.7846909 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.161412023 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.718926502 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.418869443 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.793327483 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.854216262 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.997168508 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.385187157 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.46917499 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.223033153 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.997019026 seconds)
    (85/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.236969718 seconds)
    (86/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337372898 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.475791695 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.818991141 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.462562698 seconds)
    (90/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.268812689 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.874427393 seconds)
    (92/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.182536673 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.934473695 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.876630038 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.808826392 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.026625743 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.312694433 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.013266691 seconds)
    (99/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.009782108 seconds)
    (100/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.114051663 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.802948905 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.151253825 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.859630946 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.569136499 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.863397843 seconds)
    (106/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.197274932 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.81256626 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.888439006 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.782947215 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.907012651 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.021879316 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.957158943 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.599081548 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.69899104 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.881958284 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.34303602 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.421528364 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.009712748 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.982411567 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.776510122 seconds)
    (121/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.875251507 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.890985125 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.925947745 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.184284025 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.253986481 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.855508289 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.782892406 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.881271581 seconds)
    (129/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.066396316 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.95648865 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.078595873 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.948234619 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.926155023 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.394512027 seconds)
    (135/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.278479417 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.234588063 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.808465172 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.493748811 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.132923173 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.769912734 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.207119452 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011439727 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.789006417 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.040888197 seconds)
    (145/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.301181694 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.09220238 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.815658661 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.056995646 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.776146457 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.904330927 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.079131924 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.791585082 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.884542548 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.979569318 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.01346082 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.815860557 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.965948206 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.258290747 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.813662593 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.901082714 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.786837234 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.220519969 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.888452008 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.00302202 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.776178739 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.772116669 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.162285721 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.857571181 seconds)
    (169/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.925855375 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.788268503 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.880845723 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.074621616 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.304782003 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 4.804378881 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872423681 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.599913041 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.413002086 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.78874084 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.404360138 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.154797947 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.008823859 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.574939038 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.899255703 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.467435206 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.074375742 seconds)
    (186/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.871422286 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.81393359 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.907530029 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.708196268 seconds)
    (190/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.925461677 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.821926376 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.809598268 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.916899502 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.945345825 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.789103189 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.849280553 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.347158235 seconds)
    (198/309) benchmarking ("sort", Float64, false)...
    done (took 5.547554693 seconds)
    (199/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.813748775 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.091295073 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.134190165 seconds)
    (202/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.821806396 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.804505037 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.245402048 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241191193 seconds)
    (206/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.907699434 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.808776716 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.815383002 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.266603455 seconds)
    (210/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.808971661 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.528183614 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.995041362 seconds)
    (213/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.875128429 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.950936237 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 6.875727783 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.038435315 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.12626105 seconds)
    (218/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.966206271 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.168473775 seconds)
    (220/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.92042539 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.809915293 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.991686644 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.710036315 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.834347238 seconds)
    (225/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.816559616 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.073817901 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.79364548 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.293595534 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.007064587 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.7976914 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.828866326 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.262921921 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.714157281 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.88456538 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.790423283 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.678789318 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.186372466 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.259102797 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.810960859 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.797133298 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.861649276 seconds)
    (242/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.904442791 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.781377379 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.558393259 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.899872126 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.104413378 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.082271605 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.177724332 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.909438859 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.817040303 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.551216263 seconds)
    (252/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.080855898 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.100682943 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.763887444 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.777735734 seconds)
    (256/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.960015884 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.72251201 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.256639045 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.840830919 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.327798636 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.856778769 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.856913299 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.985630403 seconds)
    (264/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.255691505 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.896212018 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.808639945 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.77116514 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.91733324 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.928371319 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.173094471 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.871975637 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.755931187 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.878401289 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.599764498 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.706411059 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.885296176 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.133126369 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.905601757 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.944119298 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.778349893 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.197425842 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.157736985 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.703863342 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.530280661 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.887186297 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.793910712 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.019015982 seconds)
    (288/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.839802427 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.27089944 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.989320809 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.795811693 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.793096477 seconds)
    (293/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.710984624 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.493866378 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.104286013 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.887825416 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.905832335 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.890094859 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.884499345 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.800271096 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.818824656 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.792315164 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.780833461 seconds)
    (304/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.5298097 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.006933126 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.196069531 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.983039738 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.8097402 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.962792034 seconds)
  done (took 990.779923377 seconds)
done (took 992.558038103 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.827751381 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.819660312 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.803104325 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.826294167 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.916048442 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.832768346 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.814537597 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.806324987 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.85278685 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.853408079 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.803191422 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.831235145 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.805170351 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.804206266 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.805074372 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818029706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.110205895 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.829768691 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.822100474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.816733798 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.821958535 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.803486259 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.854522602 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.832074795 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.808833124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.806415359 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.808134284 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.823936429 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.917019287 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.808977168 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.808544588 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.815963468 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.109497131 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.827781043 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.800546155 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.826679032 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.8183295 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.814639079 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.810040746 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.83895053 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.242807291 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.811854132 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.807389109 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.806999501 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.80623123 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.809396671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.808492901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.813789435 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818273987 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820795626 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.241083141 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.827722794 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.808734824 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.8078726 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.81666944 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.806533801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.81372411 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82312685 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.825696009 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821828496 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.100920873 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.834100598 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.810054051 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.823683203 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.813365031 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.277616542 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.807988429 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.811936259 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.243959025 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.816992149 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.278558782 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.820357539 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.809723689 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.821831988 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.839766713 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.111717228 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.825130876 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807546851 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.817429387 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.806791151 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.817230562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820376164 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.812647483 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.813489082 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821060469 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.836648586 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.817926712 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.809196722 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.816854675 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.831623144 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.815828402 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.819842631 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.812129717 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.80410462 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.822054368 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.816018041 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.812008993 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.811694833 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.813035828 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.818757277 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.249098017 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830010034 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.804961736 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.80394103 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.806251634 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.824670605 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.241246415 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.814308255 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.831601847 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.85567907 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.812455235 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.102813577 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.835771523 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825031306 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.818610044 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.812444162 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.804390856 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.101472941 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.265695905 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.828697351 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.810605632 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.807524832 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825426676 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.812703243 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.806254162 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.113684619 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.834617604 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822946388 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.931229536 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.820543327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.841503679 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.808266359 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.813071452 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.839635488 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825894129 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84152194 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.813279571 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826074869 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.826511816 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.807122597 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.820776214 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.820231811 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.811875762 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.81816971 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.804217398 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.838907546 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824457061 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823439664 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.832115541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.932070005 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.808650529 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.103392111 seconds)
done (took 284.39234525 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.877003512 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.799885145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.909508587 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.807510335 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.888782589 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.892920933 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.80546266 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.804845224 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.807222783 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.17941805 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.806366454 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.805669177 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.806127518 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.805910636 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.889854083 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.808406016 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.805170686 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.143740346 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.809339868 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.881575079 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.805488613 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.807156215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.808580669 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.179757794 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.809376343 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.804136233 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.882583573 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.809256175 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.146248219 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.800135582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.805042932 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.145992074 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899475176 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.827797329 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.820198084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.816501463 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.891153035 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.812563873 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.889467639 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.888736322 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.909928898 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.849913484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.802634334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.80150478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.813155631 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.811250665 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.808586208 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.838026767 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.808353033 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.808262775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.145439995 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.819762922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.818345892 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.809015071 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.807676905 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.831493933 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.808367448 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810902588 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.902498174 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.811371028 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.871882746 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.181553918 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.182640379 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.810421182 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.808855656 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.808875104 seconds)
  done (took 180.206932123 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.877550181 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88283442 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.87693018 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.813601433 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.859548526 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.879546977 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.81343674 seconds)
  done (took 14.745370826 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.818057345 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812600682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860378871 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860595739 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.811608943 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.960830883 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811440185 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.822749279 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.809746944 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.863575138 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.812344719 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812478565 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.818907898 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.80428778 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859728355 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.821697271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.927233826 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.81256673 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.812134299 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.962707983 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.809305874 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.819491165 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.865703275 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.823430501 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.813374094 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.818199522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.405146355 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813038416 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810274853 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.812329246 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.810184018 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.853933003 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.813566299 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.8038162 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810621702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928422628 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.812867146 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811592119 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.814531954 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.812753209 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.813471854 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.813596022 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.814029219 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811225285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.813402249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.836351325 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.814396679 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.812967107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.813785443 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.814315597 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.863523058 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814541412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.810935519 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.811745461 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.868263702 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821527876 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.813625508 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.811515007 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814840711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811915401 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.964489395 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.861742404 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.814075357 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.861575536 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815487646 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.814869569 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.814399331 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.814774082 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909750396 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.814689903 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863171674 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.811783056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.972950044 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.838216492 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816017671 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.81763033 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.816129379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814812432 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.811989206 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.821163432 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.812482851 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.815977499 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.820822214 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813267133 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812699795 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.926194581 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922374927 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.813015643 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.827645808 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.82244126 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.814037892 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867929673 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.817215468 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.814175464 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869788647 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.931736507 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87165606 seconds)
  done (took 200.327809355 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.821772608 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.824074699 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.817074886 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.832535679 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.815380239 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.814695062 seconds)
  done (took 12.673266498 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.817717983 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.816445024 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.816689163 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816248897 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.816204356 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.817929245 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.81664205 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817149752 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.819855244 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.816891281 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.817877105 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.81851609 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.818301747 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.817403881 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.816513573 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.816849951 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.818136229 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.81483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817579686 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817279384 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.966335453 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.816320866 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817633841 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.818044892 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.820711076 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.817337944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824961789 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.818113115 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.818289625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.824227732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820105298 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.818650979 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.817860893 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.821146958 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.822287695 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.819233267 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821751983 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.818716204 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.815339986 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.819707562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.82011501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818448491 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817558089 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.819278392 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.818876998 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.821512809 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.822857818 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.826725734 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.819938807 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.819325381 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.820494787 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.819265921 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.819897047 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.820895323 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.820134982 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822590805 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.823147989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.819693344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.818999172 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.818559896 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.819720267 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.820980653 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.819387406 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.822972755 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.826077549 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.820273178 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.818866572 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.822836065 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819742929 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.81975466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.819909207 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.817954411 seconds)
  done (took 133.888782262 seconds)
done (took 543.596415442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.931670654 seconds)
  done (took 8.682535212 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.868369863 seconds)
  done (took 8.718881161 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.311283767 seconds)
  done (took 10.061992799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.81806887 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.83167975 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.81804436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.820667557 seconds)
  done (took 29.049835321 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.869573763 seconds)
  done (took 8.62099305 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.825826484 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.813230238 seconds)
  done (took 15.426877604 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.86312599 seconds)
  done (took 8.615019808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.897224706 seconds)
  done (took 8.657381042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.837310163 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.858532883 seconds)
  done (took 15.461347918 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.798551249 seconds)
  done (took 8.550613883 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.480911035 seconds)
  done (took 11.239857568 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.820114617 seconds)
  done (took 8.585183812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.897278081 seconds)
  done (took 8.649214363 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.937143491 seconds)
  done (took 9.689965732 seconds)
done (took 161.761027324 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.816471461 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.812344092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.814471274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.812981802 seconds)
  done (took 29.008320122 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.855245719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.854971619 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.856090035 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.865568482 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.857112156 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.856044316 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.847300126 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846482102 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.865108195 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.858059891 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.856972518 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.858256001 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.855419075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.847753898 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.857252992 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.858081237 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.866715314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.856662781 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.84867926 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.858517561 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.822392602 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.865818807 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.858857539 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.82236479 seconds)
  done (took 46.248874711 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.021259521 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.894230848 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.975485911 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.874163273 seconds)
  done (took 9.519120358 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.874743172 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.876971801 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.887088017 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.925691406 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.960979698 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.885177242 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.850168404 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.843715268 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.830624256 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.876058932 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.950166655 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.871630626 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.962302979 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.822917634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.00161665 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.823703707 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.823286362 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.87551966 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.92778088 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.938940298 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.823611788 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.875048476 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.880302693 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.872181186 seconds)
  done (took 47.014730381 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.823253262 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.830694028 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.828715368 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.82263652 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.823262032 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.823082299 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.829671597 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.824343035 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.844201764 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.823876235 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822552595 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.823207076 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.822558517 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.823359735 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.82266999 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.835933 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.837712584 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.824087776 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.826784329 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.829855561 seconds)
  done (took 38.298080744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.816257447 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.670420512 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.168919743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.074053161 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.816966986 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817331448 seconds)
  done (took 31.12003781 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.835070178 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.827649415 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.823387525 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.878633358 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.96084855 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.830609774 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.824423588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.833047927 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.867490074 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.888284398 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.846341332 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.849499832 seconds)
  done (took 24.022050774 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.819212399 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.820964239 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.820657491 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.836913489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.834412024 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.830261591 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.831410709 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.816929696 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.838232194 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.841864839 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.831356939 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.835837095 seconds)
  done (took 43.717603582 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910155431 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709291937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882353301 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537076973 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289600971 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032848313 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344188546 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158037784 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.824832932 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094862163 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006335699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92795543 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074515762 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820224646 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850465011 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305318968 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116556919 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05660275 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848748147 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.616133987 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871050746 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306426874 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.779934381 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882172066 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032245826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.949137209 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.081229471 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.779336617 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96011278 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862419421 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831736192 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821456477 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095501135 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201002269 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927492588 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832563909 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443171674 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.53505644 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.807200674 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.629413261 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.668002547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.950628648 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830752005 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823517736 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758130303 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275542101 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195688961 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.828043675 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.534277396 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.821210187 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83374217 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912045249 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.828005556 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.639005445 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737270879 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099115867 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.821314268 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828599822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392466441 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.967566502 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312291254 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.798695793 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.015765417 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652147766 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219112706 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.975779808 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.827113064 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82734172 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758233348 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.627481229 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877854505 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969724197 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.84427315 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474037054 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135994014 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.029162487 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.186000101 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117808264 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.557280893 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.799446747 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052374556 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781677866 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759009783 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.683703936 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.75970219 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097043308 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862555004 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.466702129 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86505349 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158074882 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837179295 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841609537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832807639 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050691091 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.392110492 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825551567 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.742961965 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977322772 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847189474 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157327955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75960138 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.829549389 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080746179 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.036591973 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.030280249 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347479476 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981864548 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906275233 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.839439791 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.707052969 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87618339 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.101931493 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888170597 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.973920091 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884886063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.786741631 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133371889 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932895084 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.926275181 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.009205058 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952613355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161711634 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121629768 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892633797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837364331 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.826650995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.724336628 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381123612 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093430544 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.827509354 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28637296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877529885 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.827276766 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762269852 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.419793066 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978235583 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.796524211 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051719286 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.733322478 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141852075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762201243 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974387343 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.940776912 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.051033608 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.479424056 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.91103075 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084785072 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271276712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.050847418 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878314873 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847327092 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946180865 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8510023 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.202426294 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121042795 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.832169421 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.832311435 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676920757 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824577939 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82901211 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.833393094 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577367465 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10672452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8570217 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831692706 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718700884 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.84239617 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895673689 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834487839 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838535834 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.370748503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.537766223 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.835277115 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.448732168 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053469634 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839378119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.630090711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944741109 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.91037848 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110364699 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892827558 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.764612867 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.54227362 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.522445051 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830399554 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765620171 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.829875266 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840298863 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84123818 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.209289252 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110232781 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878909107 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.63311119 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.875761931 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841230208 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.834942135 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829634667 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37013121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980050119 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318742685 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.878746216 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968227734 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.845273619 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765999027 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834661698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835839012 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832215889 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.78816195 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884300487 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.701627173 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224197193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088975105 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.441522609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844909995 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.656076937 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.890706309 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.85277538 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769183988 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734884633 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.940235978 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842924599 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.843428443 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.63532204 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.538562959 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400559445 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153018144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146155194 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281320997 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.269655834 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138464473 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166198677 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068171023 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363397634 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89328772 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175200088 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777892259 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922960487 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.486858899 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193380574 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848170561 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064775027 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222947718 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.832588053 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857696372 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050970243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868305542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.707943809 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802492113 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.038051576 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976305228 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.650048363 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03677599 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164447094 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620267066 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.927228876 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.834361415 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540067438 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9247995 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.548042128 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196112049 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334852962 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883140355 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329574896 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838849936 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281967045 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190453947 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.11349233 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.957808167 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771415535 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846043983 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846273291 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.834580718 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.82792971 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.703977242 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.087834066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84717435 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07224161 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.05567899 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135714104 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.747170049 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.841533962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836045992 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136805486 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.572156491 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006935285 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.220293716 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360709875 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838523086 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770537034 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770119089 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.528286597 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844394363 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812106969 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064439661 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.025789446 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.753398381 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30050401 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08651922 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090910739 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.850252247 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111112861 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111615452 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.553636255 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861291226 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.937134682 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.641832608 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.947923223 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1063033 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072562121 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587985056 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.064426063 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.898354601 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.655864347 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.835318218 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051138274 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106359885 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.864301117 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071635845 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.569400299 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.960162896 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166971906 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898438705 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.848964904 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994117039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.032526078 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848761752 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923911095 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850051038 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.850238818 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852233878 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88759446 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853243961 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969769587 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.853820446 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927691119 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987703695 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.36849398 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.845498058 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118459625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209606642 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17616194 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901119108 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840634894 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840749258 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77566034 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977845291 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.286810402 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113965849 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.970765753 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.141254048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865668365 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643498496 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1704661 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084109195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116599889 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.734634039 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842731833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.877916512 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.113867549 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852788509 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.053903014 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081628194 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163381166 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315912738 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.028102492 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.206937568 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117248127 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.215215967 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846727133 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434094182 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.970793334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.550214764 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.884596877 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865466241 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110278711 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854317186 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236658679 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.8688695 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.044376533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.361848935 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646219153 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136775544 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837852498 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907453494 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126637488 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243212929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155738274 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915483557 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855773865 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.549309807 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980119608 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.720588544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.116970813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841979219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054797925 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.551914984 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851668504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122262247 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154973143 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.839766471 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.740583354 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853585874 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.852470002 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066505691 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115340365 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103007503 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85226318 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849771318 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.662262976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119298083 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903037192 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78271643 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.846221694 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943121283 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093648945 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869644299 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.360494648 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.554323503 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14386509 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.767173391 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865899876 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316865109 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207241751 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171114956 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380608651 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073771196 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410536722 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.732330384 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142767974 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.8485215 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269641003 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152685813 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.848484817 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385688007 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880168033 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.115701931 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16425578 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.941578438 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640872323 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817568206 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067870911 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401660249 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783140942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845676868 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.905244278 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846168293 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.976570616 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856855435 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.763278158 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.715439464 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.592021387 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33918403 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.853378727 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836567922 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.636274095 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399778485 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880694962 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989325842 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853527589 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.568149195 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.139449945 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101190465 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39062374 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.852321248 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.85102069 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847287992 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776293783 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04677443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.228239015 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147093521 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.212557848 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.884946663 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853110185 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.065421211 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060845 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.83117601 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986245461 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265493812 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88437849 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.618388688 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527648759 seconds)
  done (took 1669.551721279 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879643944 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.876688122 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.911243128 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.867191685 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.916164841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927968963 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.932985473 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937853956 seconds)
  done (took 57.034703422 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.846850423 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.049518098 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.857650432 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.848633929 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.857424382 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.84931289 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.013655899 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.856037687 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.85746085 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.858555956 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.848152352 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.847944175 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.161244594 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.870015201 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.850957521 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.836042481 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.856936477 seconds)
  done (took 73.993593925 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.85129891 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.050552922 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.887784689 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.871719648 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.796068336 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.858354508 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.837568362 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.905582723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.853177221 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.069473928 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.486082541 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.859703992 seconds)
  done (took 90.115405647 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.859960466 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.855842008 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.855221474 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.855246922 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.856228069 seconds)
  done (took 11.073229576 seconds)
done (took 2172.497020293 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.097349136 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.076592819 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085938453 seconds)
  done (took 5.950438362 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.999990575 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.048297201 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.168985964 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.174225195 seconds)
  done (took 10.183788766 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.1472062 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.225733901 seconds)
  done (took 6.161742822 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.257607127 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.866735949 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.245866769 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.852979114 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.854219506 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.855671341 seconds)
  done (took 22.357618378 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.856235461 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.859123925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.857055959 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.859638083 seconds)
  done (took 9.221485032 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.836828063 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.511060948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.841420131 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.853532032 seconds)
  done (took 20.831873045 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.604552187 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.286162945 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.600276032 seconds)
  done (took 9.281028773 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.369011867 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.052885572 seconds)
  done (took 9.211753652 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.128199162 seconds)
  done (took 3.921927642 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.992742727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.13327552 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.402621969 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.415691908 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.511707642 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.027356674 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.226584663 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.119452911 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.304265117 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.318427568 seconds)
  done (took 25.245687743 seconds)
done (took 137.62330039 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.384557267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.867738454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.065117077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.23373175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.086953433 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.066117378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.068873034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.220185077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.719045012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.717933569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.23383671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.088044081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.218326684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.863539929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.214782153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.860826541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.085102951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.281721138 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.918149341 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.166335647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.075234194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.85275153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.066612115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.859736895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.089485575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016427361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.428738808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.863672303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.066900258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.428453388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.016081586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.320166997 seconds)
  done (took 168.240540882 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.619947687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.868481532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.859242495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.859268736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.329369422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860265883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.860936064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.859295556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.026681506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.03119619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.869739688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.346388348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.866881155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860391808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.869730586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863580005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.17928962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.723579338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.878155397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.881928903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.885386136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.286959005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.881025547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.319722596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.180420524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.879676077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860419433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.879485786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864515986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.857458966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86930202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860453163 seconds)
  done (took 207.936718391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.86062493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.863364063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862700448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862326461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.882704771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.862265307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864160432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864658726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.471017097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.467685487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.874149011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.867439669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.863101083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861160911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.869177499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.861311008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.868269129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.870285302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.869778642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871310002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.875396216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.636439305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871653166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.648666552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.867800933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.868213067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862819877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871640132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.873814036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.87398796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.871326172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863701652 seconds)
  done (took 220.333175213 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.066507915 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.871286231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.871352165 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.800376164 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.871634784 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.869855841 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.807463614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.068888221 seconds)
  done (took 19.039327243 seconds)
done (took 617.35774653 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.356958833 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.199254481 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042880845 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.894876168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.158882988 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.928502381 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.889511027 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.955464483 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.620649744 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.964478639 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.577071956 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.908289475 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.672195679 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.918390462 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.018325048 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.946877276 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.47015567 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.564163056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.06977034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.963155375 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.069511676 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.856576536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.972076265 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.635991298 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.691989366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.910959493 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.071173062 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.480058499 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.903354775 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.058092157 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.639310154 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.285141104 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.904252628 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.88906577 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.947550582 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.925262966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.243716168 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.902760273 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.009588811 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.663252603 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973129417 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.506383101 seconds)
  done (took 103.459799109 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.859894265 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858920642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.857659329 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.859293702 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.860381525 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.858929621 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.858691485 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.858381593 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.858391914 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.85841954 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.858754889 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.859849465 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.859549789 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.860173816 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.858426845 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.85835646 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.85992211 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.862379889 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.859346361 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.859546659 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.859503378 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.859445934 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.872895726 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.859382166 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.859262342 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.859989033 seconds)
  done (took 50.169769541 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.874747334 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037677975 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.126378431 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.89354666 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.873056714 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.876442699 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.892540144 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.880023348 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.875505365 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.874896776 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.966637472 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.880700285 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.893711616 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.135507137 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.889260961 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.874785881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.874306033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.874167273 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.045156433 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890979234 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.894891687 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.881634399 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.894453809 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.888191483 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.876716 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.874472661 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.877791395 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.32372175 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.883253027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.966408037 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.935459005 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.897061527 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.292504713 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.138772386 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.928535019 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.882433284 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.875595072 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968717274 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.880492335 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.87522471 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.894362861 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.879673497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.123670678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.350320394 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.889107066 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.875911671 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.334365524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.978830982 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.917787397 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886283544 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.129559125 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.891657229 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.877487922 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.875733495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.912306911 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.886024596 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.87438231 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.213091846 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.887550855 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.893793258 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.881772984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.876090136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052070854 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.884998113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.038676286 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.885451859 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.883236781 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.878951048 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.13300306 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893118989 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.359993875 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.890012755 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.878526172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.970657068 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045450935 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.360425095 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.89044942 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053448457 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314184075 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.902163616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.88604763 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.314972408 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905000933 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.888631192 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.880143228 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.87942354 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.878464395 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.923763482 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.897848133 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.295008879 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.36106348 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.226424961 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.90571785 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.893359371 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.877851961 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.214052099 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.886759024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.878823515 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.120186026 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.367247358 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.89190799 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.885253408 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.34581127 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.892525951 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.897842105 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.88724267 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.132268359 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.89423996 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.923964427 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.880296698 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.886522895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.881093167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.897912472 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.885434595 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.879218719 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.335016395 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.989209921 seconds)
  done (took 232.884106521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.872400558 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.883667842 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.872596283 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.878902628 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.871747147 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.880213262 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.872303266 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.874628727 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.88301424 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.872132427 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.87304793 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.878523671 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.876903377 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.880243212 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.908401745 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.880714704 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.527391893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.874486251 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.874255868 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.874057302 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.525138738 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.878453447 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.874242397 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.873261687 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.874398759 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.879091831 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.883971293 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.899544961 seconds)
  done (took 167.710246461 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.881329959 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.995599937 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.899120729 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.90819898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.889677671 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.879700746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.904522155 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.896819608 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.885809799 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.879092634 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.879821656 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.941717182 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.893808682 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.982046901 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.912595308 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.913704583 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.986667749 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.889350596 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.88011558 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.880397272 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.910446061 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.875788392 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.941991956 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.01063309 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.900720041 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.996902974 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.888190479 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.887725275 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.880016197 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.996593571 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.897637583 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.941112035 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.917875348 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.903243637 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.001176397 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.000863165 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.987877775 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.911230416 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.890563772 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.881171285 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.881181201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.869870721 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.999973462 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.904855372 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.881876653 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.98762496 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.903678806 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.883931217 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.891689619 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.88049202 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.896102247 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.899657609 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.948100865 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.013567398 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.918518464 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.909123911 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.907295009 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.165814278 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.894244026 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.982963353 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.874824197 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.99902923 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.904353404 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.870712387 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.883393858 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.88892933 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.912467923 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.91581866 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.989267324 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.890228153 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.983747683 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.918957513 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.889894817 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.883579369 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.886960951 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.999459623 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.00250802 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.918604201 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.920398088 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.914220408 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.879128368 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.883491993 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.872241232 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.901452746 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.888038158 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.999005191 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.002805558 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.892057868 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.887746414 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.886175364 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.887141972 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.909904483 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.007069502 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.917410792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.982548591 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.951350148 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.958016203 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.899925665 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.89774166 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.888588275 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.948238696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.902119826 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.896884196 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.214148812 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.957603761 seconds)
  done (took 203.99502006 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.341151466 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.938194681 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.942213399 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.192239327 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317311742 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.747288599 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.938389038 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.93464373 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.963179577 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.128742846 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.009163698 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.961654698 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.923521783 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.907534397 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.935781654 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.954396892 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.950947763 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267617678 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.057364636 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.005681666 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.916891421 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.232551812 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.250312811 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.320331292 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.969616686 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.287962095 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.611801628 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.1860388 seconds)
  done (took 62.013980727 seconds)
done (took 822.032009826 seconds)
SAVING RESULT...
DONE!
