cset: moving following pidspec: 14615
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.253519314 seconds)
loading group "string"... done (took 0.464203175 seconds)
loading group "linalg"... done (took 7.595193422 seconds)
loading group "parallel"... done (took 0.172676715 seconds)
loading group "find"... done (took 1.183462303 seconds)
loading group "tuple"... done (took 2.114792072 seconds)
loading group "dates"... done (took 1.329511869 seconds)
loading group "micro"... done (took 0.247559113 seconds)
loading group "io"... done (took 0.735031822 seconds)
loading group "scalar"... done (took 41.834456789 seconds)
loading group "sparse"... done (took 12.966071965 seconds)
loading group "broadcast"... done (took 1.157690975 seconds)
loading group "union"... done (took 14.197321615 seconds)
loading group "simd"... done (took 5.150487735 seconds)
loading group "random"... done (took 10.28341251 seconds)
loading group "problem"... done (took 1.990991182 seconds)
loading group "array"... done (took 23.929453376 seconds)
loading group "misc"... done (took 1.428788098 seconds)
loading group "sort"... done (took 3.572629268 seconds)
loading group "collection"... done (took 19.690104627 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536489466 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140216894 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13176095 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149726203 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206648636 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141470127 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156594636 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11553385 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.963932774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184929029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155248006 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513365717 seconds)
done (took 5.12286256 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.2229275 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094680046 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102909598 seconds)
  done (took 0.864284795 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077078291 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144725702 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095617433 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07863855 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096094291 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078126871 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095931852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078359483 seconds)
  done (took 1.340017466 seconds)
done (took 3.183592127 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730545498 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2734923 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201779686 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459629194 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198933519 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222896922 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680061067 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351821699 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.259133548 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102469436 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14538719 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391590056 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142395189 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680401908 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088638644 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121766627 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177584978 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435770133 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083958442 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110382384 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116668006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142541686 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126933827 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090876873 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187060921 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081739509 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193513957 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108970249 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079037677 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288720671 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201316401 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684710991 seconds)
  done (took 10.87052806 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109417337 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132720835 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098362924 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139331856 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134622686 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101126617 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086661184 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097261063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121921456 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177377423 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11522479 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13698125 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096039965 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08287709 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115824385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244808143 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120622411 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104482646 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101880794 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104165083 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123058086 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114267113 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109293016 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093245053 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167903442 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22285411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112891778 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127015122 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097509095 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112301505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143757555 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145054078 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09546773 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080379692 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174709319 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127230743 seconds)
  done (took 5.155891489 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188959288 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122725966 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169038543 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162688339 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138860068 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159345865 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112197307 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252035406 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.190182489 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162987371 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156594879 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116361447 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103665359 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082240687 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097104754 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.660500061 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164931445 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135888926 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098212903 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106035263 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101583672 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366286985 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088339791 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097563307 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083061902 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083643578 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162993299 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081878317 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.192257929 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103424577 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103310498 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147928589 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197069303 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142001172 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140190337 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080774998 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096686951 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176460999 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088724413 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158227774 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099813057 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103192674 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170407918 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118789151 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09968889 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097599039 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205412565 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096516 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100499337 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.971025668 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179482 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090238176 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096743214 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325255986 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099991102 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098973167 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077514931 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095936756 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.285585842 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.196682556 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08064645 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099015182 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097016375 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078623936 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098413611 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381370725 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081836474 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.745952754 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083349412 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108611568 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083483709 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097606104 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119766273 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102010322 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116596942 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080154008 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101176351 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097753182 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080050521 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100393273 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093788006 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103325771 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098174073 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149261656 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094928754 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099011576 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13644286 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101709893 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078861236 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138869407 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106015795 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099273973 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116923343 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100352099 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110819728 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079313921 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100825009 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143621993 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08252973 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.203022296 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080315037 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129367518 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101518447 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137080063 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099559428 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106972262 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101869411 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080280968 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095439167 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150089313 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095873887 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081344124 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101263257 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110298221 seconds)
  done (took 23.043276102 seconds)
done (took 39.743997341 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.330242349 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10522172 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104403937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10461059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101432092 seconds)
  done (took 1.492456778 seconds)
done (took 2.213270402 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290287764 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210216312 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076431809 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167499006 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093304424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176009187 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162698374 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114727037 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222417329 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07742819 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184778657 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078050013 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094737126 seconds)
  done (took 2.69600009 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095197961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116554756 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082815656 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11288885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07675792 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113375401 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093362672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120128632 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110822539 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085682266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094993569 seconds)
  done (took 1.819375858 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093276688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113574581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082411896 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111694878 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077367013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111913942 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093573796 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117709471 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111736076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087009229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094592142 seconds)
  done (took 1.814007765 seconds)
done (took 7.041589992 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090410725 seconds)
  done (took 0.805107021 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.924552764 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.863428502 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112356239 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147676907 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315099198 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171652592 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470863924 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126119973 seconds)
  done (took 11.050631931 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11355862 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.11554414 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100957703 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083564525 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104180622 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086695982 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102816282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102898124 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084872955 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103807416 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085876396 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101064641 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100516114 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082763831 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099484985 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085830873 seconds)
  done (took 2.335309437 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120108376 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118484034 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107545472 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108946129 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087259525 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106187376 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108196331 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089225383 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103208022 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104675709 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091940603 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106069435 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104502909 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080744748 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107134863 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108360192 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086482247 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1065064 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107283295 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091476385 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106656725 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096483034 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087125167 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106817774 seconds)
  done (took 3.267909028 seconds)
done (took 18.178840387 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156391137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109271851 seconds)
  done (took 0.987785743 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093722408 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112726759 seconds)
  done (took 0.934563183 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096266901 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096963892 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122489718 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110593211 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080863189 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098062501 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119890756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081138017 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097869288 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080811514 seconds)
  done (took 1.715884731 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081623906 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108640473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102325146 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095126952 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105550752 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096316464 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088436443 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099646225 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110906756 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076682457 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103232811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114897821 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086917301 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116476792 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10666723 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083770183 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103249127 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0990287 seconds)
  done (took 2.511955268 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078013438 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097540306 seconds)
  done (took 0.904356271 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080391638 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093851553 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081071256 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097795623 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095423534 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077546865 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095273962 seconds)
  done (took 1.348984332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505557704 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137005646 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257181122 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085132677 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120853587 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301169491 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097205295 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084574671 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104192082 seconds)
  done (took 2.481617682 seconds)
done (took 11.613403305 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091899819 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116250368 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113073536 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466252053 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106052917 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096182777 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158813384 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247392612 seconds)
done (took 2.132342145 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148544771 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323930194 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113460331 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068069841 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096832829 seconds)
  done (took 1.340963175 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078166818 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099962676 seconds)
  done (took 0.915549107 seconds)
done (took 3.141788814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080923137 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.13295724 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079932263 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098023145 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078260666 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09989272 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077877213 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097660145 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081661184 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098067066 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098056317 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079329945 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098185321 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080740596 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095135575 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078193334 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097980549 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077829563 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098367747 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078224454 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095900984 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080759916 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095775337 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078340472 seconds)
  done (took 2.930500429 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097677649 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097673026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104326044 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086949155 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102546412 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086948186 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103630028 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098311913 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086842715 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099986399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101727078 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08522601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100828142 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085020551 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100437996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101728272 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085906277 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098846318 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083298158 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10176653 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103605038 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081604031 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103043963 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102668509 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084085661 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101661784 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08352902 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098841541 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103526109 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084987629 seconds)
  done (took 3.599387855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083191883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094052935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078220585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103488908 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077704081 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098192409 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078378123 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097000291 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079891899 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096297226 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080862012 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096539978 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078574114 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09836893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079538488 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100782242 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108753782 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079007109 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096150492 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079152807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099484646 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078267586 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097275752 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078387563 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0960263 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078228093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096419426 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077966329 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096666693 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078326866 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099667303 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081747388 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096097866 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0854277 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100398645 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079682936 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101085773 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078170096 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096609094 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095528341 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078339401 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095719611 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079201094 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102782246 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079003714 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098374998 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079003771 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098581922 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079448067 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099255975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078222137 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096296011 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081112601 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097451178 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100297913 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07885846 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098065755 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078064053 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097859318 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078607683 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095992129 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078322724 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099000888 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079870488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112629511 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085880903 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096570965 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080617739 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097447679 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081164119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098510703 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110423494 seconds)
  done (took 7.212858165 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081706111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106551264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080813652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098660085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077173648 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097515987 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100568411 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079111076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098619003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086242183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097780637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080535857 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09863052 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109690373 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080494446 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099102951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085364505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094584123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079936084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100562094 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0796423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100289405 seconds)
  done (took 2.761789203 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206012121 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103559258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140506028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107155725 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08393307 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107317609 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104278501 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087557285 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103543849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084101387 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102047171 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104093175 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084123948 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102015114 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101786504 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085761312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10369535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086208413 seconds)
  done (took 2.648542207 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090958372 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097494144 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101677115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097195657 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099726305 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085326832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105182504 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109116241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084336981 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099669974 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091896724 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102010869 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102659315 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082812393 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102153919 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082004382 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102061457 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082197987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109725325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105263 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10595729 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092349939 seconds)
  done (took 2.885010159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095192945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099764579 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116213254 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083434935 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096761693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080374047 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107137025 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081456031 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107874093 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101810857 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081910841 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098329768 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088603844 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099241982 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105219182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082102287 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102580435 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082021466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102177987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07763247 seconds)
  done (took 2.643755407 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101332051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100880991 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101181057 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093163637 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101814999 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083599339 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111037202 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1020808 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083353405 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126124726 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101186107 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084330802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111501571 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106619787 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101685834 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092636704 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110559742 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111606793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083767803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.212745739 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124003928 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081587486 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108039893 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099002556 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082636337 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101948181 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102281624 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090078108 seconds)
  done (took 3.666961914 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080032575 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097665891 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079703789 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098377063 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079024859 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098620686 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079616814 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097852199 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082554946 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097723309 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082603419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100649979 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08195455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102939519 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082217233 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100476078 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082208375 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098397858 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07993184 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098493904 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082272022 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101243315 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082229431 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098563831 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079963302 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100924319 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079441298 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098293709 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081845677 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097900299 seconds)
  done (took 3.461977312 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089732576 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104891125 seconds)
  done (took 0.953246262 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077756302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113716277 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079410294 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105296851 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104961471 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083820947 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109167856 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087180226 seconds)
  done (took 1.51839352 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095143113 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108813776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08246012 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113572259 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111557357 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096969893 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16653748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102391143 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088330609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099494061 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114332562 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081728935 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107130025 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08316082 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107257133 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089371649 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099027098 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088629786 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104887876 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099764013 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084928068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112020034 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085651947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09827961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084167932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112851495 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110351194 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084059944 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104553763 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110851719 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088746122 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095477685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083026296 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101606869 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080924519 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110688903 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113766604 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085484822 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110146444 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084369806 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11269417 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097008304 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088022507 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107723631 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093261404 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10204173 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084812283 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097460641 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098638182 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085321289 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096730564 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082998018 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096062025 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091301139 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105587822 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113942946 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08143126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103123513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085713389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103969819 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089739215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103842991 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085739692 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101491926 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108868539 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087201034 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109444336 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078644323 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095932651 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081870675 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109609423 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124778639 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091354457 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102461553 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084001125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09969128 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103551038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085145979 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108901731 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091691118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101668077 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108420957 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090034801 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100091859 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084941344 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109817535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100525167 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085188153 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099985727 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098326916 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101570093 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08112957 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099621214 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110847236 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087536732 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103199399 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081310956 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10961689 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080913047 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102970769 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084972642 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102765687 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111065852 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089661171 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108717668 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109522042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090725006 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102442599 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086332274 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09890647 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084546285 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104709924 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10795685 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077055488 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105270597 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08616216 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103454521 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090666549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100235003 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084015469 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109335872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108231129 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082399278 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098511859 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086628765 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102027036 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087447673 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108750108 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099442476 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077757007 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095218136 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08625113 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100859188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087700813 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107112667 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103711876 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076088852 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097084564 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085931818 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106832401 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098959298 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081984047 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103175738 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.081890837 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09858666 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086645589 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101411981 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080404907 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103103267 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100687247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077227359 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103240819 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084641099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097958286 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0855657 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103412255 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101609467 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082822114 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09818874 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087091801 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100658341 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080729 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099566664 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079844695 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108158662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101135137 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076967154 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097324588 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088921187 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096893175 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081088216 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098326414 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102200755 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082902937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097306208 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08100681 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100750524 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093069098 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104112114 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100426949 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087116986 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109405667 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08175996 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101827455 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098810329 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082274454 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100773459 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087951804 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10591044 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105141678 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084327207 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096870326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087130036 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106880127 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080846551 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097534276 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080420779 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102655904 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105763342 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085790263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100050028 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079478711 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100350983 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10357317 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08444382 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099525021 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080373061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104179402 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08126859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106765691 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100990533 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091076425 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102972025 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076180125 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103662938 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097567355 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087751783 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09490686 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079210202 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098755281 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082776485 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100322718 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087540814 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096761674 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091330199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110107648 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101981257 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081736269 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100485599 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090552751 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10182102 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085959935 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102688781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105137226 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094340766 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098949261 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085021919 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109642777 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.1002686 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076325234 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105349889 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081099485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099385739 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081269826 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097371163 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084922947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109226531 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103727964 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076003702 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102523418 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080460068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099709349 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077090168 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108323853 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104764906 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083556849 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109395126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083550426 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103247773 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086715466 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102032097 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102377389 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083995943 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104853217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084511632 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105488419 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083280938 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104714541 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08311693 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101552585 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107104486 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08354106 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101251974 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088788392 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10064241 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082420841 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10391572 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101370079 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082518445 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101126777 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081510515 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103799625 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083396048 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100519924 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084931551 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09543659 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088979713 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100556943 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107652963 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082035618 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097200748 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087215552 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103777043 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105248576 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083183815 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101566358 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082847626 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100525173 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085210533 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108909737 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097597969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090204566 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105645069 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083409185 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103338712 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081847335 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101344602 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080731104 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10251002 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100850108 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082093197 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100139552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087132501 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10299562 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081927136 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102033893 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101480691 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082418591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101909796 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07638301 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099485919 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081432366 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100714031 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0906168 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101745547 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103360041 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081221688 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101310403 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.080713921 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097272419 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090201219 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110510923 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101716801 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09059276 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10036143 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084326107 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110249271 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095313947 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08084649 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099004972 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080384163 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108592051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083241359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11021688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08192183 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100471056 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078756903 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101464348 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098706748 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076930012 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098681155 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084994063 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103070024 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080738162 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101387221 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084579102 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101856688 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107587061 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081528915 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102114781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082544605 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097575002 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081626539 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099543797 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085260074 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10211061 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097794845 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079630166 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099971627 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083158495 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101140389 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08196102 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110771044 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08919504 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100113063 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103474493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086103662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09506269 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085719713 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101819832 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081864116 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.1004808 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085901956 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105197077 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10196576 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08917374 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100508977 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082667932 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10159138 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080614653 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10123132 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100245504 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082566433 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100826827 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083649826 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110603776 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081079699 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105024322 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084034045 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103429935 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104883516 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08351118 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102812131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090360627 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104688756 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083595299 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107400182 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104238459 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085898496 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101650638 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083148738 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107631667 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100038723 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090824516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100508905 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083110419 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102152044 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08001622 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101831191 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081879981 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100235745 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104507962 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083638548 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100258741 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081585948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099025809 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084600444 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105353457 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109072534 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084816561 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103853099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077743174 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098168068 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084165962 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100385591 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083920614 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105431627 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107944575 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085280443 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102931446 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081272098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107764704 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088580885 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107633951 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079833332 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106279988 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102208051 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08523625 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102337918 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082781421 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105168764 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090292516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103813344 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100607642 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090813142 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105494774 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08457764 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104430269 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082990544 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102133339 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096619939 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084007687 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103346227 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089190387 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104531725 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082480533 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110845695 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100403924 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083278113 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105962429 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082918643 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108857329 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077777303 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102234536 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102307583 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084667929 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097071746 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083006345 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099276931 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085436848 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10063256 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078537692 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11094497 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108895042 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085449522 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100765475 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082229038 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097313265 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078276073 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100984223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084407078 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104323512 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110739369 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082595988 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100924921 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078277157 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102368065 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087051711 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10626454 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0798646 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097793417 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080921643 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104613943 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108734746 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081404763 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101054424 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086608531 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103937599 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081229534 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105787838 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079227498 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105886715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112395539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084608678 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103911399 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09066344 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113479382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104643825 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080163185 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10387148 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085851925 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102765571 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085300545 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104554951 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115534429 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08570444 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101206915 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082566987 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105204277 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082223008 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109609671 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103897077 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08339198 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106581728 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085656248 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112946002 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10457979 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088458411 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104444274 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084995208 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101190047 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082846028 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101195303 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081682075 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105570577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103037645 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087252048 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111239155 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082309629 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113427629 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109474523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088364806 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099503948 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082903708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102504789 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079509348 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105225589 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081735886 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101625749 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081045137 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101754595 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103144808 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08857871 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104603361 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084314812 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102285303 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077331464 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104974431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088087059 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102881717 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098999258 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084307818 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103418923 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089432384 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107499943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084110009 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105527556 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08439858 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10305434 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097765009 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089776779 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10079224 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085924222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101569632 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083806855 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104698409 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086373285 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109084229 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103899316 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086024082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116225742 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085345846 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100448214 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099283485 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08892144 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100543665 seconds)
  done (took 57.567993462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144405342 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079908345 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09771836 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078430697 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11222439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097973725 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078611082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098723131 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07948236 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101265163 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079325712 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09947055 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107781942 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12299519 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092188972 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104148734 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097776658 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07980994 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097852569 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079380602 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108278523 seconds)
  done (took 2.841062495 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103678725 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116025044 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113342433 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117947026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089274551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115106185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113075921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114739689 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09771995 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109917971 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117474807 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114276446 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090314278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110091027 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109616776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092333222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118677598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109154114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116004008 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094429257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112421575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11320816 seconds)
  done (took 3.193595766 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084270918 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101377488 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084643769 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098246304 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082556432 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098324632 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08758619 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102542914 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086638196 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101140504 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081746167 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.1011082 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102908389 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078126049 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101554894 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081320438 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149451873 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106727458 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082272336 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103712579 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097309293 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085489691 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097970606 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079024099 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103594066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08905162 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105067158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081781911 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103393563 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081539629 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102876096 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080227693 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105244849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101926887 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081908258 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101280002 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083042182 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10214416 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078583488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100361639 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083458761 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098113086 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08340327 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104913833 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081068906 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10203587 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083877693 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102877568 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097151149 seconds)
  done (took 5.422325744 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103726227 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16120057 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084898235 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143555726 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119653321 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112646721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086680831 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142054216 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103132941 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081727194 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122736306 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119197585 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103690316 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09132974 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111064503 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106414411 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088963294 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105761287 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090776958 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107406699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111160423 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093079946 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122847493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120567768 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109378895 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084218432 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105861209 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111816916 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098302265 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112780213 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110345308 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090422595 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1200515 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10504697 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083237513 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107451041 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11958714 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083605259 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105971075 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100534761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086212232 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108410841 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109531512 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100924009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104036944 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107460571 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083422831 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101987121 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116345095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086204078 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112297761 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118768869 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087916162 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104679117 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108725406 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119057425 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083852511 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102010661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087089274 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118188874 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101983016 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08969906 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120066732 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10694355 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092359869 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118424004 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108440706 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106867448 seconds)
  done (took 8.122697018 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0925704 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110204357 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118451617 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120559918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089897928 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11056813 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109404945 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089914114 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110021833 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11533846 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109203257 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132151213 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085914615 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114134528 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110653292 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089913163 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110122348 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110154471 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089100844 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110514115 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109554052 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11960993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090205055 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119431845 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14074135 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104753087 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090015923 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11253902 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119904574 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10962721 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122349155 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090585984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111651788 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119168401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122041092 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090897671 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104735675 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112364434 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089897509 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112011518 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10445407 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099473038 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110109038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105055917 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090691366 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109995098 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119407378 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123441408 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113568346 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095312132 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109820025 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119058191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109837702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090572938 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118659383 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146111632 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119408549 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119612716 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110386108 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09854007 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119722246 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126936818 seconds)
  done (took 7.596608394 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106433576 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114207948 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116936967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099200393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081681777 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108202435 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082270165 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101487345 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113182479 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093736482 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115429176 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10729057 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091266792 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11623006 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108291556 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111282874 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08801587 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107715555 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113532708 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107700821 seconds)
  done (took 2.903387624 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092226394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123217635 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084544087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110481294 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107636638 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090104306 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106846609 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106928573 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085733528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107078106 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095684428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115072551 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104646492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090345423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11500576 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110035413 seconds)
  done (took 2.465123125 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094680632 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116051995 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118580873 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083822072 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102997242 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080142085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104765395 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099770801 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081120768 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120301688 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083682007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108912297 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106309322 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081943072 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101643621 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086985828 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101975756 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082020211 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105733221 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118471825 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094877215 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103091184 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104699597 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085931486 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104090825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089285699 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105382957 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102360812 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082348286 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104283641 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084512673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113960699 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.1011101 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082994213 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103060308 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082061221 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105929304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085151848 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110684614 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105768177 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084438078 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106906428 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086640975 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109413211 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08004212 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105493112 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100309332 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090789518 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102919057 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084128291 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104543046 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105573904 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085899624 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115859424 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087672527 seconds)
  done (took 6.205463696 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097629153 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108609615 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079487191 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103989815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086755147 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107125854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107363518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087896299 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106687276 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082135058 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106739382 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089201968 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106049846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10802993 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086643188 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108181203 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07984026 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105833864 seconds)
  done (took 2.588040542 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089549593 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104311577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091394153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104626121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083931186 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108309413 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07948066 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104734631 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102392842 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084588141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104020212 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087043624 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102564975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086405677 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105028663 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083506984 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107537357 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102163601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08479113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10035413 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087274243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102910515 seconds)
  done (took 2.935068774 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116969557 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123915337 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091942937 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227953778 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102813824 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133189334 seconds)
  done (took 1.625458898 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108112536 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119640857 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105431007 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106623264 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113778662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10685945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086342498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106945216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11650943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099865133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108041993 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116529226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117111648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095475423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113677978 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114732559 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106659569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086076431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105705175 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127799242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08731116 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118968892 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106829886 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086698185 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110108974 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117167825 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116211882 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121595147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086825477 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117772756 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113378213 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086804987 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117017828 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122111951 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108602145 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096524391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107130608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127481289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113177984 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095255912 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108420043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114296882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096943552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113421397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117447364 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10749181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092249727 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106981373 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107642442 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134340785 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09323793 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116340832 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114547831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117224241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116955907 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133717939 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100254686 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116978926 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114881574 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121436523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115737913 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092948967 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116130386 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121968664 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113574457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116034879 seconds)
  done (took 8.07543167 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101214799 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125137571 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107242806 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121516085 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095493837 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107575413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107257905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08643218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10809689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105948277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150789751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087005418 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117106611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116557147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107102704 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08641354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108134247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115655508 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086431619 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133889065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107887587 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116182152 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116692581 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096372822 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121612413 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113938131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106802172 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088074636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107762714 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106874035 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092830344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108128807 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116617211 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085889041 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116997077 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10841991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086415682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113301819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107740576 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113125442 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09639713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126764368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108713489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107442526 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100437591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10768499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107621325 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085955496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108156714 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106044413 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100713986 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121376148 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122434761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116625688 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107216373 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088655727 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11185636 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110166743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088980838 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117834822 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117151633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107159769 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134573584 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087021594 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107507301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116568019 seconds)
  done (took 7.956991633 seconds)
done (took 154.518741762 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097640289 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137381616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098239238 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170803392 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105740453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117974167 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137160897 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096570308 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105389686 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085139821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106023915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086207292 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171609523 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084476685 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106475977 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107542778 seconds)
  done (took 2.652623494 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199353228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254430666 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101646212 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105296299 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087970555 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110034081 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103798163 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090202713 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109244665 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084940102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109967023 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0857088 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106625411 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08559046 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111141243 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087209402 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105270118 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087056884 seconds)
  done (took 2.868528593 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111482473 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145868543 seconds)
  done (took 1.105609918 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117085173 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179075847 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321728721 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154188099 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10613789 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12695249 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155432103 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12943434 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19579724 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12251586 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121767248 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095973004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139253507 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114641642 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093484473 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119410881 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140662569 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091658368 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114957559 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115066713 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115447689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106222741 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114140375 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092421792 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18142535 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119354883 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084103625 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109024282 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115368848 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094566256 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115964111 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124440421 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.0966447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174021799 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101059766 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176114859 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099209625 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111452091 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113606095 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089963228 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117970941 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117691674 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103186524 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120434793 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083155689 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11730503 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10747031 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086710776 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118839644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122779825 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095090244 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116888402 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154727848 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117468402 seconds)
  done (took 7.512985765 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791493254 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155184005 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089177068 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877488119 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13800106 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102874728 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777400302 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134711777 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232623907 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757523902 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133821255 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121909623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224816397 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237133146 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954376604 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310455514 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668303844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100718457 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153236782 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152303543 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118314437 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136563508 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130236193 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452853574 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094437608 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112094996 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116303328 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098472676 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157804956 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127020989 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113362197 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177033032 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269456605 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181950019 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115771987 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088979181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115257299 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168244119 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26671321 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213529748 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179062896 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086577385 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115002443 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125792263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113581594 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114022115 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168525406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.200138111 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17587568 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094746786 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126081657 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12369403 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125511155 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166118503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120298084 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297159101 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309195555 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115012697 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121114456 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105100353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263367825 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122157908 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221363368 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115692108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210929657 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.116628012 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781848888 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193469103 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090606528 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122464713 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123075348 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09896701 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126597059 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175046146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397023317 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126831764 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095468108 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11601814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206866777 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130194385 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115537522 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165535188 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118471176 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104646896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129825005 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127581801 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173825969 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.236741699 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129652848 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125100137 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098472654 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129806787 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120982709 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219177867 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221680449 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162019913 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206241792 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12567798 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165410368 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189251662 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097343859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194687076 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097424382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126234132 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121759346 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213243238 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146520769 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103263428 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120945334 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124505553 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154402009 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131836455 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099939259 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195176451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488159028 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171730401 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114931253 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.132937555 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099383283 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163876736 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118920641 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261408196 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120547125 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168730435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118738436 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086671424 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123596991 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166583983 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123630975 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124174239 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101537666 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122592863 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234068182 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215644387 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123289009 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219141902 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184695368 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118249126 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170625899 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121945457 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166556198 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120405885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122653015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095400793 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802166407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122623723 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09798242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116350691 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198470685 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110491081 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101936288 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128501155 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107940983 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76459471 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126525734 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120214541 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101102551 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118529223 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121447247 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095691785 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117256123 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166886635 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233346139 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125280232 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1240361 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107435485 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.186500299 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097947136 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.129599429 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128930875 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127235489 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100119395 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120244453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129974179 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169032679 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164169412 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226422601 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596409034 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095858063 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.131546256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234660701 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094450433 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29465867 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120565736 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230891268 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169286984 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123890178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308789732 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166725169 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201200203 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133985349 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173642528 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086856712 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118448364 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163326635 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113726441 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119589208 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162878953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125127159 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101577728 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96043428 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112214349 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225692069 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107877866 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169897954 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094089256 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123740479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298714366 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111115293 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106598645 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189282065 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093326429 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130255269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720525997 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126435905 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12634501 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122504844 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227376898 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169752963 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102263193 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126637127 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126699343 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169137096 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.2143159 seconds)
  done (took 44.450358938 seconds)
done (took 59.4329505 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275686143 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212169075 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257657392 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167432007 seconds)
  done (took 1.859822081 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168658929 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147276569 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118995423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107485941 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153561971 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083875639 seconds)
  done (took 1.653223208 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.349633672 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267626486 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236605131 seconds)
  done (took 1.731630419 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283931459 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253640858 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353225694 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415633715 seconds)
  done (took 2.301692019 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207530352 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130547595 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110230918 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103202038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195005825 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247677786 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140658796 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200615327 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121193414 seconds)
  done (took 2.375231534 seconds)
done (took 10.799261723 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.131715069 seconds)
    (2/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116627839 seconds)
    (3/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143368547 seconds)
    (4/286) benchmarking ("sort", Int8, true)...
    done (took 0.217522034 seconds)
    (5/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.223960236 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101840711 seconds)
    (7/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117546224 seconds)
    (8/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.259074677 seconds)
    (9/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101649795 seconds)
    (10/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134428388 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125631708 seconds)
    (12/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.250455296 seconds)
    (13/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.223588123 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09805118 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221749083 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117965314 seconds)
    (17/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095517847 seconds)
    (18/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.215890285 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136115427 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115861801 seconds)
    (21/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.216419283 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.216621637 seconds)
    (23/286) benchmarking ("sort", Float64, true)...
    done (took 0.228706148 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198866916 seconds)
    (25/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123024979 seconds)
    (26/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171677151 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095711315 seconds)
    (28/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140068731 seconds)
    (29/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115368402 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.17502087 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.147733289 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134583242 seconds)
    (33/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090680308 seconds)
    (34/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.226941929 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.221790273 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115222305 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116410735 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150243465 seconds)
    (39/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184024192 seconds)
    (40/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116567697 seconds)
    (41/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089804279 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112916113 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.216305425 seconds)
    (44/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.177015106 seconds)
    (45/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217830128 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138353961 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165100177 seconds)
    (48/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093305733 seconds)
    (49/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.219766921 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120130094 seconds)
    (51/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105265153 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176279728 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122043391 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10843205 seconds)
    (55/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179525785 seconds)
    (56/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.154229164 seconds)
    (57/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.077167636 seconds)
    (58/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111946944 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087697684 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.173663927 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085669378 seconds)
    (62/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117902573 seconds)
    (63/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.185778989 seconds)
    (64/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170662022 seconds)
    (65/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.128226534 seconds)
    (66/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116474024 seconds)
    (67/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156214799 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107901706 seconds)
    (69/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.097869155 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107838283 seconds)
    (71/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086881078 seconds)
    (72/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228438186 seconds)
    (73/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189528253 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108947683 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159543322 seconds)
    (76/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159000885 seconds)
    (77/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.183291158 seconds)
    (78/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.141921732 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.086160044 seconds)
    (80/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118624623 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111132809 seconds)
    (82/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090199564 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095598161 seconds)
    (84/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.188697426 seconds)
    (85/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115184934 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147963035 seconds)
    (87/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.098729349 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.219258273 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110692971 seconds)
    (90/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172842268 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.183809943 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066395165 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136515257 seconds)
    (94/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.119232828 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089107452 seconds)
    (96/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085512554 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108093208 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092883301 seconds)
    (99/286) benchmarking ("sort", BigInt, false)...
    done (took 0.217760827 seconds)
    (100/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137817269 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.136819762 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066520833 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118975132 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10964163 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171671266 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115327297 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09545635 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135767183 seconds)
    (109/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157272893 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086894672 seconds)
    (111/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090290313 seconds)
    (112/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077932717 seconds)
    (113/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.195187985 seconds)
    (114/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07535589 seconds)
    (115/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.123435909 seconds)
    (116/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075354963 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066845605 seconds)
    (118/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152364937 seconds)
    (119/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088892326 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107692485 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.179274224 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09470837 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116704005 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066565085 seconds)
    (125/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116388727 seconds)
    (126/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095458828 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180445277 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11436286 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116067584 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11710175 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085197965 seconds)
    (132/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171587592 seconds)
    (133/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114858882 seconds)
    (134/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065631442 seconds)
    (135/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18500672 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093991394 seconds)
    (137/286) benchmarking ("sort", Int8, false)...
    done (took 0.18738705 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.185422229 seconds)
    (139/286) benchmarking ("sort", BigInt, true)...
    done (took 0.22943393 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115520541 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164088665 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085276573 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118463676 seconds)
    (144/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097764862 seconds)
    (145/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090646289 seconds)
    (146/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087336655 seconds)
    (147/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1510835 seconds)
    (148/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095803638 seconds)
    (149/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.089930426 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085420252 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117695979 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096080619 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090131869 seconds)
    (154/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115180813 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089318194 seconds)
    (156/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111965687 seconds)
    (157/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.153036424 seconds)
    (158/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.118470564 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123389363 seconds)
    (160/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066259601 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108907813 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06807024 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.157103027 seconds)
    (164/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097694677 seconds)
    (165/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111607968 seconds)
    (166/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086783299 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091294227 seconds)
    (168/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067514475 seconds)
    (169/286) benchmarking ("sort", Float64, false)...
    done (took 0.170555409 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067478933 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114866408 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.150137649 seconds)
    (173/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117571618 seconds)
    (174/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08189107 seconds)
    (175/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134630377 seconds)
    (176/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171952482 seconds)
    (177/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094219345 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109524589 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092580115 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090133032 seconds)
    (181/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067877289 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111123094 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086153759 seconds)
    (184/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12623852 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094730257 seconds)
    (186/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171167816 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.087267514 seconds)
    (188/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12359421 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116353019 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085381737 seconds)
    (191/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066310467 seconds)
    (192/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092248749 seconds)
    (193/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075322797 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110096571 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066368131 seconds)
    (196/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066624242 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108729289 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.219444398 seconds)
    (199/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06709182 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107926082 seconds)
    (201/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067751079 seconds)
    (202/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067183556 seconds)
    (203/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.093503982 seconds)
    (204/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065938047 seconds)
    (205/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066179525 seconds)
    (206/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089779333 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085573036 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118569172 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.317954996 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091279953 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086514463 seconds)
    (212/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122350505 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110189246 seconds)
    (214/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.150940665 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066642059 seconds)
    (216/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122480709 seconds)
    (217/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066298851 seconds)
    (218/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.099859254 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091330455 seconds)
    (220/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.088780643 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086883891 seconds)
    (222/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066252461 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108938692 seconds)
    (224/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067135045 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114808303 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093312959 seconds)
    (227/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.089857831 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.163845589 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134416895 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120539255 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110948644 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112863969 seconds)
    (233/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066644095 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108821633 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066671945 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067013286 seconds)
    (237/286) benchmarking ("sort", Float32, true)...
    done (took 0.229527283 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090071687 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067324341 seconds)
    (240/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108894559 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104966435 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090184197 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08590707 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109135697 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085349164 seconds)
    (246/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116214576 seconds)
    (247/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.155679121 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115893763 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066486262 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119431003 seconds)
    (251/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093935532 seconds)
    (252/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111598749 seconds)
    (253/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093154278 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111870431 seconds)
    (255/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109883226 seconds)
    (256/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066810579 seconds)
    (257/286) benchmarking ("sort", Float32, false)...
    done (took 0.173925503 seconds)
    (258/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067725083 seconds)
    (259/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067171782 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108889137 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085375328 seconds)
    (262/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16166327 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117456694 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.0846504 seconds)
    (265/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111204885 seconds)
    (266/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086422409 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.1079418 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08770651 seconds)
    (269/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065767008 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117510945 seconds)
    (271/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110542868 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091271747 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066899227 seconds)
    (274/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092255545 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134005461 seconds)
    (276/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093931642 seconds)
    (277/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132483936 seconds)
    (278/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090618737 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110022144 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091937415 seconds)
    (281/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090829655 seconds)
    (282/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067252487 seconds)
    (283/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123502579 seconds)
    (284/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066658277 seconds)
    (285/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115860866 seconds)
    (286/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067270625 seconds)
  done (took 35.803913007 seconds)
done (took 36.685626053 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099515092 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147173196 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096185216 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134520531 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123032225 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090638429 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117532163 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09687086 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122711523 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124540457 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097217207 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092099707 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095667857 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118851833 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095638961 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136821505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122843922 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092588286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117472274 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085081406 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118978975 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085673128 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111214849 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069193008 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12018233 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093350207 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115603742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120018167 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085440319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109326957 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089165371 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116652415 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085823693 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123012207 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091662695 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117877439 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095390683 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118678016 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111040922 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085507467 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11682915 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085269883 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115609735 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093685403 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114957246 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091996053 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117733277 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097801721 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137696906 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115131212 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09454853 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121603613 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09541785 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11676785 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089415257 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117752352 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090562704 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137993101 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119326531 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091560984 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119569408 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093874076 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114817244 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093937433 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117191998 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119530689 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097592948 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114641501 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095862511 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115457191 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08641305 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119584271 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089387406 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109062327 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094341689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119289655 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085006485 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115124607 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116828909 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091135883 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108592752 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08883456 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111358491 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09285061 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111483585 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069147378 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.1129992 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092921056 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108949163 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095287003 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11555562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093719388 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.1115862 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097373467 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109633611 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092440071 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109696667 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086586141 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112215323 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089977157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109956627 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088697002 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119307144 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087635782 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116189129 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122298239 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086049335 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116263283 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086194551 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1098119 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100885219 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121113999 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086821942 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115288095 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085251486 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117497991 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085145534 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109533352 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086111445 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109273628 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091913665 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109527874 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089008457 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117640179 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124383894 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085865504 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113524093 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088943575 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109806288 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091639458 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109705733 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087024839 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111943754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077178445 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112377333 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086274388 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118033661 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088972523 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118640263 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088367001 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119530481 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090553268 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116540976 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092147415 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109675175 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073960268 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115146653 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089312596 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112285893 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.085890505 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112637336 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086080139 seconds)
done (took 16.77374556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086264881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183064692 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149554761 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142466048 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105471665 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110848031 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12133823 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116790596 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112594329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141132013 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108803122 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131007497 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147512336 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086238829 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111117061 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090534485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113224292 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101418956 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144888806 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131808069 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163379534 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086019372 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145017083 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134022239 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120424829 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113327261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111444383 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091097252 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11447604 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101692678 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132018954 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114738081 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087262898 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132935065 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103508178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119108837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08725003 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11755634 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086097405 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111422678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140046498 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132736223 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092175397 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116621716 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090783459 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113546896 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089053179 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120507134 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097403346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115773357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12575715 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155142075 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090318043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12107154 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085740898 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12161761 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120518134 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089127112 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11143868 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089633586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110993678 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0904654 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125617526 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140380775 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090607941 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121512196 seconds)
  done (took 8.538921875 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103726694 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139434393 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104483447 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130317487 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111013091 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087794364 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112071151 seconds)
  done (took 1.730478941 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088021965 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133659696 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109766331 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135450658 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131643878 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110917417 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123113629 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08803742 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130126844 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088793627 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132693138 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149825493 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089394079 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120610251 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13669937 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08762721 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136140064 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088228447 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115265397 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111454759 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116033367 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134069216 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089766372 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112440435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102485217 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113356252 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160631276 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093370849 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114207542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091178827 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111669132 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150113233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10125025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123919267 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087940599 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129033909 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127741325 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085661918 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.124993343 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093583031 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.1275849 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088824072 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114311584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086291638 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118674971 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098059392 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117332989 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089245763 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115855071 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132496639 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088886434 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143950936 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088543135 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117768858 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089667595 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118900696 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09735071 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113252836 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132793249 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089605248 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13017094 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104455162 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127032228 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129172913 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090488954 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126891017 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102323245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116148506 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090440633 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116501616 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104279808 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111834638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089986322 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123835702 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115363739 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11111008 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136168037 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089668301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124058685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087851439 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113321041 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113292134 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11094843 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117820038 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088724551 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11710497 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091048104 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111567762 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087217707 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117155131 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086924039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117363066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091284913 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114499393 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090712178 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129415556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115363531 seconds)
  done (took 11.727986292 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089238219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114594045 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090913018 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114101788 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090632695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114165484 seconds)
  done (took 1.566902611 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113563378 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116873248 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103358607 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120424381 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155296412 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103362164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128481636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12274428 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10695388 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126284423 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12871852 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104564228 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134757929 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120545395 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103116454 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11933232 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103228701 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124101937 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126084912 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095823963 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135522994 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120811034 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09580758 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131366216 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118454646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094338754 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125314601 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101704952 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12588063 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122536103 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095305473 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120140217 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095001932 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123173226 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129513305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09521759 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12014049 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118653808 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099206916 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117088626 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103030896 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121112645 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126503079 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09289391 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122481888 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120647912 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092474264 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124304662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102869526 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118406246 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118667291 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093976452 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117468553 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093892838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120604707 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122894191 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094347103 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130567649 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122877605 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094829781 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120076076 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093002297 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123366737 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118226547 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103549504 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119147369 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120306661 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09548065 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120946418 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095844476 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118828582 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091967317 seconds)
  done (took 9.155464721 seconds)
done (took 33.659569374 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688007793 seconds)
  done (took 1.640645343 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841008688 seconds)
  done (took 1.794426846 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.015318974 seconds)
  done (took 17.999233638 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490867896 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.345616834 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992674468 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178041254 seconds)
  done (took 5.961663591 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.946083635 seconds)
  done (took 1.920083606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280617423 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233904248 seconds)
  done (took 1.473507368 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.762801842 seconds)
  done (took 1.732598489 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.357135787 seconds)
  done (took 2.316684138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323268517 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183139652 seconds)
  done (took 1.474292178 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548021986 seconds)
  done (took 1.516759052 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.349981785 seconds)
  done (took 11.325616169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267104225 seconds)
  done (took 1.246801391 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300842412 seconds)
  done (took 1.270296216 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.551641879 seconds)
  done (took 4.523091102 seconds)
done (took 57.162102504 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097427423 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126275982 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10137421 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123164991 seconds)
  done (took 1.41345018 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09980679 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120931225 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099509759 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120099015 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124919656 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095126995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122098013 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099910731 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120204857 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095645436 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120091375 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11899837 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097808295 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12327617 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092778709 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122552372 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098530119 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120643613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122795063 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095147468 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118155854 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096317149 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123197228 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09321799 seconds)
  done (took 3.616399395 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100231303 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118330982 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.094994722 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118125035 seconds)
  done (took 1.41194454 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099020192 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130311589 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1044896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124725212 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129518977 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104979717 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117392265 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091847385 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118894146 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098611526 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114996063 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137336594 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105215125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124418648 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101871921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113140487 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090273086 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129929682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124616962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100295729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117584042 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098348588 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114996953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107771143 seconds)
  done (took 3.677726229 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169661779 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126418986 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13749798 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094142415 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159012887 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139894308 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087423443 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140672848 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086809737 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130550744 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117426604 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132762499 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129239288 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086709328 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113464535 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087147771 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128060359 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128117958 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090663436 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12697089 seconds)
  done (took 3.396449806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097165124 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117168644 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087184594 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115848363 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098484468 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120493972 seconds)
  done (took 1.618346062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090745372 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11393582 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089722549 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113962708 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093375476 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113736677 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087757205 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11401071 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089125988 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114129553 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08859755 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113114706 seconds)
  done (took 2.203665931 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498796432 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118932325 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118751012 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089689507 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121120535 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088680562 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128387692 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091517482 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139973108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088402589 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115835955 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090361577 seconds)
  done (took 2.671713231 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233940607 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124959324 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283441088 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366180903 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155152739 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163519395 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276774179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161867385 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195591321 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149392921 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229537278 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194168098 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151402294 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190048455 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137840645 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14506835 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187376023 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249594179 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15215682 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209168747 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205211998 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165991216 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179416171 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150804287 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111687628 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192853567 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095696832 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130443385 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206213574 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204648355 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187930761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160290219 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146579466 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235248236 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247967259 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194621288 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277486481 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133552866 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142213764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165064496 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261290001 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13857012 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231327995 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154123389 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103331461 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219012123 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16420844 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175640681 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145056111 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137936487 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196896649 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239250245 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192820793 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136885884 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297691036 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147291567 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155121495 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187770387 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250261783 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22415475 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186369716 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119645211 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186012441 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188505983 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208656044 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.123934081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206934263 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146422662 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18041529 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187125437 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164904494 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203119057 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177806183 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13689901 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167992364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171222927 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170661448 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255579929 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185242438 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120781551 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168365326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148125294 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10291924 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193649509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124296255 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211960848 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142739932 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162701651 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207284039 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158110999 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159858716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217964965 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182945252 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147147379 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08323412 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152974474 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153930545 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175813442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138290593 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157867024 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155532796 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129079855 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16806701 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096637084 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183475831 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117866338 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173051603 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183007662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126824658 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161491264 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152035422 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148852651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176674048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199905759 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138840945 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132161416 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207035171 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176418009 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140888754 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175785429 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227297948 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116087893 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147854414 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224309973 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21508998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139772408 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200230346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152728845 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134835744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1324948 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180969571 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155330336 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160197309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131443945 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182519536 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204150068 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12470363 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137673071 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19583121 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133768761 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13205833 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153149305 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11957582 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138351389 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142717609 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143673125 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174282189 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179813614 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154277246 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166517502 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148936666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249066928 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138935492 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123046418 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147668582 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120231722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191743922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222436552 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102730157 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230951249 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16938189 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197569529 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166928882 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13364668 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176160503 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129425188 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092230687 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21874554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166984921 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161225878 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195165766 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220523297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179827334 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180936098 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164057169 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199644377 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.136144106 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155259663 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136637426 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159550139 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157819709 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122323391 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111046336 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13482595 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147859176 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141256933 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105365521 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223947832 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16973356 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213751126 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130923067 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14754488 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179276867 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127541306 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175137681 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204180374 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117698109 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225287959 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192188533 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183848437 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143568025 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226020055 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092493306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125135691 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14029858 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1691744 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105818006 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133963323 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161622551 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179332225 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20472656 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169515108 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205097425 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198305985 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188617565 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094302394 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167661463 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182840397 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175154127 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179132151 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139573876 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149419768 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175073126 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154042896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2531378 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16855857 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174928032 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203720468 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150662248 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131701429 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149126977 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175953282 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152288307 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174662541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14534368 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137418884 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15970344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102872516 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157653056 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2108698 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161562893 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185962913 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148743319 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183739437 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127416038 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160589778 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159516108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164432756 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.079863637 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200226243 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200881761 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146994506 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165700278 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186789762 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131315043 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305879802 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233525525 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194246784 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136508812 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153774423 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159410392 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161070958 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169858806 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177040813 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157241387 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186903984 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157974338 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134364806 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109836507 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149300109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151457875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131365161 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146467636 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176418593 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136031881 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187885052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153656554 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158053944 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17157993 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149524679 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115159286 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149321816 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239734154 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183144177 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235829128 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123090959 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203358533 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204408413 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125552887 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1027674 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133283863 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176503082 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134652965 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190927283 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212307831 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197582663 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178842216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202882361 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112402853 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119871756 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155516602 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166850768 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201106539 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147907941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146229629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228808854 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109550619 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131429345 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165365636 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28600185 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145343643 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19468809 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10672489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276482576 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098974294 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130925149 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161914866 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232620683 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107819499 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177223073 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170327903 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159046717 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162642343 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148397023 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19062137 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23583018 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198444761 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182306127 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133380238 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156748897 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174264936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217423941 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153809248 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110023904 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228117571 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194425004 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193742587 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141088485 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166592456 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167054029 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15746613 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211174638 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107064708 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232384112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105797336 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217441705 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152871842 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136314867 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174749342 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187196256 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13976183 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185586382 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207520497 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106352176 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132996908 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165383865 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176477466 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152546835 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128040937 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182108321 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1245852 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194335998 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258643238 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13274908 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126839005 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145704253 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135478247 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153553913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157361306 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137320357 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138579876 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225860535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.104888868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218222614 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19985439 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196171817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173894461 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144171609 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693452943 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1013432 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220279077 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118566689 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233201671 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150616829 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17227223 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157382545 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166797908 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192076935 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159216689 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230269449 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216420271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177588798 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130171534 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15570334 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154359383 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115660377 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151746462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166259637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158014312 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145190879 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177603313 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161825806 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134430773 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138387521 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197559686 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148813696 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183798871 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179102648 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139010191 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171786625 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211061183 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104077128 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.205666765 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20756304 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141333452 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147609029 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132243899 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.119743404 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260419693 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124590356 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187352395 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181444217 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158042399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166548974 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145726891 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21884475 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156923728 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183808938 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14140823 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157671869 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156271236 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136780308 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102001291 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155683859 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1656649 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149304338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158171822 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163476888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19440113 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094410826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142788419 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307046856 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175256249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214292445 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135233777 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134302696 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132256847 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148979436 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.203832902 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177772292 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107498712 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134547651 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13694183 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.127131182 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136335508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154123521 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192604293 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164266497 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205340046 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13716948 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279228361 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139236595 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154201241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088409256 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131174628 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148405873 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115691446 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15415628 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219260241 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258376467 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121405009 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132695054 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148120017 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096492633 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136438347 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163914999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164681271 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175589919 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144400174 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10755117 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154268156 seconds)
  done (took 81.73530831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161205297 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130786109 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14555123 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201079276 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174771861 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268577808 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208880795 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25136013 seconds)
  done (took 2.610264264 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093156915 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144337078 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157109375 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131627567 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091013304 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11903366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339661701 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131561114 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.1150596 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120450405 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17213222 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092751887 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545461633 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089788021 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119568557 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106578968 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091179488 seconds)
  done (took 3.722824893 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.635543394 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.575976833 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.077343247 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195228379 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.826530487 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.093655344 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71979225 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.168979267 seconds)
  done (took 61.36667297 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114198708 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135271966 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121471509 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151545736 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140066506 seconds)
  done (took 1.73508664 seconds)
done (took 172.146522207 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096007964 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126238781 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096225402 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129229025 seconds)
  done (took 1.513704132 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093574034 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06968982 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099621248 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073419454 seconds)
  done (took 1.411747957 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187246144 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166502191 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40439308 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070446853 seconds)
  done (took 1.580522771 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113287279 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131919685 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104323287 seconds)
  done (took 1.431695643 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105017516 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128544632 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10203581 seconds)
  done (took 1.414933257 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10424467 seconds)
  done (took 1.182962996 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106830658 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135740227 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107159354 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135029563 seconds)
  done (took 1.563789567 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.0975457 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126002999 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107550585 seconds)
  done (took 1.408966401 seconds)
done (took 12.938908578 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102124728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420336655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383763123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14256865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721173342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378756094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034219433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144589423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164075135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091721724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138034407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670101388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060142173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019011858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371987296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673845045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12050661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118395453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093354367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016544709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091004228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121095458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090468921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701567101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424164254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093710513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369817542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091281488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125313069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381365558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122121302 seconds)
  done (took 16.918062683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094123382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172524535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096598276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136656505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122708234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095993244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123716075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092366364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178009068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12237877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109307206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120045106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125272226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094154119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140339587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09181192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123672088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091593486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120789917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12122229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110959194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119096471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092512006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120756846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092679551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134523425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121374219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092680935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119287629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098332107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126569731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093935308 seconds)
  done (took 4.776210069 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139245592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181265305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127286422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125400564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171157185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123409652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198346963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116778007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181235852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121316813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138866945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091750552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156028148 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092985587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142194647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120267702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094860055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121041529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091561833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123448019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13788966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092011775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121254644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092297432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121396189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107665066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123493665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119732494 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092956605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125972162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098061266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123028902 seconds)
  done (took 5.102217329 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096073326 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125417971 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108177796 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137729863 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094233233 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124678826 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096885387 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123590144 seconds)
  done (took 1.994208002 seconds)
done (took 29.872697217 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109945719 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126313425 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106345511 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133616367 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101506454 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133670292 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0911327 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133027223 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132610028 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101358935 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135801344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091187555 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12155247 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090366061 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134094915 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09624936 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131801049 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100941304 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132640473 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130595275 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093830449 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131984428 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102801089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132357473 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102210643 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132396362 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135595913 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09815783 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121809233 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093509017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123477747 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104455566 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122269299 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10435453 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125958346 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09619438 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122648993 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093696069 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132363461 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131594011 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098626461 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13189628 seconds)
  done (took 5.947198287 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.105612054 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138267431 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103647577 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079803073 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11563745 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07962432 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13700135 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08525486 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11009652 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.105962189 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073336502 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105793412 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078017621 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10119949 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0770681 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074937759 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107736959 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075402482 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075506118 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105243224 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079430636 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071736636 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107559749 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077968172 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074012041 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109540099 seconds)
  done (took 3.549626762 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099646096 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133346255 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111774079 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183469438 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160548468 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098613253 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130868365 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139482011 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10792264 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119970104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095233237 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148860363 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108222483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128895613 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090966935 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136442506 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135045889 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093516102 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126889125 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111411895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137690842 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101433935 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139925431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131166292 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091611593 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121615671 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095571421 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133754972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096041173 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130522502 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09571953 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124088759 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122400965 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103231467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124580514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093123196 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141003175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101766792 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130355386 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092015701 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129761704 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121283145 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113472487 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161594003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091571856 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129210938 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094433079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131153189 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120572686 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110074151 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13069691 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090773902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123988425 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091153688 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120689622 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105378548 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123880814 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093580761 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130040045 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126184913 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104147632 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124308971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107408326 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121126871 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098687317 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120516084 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091011231 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120149875 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142895947 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093162565 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160128652 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093178303 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123016302 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100641556 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129294841 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127300487 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09205521 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135586407 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100758143 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124422721 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100986466 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12478316 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093752675 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138486057 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122734535 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094171273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121585716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098394311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123132903 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093597435 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134659393 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09093834 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123733602 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109732529 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121316122 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092750468 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127324738 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124912414 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091184589 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134065171 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097150088 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122443895 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.100727418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121364816 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122996235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.101967025 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125041058 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090786278 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125990413 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098068637 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122119418 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092302139 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124846804 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092720206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131385425 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098105389 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126174953 seconds)
  done (took 14.67770908 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226353294 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213067143 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203861946 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289701123 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134386443 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115703671 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209488355 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153781864 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122949186 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158769519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173200688 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180034857 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167279297 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180365153 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169613422 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091711866 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141069677 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132432008 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.242684388 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255149824 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142377376 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099546479 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160116115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158936052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13680447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130925815 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109547829 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133188131 seconds)
  done (took 5.742100623 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106409941 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154613159 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096966242 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143341095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146940635 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09154056 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126790595 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093720676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134473919 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134566007 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092001931 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127993012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099079681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131384375 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122210059 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103138278 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131187643 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094583533 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125078308 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096997655 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132615335 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1003312 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126396367 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120004555 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102848564 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120326881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085595607 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140988068 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121127926 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114284085 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.11952371 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100663553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135445338 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092728795 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121594622 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094316554 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124296114 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093815145 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124164483 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090369292 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122382884 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076244801 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.1205975 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105671965 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127914029 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079028364 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128221374 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127263842 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093683353 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119220622 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.094652181 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124658237 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095324287 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130160012 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09525062 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122960677 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09492126 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114163278 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098775185 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123729628 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083822394 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11989065 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0978807 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116842225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100597852 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126430202 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090879012 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124371834 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096969596 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129193503 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093782133 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129385663 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090444511 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126056211 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095084001 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127400369 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095290211 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121000405 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121139089 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092785846 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074384686 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122483392 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072804523 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125259665 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091227731 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121438597 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094230297 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12877205 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138250657 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094141636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13026136 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093880548 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12068222 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095417231 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112000546 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094913249 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138137772 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13947675 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092974878 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119750506 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107073484 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125200916 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091472901 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10531289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100967912 seconds)
  done (took 12.832667537 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12584502 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151631407 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09372536 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140510631 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154967099 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155237547 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10000914 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129585137 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095154213 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140574222 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092659518 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131785421 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09326673 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137351077 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156020741 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102748641 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124199547 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10725914 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12710434 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168228389 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110839828 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141450134 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109192843 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123348614 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09802794 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138652446 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159423109 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106197471 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135449437 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140373651 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107468744 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158884917 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111754793 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126900358 seconds)
  done (took 5.419359991 seconds)
done (took 49.257378302 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.229030974 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.406096679 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183693501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.145670067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.225938546 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.203204985 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194607993 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188476673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.782256352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.185654449 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446757573 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.741351443 seconds)
done (took 60.048340214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.212685089 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.321451324 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454958085 seconds)
  done (took 3.890854789 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.562219162 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.131908273 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444244502 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18456679 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189160038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.478402721 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.922366463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.552532146 seconds)
  done (took 28.016740708 seconds)
done (took 41.798870006 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.214644167 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263765609 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.19724407 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.164540695 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297418185 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.214981936 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.531579289 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.209846774 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.201772326 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.167941633 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207072072 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.184934272 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214578376 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.567170268 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.198551022 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189295687 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.243077502 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.745527545 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.595183254 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199728444 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212382138 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.248589178 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.196311114 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19302688 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.253904859 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.18799867 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.19056418 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.18949992 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.805698101 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194191746 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203911101 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.779261299 seconds)
  done (took 190.580123745 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.187469542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.231521594 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.317879089 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.237540255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.673508061 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38943876 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332986541 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.734137582 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208636577 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.197821902 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.549440504 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.188232101 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.602904107 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158478242 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.217516564 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.280081803 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.491484701 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.575689681 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224590332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.347586602 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207148958 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.449365497 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.357906088 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.470305658 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23296484 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26485615 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206509159 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.20574663 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382645749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.419070545 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.204654267 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254834394 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82111338 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041886303 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.195769269 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.231629934 seconds)
  done (took 150.211553166 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188731984 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189587374 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188257362 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221101998 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190457172 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.758741615 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779511768 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695665424 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.64924684 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.626505261 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.46250039 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189014866 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283912253 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203857434 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189526519 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204521275 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.232098122 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192376211 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189369851 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.749271835 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.19739781 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.203741351 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.360162369 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200498667 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.215908385 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.577576806 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184479146 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216310404 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.516257724 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233587613 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185065108 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588693138 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.335414086 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300497365 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.185936544 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215629132 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.187099606 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463090264 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185341545 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184810347 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184250798 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.186521533 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867555114 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.188956685 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.736349621 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183623694 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.126063896 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.182959696 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184459165 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.515565692 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.874941779 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204197326 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.183639424 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185839659 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18451577 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183735109 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.185455143 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.215143259 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.492598104 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.280210627 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202361202 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.188071152 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217328493 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.18687857 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185446614 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.39947359 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185361498 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.756845439 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.245736379 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.402157806 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.739059968 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186222256 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283811695 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305365405 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.185574099 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18535974 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.185082504 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186152221 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295935807 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.185941588 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.604619067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.360624308 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202366448 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.564452626 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.287213966 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.185671564 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593423511 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.191775804 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186304299 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933131539 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283994897 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187373239 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.186869022 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186178117 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608893045 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.187410025 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759800911 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455189497 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191947523 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.656929884 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192239308 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621887278 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.730689509 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876126796 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192085216 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298460701 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.360103351 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.203727525 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187583817 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.562411348 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.190989712 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.24974583 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.187410505 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.584349408 seconds)
  done (took 364.553902423 seconds)
done (took 706.462537738 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.779658842 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.773166205 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.882213569 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.764533238 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.734037465 seconds)
  done (took 10.049476763 seconds)
done (took 11.167328953 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36807427 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.367491345 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246634843 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.368889521 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21766782 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.386115221 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.346627443 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.207732676 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.285387622 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26580792 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286245827 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239316107 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22081654 seconds)
  done (took 17.922472823 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491560313 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504098505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250461287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496425327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226569436 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.489390362 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385534817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395874333 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402266782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218980476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19990656 seconds)
  done (took 16.178477883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525202827 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.496492738 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254040086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49046866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227614713 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494101288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383446865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.405444431 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400696635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221160904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.199863516 seconds)
  done (took 16.214120293 seconds)
done (took 51.432614117 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.194903086 seconds)
  done (took 2.311858238 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230696534 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395853357 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.211350412 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20151938 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.195920074 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.197220903 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202342138 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.196847337 seconds)
  done (took 10.948188992 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.192453695 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197203361 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192663562 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193110431 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.195368693 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.196292439 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.194579358 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.195274224 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.193445558 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.195382759 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.196452807 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.194309999 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.192848331 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.19177597 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.192875261 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196606179 seconds)
  done (took 20.227881843 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195199437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194670176 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.192975468 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.193487753 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.193954092 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.193355483 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.194962467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.192981679 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.192576931 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.193891893 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.194904715 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.193271506 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.194671216 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.193945727 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.194396957 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.194870486 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.194531413 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19509642 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.199057585 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.195580006 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.194853368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194171923 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.196076393 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.195171274 seconds)
  done (took 29.787526053 seconds)
done (took 64.392827138 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.812385644 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.770337667 seconds)
  done (took 6.699737778 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.198042751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.197494021 seconds)
  done (took 3.51517327 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.200129658 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.196705547 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.195930552 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.19682356 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.196255158 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.196697685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.197221047 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.19600505 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.196808315 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.198244787 seconds)
  done (took 13.090131614 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.197106309 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.1965514 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.195380259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.19720443 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.197845363 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.194950313 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198464526 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.197052893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.19679549 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.194488144 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.197133311 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.193385663 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197220882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19466482 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.197735669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.193806534 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.194707684 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.194633547 seconds)
  done (took 22.647886684 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.196467224 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.197172889 seconds)
  done (took 3.511217982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.194109663 seconds)
    (2/7) benchmarking "second"...
    done (took 1.196825173 seconds)
    (3/7) benchmarking "month"...
    done (took 1.195368594 seconds)
    (4/7) benchmarking "year"...
    done (took 1.194930897 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.194360969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.1948951 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.194398459 seconds)
  done (took 9.481923574 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.198079652 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.3739186 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.451764433 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.774258162 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.197260687 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.200445316 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.056001121 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.200923727 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.204507476 seconds)
  done (took 13.774778614 seconds)
done (took 73.839948314 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.18533999 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208021123 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.380978264 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.193372163 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226953097 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.538616182 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.19848753 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.318228171 seconds)
done (took 37.368358324 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.192532618 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.168982749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.877327022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.181596974 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.172597657 seconds)
  done (took 18.517944756 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181452298 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524250874 seconds)
  done (took 4.821766326 seconds)
done (took 30.650448093 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196076257 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.196824242 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196547547 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.194237652 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.195102312 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.197347258 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.19446196 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.194051908 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.19770568 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.198083175 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.197983574 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194623678 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.197391123 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197753748 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195305705 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195841775 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198900777 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195801807 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.197830923 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195574691 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195756553 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19780184 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195170228 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.196276946 seconds)
  done (took 29.830419769 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.198076536 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.196288726 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.197636144 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.197677584 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.194794629 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.197902845 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.19860833 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.197993598 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.198297242 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.197782338 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194923688 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.19495586 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.19743261 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.195970577 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197665946 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.196090849 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.199470077 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19431621 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1973335 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196323017 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.198227694 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196637904 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196306329 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198543652 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197073207 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195393908 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.19849424 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19558944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197291086 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.196360759 seconds)
  done (took 37.028653546 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.20341496 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205203295 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198856164 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.197448421 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.198783905 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.197989974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197119504 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.198346465 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.198600492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.198602817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.197416694 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.198268105 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.197235727 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.198875819 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.199345424 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.198956231 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198461881 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.198242142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.197662048 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.199361738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.199011682 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.198661612 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198519021 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.198461267 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.199065399 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.199188672 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.198419331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.198461734 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.199696418 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.198361637 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.199753381 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.199530742 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.199074683 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.199385242 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.20018384 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.200388384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.203460033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.206033396 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.200339688 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.198788076 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199938272 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.20054259 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.199861975 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.199133025 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.1992716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199968265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200067881 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.200926459 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199638716 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.200075777 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.200632481 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.20083615 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20068337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.200985665 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200108715 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.201115741 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.200616608 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200797984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200497447 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20036508 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202119266 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200495388 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.201391839 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.200522183 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201617693 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.200852442 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200362555 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201339568 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201313114 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.20199772 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.20114788 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.201728684 seconds)
  done (took 87.514962983 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201291444 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199863811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200492187 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.198716475 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199612628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201789374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200026166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20268392 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199536284 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202897287 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20195031 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201147636 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200122626 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202532334 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202801242 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.199721391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203911657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199820953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.20337944 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203902077 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203070431 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200532951 seconds)
  done (took 27.551910126 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205163807 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205138269 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.201254026 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204177847 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199959284 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203461493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203094242 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205345675 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204000303 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201429968 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201950504 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203979106 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200738437 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201114005 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200870829 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203290744 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204200626 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203262238 seconds)
  done (took 22.775657433 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20227747 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.202819378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.204515364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201867749 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.201695522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204123495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201422737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204610084 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.204349595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.201930217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.204403726 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203570751 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.20468239 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202428833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205760768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204657459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.206670996 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203139621 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205434283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202373124 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202838554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204929169 seconds)
  done (took 27.604706491 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205840189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205760232 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20207048 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203532106 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202341737 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.205088647 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.205144629 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.203605844 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.206916501 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.205596152 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202884638 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206645451 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20535365 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20489347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.204053118 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204323156 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.206200922 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.205053368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207546994 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204222738 seconds)
  done (took 25.222195777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207675221 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208468763 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209542596 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208188669 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207831604 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.208236455 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208837495 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.208254784 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20898291 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20909654 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208513665 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.209299628 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208988045 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208405387 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208502106 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209646328 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208741409 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.209251852 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208813337 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209090236 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.210318678 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209979327 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208858448 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208912895 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208953237 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.209007138 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208325492 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.210772054 seconds)
  done (took 34.976519048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20891691 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209049553 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.206136946 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.207456518 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.206573055 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.20775222 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207353962 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.207724876 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209751658 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20668925 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.20943622 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.209982409 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209466662 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.209744586 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209866346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208946118 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208674709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.206912835 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207690455 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206933325 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.209680582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209990837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.209332484 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206962548 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206920586 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209625672 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207542063 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208278133 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210758288 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.20763188 seconds)
  done (took 37.38190655 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.228769618 seconds)
    (2/2) benchmarking "in"...
    done (took 1.228145417 seconds)
  done (took 3.586982139 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.207878424 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210237714 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.210750714 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209006984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208599976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211215719 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21204764 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209211206 seconds)
  done (took 10.80861354 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211496633 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.211230604 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.211388592 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.211802149 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.212836838 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.211793156 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218267526 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.229173554 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.211874934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212657126 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217359423 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219688981 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.213771563 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21157592 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21129221 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213473014 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.212099644 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.210810964 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.213006902 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.21310834 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212417362 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214787942 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214315432 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.209264537 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21483791 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.223937605 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.235118444 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.213062176 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213343464 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216057418 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.213456959 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.210416698 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.212908492 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.213551143 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.21371333 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.214149399 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222663715 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2303141 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.219110028 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232806815 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214573926 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.211103163 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21527005 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.214823395 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214251894 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.214079303 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.214988533 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.21134337 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.213177891 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.218457907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.218294904 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213371062 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.212294184 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217895671 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.215681272 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221794772 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232916278 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.218667175 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.223727171 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.225483336 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245354867 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.239716983 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.216876903 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21502294 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224601598 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.237469337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222073528 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.230590899 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.213790428 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215260821 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.22167299 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246001096 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239349441 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.215066337 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215986824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.216587353 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215489367 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216223818 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222466075 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.236265997 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.215671438 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215852118 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224951952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238437634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.215797798 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.215372542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.219609394 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.216476048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217972518 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227050239 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.233582696 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.216546067 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.215908337 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216711275 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.216316557 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.215945469 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.215730616 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21812448 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.215710338 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.217859738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217338891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219922307 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.224807464 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217148125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216813254 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.222638115 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.23724954 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217186859 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2228739 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.217552987 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218697594 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.218427547 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.223905917 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.215674457 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221777705 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.22674881 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.217725519 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.22068578 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.217815292 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218586686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227946794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.243434176 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.217525103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218277944 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222500249 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.229079 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219064837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223720958 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.217814635 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.216590219 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.215995737 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.219915031 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.217944807 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.218071101 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218996846 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218935766 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21661173 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.21938013 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.218768914 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.219902717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.219408471 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21939102 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.220547017 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.220039632 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.219588043 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.221299137 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225066138 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.239148786 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.220566755 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220178413 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216902163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219803385 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.220189865 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.21902002 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.220116125 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219906467 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220529905 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.219516957 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.220926239 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220627922 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220785995 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.220869222 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225630954 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.219853886 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224336376 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220534679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.218933066 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.220872559 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.220672632 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.220855358 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.221950087 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.220766576 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224779775 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.228547761 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.221285129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.221209901 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.223160855 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221036255 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221826859 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221071199 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225222042 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229421804 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.222012781 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227789528 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240395822 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222802467 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.221785575 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.222952034 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.221932226 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222708675 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224779666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.230377405 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235268145 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246401074 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223238773 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.226828193 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.223544866 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.227480409 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.227001604 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.222715692 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.223566995 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22322869 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223923468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222759598 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225123944 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.223369437 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.22229546 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.22316163 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.223845423 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.223019677 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223521043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.224350925 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224881824 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.220607967 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224182053 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223405728 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.22373135 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.221240548 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223481878 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.224056244 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.224372884 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.224986878 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.229607816 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.221428516 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227324213 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225248368 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.224864359 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223837197 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.225764361 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225631758 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224383075 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231789739 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.242759292 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.225226549 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230634705 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243300335 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.224790544 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.226551783 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.22476904 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.222951032 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.227946328 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233012403 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.225337624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226071371 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225269583 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225492342 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225428802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.232495079 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242002761 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.22604704 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227009775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.2274145 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.224212264 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.22765623 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226596785 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226688872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229771496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227302431 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.226824937 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.226397741 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.226933301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.226581501 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.227506024 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229115667 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.2351897 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.232062271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227201503 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229101599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.229066629 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231637913 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227803423 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228047231 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.227507941 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239592837 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250767511 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234321084 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.248194602 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.22786427 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233353312 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24735731 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.232488845 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229255525 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229029421 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228294683 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.228161375 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226235856 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229312362 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229859689 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229458274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.23090223 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.233356969 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229370675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228454056 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.227541105 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.2292377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.228739709 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227898811 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.229865515 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.230096891 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231013463 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.228378817 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229111576 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236905128 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24858797 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230615782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229639695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229468257 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.229199131 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.2314123 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.230240621 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233690205 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237518176 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.232831188 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.238693273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.230744536 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239421716 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.229671578 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233452411 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237576942 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.22863604 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.229677162 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.230312624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.231106167 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237822523 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.250525988 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233145821 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234278616 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232437624 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231294198 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.232095105 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.232034346 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232546724 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230983106 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240581977 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249713344 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235551787 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233695775 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22881538 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.23146866 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232181516 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.230993976 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236253609 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232118877 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233726774 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.231887923 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232334865 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234232021 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.232610554 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232974276 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231382785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23356128 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239813671 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253567581 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237282323 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.233500031 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.239454485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252121628 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239112682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.251803453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234040595 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.233746888 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233552791 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235317168 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232856849 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235195557 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.235534399 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.23561771 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238626708 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234058909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.235439569 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.234000857 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233909896 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.234090104 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245214865 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256187854 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235420621 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238179089 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.231952829 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236250547 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.23822947 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.235247059 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233054552 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237578674 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244773996 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241796604 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235267246 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235721237 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236051227 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235997173 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235230284 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235508458 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235401602 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.235993266 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.235739344 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235799843 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238482417 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235997375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.236184733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237362366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.236776897 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.244694372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.255000004 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.236595781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235601982 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237538832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.236452057 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.236209839 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.235419614 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236044478 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237818865 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237129374 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242015095 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243512367 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239417892 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.235714476 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.236957192 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.236124272 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237828221 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238299299 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237096601 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23781649 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.237475203 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237285598 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.237355546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.237782341 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238480719 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238028546 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238187182 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239528091 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.24408299 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239084364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235915224 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.237898485 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239020469 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237227467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.238887608 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.245885577 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261722833 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.249157971 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.246923355 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243478927 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239409189 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241575029 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.246232992 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238719619 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.24057494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239484003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23957682 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240248515 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.243237743 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239641 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.24554005 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.257851433 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.238656895 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249116875 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257749107 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239062499 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241080048 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243282175 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.240290418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237532571 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240824252 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239553116 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246717919 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.25955421 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240946063 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24121921 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.2398459 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24179527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244190018 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240890416 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.240495318 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.236954182 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24142568 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240232444 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241545657 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238537028 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.239896117 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241271221 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.245134221 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.24796937 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238930268 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243212884 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241399224 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242119062 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241237317 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241338318 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238128951 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238784967 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241391179 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241342916 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241509601 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243399714 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242141917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.245172284 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243359077 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242346898 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245162248 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251454327 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.248458035 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.239555621 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.243296991 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243190928 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244604002 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243222642 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242266012 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243167819 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243587136 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.243167863 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243528596 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.24373219 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245826241 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257685519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.260997218 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243939631 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244635187 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246036417 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243893505 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241811727 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243949099 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245937281 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.24673528 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250770325 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.244248469 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250422591 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262027529 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246117836 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.248720342 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247000942 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.251654296 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246579004 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244389723 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.24416328 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248372493 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.25966742 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244578818 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254301693 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272089056 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263685155 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245805802 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245971195 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244059432 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.245960238 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.24632934 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245821041 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245490887 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245309974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245750406 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.247872085 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251550374 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.246649177 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.2473749 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245967062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245221233 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24639532 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24466941 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245553592 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.246708245 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.24638017 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246339075 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246482956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245943823 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260031884 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270710902 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246714371 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247452047 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243417751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249523988 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249891614 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256702599 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253561235 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247080832 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246394091 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.247931522 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24698173 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246249881 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.248165965 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.247613813 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247031014 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.246020431 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259983028 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272805819 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252161528 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247679459 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247965379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.249456345 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248346024 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24770078 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248794526 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.247745474 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25029913 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252749956 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248779673 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.248583837 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251393981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255673578 seconds)
  done (took 735.67498263 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247508579 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246015145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246122632 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246475665 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246008101 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246212451 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246561048 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24623805 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.247802284 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24649942 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246025449 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248393821 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246388149 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248191757 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246919861 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247488517 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24775109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247578819 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246994172 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247141195 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248244673 seconds)
  done (took 27.353270243 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24913744 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.247757116 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246242628 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250247324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247579987 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250587847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248089641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250216096 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250685234 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248231299 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252007638 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250868902 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.248598334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248278951 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247542094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250765309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251526901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249096053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.250512366 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249750273 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252026371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248962641 seconds)
  done (took 28.65609391 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.250952045 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250702157 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.25113308 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.249610873 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251421396 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.248932186 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251502619 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.250896367 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.251448472 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.251963682 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.25070949 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.252835345 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.258378089 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.255927972 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.252956203 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.251624524 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.395832966 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.251659884 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252937278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.251210613 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.249890209 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.256417276 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.269508101 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.249475034 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.251646044 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252916991 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253042835 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.252662752 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.252892393 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.253921117 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.2562559 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.253046598 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.252988234 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255535931 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.252162194 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.254900677 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257440339 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253405 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.251299897 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.253528287 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263557235 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.273229636 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254247932 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.259897134 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.274206214 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.25402041 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257280748 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.260489893 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.252064093 seconds)
  done (took 62.783867873 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.2542901 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.254439712 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.252606423 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255012722 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.254821864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.254562069 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.25515831 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254841645 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.252232835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.252319444 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.254851689 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.253188315 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.253459869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.255119151 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.255319394 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.252353064 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25302553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.252337537 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.252861019 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25291057 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.252543071 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.255145325 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256277442 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.253291398 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256109508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253669201 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252644593 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255605054 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.253639215 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25237433 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.255314594 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256617479 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.255735441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.254428881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.253548348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.256436383 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.257783468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.253784352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256926931 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254623851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25623882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256174259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.257215464 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.258161309 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254106398 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.25530733 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254810765 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.255001624 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.253970712 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.257733955 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.256191958 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.254991075 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258299329 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.254843024 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257760949 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257614024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.255114176 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.255096119 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.257458214 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.255993156 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.255513546 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257359883 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.256782365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.257042757 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.258507423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.256538984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.256333058 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.258183218 seconds)
  done (took 86.524763215 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257731937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258123267 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2587698 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257809659 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257588339 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.25841948 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258763752 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.257239066 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257184919 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258244826 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258824934 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260220936 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259939697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258508048 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259029449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259243545 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258252211 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258647649 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259066265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258867054 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.258536208 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259338075 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25813966 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258759059 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259623061 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2591804 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259554431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259906466 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259390132 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260190699 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25978657 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.258374827 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259808014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259056853 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260916019 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.258935878 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258488535 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260072005 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.258643021 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259429049 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259964501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25934892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258743738 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.260720944 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259983063 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.25979172 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259589538 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26166484 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259771547 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261111124 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260545489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262302972 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260274378 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260562219 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259626042 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.260613105 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261691613 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261551956 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261365445 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260818847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261398139 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.262715256 seconds)
  done (took 79.267986308 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262113687 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263014421 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.260129484 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.260402326 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263353688 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260248287 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262204378 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.263146684 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262209002 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262730119 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262319843 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261180888 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26075882 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26382616 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260189462 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260860427 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260822781 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260999914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263028466 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260348455 seconds)
  done (took 26.412378032 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.261024323 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263945709 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262597612 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261177142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.264738453 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262153398 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264121126 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264733593 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262629667 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26478057 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26398633 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263905253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261243463 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261369048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264466803 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261220847 seconds)
  done (took 21.387943571 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.26291589 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.264803245 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2630796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.263681788 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.261535066 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261280332 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.264539292 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.262042804 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262407555 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.264619623 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265553119 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264176525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.264914107 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265437169 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263057787 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.264321697 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262670918 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.262995028 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264850218 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.267324572 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.263636158 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.263692478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.265366073 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.266408787 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.263251882 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265059365 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.263619906 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.262539949 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.26440231 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.26557494 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.263290799 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.265321437 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.263938136 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264048022 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.266379929 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.263652779 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.265920671 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.266764234 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.266345804 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.268243046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266593003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264957336 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266902857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.266175481 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.264004766 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.268042837 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265554699 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263921775 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.264759932 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264940806 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268388928 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267030443 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.267957398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268057888 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268717487 seconds)
  done (took 70.751698768 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268490575 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267887997 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266452423 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.266796558 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268275169 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.26584393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268180154 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267363636 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266147595 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269345718 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266879272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270211152 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266212963 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269023306 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266897337 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268668008 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266116287 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26746152 seconds)
  done (took 23.999396455 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266439623 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267782037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.269450962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266820162 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26687208 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271020052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266812389 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268809399 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268927683 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267919539 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266456263 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.269548517 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269486431 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269985849 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268036667 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266582606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269411829 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270229464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268068555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26806951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270824093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270549579 seconds)
  done (took 29.093130411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.269581025 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.268538691 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.26966508 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.285320903 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.287653555 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.291709713 seconds)
  done (took 8.858314881 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277427664 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271418632 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268939521 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271781721 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270606198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268934409 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268069918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267318392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269425521 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268139466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267780632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270699115 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271302205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268753368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271462689 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271312437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268599269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268581544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26988449 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2721376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268727142 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271959715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270022467 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26919862 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269235909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269579301 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271937176 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27038509 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269108978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272970388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27252095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271057122 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273358437 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271378137 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272783273 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27335004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270992241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27359541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273154165 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270631974 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274097234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273286141 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273033397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271177407 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27347083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271524823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270665673 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270970671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272463014 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273941744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272580989 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270229815 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273664929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273747029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273149622 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274057352 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272375668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270555501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274334719 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271657154 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27226497 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274813329 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270820557 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272021705 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273727848 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272316121 seconds)
  done (took 85.124269084 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27171136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272247219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271181672 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273656293 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272080176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272529195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272911427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272072759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272878833 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272714305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275077815 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272671501 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273733109 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272469676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273190761 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273302454 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272354283 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272576367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273310444 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275662462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273794082 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272757797 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273293252 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274243046 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273600438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27602322 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275044092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27304358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274236024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273254163 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273823904 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274396105 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274272711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274543943 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274867725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273935003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275175502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275260258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273922591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278156036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27484222 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278252372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274874598 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274980704 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275687772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275750606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274434305 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274702411 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275231412 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275438163 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275146277 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274740207 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275617717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27679806 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274762774 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275202805 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274799312 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276438696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275389173 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27822363 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275694322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27563344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279061313 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277733199 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276130121 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276211322 seconds)
  done (took 85.309674959 seconds)
done (took 1716.599225827 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.438586074 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.394432479 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.277353267 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.274148476 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.276631133 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283764892 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.273649057 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.277523004 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.277536091 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.276742513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.277109654 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463785968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.333347384 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.277166471 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.277392239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372637033 seconds)
  done (took 42.247098939 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.305637193 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.284106201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.391779057 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.300555607 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.305502936 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.464900318 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.334505672 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.283589019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.446918759 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.323240908 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.789771342 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306017714 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283023205 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.357387926 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.300465432 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.464658408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517924975 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.793130502 seconds)
  done (took 29.447700714 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.716685461 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.286472642 seconds)
  done (took 9.198518678 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.301149533 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.283333342 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283785531 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.282073319 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.281973904 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.274793614 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.282468462 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.278627767 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.835372607 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.410633175 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.284710159 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.290635506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302356215 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283443867 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.280082763 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.318301744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.443658483 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.280951908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.278875603 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.288849963 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282932025 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.385388906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323445639 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.281408584 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.406486182 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.852619704 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284906267 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29096131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.428829199 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.282962766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.283655795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.283221666 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28512873 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.891755376 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.717410121 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.293362993 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323457104 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291976598 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.282482544 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430406371 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.285848082 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.291535753 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27742319 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.70420803 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42294829 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.399307292 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.497791544 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.302903998 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.286757115 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.34676116 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28529237 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.286163546 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.313055726 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.058597283 seconds)
  done (took 108.436834616 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.302594861 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.673985792 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445831266 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.300787997 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049351658 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931207683 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.293948748 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.557584815 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.324289056 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277798985 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.617762174 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780167292 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301646756 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.324770616 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791454551 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.34486615 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279803961 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.050414651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295766311 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.281182091 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766708757 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28031196 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296552864 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.588744202 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.317749727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726186043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.644379322 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.691365046 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.299177072 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.279882116 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.742477397 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300530613 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.316384815 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.279477566 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.537951556 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628246538 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619142172 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.302867012 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.291443168 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.282340485 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.296326514 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720774576 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630316967 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.297680074 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.281934602 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742366478 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.297752631 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.289413927 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.281906808 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488985801 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.120285542 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.281281553 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.624623396 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281543231 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.570353447 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340284975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359942763 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754977942 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298633611 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.344430577 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30629632 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282442362 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281771504 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285197055 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.283033785 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.61751865 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.655670788 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.284038668 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615922784 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75335145 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.299027361 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.817232189 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.15680284 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.283146307 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.335538996 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.283298371 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.850847818 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764700313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.327127861 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.282050247 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606392542 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302077923 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.601266637 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.298627171 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281667246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794760241 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.284122576 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.308717184 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.283548173 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.283516528 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.043321691 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285431837 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.565836435 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.318175174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.283643852 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.283405807 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.292384337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283999387 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300600384 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.29206538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806544236 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.30579851 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.250321688 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302768355 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284205407 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.284616505 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.286551296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.2832305 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507835968 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.728581691 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.304817058 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285812959 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.284297944 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.287996254 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30847746 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.289673308 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.583431231 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303282275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286207968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.284829657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.94897297 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337075781 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286674803 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.299395876 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188330443 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.487077185 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299366548 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.298981392 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283999587 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298118163 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.480390153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301528757 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.309226168 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284835192 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975753756 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304588909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.311337414 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.772631064 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.283194999 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.161344605 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.309499483 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282400204 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567326471 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.541803198 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.547827485 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.285871739 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.299420569 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953837899 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333458006 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429030132 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302427763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.271993187 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481720389 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.490653034 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.286073252 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.884975989 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.287118283 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503464254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.283984126 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.57959752 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762854588 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.301216674 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285996168 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980106362 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.977438309 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.907294599 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.288155145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602533576 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.254384477 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.758243063 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.284881823 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.283215338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.809470413 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285095383 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.29136004 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.285584683 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.285109467 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350838118 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463611698 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.498987007 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.295611942 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720404226 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.369262991 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28531729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.293505472 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.286622775 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.632848253 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.291981285 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.286696528 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.285334048 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.288103889 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.2858569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.740795383 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.188073523 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.285910719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438140708 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904037695 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.302224167 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.28962494 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.837574654 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.574405248 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780579603 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339703755 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.578099071 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.309791187 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.325248792 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938267662 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.373002292 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741432637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302183481 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.287518974 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870906523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.302826009 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.360072006 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.28719188 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.288069098 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812138597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303106031 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.29249885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.468190802 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304531186 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564011042 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.288715966 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.338790546 seconds)
  done (took 1099.078101238 seconds)
done (took 1289.603053978 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.287861162 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.288623533 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.27667186 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.294364989 seconds)
  done (took 26.355039211 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.298897468 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294758724 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.295127689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293516665 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.300915503 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293603145 seconds)
  done (took 8.985271335 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.339739334 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.288720212 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.294302994 seconds)
  done (took 19.132070143 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.489284879 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.545526803 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.627394017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.392995169 seconds)
  done (took 10.264999792 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.292712165 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.291906741 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.292255411 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.293813021 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296380887 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.297834828 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.295680625 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.295578987 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.29734116 seconds)
  done (took 12.859849512 seconds)
done (took 78.806714311 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.41140737 seconds)
    (2/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.313298773 seconds)
    (3/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.985091592 seconds)
    (4/286) benchmarking ("sort", Int8, true)...
    done (took 6.310356686 seconds)
    (5/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.402192465 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.761259272 seconds)
    (7/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.289308365 seconds)
    (8/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.536119519 seconds)
    (9/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.417480758 seconds)
    (10/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.295860427 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.524386437 seconds)
    (12/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.308302604 seconds)
    (13/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.26915297 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.347255856 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.281575648 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.331577139 seconds)
    (17/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.346451226 seconds)
    (18/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.269019599 seconds)
    (19/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.289525769 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.054985235 seconds)
    (21/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.471366819 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.269881812 seconds)
    (23/286) benchmarking ("sort", Float64, true)...
    done (took 6.295239859 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282605105 seconds)
    (25/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.30162108 seconds)
    (26/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.269757269 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.320514951 seconds)
    (28/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.465115981 seconds)
    (29/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.429450693 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.268794706 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.895181936 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.698744078 seconds)
    (33/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.320522236 seconds)
    (34/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.29064619 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.295353281 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.633382727 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.391685205 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.269755755 seconds)
    (39/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.270949187 seconds)
    (40/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.315847554 seconds)
    (41/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.352639803 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.308422897 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.274034108 seconds)
    (44/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.692793796 seconds)
    (45/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.276150329 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.930893882 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.276970951 seconds)
    (48/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.485543872 seconds)
    (49/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.52899185 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.402247502 seconds)
    (51/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.492322751 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.51212479 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.432411396 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.550097867 seconds)
    (55/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.271498552 seconds)
    (56/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.669012693 seconds)
    (57/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.904465317 seconds)
    (58/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35971577 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.347876893 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.309236865 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.289710372 seconds)
    (62/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.309718947 seconds)
    (63/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.272593247 seconds)
    (64/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.271323653 seconds)
    (65/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.030012028 seconds)
    (66/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.097066235 seconds)
    (67/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.277907241 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.856713929 seconds)
    (69/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.376942592 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.72810274 seconds)
    (71/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.403475004 seconds)
    (72/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.761483501 seconds)
    (73/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.792170756 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.293882572 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.299875382 seconds)
    (76/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.379670588 seconds)
    (77/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.261832896 seconds)
    (78/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.165327625 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.48841856 seconds)
    (80/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.337608563 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.197993811 seconds)
    (82/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.268070461 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.679943565 seconds)
    (84/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.819244642 seconds)
    (85/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.102124893 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.219369171 seconds)
    (87/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.010602053 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.754090382 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.703054908 seconds)
    (90/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.542328978 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.283962454 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.272830669 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.304988978 seconds)
    (94/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.456602026 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.451446815 seconds)
    (96/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.37136523 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.630042612 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.320594975 seconds)
    (99/286) benchmarking ("sort", BigInt, false)...
    done (took 6.283605669 seconds)
    (100/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.571063727 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.288016306 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.267244853 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.500386709 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185356237 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.269044766 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.330606449 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.282408855 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.138441372 seconds)
    (109/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.056071484 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.294376222 seconds)
    (111/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.053258441 seconds)
    (112/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.637069847 seconds)
    (113/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.277546388 seconds)
    (114/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.633591065 seconds)
    (115/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.41626904 seconds)
    (116/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.635399764 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.306248966 seconds)
    (118/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.712418658 seconds)
    (119/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.367508284 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.970466626 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.814561745 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.328412878 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.553383935 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.265857437 seconds)
    (125/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.372458769 seconds)
    (126/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.290249085 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.388974426 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.012397655 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.735224484 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.568218731 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.828480163 seconds)
    (132/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.253377528 seconds)
    (133/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.333425592 seconds)
    (134/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.970512618 seconds)
    (135/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.282729253 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.408377374 seconds)
    (137/286) benchmarking ("sort", Int8, false)...
    done (took 4.371526132 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.301985036 seconds)
    (139/286) benchmarking ("sort", BigInt, true)...
    done (took 6.287984717 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.370276413 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.322883559 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.05283665 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.317818878 seconds)
    (144/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.294873126 seconds)
    (145/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.266751477 seconds)
    (146/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.372771145 seconds)
    (147/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.073217992 seconds)
    (148/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.393353369 seconds)
    (149/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.26906296 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.533757433 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.329833536 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.28634081 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.797539137 seconds)
    (154/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.30156938 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.272760693 seconds)
    (156/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.330877256 seconds)
    (157/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.534317948 seconds)
    (158/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.88188623 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.622956848 seconds)
    (160/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.720881581 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016485121 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.100869597 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.652624276 seconds)
    (164/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.326721158 seconds)
    (165/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.396595229 seconds)
    (166/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.287626874 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122506484 seconds)
    (168/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.273964507 seconds)
    (169/286) benchmarking ("sort", Float64, false)...
    done (took 5.569009089 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.30173635 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.372712955 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.274204101 seconds)
    (173/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.312947262 seconds)
    (174/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.268938703 seconds)
    (175/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.370622031 seconds)
    (176/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.455099446 seconds)
    (177/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.313541335 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.923819251 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.313798119 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.88563245 seconds)
    (181/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.277520352 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.311814036 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138644597 seconds)
    (184/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.999844432 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.353282715 seconds)
    (186/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.271342968 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.102558603 seconds)
    (188/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308724906 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.316116726 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.002541647 seconds)
    (191/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.269528722 seconds)
    (192/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.293384563 seconds)
    (193/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.674583259 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.145831455 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.367840032 seconds)
    (196/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.664925747 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.910986178 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 5.373569091 seconds)
    (199/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.286411318 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.345516477 seconds)
    (201/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.269826504 seconds)
    (202/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.859394754 seconds)
    (203/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.892407391 seconds)
    (204/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.65890749 seconds)
    (205/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.064464131 seconds)
    (206/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.646054011 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.059828108 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.915271791 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.50816018 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.26990729 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.332158665 seconds)
    (212/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.397248988 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.132721545 seconds)
    (214/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.682798308 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.278798609 seconds)
    (216/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.484002051 seconds)
    (217/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105095721 seconds)
    (218/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.540597563 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.313569931 seconds)
    (220/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.057847704 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.306702001 seconds)
    (222/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.277366109 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.331667094 seconds)
    (224/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.275102929 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.376096425 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.317487162 seconds)
    (227/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.100625149 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.769200773 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.602280582 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.373434532 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.714402003 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18309005 seconds)
    (233/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.272418027 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.65717922 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.288230674 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.292778689 seconds)
    (237/286) benchmarking ("sort", Float32, true)...
    done (took 6.293962515 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.486612922 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.800642122 seconds)
    (240/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.389902257 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.650365818 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.272661332 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.644782712 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.494613893 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.205084975 seconds)
    (246/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302183625 seconds)
    (247/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.395273527 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.318711384 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.405132732 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.685010632 seconds)
    (251/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.316219963 seconds)
    (252/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.415823018 seconds)
    (253/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.397075152 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.356206309 seconds)
    (255/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.32972861 seconds)
    (256/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.277562548 seconds)
    (257/286) benchmarking ("sort", Float32, false)...
    done (took 5.301866877 seconds)
    (258/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.984646179 seconds)
    (259/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.540264145 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.702281707 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.713851964 seconds)
    (262/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.310891105 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.393234378 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.376769814 seconds)
    (265/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.377367414 seconds)
    (266/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296021531 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.407438018 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428164867 seconds)
    (269/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.488692177 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.125540506 seconds)
    (271/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.327340436 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.337548268 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.273909561 seconds)
    (274/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.273932626 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.298049826 seconds)
    (276/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.303417648 seconds)
    (277/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.308363563 seconds)
    (278/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.377970824 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.292605312 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.318607796 seconds)
    (281/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.870830654 seconds)
    (282/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.500057183 seconds)
    (283/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.645943514 seconds)
    (284/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.532866086 seconds)
    (285/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.312624106 seconds)
    (286/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.791117656 seconds)
  done (took 922.595027986 seconds)
done (took 923.804574484 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.330344399 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324568383 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.305817108 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.328373428 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.417777861 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.334838732 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.318125536 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.309099566 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.354825996 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.35602305 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.306159762 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.334478227 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.309574074 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.306457016 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.305598996 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321955833 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330423246 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.314444255 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.323753602 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.316211298 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.322669861 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.305677338 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.357201833 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.334674491 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.311669941 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.311029474 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.310190523 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.326655053 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.418284899 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.310011186 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.310491222 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.318999178 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.329981086 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.311861877 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.303520575 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.327386667 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.319296204 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.317354417 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.311703714 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.338909177 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.696199965 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.323350272 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.308410326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.30909921 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.31078886 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.314198182 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.31018884 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.316240656 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323057235 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323443197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.681324241 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.33990448 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.311887371 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.310393424 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.320001901 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.310008219 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.313965533 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328031548 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.328300158 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328043716 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.320386768 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.320728639 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.313943386 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.326364603 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.318701177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.720598383 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321933008 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.315578868 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.706502219 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.339425867 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.719399478 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.336237797 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.311902864 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.324976188 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.341715439 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.308442849 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.30628614 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.310286834 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.318989262 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.309670566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.320003818 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324628377 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.315705977 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.312404622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329084133 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.338113381 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.321144037 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.311746318 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.320709983 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.330489278 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.319777247 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.322885671 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.316455102 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.310720618 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.324458148 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.316960922 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.315716972 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.315396638 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.318201606 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.323402932 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.696885037 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347709343 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.308861238 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.308956112 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.311483733 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.326466878 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.697345477 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330131036 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.335419206 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.362058589 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.315391216 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.300130904 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.316913521 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331252401 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.322483427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.317095632 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.309572732 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.302207396 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.688077695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34482533 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.316637654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.313157445 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332502157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.315424555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.311453117 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.316287687 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.315496832 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.331289255 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.436875405 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.325853095 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.346535911 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.313283487 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.31886935 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.339008053 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332889599 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.346542281 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.317329052 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332121482 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.331031156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.311233325 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.326933057 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.326243994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.315936161 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.321445036 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.311312911 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.338680888 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329319627 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330602882 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.336886933 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.436378579 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.314343975 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.305513539 seconds)
done (took 221.545407957 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.373920386 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.310987429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.395111791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.311156462 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.410876918 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.410983182 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.310526406 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.309779152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.310564109 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.70958261 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.309720155 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.30971028 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.310070923 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.309543555 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.394593975 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.312786036 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.309632378 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.655930182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.312233876 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.383942867 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.312420518 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.310389983 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.311600228 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.699322865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.306722224 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.306003845 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.383857652 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.31386361 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679683287 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.3099941 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.311009127 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.664577504 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.402954332 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.330936408 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.323733303 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.320980654 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.412279101 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.330651481 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.394717734 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.395084089 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.397321949 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.351554634 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.310264809 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.314830553 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.313564878 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.314051812 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.311738753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.340236526 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.307308214 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.312535621 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.671520719 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.324440738 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.312401455 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.31283083 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.312623441 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343778664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.313566987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.315679033 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.402150847 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.3161829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.376258986 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.721341102 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.696982145 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.314907833 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.312923014 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.312816763 seconds)
  done (took 147.141185332 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.381452023 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.387608578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.426950195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.331596973 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.363906066 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.429053461 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.332602428 seconds)
  done (took 10.879219456 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.321328096 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.316576325 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364400281 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.365577201 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.315883095 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.49482616 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.315860439 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.327345091 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.312953514 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.369770928 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.318001983 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316419686 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.324285516 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.311917548 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363800977 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.328055031 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.431253731 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.318867243 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.317784557 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.467918404 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.314869392 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.324789525 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.368822623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.327521212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.318842415 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.322824732 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.125340023 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.317287732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.315417207 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.316956104 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.31403532 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.395822046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317463812 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.316644181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.316342056 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433780936 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.318433093 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.315578215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.318829482 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.313960439 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.317274253 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.317979239 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.318318373 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.31498454 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.318590108 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.341064041 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.318875023 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.318551857 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.318215944 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319201865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.369051779 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319067856 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.315760513 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.317148146 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.374251449 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325829377 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.31896759 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.316265696 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319233443 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.317860678 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470178276 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367048748 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.319612994 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.367188893 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319065308 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.319897504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.319927562 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.319207698 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374485676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.321027601 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36671943 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.317722057 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.508583459 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.342294056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32182967 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.323358832 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.323335811 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.320152866 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.317709347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.326387374 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.318837532 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.322041259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.325321354 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3189121 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.318950466 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.489502245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432863357 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.317836037 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.333334444 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.327428047 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.318538911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.373523391 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.321064715 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.319308303 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372708955 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.435860498 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.375261905 seconds)
  done (took 152.130661421 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.326838756 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.328513102 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.323645542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.339412019 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.321699008 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.321270852 seconds)
  done (took 9.193309398 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.323633805 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.323143814 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.322038793 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.323696108 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.322906371 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.323548182 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.322351489 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323321577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.325419214 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.322812169 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.323753884 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.323923287 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.324863382 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.322571727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.323296909 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.323065522 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.322598897 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.319658076 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.323210565 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323491536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.42724044 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.322450809 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323525582 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.323736485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.327521806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.323813863 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331851404 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324461941 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.323064944 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.330721284 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.341698776 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.324511711 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.324065149 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.328621501 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.327112483 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.325509243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328584004 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.326335788 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32355373 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.325388732 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327184418 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325411789 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.324818879 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.326672538 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.326671436 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329172806 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.329889858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332012817 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.325625386 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.32643981 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.326607489 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.325673497 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.325829793 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327539732 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.327262193 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34439517 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.330827878 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.326900107 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.325691159 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.327038511 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.326500781 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.327164215 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.327370961 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.329520029 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.324393084 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.328132862 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.326581566 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.330084763 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.326469672 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.326478124 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.328234385 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.323839163 seconds)
  done (took 97.81716129 seconds)
done (took 418.384709033 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.636316655 seconds)
  done (took 7.874855966 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.414832996 seconds)
  done (took 7.654229432 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.430601576 seconds)
  done (took 21.679170995 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.326706137 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.559417684 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.346641944 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.341447209 seconds)
  done (took 27.816469503 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.48962414 seconds)
  done (took 7.730069552 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.322675738 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.346808979 seconds)
  done (took 13.913212151 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.933735555 seconds)
  done (took 8.175450697 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.960963332 seconds)
  done (took 8.211540802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.326210165 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.338351148 seconds)
  done (took 14.168409676 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.308215321 seconds)
  done (took 7.550109923 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.559256113 seconds)
  done (took 11.798154474 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.322263601 seconds)
  done (took 7.563705803 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.386846595 seconds)
  done (took 7.625313665 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.210720627 seconds)
  done (took 9.449334326 seconds)
done (took 162.449799535 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.321996581 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.321514501 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.328186445 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.327552676 seconds)
  done (took 26.539566935 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.362218858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.361880758 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.361969667 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.374733937 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.3669889 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.363212716 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.354504938 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.354991085 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.373089391 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.365475254 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.364194022 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.365281431 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.361685934 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.355600027 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.364429492 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.368704 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.374339242 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.365133508 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.35567812 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.365993536 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.330943839 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.374772118 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.366252044 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.331031516 seconds)
  done (took 33.923200178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.850097546 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.399247253 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.482369816 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.380466931 seconds)
  done (took 7.352550465 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.381351619 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.382381307 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.395466501 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.433333809 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.463076283 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.392917559 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.354082572 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.352308206 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.338243039 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.383983154 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.459435485 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.3996847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47782964 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.331734292 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.528182884 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.331526147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.332298717 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.382430008 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.435983625 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.449299611 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.331262856 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.383394014 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.387096611 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.401011267 seconds)
  done (took 34.750721538 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.331399318 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.350818906 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.331729304 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.330791641 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.339947749 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.331933919 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.331198909 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.333027726 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.332037809 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.338109253 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.330799964 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.344207747 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.330991137 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.332117644 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.33805146 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.333621171 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.337327203 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.331442416 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.330746155 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.338082876 seconds)
  done (took 27.940336683 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.32584691 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.180034338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.677397849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.581225501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.324535283 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.32591189 seconds)
  done (took 27.658726441 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.401390257 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.553692885 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331888835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682955611 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.784105973 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.357123669 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.333322529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.568687278 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88482098 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.877822624 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.396450725 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.400529104 seconds)
  done (took 19.816928265 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.333124707 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.329489552 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.338684259 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.344575706 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.388042641 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.355053724 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.340205902 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.326364125 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393527788 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.408126161 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.358101298 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.389056677 seconds)
  done (took 37.549124681 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416087936 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372017066 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.248304942 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349305032 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047171804 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539735428 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375740323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024149027 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.355748402 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605848684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335281184 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430760014 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588141839 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341725527 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339265848 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299517683 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575554854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802811698 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341752975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.324159261 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364845452 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341392949 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.422895476 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567815289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563108377 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.310860031 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.594593402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.10907033 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61578988 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353570296 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34415769 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333768431 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607478337 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976166438 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449697048 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542649506 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353266545 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.899078935 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.315495138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.332700162 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345575376 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336358268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346432161 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335152915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.269162419 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338683525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044022887 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359651925 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.047809527 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335785342 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591359141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438117113 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.338900509 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.90543147 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387168409 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.335149893 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.341399292 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429119644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927333764 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.742612905 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345208972 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.29340562 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34069596 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.242067764 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968465127 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358623456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.340340675 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339310385 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271691847 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.306049665 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359968757 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483493676 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362396778 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987417683 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035582815 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36496152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273739761 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872235626 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338139015 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.279675783 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565301019 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115766855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272602817 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.284964174 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273101117 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021971437 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347126577 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.713280047 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358733099 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050656976 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567632589 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373868409 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360833248 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56215821 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.217570354 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33877116 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.34118475 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472465513 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360840365 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035039516 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291634362 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.34267555 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595271706 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.54909244 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350916618 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.318165427 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824232902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356609966 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360818893 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343563325 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.556700669 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935648231 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370848163 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.752345212 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365607436 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.117934062 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063082789 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351687522 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.350839314 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341492269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591419208 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.089352928 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230763687 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408656983 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342927255 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340082011 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.368538801 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197372417 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.22293153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.535528662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360851352 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.357577698 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.34099022 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284825571 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.34369465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357064961 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.126897237 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564288885 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350651838 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62362015 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276263559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489658203 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350475925 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.564533111 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542529146 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.37088723 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600521436 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35062556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360052809 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35988674 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360846746 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441411445 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362703245 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.350606113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605095499 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.345615713 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34780098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.357714507 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.127978414 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347851565 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.348571382 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348924476 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933894877 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337341012 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349850915 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231127951 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.356914316 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410266399 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349728664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553051299 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.156449801 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367664795 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.348498745 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.342070468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56641303 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35327342 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.355527656 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431692355 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.810058781 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935809662 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382344862 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.278465252 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.056181339 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.037476725 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344766001 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.532610441 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34550434 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554318752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375529447 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346471076 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923097758 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370435481 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.278309712 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.356741465 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357196285 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350256377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346176084 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.127633336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.783446847 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361667548 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.362159804 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489024769 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.359697768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280375258 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.863892502 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351955779 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346276968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.120922419 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379519396 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.266091225 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142847526 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625264709 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355904401 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60289219 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.388106576 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.385557574 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.343042156 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346301736 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374030385 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.353939298 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379539898 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.358350754 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.284123973 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.798882164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923773965 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076160676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909662373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.627841418 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.378320991 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2528366 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049928691 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300733868 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.00431521 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538534159 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073119981 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310244832 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81711575 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.578234229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131653933 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614700359 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583893035 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602001468 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.383480997 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615954946 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567360811 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383536027 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350165559 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285275008 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.84156612 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897369219 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377741787 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43779403 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05011117 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367231762 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143016944 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.414590853 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.049840714 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750929083 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.9137059 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.73721721 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358067224 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369719386 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147582836 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376761513 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.874927529 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980011421 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379327012 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.824292335 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304263926 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562852048 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386833489 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.348509418 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.6285355 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.354248499 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.612248171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607236995 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292949637 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359880302 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88341943 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.226590683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.355751337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349931394 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079431 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360448433 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6411069 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.365428487 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.124880422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378172981 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.285723803 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285808383 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.044137889 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35509697 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328982091 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844840701 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.363053786 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356792811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369006607 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201731029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607202247 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.365338546 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928290708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029024322 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355291422 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375101526 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.354541781 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359280141 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.341261585 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.232806651 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587157024 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412489307 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573399989 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.3105648 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.251054199 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354715744 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560797099 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.247368579 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35171101 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589884952 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.079211569 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.359043488 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039747652 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391903162 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356025189 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361544067 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352033917 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372068449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439713784 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563685738 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.380078732 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.359991191 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74945468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377273824 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352664294 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.364057081 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444157958 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803245262 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.132656325 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.132831083 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932357199 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087226405 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951690828 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628843174 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361631882 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361492067 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286243347 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499878709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.87768864 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626341992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482963649 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.352148941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393523071 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352817703 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389913548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570768997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627515415 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224149797 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366761675 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02055511 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.51245529 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364626334 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.564639518 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848354471 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917708273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468866497 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362131587 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066219141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646889704 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.445300512 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353554319 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94279984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.356035101 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.069315498 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.361072683 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367105484 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509708427 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611087052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005168017 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.383827877 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.515252424 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.128585311 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406171999 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617485997 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.803621658 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569086113 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954520831 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069899391 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618221935 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4244691 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569164768 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.473754237 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502939048 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.356389159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.238228618 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354991642 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199637187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.064967658 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.36566113 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944252681 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636190909 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.35942926 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.359569567 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378697245 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.365439544 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578939285 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055101434 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587908769 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36545927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358822967 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.347546648 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941706147 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635602713 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299598197 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359803501 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596206413 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611592255 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381442423 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.810016624 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.068374632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910790194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.336296524 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379203743 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364916163 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068140012 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950333238 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.15487448 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858548991 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.024165795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360778953 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638849964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.361917468 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358944056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641212579 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.361765231 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357559326 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580717436 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.957507978 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140058798 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.362066998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.461517851 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.302736366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584959108 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432186241 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314382257 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370377909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.766239105 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379261001 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488914752 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370750804 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.365755777 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359600915 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.100240389 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632059321 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.364913434 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.351841002 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.340680477 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387159247 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459186559 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913738259 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386016618 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.034797892 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.710643193 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615579554 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359199187 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.349214243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.36485908 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36112783 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078689801 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331479243 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36983088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927520922 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.384167008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.378691605 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365044081 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.576029871 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571850656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362264299 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585195974 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386071882 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383666135 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.261491853 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.128900239 seconds)
  done (took 1643.734563922 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38024615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.400485893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.384939813 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.463370096 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37957023 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494196984 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.434580325 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459299159 seconds)
  done (took 52.673049604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.369127589 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.526121764 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.3924312 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.364158897 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.371023875 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.372913948 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.834357672 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.384943572 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.371654443 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.372093834 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.363018545 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.364490448 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.025074214 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.379739985 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.365129476 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.351877501 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.370928873 seconds)
  done (took 65.863214631 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 51.08959838 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.119596474 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.200905947 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.427495108 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.481383799 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.362727946 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.944979529 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.396640936 seconds)
  done (took 103.301974118 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.37957946 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.380833886 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.380300984 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38096894 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.381372835 seconds)
  done (took 8.181688236 seconds)
done (took 2090.528776881 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36701614 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.37108603 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367751284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.369608326 seconds)
  done (took 6.753405393 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.344548255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.060986234 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.346655659 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.367236132 seconds)
  done (took 18.397400875 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.378635965 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.373029451 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061740074 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.969484875 seconds)
  done (took 5.311462334 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.115842463 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.123943544 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.109574291 seconds)
  done (took 7.626384315 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.361965929 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.36893069 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.369323073 seconds)
  done (took 20.377157139 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.662695953 seconds)
  done (took 2.939273883 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.510022312 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.559030762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.680982085 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.683579009 seconds)
  done (took 7.712089965 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.750389335 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.751842072 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.553058873 seconds)
  done (took 6.332263076 seconds)
done (took 89.480746839 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.144578791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362333738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.568732676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.115457929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.59376815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.569334086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.567790805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.082591689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.624713185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.615303352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.114384637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.594665852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.731325062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367707358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.728371964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.367069451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.594433287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.19237208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.795794975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.031284583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.566824716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.754162167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.94372739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.872441786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.601306689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.520190892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.333685604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.617375468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.974327444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.355413353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.519348564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.21022273 seconds)
  done (took 191.310355123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.363961435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.381691254 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.383590149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365014544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.381331268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.365343257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.380129563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.380758201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.380162885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.365150666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.364558981 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.370674767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365465044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.372277834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.367210304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.365801511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.366620223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.376018784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.365575469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.382244119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.367479482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383114559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.36611832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.377900403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.366230692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.38313081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.367143801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.365462162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.383305923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.366545438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366357824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.366973508 seconds)
  done (took 205.182273276 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.365958856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383984507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.368348844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.366937946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.383136164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.383254936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.36956755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.37037179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379015895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373178852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366799124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.375197893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370496278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.387318134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.382942491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.384971663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.394082341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.368893851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38942331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.378157894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.37051505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.368349307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366895285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.37815037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38111588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.368516148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.368264214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.377255342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.368044293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.374955547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.369989953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.368554972 seconds)
  done (took 205.283933198 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.571105761 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.375411626 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.375635482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.308264394 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.377107144 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375624062 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.368095781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.572741308 seconds)
  done (took 14.606266984 seconds)
done (took 617.662190431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.646128577 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.364325751 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.573086642 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.39535243 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.147104359 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415261477 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.397441676 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.565559202 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.294666314 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.571552155 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.608380648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.411685989 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.747839407 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.396074033 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.64908701 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.497387211 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254772091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.375715774 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.714021918 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93555811 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.653956478 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.834930721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.584634856 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.288146209 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.761967787 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.830954478 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.123339068 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.243598126 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.412643494 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.718705579 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.032158101 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.392256369 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.457743867 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.45638327 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.512841884 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.493157373 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.356544201 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.455146322 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.593273688 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.60212345 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.911980053 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.117255854 seconds)
  done (took 93.079720947 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.361758703 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.361242252 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.36233582 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.362085237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.362905317 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.361826012 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.362829421 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.361642921 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.362159233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.362772972 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.362217864 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.362191886 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.363152599 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.364217172 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.362037291 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.362246417 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.362423546 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.36532135 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.362718402 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.362996447 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.364013107 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.363012282 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.363342693 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.362978666 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.36354359 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.364034441 seconds)
  done (took 36.719246788 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.381487522 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.62535584 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.786873581 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.386406799 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.382179083 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385987923 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.461224061 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.383315257 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384680433 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.385425512 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.54857182 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.383885506 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416930772 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.814129059 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.3860589 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.38347567 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.382413498 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.38127867 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.631555783 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.3917706 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.481745017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.383744706 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.461400586 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.392810901 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.405736697 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383902658 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387371682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.943408832 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402010099 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.550337586 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.16541512 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.464923821 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.895189882 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.819104744 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.166588624 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393380852 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.384135633 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.554036059 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.386526509 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.384665838 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.463154693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383860137 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.796686356 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.04492021 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.402199402 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.384186072 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.961751093 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.572965198 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.626474371 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39243869 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.824715291 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388266113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.385227854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.385383071 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.626342118 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.391316046 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.384330957 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.94793865 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407731327 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.46413743 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.3852035 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.384870332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.640665363 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.385190004 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.629536999 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.387031625 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.394327594 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404635889 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.805973019 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.395657805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.073060991 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.405376752 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386309366 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.552080218 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.629421376 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.996401757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.408458496 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.644478262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90970522 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.478492045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.390224493 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.935289398 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.482791111 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.389701933 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.389473338 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.38890256 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387428941 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.4321983 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.462221908 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.002161022 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082218053 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.971979049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.484571892 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.399442182 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388842064 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.951822002 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405856165 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.388281738 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.794081217 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072975952 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.404907903 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395678798 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.073912323 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408640513 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.466763742 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.394352334 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.807849953 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.388012527 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.432630065 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.388772491 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39512487 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.411511358 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.466201316 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392760656 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389661823 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.041918718 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.580092648 seconds)
  done (took 182.551550715 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.381722297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400571101 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.390187923 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.38378935 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.383519063 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.391019487 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.38232698 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.382951016 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.388209784 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.382413354 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.382803944 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.384826198 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.382621627 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.390081849 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.394010349 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.389812529 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.995120365 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.383791912 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.382622645 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.383999228 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.178286439 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.391196816 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.385040565 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.383137463 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.384493619 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.38282295 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.402071367 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.38642315 seconds)
  done (took 153.525572387 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.391056936 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.951716843 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.417809636 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.521107968 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412296323 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388810314 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.518863093 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.455786815 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.408465737 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.388780533 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.389169852 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.686257998 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.393153553 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.896796543 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.580871103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.544147398 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.894811029 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408281048 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.390053262 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.389076271 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.522346984 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.396058906 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.687560028 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.944944304 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.410096344 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.94509872 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.376155931 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391793715 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.390884326 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.947420726 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.40802303 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.690323817 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.468633613 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.452591848 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.974257157 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92570559 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.914674719 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.540066668 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390876987 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.390666314 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.389032358 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.376058127 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.952167614 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.412240479 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.394354493 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.93924405 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.411986186 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.394356584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.398761802 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.390590004 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.451665125 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.469613453 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.717548792 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972480577 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.495132882 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.406364518 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.525221756 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780482666 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.396494543 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.899436075 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.377250924 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.965201478 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.417932274 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.377798879 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.393001425 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.398529966 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.541374321 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.52287764 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.903403054 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.414788416 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.899751237 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.559517051 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.393574197 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.39280769 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.396029969 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965459873 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926277375 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.559827675 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.527383474 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.587351041 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.380600648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.393688225 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.379104575 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.471436293 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.393738404 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.968243368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.927765939 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41333357 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396492619 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.395775297 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.39618367 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.570088197 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984853703 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.498558838 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.892215694 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.721205145 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.711825811 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.406668658 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.454426262 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.412082734 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.703834041 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.405122696 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.45216117 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.844539285 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.705841354 seconds)
  done (took 165.869602559 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.64061909 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.604203117 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.48394555 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.548618678 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.003134543 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.969034542 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.724087186 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.543937618 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504753962 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.656298864 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.54900165 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.492506758 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.607015706 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.472542127 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.149389796 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.482983387 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.506886016 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.552378371 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.560631359 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.403821686 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088292137 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.707301139 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.586218578 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.330595602 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496324811 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.184944215 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.956793968 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.960249275 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.572092061 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.735632032 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.936725269 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.520138054 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.379639574 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.111182733 seconds)
  done (took 67.327205872 seconds)
done (took 700.357914711 seconds)
SAVING RESULT...
DONE!
