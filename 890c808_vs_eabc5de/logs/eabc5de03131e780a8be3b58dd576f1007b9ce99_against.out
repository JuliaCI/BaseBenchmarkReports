cset: moving following pidspec: 1956
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235591176 seconds)
loading group "string"... done (took 0.457024723 seconds)
loading group "linalg"... done (took 7.461899449 seconds)
loading group "parallel"... done (took 0.169051203 seconds)
loading group "find"... done (took 1.158519355 seconds)
loading group "tuple"... done (took 2.063311536 seconds)
loading group "dates"... done (took 1.313506708 seconds)
loading group "micro"... done (took 0.245526257 seconds)
loading group "io"... done (took 0.722410404 seconds)
loading group "scalar"... done (took 41.002497575 seconds)
loading group "sparse"... done (took 12.544684711 seconds)
loading group "broadcast"... done (took 1.136052739 seconds)
loading group "union"... done (took 14.190791905 seconds)
loading group "simd"... done (took 5.144820132 seconds)
loading group "random"... done (took 10.308571977 seconds)
loading group "problem"... done (took 2.032367052 seconds)
loading group "array"... done (took 23.151160641 seconds)
loading group "misc"... done (took 1.40884916 seconds)
loading group "sort"... done (took 3.55574311 seconds)
loading group "collection"... done (took 19.261044689 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532596496 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139604717 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130741923 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146553485 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201748619 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143194821 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154853403 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113111289 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942158695 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179448661 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152453471 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509273518 seconds)
done (took 5.067674119 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223694047 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093530689 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103373963 seconds)
  done (took 0.859205705 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076563359 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144326243 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09368292 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077352347 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093923397 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076617339 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094392751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077099142 seconds)
  done (took 1.326278264 seconds)
done (took 3.163154643 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730332137 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278748317 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201181133 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458621697 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193643355 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213810236 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676438439 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333485782 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249734708 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099737908 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142059872 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383232824 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136158763 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687465069 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090591868 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122449152 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.1777604 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450383342 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082158219 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109100568 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115913173 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141614852 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128253695 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090160244 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183537717 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08237983 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191442249 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108112991 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079398374 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286781664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200842093 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693324063 seconds)
  done (took 10.82443067 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109831906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132132052 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09744892 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137664477 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132820953 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097898844 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085798976 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095320617 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120127645 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173915171 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113684849 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134470623 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095040598 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081219482 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113521517 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243122928 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120116043 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102751598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099497646 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102910425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120640674 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111518676 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107132311 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091934542 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164790535 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220385708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112066571 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127283166 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097398853 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111024187 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142336412 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142752864 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093963298 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.078965881 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170468048 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125823489 seconds)
  done (took 5.090712642 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184697146 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118793773 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166401023 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161711609 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138368971 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15746325 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111278373 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251654086 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111260558 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16240969 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138851825 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115453595 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079739462 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097913654 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09483926 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.657792889 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120738329 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153363561 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11509501 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102706044 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083065609 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364290862 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101368443 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079076814 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097170292 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064521919 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157289769 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155836659 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099449434 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.135494708 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123953089 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080318983 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133411521 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207213817 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079628319 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124389336 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132873977 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078965602 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094800035 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172342623 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086490875 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096496726 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100198642 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135189504 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131935701 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097959773 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09528902 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20238518 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081454102 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113303919 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.944926445 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180837716 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090023418 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094931857 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319034323 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096688037 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096569341 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076122669 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273455692 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180914036 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094123393 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080271005 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096552025 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078252336 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098003612 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404918484 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09585474 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73122277 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083437632 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105889854 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081905296 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096112315 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103261796 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085621938 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114721658 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07917955 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098115802 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078130212 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095338093 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079935763 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10811852 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101317533 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078772301 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16370978 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079521688 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113708235 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125946116 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082682969 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094189987 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128642402 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081770374 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096503169 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132802503 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080350283 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108467839 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093076845 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082240385 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141871579 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095893262 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178933619 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080146928 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127273873 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097933651 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113874543 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110760043 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09852569 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083516706 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094590389 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075838663 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163923351 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078703376 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096927199 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079911916 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109561121 seconds)
  done (took 22.46843775 seconds)
done (took 39.052493948 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323026396 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101893159 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101447079 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101035691 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098166238 seconds)
  done (took 1.466360623 seconds)
done (took 2.182839041 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283969795 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210675558 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076540602 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165684802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093104156 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170608795 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157466145 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111037098 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216775328 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075840976 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17934552 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077509735 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09290006 seconds)
  done (took 2.653157532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093474683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113409946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081625549 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110298154 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075365866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110185748 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09135257 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116223313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10817842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083331174 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091992266 seconds)
  done (took 1.789137972 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093257303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11138392 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081496081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108945882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075215942 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109691071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091111033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114395315 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108474301 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08496175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092121196 seconds)
  done (took 1.783117737 seconds)
done (took 6.931642353 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089407398 seconds)
  done (took 0.796688243 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.91366896 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.897766507 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111842421 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148417715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314258747 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171487882 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469506731 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124402444 seconds)
  done (took 11.062696266 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113893231 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113439384 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09914824 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084336363 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102968456 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081197874 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0986094 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098804054 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083959951 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102318128 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083076552 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097908478 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100459267 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085313494 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09872312 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080841888 seconds)
  done (took 2.303185066 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117376971 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11738602 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104029213 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107708567 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085684393 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103458799 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105558317 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088138347 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100717374 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102286115 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089469171 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104198858 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102585004 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078716917 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104565481 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106241988 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084628162 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105615915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104663113 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088465995 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105011006 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094438348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085607113 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104794867 seconds)
  done (took 3.214398675 seconds)
done (took 18.089300122 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156789597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107129638 seconds)
  done (took 0.98501282 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094391347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111808629 seconds)
  done (took 0.930080551 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095970972 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094300501 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120703709 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107990112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079195931 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095126112 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118170048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078916964 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095048353 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079215317 seconds)
  done (took 1.69230422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081708094 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10846221 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100026512 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093798964 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10411388 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094029068 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085872207 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097815885 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107398115 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075232651 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100215322 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111918175 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084043537 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114380256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102978137 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081958447 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099719846 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096900117 seconds)
  done (took 2.467061043 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078664189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096872792 seconds)
  done (took 0.903593532 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079993069 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092537758 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079427785 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095744791 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093283035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075937502 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093453823 seconds)
  done (took 1.338211873 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505501192 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134662322 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250063739 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084155743 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.11838646 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296382626 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097104962 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083258659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10184453 seconds)
  done (took 2.45594822 seconds)
done (took 11.49755449 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09245078 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115740915 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109983124 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459699007 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105419789 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095771132 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158729973 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248308903 seconds)
done (took 2.119386687 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148558091 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323218485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113273025 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066325136 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093816827 seconds)
  done (took 1.332261492 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079328455 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098262805 seconds)
  done (took 0.911518245 seconds)
done (took 3.127530815 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079562069 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.129895057 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078827261 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095305821 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077296099 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097737049 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076985203 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.094399176 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076505036 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096233713 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095506312 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079320802 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.095109228 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.078907971 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096022494 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07705566 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093884117 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079161724 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092871011 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076707564 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09351463 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078818569 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093056801 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07599487 seconds)
  done (took 2.878725841 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097587844 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096247314 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10164045 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084596928 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100024779 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085275596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101621377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095863278 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084848296 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09777724 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09925179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083162749 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097992395 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083444996 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098241274 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099783081 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084880781 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096910476 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081296686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100415062 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100794799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080250004 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102261595 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101759219 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082390886 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099976109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082230502 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097735032 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101709237 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083452745 seconds)
  done (took 3.541764089 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084300695 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093341095 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078539381 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101452597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077124169 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095948735 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076342537 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094705902 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078266867 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094740574 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07831227 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09475929 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077353303 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096413866 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077958097 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097603555 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106455037 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076980584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094042058 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077246618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098200913 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07772197 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094700928 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07695504 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093996641 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076506005 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094867869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077566955 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095070109 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077293872 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09807879 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081343683 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09404983 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083825954 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098907124 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07778023 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098456369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076982807 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094234322 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093729256 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076920597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094177896 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077081959 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101011252 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07804952 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097088448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076666036 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096189192 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077783183 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098035257 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076542668 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094474513 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079284324 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095158935 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097530296 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076561172 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095063797 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07727838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095699134 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07703937 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093725176 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076323049 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096385712 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077535194 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110261722 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083940745 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093659383 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079099488 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095257658 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079376191 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096176978 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107539878 seconds)
  done (took 7.080757608 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082041635 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104485575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079706127 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096481482 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075598897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095130797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097884789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078227986 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096399192 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083516853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094368517 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078689546 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095446152 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106035396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077458456 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096016125 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083514934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092604042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077679293 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099469337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078572113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09759124 seconds)
  done (took 2.71163271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205841253 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103698192 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140963306 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10568246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081655803 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104599443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101456417 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086437751 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100768145 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081648827 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099061555 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101054833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081807885 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099740379 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099232773 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083574961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101481388 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083262657 seconds)
  done (took 2.610879098 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091224715 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097173231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101090345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097245518 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097324619 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082226568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103700621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105638175 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08216907 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097325841 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089450622 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099146585 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099799542 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080665534 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099732784 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080008765 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099166325 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080615261 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106018813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103320564 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101974773 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08979291 seconds)
  done (took 2.836140642 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095051561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100233938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116414152 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082162187 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093653907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078169148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104377179 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080824763 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105545469 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099385996 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080148535 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095751997 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087153909 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097309036 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103059269 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08000037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099027502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080336745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099235712 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075759944 seconds)
  done (took 2.606174584 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101629769 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099277991 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098247191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09063536 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099474113 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082097671 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108734975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099833279 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081804416 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123009173 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098664431 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081376853 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106909081 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104652698 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099457308 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091045249 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108406049 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108181586 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081773982 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09902831 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123567458 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082629508 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107692318 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098871634 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.191327106 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099110284 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098289812 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086803678 seconds)
  done (took 3.606623918 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080371624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09811294 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077949456 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095549587 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077933323 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095511677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07853194 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096407683 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080859218 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095729718 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079857016 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098283759 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080549416 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100331548 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081008963 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098328645 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080236387 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096496119 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078030922 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095215854 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08004453 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098307454 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080608347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095795367 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077538701 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097797869 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077917127 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09514579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080042761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09541838 seconds)
  done (took 3.400741428 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089152056 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105099037 seconds)
  done (took 0.950537801 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077362482 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113455432 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077654565 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102607353 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102268357 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08118546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106487276 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085042365 seconds)
  done (took 1.501702714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095289872 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108782175 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081756233 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110139283 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10831857 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.093561092 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163311683 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100119477 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086422078 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0966554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111902338 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079495209 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104907407 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081046861 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104736801 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086660054 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096146885 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086423035 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102332426 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096433963 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082106801 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109020332 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083096528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095120758 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081701784 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10878006 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10771705 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08239221 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101368191 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107442764 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086585922 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092393958 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080964814 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099183534 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079723732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108275688 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110988543 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083219885 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107221353 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08219919 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109434672 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09368197 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086624778 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104802805 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091499494 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099180097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081982503 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093740275 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095961274 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083319178 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094630424 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080661748 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093011902 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087605023 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10331628 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111472206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079537603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099672974 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08385864 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101959712 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086586481 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100868103 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083310265 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097955333 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105822622 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084990691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105984244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076330458 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09289134 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07902227 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106706698 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121774761 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090021336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100075982 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082046135 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097029258 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101841045 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082145552 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106056495 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08959419 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098599364 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106241858 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088848111 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098465564 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084070852 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106519322 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097061007 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083449781 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096114604 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096587848 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097951743 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078899659 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096824572 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10779083 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084644847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098862712 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078935471 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106394288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075564901 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100526775 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085881977 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099850881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107574643 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086852562 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105033862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107263414 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088145561 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099973791 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083803083 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095808883 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082469304 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101619132 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106447776 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075271561 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102481763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082872054 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10022571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088592623 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097587953 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081319064 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10624501 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105889942 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079880616 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096331117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083854886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099406927 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08529145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105972887 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097884142 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076726622 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094921737 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084736733 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099131388 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085927702 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10400221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101682143 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076414043 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097374938 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085774809 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106838753 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099095032 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081518902 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104262288 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082127396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098608675 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086758243 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101514544 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080226242 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102572577 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101132722 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076504073 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102991506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083854685 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098718813 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085084044 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103510575 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101278399 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082283005 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097573728 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086198218 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101509994 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081019871 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099076844 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080071579 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108513055 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102343908 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077166955 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096143694 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0891465 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097196016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081113015 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097752842 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102093594 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.081980824 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097733083 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081253787 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101306702 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111110787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086585625 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100862674 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086149371 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108711616 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080578463 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101863049 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099697133 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083236464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100830783 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08856738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105398258 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104979514 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083724115 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09578477 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086576328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106715652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080895548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097845891 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080545249 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103077352 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106399481 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085441828 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100104962 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079792748 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100308239 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103660279 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083908662 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099043555 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080660814 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104275315 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080180628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106244313 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100863259 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09095778 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102717806 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077500422 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103813079 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09777347 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087292862 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094523723 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079579858 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098038146 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082718902 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098239038 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083714802 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094504464 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087981452 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10806566 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099543358 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080306826 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100246163 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090047842 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101400572 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084570674 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103243491 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104944522 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093776978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098861145 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085622613 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109295368 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099671867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075167686 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104964707 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080234419 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099525358 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080137401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097667024 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08504819 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108912395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104699093 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075761719 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103112867 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080364155 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098785329 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076961611 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106742474 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103253076 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083109052 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109422776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083109463 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101257634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084929188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100676378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100297436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082827852 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103278102 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083157844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102397599 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080947877 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101273395 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098907624 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080009108 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104226311 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0819431 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100756588 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087075499 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099565387 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081986527 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103279982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101533054 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082448477 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100599087 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0815304 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103977831 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083160815 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100968273 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085177812 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095924184 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107671082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081988933 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107849379 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082810418 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097239536 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086327722 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103184941 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107657127 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083244378 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10100756 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082993035 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10051206 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084901441 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108349696 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097704857 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090297607 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105968185 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082965712 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103996733 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081970582 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101859104 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079966349 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102813061 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100600167 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081881356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100222168 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087328316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103328751 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082084208 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102785373 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10093747 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081898807 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102123762 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077107842 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099829157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081261395 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101173871 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090084042 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101401311 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102911137 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081305981 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101172025 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082154997 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096907712 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089288927 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109624667 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100997047 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090242535 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100134115 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083930794 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109311441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095178316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08006952 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098948975 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080056879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108161749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083377467 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109156715 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082066407 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09987259 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097701346 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083288988 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099806379 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076571503 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098247917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085579532 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103753936 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081633582 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101188304 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085292761 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101806546 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107581525 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081268291 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102224088 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082054893 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097531858 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08072699 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099677991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084229204 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101919932 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098388511 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080025414 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100410017 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084149467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102009775 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081953985 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110581879 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089312824 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100429674 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103610093 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086086222 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09559783 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085286121 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100857326 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082615087 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.1001551 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085466755 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104383021 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101991083 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089152102 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100587912 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083244035 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101402031 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079780699 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101045107 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100025773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08216622 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099752915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082779493 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10897934 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080651615 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102990971 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081572969 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10175534 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105000756 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083752702 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102718182 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089718333 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103590386 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083046126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107308333 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103834289 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085503878 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102353626 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083473529 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106588253 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099910148 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091050295 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100825045 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08337047 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101922027 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080747367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10059949 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081191531 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100302577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105399044 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082900477 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099963601 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081753869 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099500422 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083880202 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10487467 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108508066 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084503214 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10442474 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077307083 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097730264 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083343907 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099263326 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084218187 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104234819 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107163165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085115833 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10150117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082214436 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108859141 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088647239 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106488036 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099499419 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086584852 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10192829 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084967231 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103707767 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082459694 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10359035 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087326948 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103632466 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100585525 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090563988 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106277873 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084000124 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102881776 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082945311 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101815825 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096348728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083924932 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103837552 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090051281 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104146054 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083288761 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110902578 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100550359 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082436356 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104784371 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081844949 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108510517 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077530916 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.1016069 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102545068 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083123145 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095968565 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081839471 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099565515 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085039044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099897696 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078255932 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110839259 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107854823 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085558884 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099814861 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082076255 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096975481 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077922359 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100745684 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083961065 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103777883 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109804142 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08261612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10048836 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077846807 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101861913 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085887736 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104635639 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079757843 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096983083 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08139232 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104922757 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107652555 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080802088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102197889 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08538213 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104390569 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080416431 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106312259 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097413212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087585972 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112114778 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084373024 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102058299 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087350722 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109126457 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102304048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078802911 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102269375 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084832336 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102213781 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083338541 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10302787 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115136655 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086380441 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100373817 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081951829 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104598142 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081853042 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109596393 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103000842 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083269221 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106174624 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084647374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110808861 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103870938 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088108877 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103687707 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085047687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101406944 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082947282 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099859841 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081040852 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102964687 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103167436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086928209 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110177067 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081783275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111036863 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110435399 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087430541 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0985618 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082373639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101316802 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078409292 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102575781 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081348823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099818442 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099168815 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082479549 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102781277 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087831335 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104564448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084055487 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101241679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077073786 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103106943 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087729545 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102847255 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098344421 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083906897 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102748099 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088929648 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106038141 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083215298 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103877162 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103575321 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083923511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098072344 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089416631 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100982235 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085998271 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10218505 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083928705 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103067722 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085994081 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107507676 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104025812 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085821256 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115515572 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104530769 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080700219 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099750404 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088280199 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09982675 seconds)
  done (took 57.048415706 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143693736 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080110093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097903455 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078203942 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111486622 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097386749 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079923152 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098885316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080023168 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100763011 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07910301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097785364 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107798446 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12280785 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091538685 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102760267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097659436 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0791027 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097726331 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079230817 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107947143 seconds)
  done (took 2.836311626 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103540638 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115028817 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11363358 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11746823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089234743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114114171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112757755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11357508 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097237813 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109348217 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117332806 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113353647 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089567915 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109069449 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109165022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092129923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116538822 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10831053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114386011 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094041673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111585145 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112292606 seconds)
  done (took 3.177470153 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.082846181 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10082931 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083538126 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097015099 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082235042 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097374767 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086030886 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099876594 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085769406 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101669489 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080058248 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101232365 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10259104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077745561 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100702319 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080553051 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149682551 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106411168 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081328982 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10390445 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0970089 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085452068 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097136055 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078716542 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10038394 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086135993 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102237816 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081650316 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101870105 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08165725 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103279802 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080321312 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104174973 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101849877 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081815517 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100909065 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082611715 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101196106 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077808955 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100755632 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084043937 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098094991 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083061996 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103209849 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080168586 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100019196 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083341917 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101679471 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097065331 seconds)
  done (took 5.38530225 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10254053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158069977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084045059 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140598251 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118468855 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111741119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085818181 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139740888 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10106683 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081960013 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120627266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118968178 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103039585 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088418389 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110538195 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102665707 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08542882 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102110004 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106913552 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082484245 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107999801 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088720842 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118097272 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116944597 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10709405 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082299983 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102611808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106928663 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095965034 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108170469 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108160942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089809946 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119338374 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107104303 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102539931 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086676464 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120593499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103945303 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086156367 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100854477 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08563778 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10887525 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109306294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121208137 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083682702 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108032316 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084175833 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100453112 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116446936 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086191945 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112491502 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118485584 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107334263 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08398753 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108468129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119397997 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08361485 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101692002 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086092 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116323149 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101420253 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087097373 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118789529 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10563191 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111488211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098439223 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108585704 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108683444 seconds)
  done (took 8.035168861 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09250735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110370756 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118960475 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119595586 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090153513 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11071432 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109054963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090362234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109850447 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115816644 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109163408 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1320487 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08460525 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113787807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109550036 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090565199 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110089101 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110095493 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090326751 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110208368 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109503016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119680823 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090006921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11978489 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140733046 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105330202 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089438809 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110441353 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120451056 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10984391 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122277747 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091027736 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110132081 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119823049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122609201 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090320828 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102411791 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108706686 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09071109 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109446096 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104533758 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099597165 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110287732 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104849452 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090111425 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110238941 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119437781 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123033479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112534241 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095900694 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110015044 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118083815 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10925982 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090270667 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118981607 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145979581 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11955237 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120296782 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110185487 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099537256 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119565212 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128235334 seconds)
  done (took 7.588798648 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106655911 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114608035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116945425 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099836591 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081686775 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10819394 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082179189 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100821079 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113083005 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093236687 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115950763 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108011313 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090487364 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1157141 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107311523 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111249541 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088049737 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108126709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112729788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108226718 seconds)
  done (took 2.904115426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092781186 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122634903 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083626517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111240615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10680515 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089904785 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106440358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10680709 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086060725 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106870733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095809199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115842644 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104277236 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090861969 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116210597 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110066753 seconds)
  done (took 2.466778971 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094542174 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116532518 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118950893 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08422284 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102756387 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080108413 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104619101 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099794092 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080042338 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11978146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084018539 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107749702 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106699058 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083352342 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100157796 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087192906 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101429852 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081434199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104149706 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118045717 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094798564 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103688514 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104667554 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085943447 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10489471 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089473971 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105330341 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102324896 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082243657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104646806 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084080082 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112005061 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100593812 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083049236 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102240447 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081939575 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103731616 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085060139 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10839941 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104090758 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082590089 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103706465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084349904 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106070377 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080574525 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105516167 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099752657 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091213531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102752163 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084495122 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104794888 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106505671 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08582033 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116168275 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087835891 seconds)
  done (took 6.185433446 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098934171 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108643689 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079490616 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103441612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086874946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106788472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107530649 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087338725 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106080506 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082259907 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106985558 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08869262 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107333267 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107890032 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08571353 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108637962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079971328 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105307417 seconds)
  done (took 2.589009214 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089176414 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104245232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091765891 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104412546 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083622971 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107623466 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079246069 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104067403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102255497 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084737036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104147793 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086649213 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102765954 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086515457 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104402283 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083682506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107059539 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103021413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084949421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099811825 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086782711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102686583 seconds)
  done (took 2.933028308 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116542329 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124700908 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091434191 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22675771 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102204468 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131105864 seconds)
  done (took 1.622849562 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107713967 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119326 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105592174 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106178288 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114516277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105669789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086937752 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105868373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116263489 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100342489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107158075 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116731966 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116874676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095996132 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115043103 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113071297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106773776 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087520151 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104855152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12693623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087277436 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116961135 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107676328 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086868839 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107367064 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116868818 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116686903 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120416495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086310697 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116696421 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112292921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08669915 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117011657 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122025823 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108454712 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096691738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107889072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126754626 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113473456 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095745069 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1091401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113788622 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096622818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114093022 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117061493 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107145905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091996405 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107485236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106833256 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1345997 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093826552 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11639002 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113670208 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116710407 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117683351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133897812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10126532 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116249444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114589476 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121505725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116275881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092898922 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116285796 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122008016 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113830864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116281898 seconds)
  done (took 8.067205502 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10143749 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125627013 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106953932 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120966166 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096119164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107591486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107066025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086891222 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10756909 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105598469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149837498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087051394 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116747503 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117596068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107558955 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086871338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107775904 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116848048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087096114 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133172682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107758173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116127971 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116710017 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095831768 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121611727 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113974069 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106637873 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087392324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107315609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107153247 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093143737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10886071 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11743783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08580269 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116788509 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107701077 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086352869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113989903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108875782 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113765392 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095503913 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127402575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108314697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107435027 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100671689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108651952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108052107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085812793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107971729 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106268573 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100718754 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122147074 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122318458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117888811 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107321329 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08736485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107680581 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106984543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087372571 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114128002 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117159671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10722214 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134649281 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087517602 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107202685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116995834 seconds)
  done (took 7.949199615 seconds)
done (took 153.24837359 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097305115 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135222552 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095056576 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167904009 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105490826 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117953446 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138151102 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097085905 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105668865 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085220613 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105856692 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086628427 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170685547 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085252741 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106357975 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10704239 seconds)
  done (took 2.64407977 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197825719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.251996068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10108348 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104890069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087982318 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109993103 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103250263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090234428 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108361456 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084370944 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108144918 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085742235 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105357683 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084968195 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109240216 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087175656 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105498566 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086619966 seconds)
  done (took 2.855901049 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111128875 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144800939 seconds)
  done (took 1.099900124 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117745026 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178835691 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317122132 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155279668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105952501 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125538362 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155054601 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128999563 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19586953 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122272103 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121658367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096966676 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139068004 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114297791 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092678645 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117720644 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14066656 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091839786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115072641 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114787985 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115255254 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105919596 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114430999 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092646753 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179275986 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119093624 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083941856 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106133078 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115582352 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093874377 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111964111 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123192928 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096994435 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173875021 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100806605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174570109 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098702578 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111618277 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113968267 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090311915 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117611522 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117534954 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102842838 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117344176 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083617818 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.1182779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105265066 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084465736 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113642562 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095890295 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11429327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112929201 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153025589 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117147647 seconds)
  done (took 7.462897504 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792945727 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154797825 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089587061 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881251424 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13895549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102921751 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777544886 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134701034 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235628514 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760002064 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133687609 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121207234 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226873493 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237051549 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928824265 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307324079 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669634733 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101320326 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150515269 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152175881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117750423 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13662179 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129969774 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429769244 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093889061 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111668184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115757509 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099097512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157234479 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125087803 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1142436 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17673391 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244731247 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204572182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114591497 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08873159 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111136215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168295494 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264646939 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21223871 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18016443 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087024592 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110793798 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120842428 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109828986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108721302 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162738056 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172514082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194417219 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09237855 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120078326 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12003283 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120237597 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164464361 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119396716 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287441305 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321936444 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11193307 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120735305 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104525403 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262527629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122510247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224515906 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115401097 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211985623 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110340417 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781634128 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188850287 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08930443 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117393412 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11796299 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093535238 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120789546 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167404588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408439897 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123333713 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093023934 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11113931 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204692389 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125041706 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110034932 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162059594 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115425804 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099093042 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12452293 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12120673 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169909926 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227600314 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123241938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118890232 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092591999 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125255595 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115566535 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211673616 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21858523 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160929091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211574777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121986321 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162820398 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188199429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097391911 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192628779 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097499118 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124953308 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122126567 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215640932 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145641267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100449318 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116273198 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118005581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146215358 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126159097 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097920042 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166246744 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480423652 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165352604 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108180296 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12685496 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09897771 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160427296 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117544549 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261426368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12157315 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168885637 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117762969 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087856997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119770939 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164701286 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122672083 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099037225 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122069104 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118464442 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231940645 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216777952 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120961992 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220797252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184067894 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11841495 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172067259 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120277488 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167833781 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119537129 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119451655 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094496311 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79615596 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122754814 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097657235 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116041502 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187034609 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110821073 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101920415 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125384855 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107573823 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786150822 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12674653 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120890752 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101574427 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119221294 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119519098 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094686388 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116192193 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161548942 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22908091 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120363447 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119476472 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101377213 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180388848 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094480137 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124689641 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124185017 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124097533 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100342226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114942637 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123749311 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169649839 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16181704 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218420821 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594004628 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089545612 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124237958 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228462772 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089185827 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288116085 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119620364 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223293663 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163946251 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119839729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317275528 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166332584 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186617985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126354037 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173862444 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085896599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118660907 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164120342 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111950309 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116996913 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162209433 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124608556 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102858253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952270242 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111896679 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228674844 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085116693 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192697246 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094433237 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120475755 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287561018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110933706 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107435431 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185407382 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09255306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125360432 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848433056 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126167664 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122415497 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118247093 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200368394 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184312426 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095701144 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11929161 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120043828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162565007 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210274963 seconds)
  done (took 44.004937658 seconds)
done (took 58.910444962 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272343895 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212447992 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255034246 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167116594 seconds)
  done (took 1.848513142 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169005096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146307543 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119105265 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106830973 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148208416 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084352077 seconds)
  done (took 1.64079649 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353910953 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267291687 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236695209 seconds)
  done (took 1.730151646 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28478432 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246930559 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352878035 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415087687 seconds)
  done (took 2.29081053 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206611165 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13034893 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11035927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103031204 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194696053 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248011967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140276313 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199961831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121116956 seconds)
  done (took 2.372086808 seconds)
done (took 10.755298989 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.230504619 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.215881754 seconds)
    (3/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.154246601 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.221676773 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.174761622 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.145129282 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.123198083 seconds)
    (8/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229137491 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128331867 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12171781 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0944547 seconds)
    (12/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125633936 seconds)
    (13/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10022449 seconds)
    (14/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114754635 seconds)
    (15/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.250360878 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095080686 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.256325734 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.180644921 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180230512 seconds)
    (20/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117753958 seconds)
    (21/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.199709809 seconds)
    (22/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.108088298 seconds)
    (23/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116079773 seconds)
    (24/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076534323 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.219540587 seconds)
    (26/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.232016331 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126765962 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094307259 seconds)
    (29/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.136245385 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121594344 seconds)
    (31/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.228973038 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210956501 seconds)
    (33/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.160782673 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.115930509 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066733653 seconds)
    (36/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.155609848 seconds)
    (37/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176803881 seconds)
    (38/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116516287 seconds)
    (39/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117025651 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138489466 seconds)
    (41/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.187130356 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134774554 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124931656 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136002491 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093609495 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112964821 seconds)
    (47/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.16042983 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116729227 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091338228 seconds)
    (50/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.098808595 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.09850074 seconds)
    (52/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140082323 seconds)
    (53/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06638459 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110241419 seconds)
    (55/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084850685 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.139034209 seconds)
    (57/286) benchmarking ("sort", Float64, true)...
    done (took 0.225817994 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11427401 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085020968 seconds)
    (60/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.186661211 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116219774 seconds)
    (62/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.160398559 seconds)
    (63/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201293214 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192924984 seconds)
    (65/286) benchmarking ("sort", Int8, false)...
    done (took 0.186663773 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108254877 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 0.08665626 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136611652 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135824235 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092197754 seconds)
    (71/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172501934 seconds)
    (72/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095962567 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091819557 seconds)
    (74/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06948366 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.197192867 seconds)
    (76/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084855736 seconds)
    (77/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153347688 seconds)
    (78/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066247154 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137035688 seconds)
    (80/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199309524 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168574425 seconds)
    (82/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093494089 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136239786 seconds)
    (84/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096242171 seconds)
    (85/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119048635 seconds)
    (86/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122742187 seconds)
    (87/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.124444552 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169155902 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162022794 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09365477 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116679865 seconds)
    (92/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.125770722 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.089289634 seconds)
    (94/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076572379 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116715946 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109900763 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127078463 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086379376 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184504841 seconds)
    (100/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089983264 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11426587 seconds)
    (102/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.089415055 seconds)
    (103/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086983725 seconds)
    (104/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227934541 seconds)
    (105/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145858012 seconds)
    (106/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091032529 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111002832 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 0.18143531 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117652177 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093772813 seconds)
    (111/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182971972 seconds)
    (112/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.172639559 seconds)
    (113/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.166377575 seconds)
    (114/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091507576 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091255821 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132291944 seconds)
    (117/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134496213 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086001504 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108749886 seconds)
    (120/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.117092795 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117656557 seconds)
    (122/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092413587 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088745844 seconds)
    (124/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132538265 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118035264 seconds)
    (126/286) benchmarking ("sort", Float64, false)...
    done (took 0.170674487 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093396999 seconds)
    (128/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088942181 seconds)
    (129/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.167122916 seconds)
    (130/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.186951444 seconds)
    (131/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.096452364 seconds)
    (132/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111822209 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.119999592 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109763408 seconds)
    (135/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109890583 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086129629 seconds)
    (137/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183086635 seconds)
    (138/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134858999 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085951105 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116592085 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085533639 seconds)
    (142/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114256682 seconds)
    (143/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131966638 seconds)
    (144/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088489628 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117269885 seconds)
    (146/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147856834 seconds)
    (147/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119726238 seconds)
    (148/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068226322 seconds)
    (149/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173926935 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115415119 seconds)
    (151/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091603901 seconds)
    (152/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140448167 seconds)
    (153/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090134417 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12350885 seconds)
    (155/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.147333092 seconds)
    (156/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116518829 seconds)
    (157/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075710812 seconds)
    (158/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182610717 seconds)
    (159/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174169383 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082586941 seconds)
    (161/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115747521 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113875646 seconds)
    (163/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089880075 seconds)
    (164/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.163690995 seconds)
    (165/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090296033 seconds)
    (166/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066908778 seconds)
    (167/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067477926 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090575555 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066193689 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115796345 seconds)
    (171/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067188541 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084969657 seconds)
    (173/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107827634 seconds)
    (174/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174322319 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095654371 seconds)
    (176/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.0901581 seconds)
    (177/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157032321 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089413162 seconds)
    (179/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.145454917 seconds)
    (180/286) benchmarking ("sort", Int8, true)...
    done (took 0.218185179 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138252572 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110304615 seconds)
    (183/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067460411 seconds)
    (184/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.119928904 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.219047143 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085145446 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118829488 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099427179 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.089733036 seconds)
    (190/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096514079 seconds)
    (191/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113138481 seconds)
    (192/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090708369 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.099380615 seconds)
    (194/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065912644 seconds)
    (195/286) benchmarking ("sort", Float32, true)...
    done (took 0.228450978 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095150857 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118036252 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08552835 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09286532 seconds)
    (200/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088524476 seconds)
    (201/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090142998 seconds)
    (202/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119679462 seconds)
    (203/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.088930644 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089367716 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127449492 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186463618 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086222557 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066855389 seconds)
    (209/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117989857 seconds)
    (210/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088068668 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115314791 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119991912 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084918899 seconds)
    (214/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141088002 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08669979 seconds)
    (216/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.287997891 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090861535 seconds)
    (218/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093190308 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110266881 seconds)
    (220/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096831358 seconds)
    (221/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089652212 seconds)
    (222/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075849519 seconds)
    (223/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090726116 seconds)
    (224/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.066800794 seconds)
    (225/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077975139 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089750973 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085606428 seconds)
    (228/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07469992 seconds)
    (229/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100728825 seconds)
    (230/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218941173 seconds)
    (231/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075398491 seconds)
    (232/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090711331 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085652163 seconds)
    (234/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.151371239 seconds)
    (235/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086360325 seconds)
    (236/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099436287 seconds)
    (237/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.118992684 seconds)
    (238/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09077029 seconds)
    (239/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087874274 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161987408 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092251959 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108666993 seconds)
    (243/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067084682 seconds)
    (244/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162075747 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117861697 seconds)
    (246/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092619726 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108706483 seconds)
    (248/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08508003 seconds)
    (249/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118779242 seconds)
    (250/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098886385 seconds)
    (251/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118690735 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066739735 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089158766 seconds)
    (254/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.155784826 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109739318 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066164426 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117023111 seconds)
    (258/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06651524 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134911138 seconds)
    (260/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067864591 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065884381 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117523583 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107924219 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084221717 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108783544 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094665159 seconds)
    (267/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06527583 seconds)
    (268/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090243593 seconds)
    (269/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086914339 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091081801 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092299894 seconds)
    (272/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.099167221 seconds)
    (273/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094503049 seconds)
    (274/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066310266 seconds)
    (275/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099763721 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087781868 seconds)
    (277/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110377564 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067827515 seconds)
    (279/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155310623 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091248472 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109544966 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085348794 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11052035 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087362539 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111456032 seconds)
    (286/286) benchmarking ("sort", Float32, false)...
    done (took 0.173203638 seconds)
  done (took 35.719361682 seconds)
done (took 36.594212444 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099132196 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146661366 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094539605 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13476307 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123156955 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090957537 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117054429 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097142496 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122281251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124434828 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097364535 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09323867 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096066455 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119485415 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095708216 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137303077 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122917421 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09256051 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117245991 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084676483 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119923987 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085367374 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110489219 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068984914 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120467399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092500165 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114940839 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119353657 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085367683 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109093732 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089215428 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116113764 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085662718 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12289828 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092218733 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117468327 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095849935 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119317367 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110554403 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085902421 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117189091 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085334464 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116037559 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093189711 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114087583 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090958924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11713949 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097462153 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137834907 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11477124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093254821 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118971822 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095591372 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117058213 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090748454 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118380116 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091233843 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138314847 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118937782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090909221 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116780118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094016407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11523919 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094142584 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117365262 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119481786 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097028116 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113882803 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096176078 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11419569 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085106897 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117426241 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089815015 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.1097602 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094591209 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119715664 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108212155 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091765511 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115989867 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090765151 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108364612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088396307 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11083647 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092750652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111778012 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069189343 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113102931 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092543675 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109037623 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095379825 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115787004 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09325718 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111965601 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097868675 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109424624 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091254249 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11007411 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086418034 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112482788 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090639702 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109704352 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088427458 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118218263 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08725154 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115725465 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122114672 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085433677 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116634245 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085889497 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10895798 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100834296 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119977319 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086178308 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115367967 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085669697 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116787425 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085595203 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109629271 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08579254 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109085485 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092134678 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110175447 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112579131 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093531885 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124632982 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086392792 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112513549 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089201147 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109611333 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092144754 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11019383 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087024221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112096402 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077546733 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112473962 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087246725 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118108132 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089223917 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118747191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088298653 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118894161 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090560733 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116889533 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091161488 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109493086 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073982253 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115707377 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089036198 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112246049 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.085775376 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111826919 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086350303 seconds)
done (took 16.746879001 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086447884 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182130465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150249157 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14110227 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106626714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111264076 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120638822 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116781472 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112335654 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140981923 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109710075 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130577564 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146884068 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086896756 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111020858 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090657712 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113121274 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101287914 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144341527 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132068009 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162355305 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085482418 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146009255 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134480817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120112123 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113696903 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111186818 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090456939 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114494795 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101804267 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130988811 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114122625 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087053373 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132440386 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102664755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118565947 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087119938 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11829018 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086871624 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111418598 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139523847 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132031601 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091551475 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116702283 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09067559 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113999058 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088217604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120024303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097550792 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115966491 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125859374 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154328679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089860108 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12120184 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085456101 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121674624 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120655341 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089191813 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111760578 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089463597 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110395594 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090718266 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126600593 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140436866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090839467 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120786767 seconds)
  done (took 8.527508482 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103603775 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138659732 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103975205 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13028089 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110780422 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087686959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112201668 seconds)
  done (took 1.726289871 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087393242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133404938 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110634951 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134452557 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130855016 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111099297 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122797895 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08740373 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129977138 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088333052 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132992075 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149387031 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089328597 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119757643 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136929117 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088359448 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137038509 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087686389 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115361668 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111959294 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1157851 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135460873 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089420669 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113236898 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101778189 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113568955 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161012283 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092419737 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114135941 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091782592 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111431274 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149654025 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10177576 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123557023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087790632 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128867667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128203598 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086427103 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125564791 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093524554 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128438688 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089459076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11443135 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086403099 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117509467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098409659 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117247311 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089701107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116598826 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132363292 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088497016 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143695122 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088304915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116952233 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089524875 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118381865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096876398 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113280182 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132057359 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089328877 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130127156 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104559086 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127546288 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129175021 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090792896 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12684861 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102834882 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115570491 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089492197 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116889245 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104401549 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111836713 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089884417 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124038321 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114795005 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1113283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136343619 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090397363 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123984725 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087538964 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113883834 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113872918 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110959904 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116783196 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088124335 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116957021 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091717789 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111954909 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088370704 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116675534 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087389321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11763495 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09154116 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113933605 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09059361 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128727762 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113873461 seconds)
  done (took 11.722691737 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089708636 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11415331 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090425345 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114115627 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090032811 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114391785 seconds)
  done (took 1.563371374 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113493359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117510532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102992029 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119900392 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155422182 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10262199 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128424234 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122335737 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106969283 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126489004 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12841588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103766934 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134241014 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120310084 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103715166 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119613409 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102445731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124818658 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126311463 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09506875 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136003583 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119928817 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095866328 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130846385 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117369733 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09494774 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12550336 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101854971 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126480756 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122325662 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096068577 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116445466 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096358876 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121792228 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128716056 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095209043 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119700086 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118420003 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099054585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116914822 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103824581 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119616927 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126682431 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093044013 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122704011 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119887586 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092510189 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124415628 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102331789 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118113072 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118110896 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094887817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11650711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092895474 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120002681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121858644 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09313444 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129819598 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123074603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094928887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11929379 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092142551 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123913668 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118089845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104070644 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118213956 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120374575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096213626 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120679211 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094710203 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118444179 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092396648 seconds)
  done (took 9.134013108 seconds)
done (took 33.610596872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686648624 seconds)
  done (took 1.635812741 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.809699327 seconds)
  done (took 1.760367797 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.699943629 seconds)
  done (took 17.676418592 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.487343511 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.337693135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.981060646 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177616267 seconds)
  done (took 5.931657864 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.9442138 seconds)
  done (took 1.912680253 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280815642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233886248 seconds)
  done (took 1.469348864 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.762776908 seconds)
  done (took 1.727102839 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.36281493 seconds)
  done (took 2.315797555 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322447573 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182357456 seconds)
  done (took 1.468148151 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.542122174 seconds)
  done (took 1.509275734 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.252832715 seconds)
  done (took 11.223881292 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263761524 seconds)
  done (took 1.242302494 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298870275 seconds)
  done (took 1.267071854 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.537077 seconds)
  done (took 4.506493363 seconds)
done (took 56.607551807 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097842893 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125967638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123764441 seconds)
  done (took 1.410892055 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09962906 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120146531 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099377379 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120318498 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12504739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095420207 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121807195 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100662138 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120241584 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096310259 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121312591 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118631256 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09779645 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122197281 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092881242 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123650491 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098710586 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119765328 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123922575 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095951745 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117688681 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096344834 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124193169 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094059394 seconds)
  done (took 3.617401136 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099720864 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118353255 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095130362 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117810979 seconds)
  done (took 1.410649606 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099034018 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131164992 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104679402 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124640788 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13052821 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105139446 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116766812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090967119 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118810987 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.09780787 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11468652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137757628 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105141202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123020044 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10082151 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112709151 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.089524263 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130210258 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123535622 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099722426 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116487952 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097848387 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114456145 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107407669 seconds)
  done (took 3.670067973 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169125642 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125734393 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137365128 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094427638 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158751341 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139490558 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087321171 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139787401 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086657601 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129640117 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117887957 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13304496 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128777787 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087823036 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11362974 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087026153 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12802769 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128270171 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089870562 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128244644 seconds)
  done (took 3.395023194 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096375211 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116693625 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08813807 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115995557 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09841055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119598961 seconds)
  done (took 1.614659983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090022656 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113624403 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089142983 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113311146 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093258348 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113764934 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087351358 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113540335 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088920993 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114268603 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088483341 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113117054 seconds)
  done (took 2.198698007 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497699467 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119881983 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118979881 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091412515 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120878168 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09005192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129015672 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091364161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139536704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087876694 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11501979 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08958732 seconds)
  done (took 2.670956872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233885022 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124002079 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28085515 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365040983 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154753952 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16374832 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275242368 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159646302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19500302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148788169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228049214 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193263514 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15019379 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189319572 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137184885 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143241282 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187098906 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248338673 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151046116 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209247908 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204399778 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165331256 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178387677 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150361926 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110338411 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19214531 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093641086 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12962468 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231263513 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177560037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188002908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159065755 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145794535 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234828191 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246068786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193431704 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276062879 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13263515 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16467099 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14140273 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262354463 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138321789 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232390295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154313067 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103352878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218868736 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163880274 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175151757 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144477307 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137881802 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196202373 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237829888 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19142476 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137599468 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298472619 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146520527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155054635 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187587633 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250390666 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223229512 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186437007 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119803664 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186587644 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189265704 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209310633 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150895141 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181968301 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146856878 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182176172 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187360246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164231032 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202275733 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178042699 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137958029 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169860073 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171566685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171013462 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257343859 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184159963 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121822292 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167006397 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148904526 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103198292 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192805742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124838101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212716553 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142438222 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16238271 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20611163 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157801525 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159680617 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218361512 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182527108 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148450065 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083444954 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151868015 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154168371 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174041264 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138927248 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158132345 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155342163 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129853382 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166391774 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096175541 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209373516 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090447823 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17190882 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182266397 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12630573 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160859834 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152383195 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14884776 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1759438 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198451945 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141099958 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132547406 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207542446 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176113218 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140178905 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176696409 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226957214 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116525102 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147786508 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22631054 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215069754 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138555593 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228052003 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152438879 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107509508 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132687692 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180264727 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154175109 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16062707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131271002 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182207897 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232156692 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098339221 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137499632 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194382027 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133400084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130323993 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153088112 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146885946 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110693194 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141674987 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144420773 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174249666 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17734068 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154091613 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165529689 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150153964 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246539874 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138696248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149799075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12096128 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120488067 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190659733 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223633653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102708148 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231163071 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170876376 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197281971 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194444758 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106671814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176422432 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129841431 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092355877 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220132178 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168024983 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160997627 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1938324 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220808031 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179120209 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180529703 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190360391 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173389203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163547718 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156045424 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110885838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160652207 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157644155 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123091918 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137279343 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106075891 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149155208 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141323046 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13161032 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196804605 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169492552 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214789574 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157830968 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119962328 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2064265 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100837607 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174845109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202658827 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145746796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197329343 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191281797 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211933065 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115870398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226814381 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.091970869 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125100438 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141357746 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169732294 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132257037 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107821166 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159482692 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178695409 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206237271 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168988768 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204761472 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200199564 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188496414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094117535 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16838763 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182200277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202898271 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.152621136 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139001598 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150253143 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177002867 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153206009 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252441913 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169719803 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174396205 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230908895 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122497789 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1321781 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14959754 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176144416 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153261418 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175086545 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146164659 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13847051 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15970597 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102230609 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158683695 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211614762 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161754914 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185010818 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149385852 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182054846 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127608347 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160403402 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159316189 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163910968 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08000452 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200812954 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201324852 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146588763 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165405677 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213558237 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103961844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307611544 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233792163 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194808193 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137538529 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154985017 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159120264 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161912291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169981547 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177600463 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157576822 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186842283 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158064273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135182347 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110763127 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149477224 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152100951 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131588654 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147198826 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17597701 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137594666 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188490125 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154104802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158664413 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171521868 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148367412 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115187212 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148729527 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241698336 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182878533 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239013477 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149478424 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177714322 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204422042 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125810483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102666769 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133672394 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176986316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136109908 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189511711 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213469786 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197653464 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178452021 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205075039 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110447647 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119667126 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15641173 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167912029 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202656985 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147170067 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146007163 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229877299 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108351684 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131376203 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165658414 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287861544 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14460452 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192555421 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107700191 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27600654 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098675149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130893785 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162374111 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233151871 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107270589 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17795401 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169129916 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159342546 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162901659 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148315232 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189465166 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236589564 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19711543 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20940369 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104508638 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156855845 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174579137 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219176419 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154843446 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109089755 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229410852 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194983723 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192967081 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141460944 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169059139 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166798481 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157051537 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212287635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106489867 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233448171 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133150041 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190495773 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1519022 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136829047 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175035679 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187216898 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140385062 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18507744 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209159729 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106502277 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132073987 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164946735 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175809337 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152028344 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128158598 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179492916 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125125551 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194884912 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258076349 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132986323 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154527691 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118312498 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135268423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1532185 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156926453 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138292588 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140376804 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226008436 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133126357 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190434191 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227331564 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170357355 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173102507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144037238 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692855332 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102117167 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22180743 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118178751 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233434922 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150082252 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17152773 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158011382 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167018141 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192331699 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159399658 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230195803 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218317366 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178145931 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131144924 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156426557 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153805662 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142915641 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123925091 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167031658 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158128638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144161087 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203072846 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164497393 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106361613 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13887659 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197804582 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148455698 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183706933 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177793594 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13928572 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171313662 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214104233 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104630624 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.205803612 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206664117 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141144035 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148585616 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132693648 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147047501 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232789885 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124991264 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186384804 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209108533 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130863742 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193864508 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118029091 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219448964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156866917 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183743561 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141435408 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157395267 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155659276 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136479512 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101983272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155805708 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165569083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14995836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157415159 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163192388 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193276608 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095183193 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142670798 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310591831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175377642 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21330254 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135923952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134992754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160698712 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120417275 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202762338 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176651599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135119428 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10551151 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136385197 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129023643 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135375535 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154104313 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191339765 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164284008 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233186449 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107540553 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279642996 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138480264 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154702474 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088494024 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131642163 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149268018 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144516633 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153968086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19221015 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259098869 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148020705 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106308769 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147866678 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124817837 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10791926 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163973383 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163686668 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176133952 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144055946 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108274091 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154503316 seconds)
  done (took 81.728538383 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180941567 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.140611679 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149570508 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200358283 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175339443 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26813383 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209095553 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252847883 seconds)
  done (took 2.645136002 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092790536 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144912757 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155301419 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131503086 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090569782 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118004382 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341825069 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131989742 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115619783 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.1198887 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172304678 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092573782 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.542688037 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.08975343 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118778533 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106629998 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092074349 seconds)
  done (took 3.720700689 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 46.089508407 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.445051892 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.116382115 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195717884 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.800265045 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.093765941 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71694831 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.167858973 seconds)
  done (took 59.697956058 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113529562 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135321454 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122450774 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151355608 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139300645 seconds)
  done (took 1.731787829 seconds)
done (took 170.476761651 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097231525 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126462785 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095804463 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128375304 seconds)
  done (took 1.510426659 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093801826 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070328075 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100616661 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07343412 seconds)
  done (took 1.409124934 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187914144 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167099644 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403790564 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070605283 seconds)
  done (took 1.579345461 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112946072 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130699789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103154686 seconds)
  done (took 1.430296659 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10514721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128136932 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102297521 seconds)
  done (took 1.415192056 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105127443 seconds)
  done (took 1.184781185 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107037647 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136249928 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108504344 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136141487 seconds)
  done (took 1.568048875 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098558062 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126611865 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107655168 seconds)
  done (took 1.411184959 seconds)
done (took 12.937383214 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101475485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42259383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383185136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144321141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721295358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379845615 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04089403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144328112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163819309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091904634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13801856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670499796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030744049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378103717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985232939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37081914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674362806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120026969 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118318892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092671149 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019850951 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091254832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120726607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091101362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701362141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423716464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093296293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369983364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092276228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125521541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381174293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121460644 seconds)
  done (took 16.872348233 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094764812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17154785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097393282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135735225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122513496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09582357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123776578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092736708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178749797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122204227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108868113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120482586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1246283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093937485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141431085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092206022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12453575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092073015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120479993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119748396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11069622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118713817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093700928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120435931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092966426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135247742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121360103 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092779616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119791914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097944824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126053416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093532189 seconds)
  done (took 4.772541458 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137809704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180762534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127334354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125382836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166821645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123356373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198085636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117188332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181059338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121757075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137669805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09148087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155774044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093188321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141124191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119990751 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095985028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121295641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092637965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122678129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139148811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092789809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120898828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092126263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122111767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106087156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122785572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119834372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092693938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125589739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098563131 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123219664 seconds)
  done (took 5.092003532 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096398554 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125278555 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107748437 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137215523 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093871834 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125190779 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096600013 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123527377 seconds)
  done (took 1.987456776 seconds)
done (took 29.805224595 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110218194 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126760027 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10626744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133752075 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100929126 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130792506 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.089762246 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132977479 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132336043 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101653241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136162385 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.090830718 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122021615 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091098188 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13327237 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095985674 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132332299 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101422713 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132320478 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130479028 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093753028 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132372681 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102201271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132392643 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133361601 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136482858 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097887273 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121683095 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093416631 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12366989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102220047 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122887019 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103524964 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126579423 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096241231 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122258182 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0922827 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132924648 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131235335 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098379711 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131709667 seconds)
  done (took 5.936143425 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106607801 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138417604 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103785964 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08066206 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116184469 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079748676 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137029017 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078402065 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109803909 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.105980771 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073304776 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106312323 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077902353 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100938048 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076550997 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074573313 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107586376 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074868894 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074954364 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105180761 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079320176 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07232663 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107554999 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077137886 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073861 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109272671 seconds)
  done (took 3.537335254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099113618 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133969921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111216752 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183995933 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159604908 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098569907 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130474012 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138896995 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107876193 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119513922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095304864 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148680895 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108500841 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128782357 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090870475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136193786 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134926933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093475998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127113969 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110601673 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137788742 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102104811 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139483309 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131203487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090622316 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122012385 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095224083 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134321055 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096780206 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130947583 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096162391 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124345798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122149662 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103386528 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12452561 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093376211 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141327986 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101966941 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.1296164 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092053529 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128143142 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121210229 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11233245 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160044446 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091504184 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12810724 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094723524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131143348 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120322967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110372449 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129994926 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090817935 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124358026 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09002004 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121202201 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105845565 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123653603 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09387563 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130095388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125778101 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104291469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123404981 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108001657 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120948004 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098380153 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120511086 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091900351 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120361789 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143084733 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094011383 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160298288 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093014972 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123390165 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100828822 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130550784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12674242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092666873 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135950863 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101533447 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124794919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101259609 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124945543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094174792 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139263194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122672804 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093931999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121088699 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099123899 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123498119 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093488539 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134980566 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091027493 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123575289 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110115918 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120612725 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092638452 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127295068 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12539347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091316748 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134013675 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098163108 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122636248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102746286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121172868 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123037001 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102230784 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125369068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090536823 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126320225 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098609028 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122277327 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093045522 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124806784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093164763 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131386531 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098022541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126946255 seconds)
  done (took 14.677751418 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225451874 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213015727 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203555392 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289946673 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134428837 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116255483 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.238549405 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123362252 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122716126 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158177981 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173238545 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178808712 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167565525 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179441723 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16759694 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091970822 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141292101 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162543535 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213898423 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255469134 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142449739 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099964502 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158588408 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158275732 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135537682 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131815705 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10873231 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13249625 seconds)
  done (took 5.730994484 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106822639 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153168582 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098220478 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143654956 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14733416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092081876 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127404714 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093273508 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134050072 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134663331 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091428795 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128527926 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099537622 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131339807 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122192377 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102536947 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131174278 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094699781 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125932775 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096110614 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132381107 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100680458 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125800983 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120489743 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101503563 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120290621 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085715842 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141494441 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121545906 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114094661 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120298321 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100234393 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136609447 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093203672 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121772448 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094102607 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124431988 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093841597 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12361383 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090717381 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121729058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076329514 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120889149 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105418985 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127321994 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07921436 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128010648 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127642583 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094161433 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120012615 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095313736 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124206842 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096383747 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129857331 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095285867 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122707745 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096486858 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114815568 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099826852 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124345307 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083915267 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120551088 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097617398 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117080476 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.09997236 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126730034 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091273004 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124546471 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097139157 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12884795 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09571345 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128700936 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090116641 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125682662 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095078257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127226546 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095979429 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121053853 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120428365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093711212 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073669491 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12231437 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073089447 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124945869 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089910419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121405948 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094327174 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129231924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136218219 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094622179 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13097678 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092838072 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121940534 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095455074 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112374234 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095192161 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139109801 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140083918 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093530153 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120402307 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106688576 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125413968 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092228275 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10588897 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10112908 seconds)
  done (took 12.842454871 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126622665 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152591609 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094867803 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14005148 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15563209 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.1566754 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099724295 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13018139 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094836119 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140723386 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092908222 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131062474 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092674054 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137433123 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156088504 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102956401 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124618438 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106587281 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126610672 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168177055 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110418757 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141840455 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109022154 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122859461 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098409998 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139628363 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160450907 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105719669 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135410745 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14058227 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106937696 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159143912 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111655345 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126483597 seconds)
  done (took 5.42243946 seconds)
done (took 49.229755315 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226506877 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402213216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180392832 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.132645103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.189094764 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209691817 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.190565649 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.179967808 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.713622817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183051096 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.429351509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.731293524 seconds)
done (took 59.881765682 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.182035035 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.315084637 seconds)
    (2/2) benchmarking "String"...
    done (took 1.449822737 seconds)
  done (took 3.874396498 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.552026332 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.127319421 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443262246 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180655562 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198876063 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.477634118 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.955737127 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.721561232 seconds)
  done (took 28.214273207 seconds)
done (took 41.935305643 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.206259503 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.20176065 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193205873 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.161169736 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296587499 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211360122 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.513528777 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.309431864 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.213344459 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168095906 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201978744 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.216479482 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.209801104 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.634682928 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.191549586 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.1929845 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.215019704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.800905427 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.589193898 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19171289 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.182656216 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231269196 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.191926374 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.186090917 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.196810389 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.186101299 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186472673 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198190369 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.773997846 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.186893073 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.196525355 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.752900144 seconds)
  done (took 190.499754965 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183628663 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.279857726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.372287637 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229284773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.650771896 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38437365 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329019576 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.713248822 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.203935497 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209978625 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.435500328 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.188446715 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.509766639 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182773986 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214034111 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26307072 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.399552052 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501187644 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225990351 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34338941 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194339941 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.469353615 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.389784529 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.391018775 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.228251042 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.233178557 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.195389727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215139314 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377647527 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.333798422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.188673003 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.206732527 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.809034159 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04005271 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20268253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218998567 seconds)
  done (took 149.625349999 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184752112 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185376908 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185739985 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218087554 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185161568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.752001166 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.769417863 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693224943 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.472202051 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.60818618 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502593119 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189744969 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281962456 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199029805 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186278633 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202011436 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231756099 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187097227 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186895176 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769045326 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201635454 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.338017277 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.363268424 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.202421341 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219906056 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.578272597 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186912568 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.185593898 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221150366 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519958053 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.237461267 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187179763 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601041819 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.634188933 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.188208399 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300614458 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189593674 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220612049 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.18735956 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468790125 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188468621 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187909331 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.191782801 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889483546 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.191391394 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.755802249 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188229971 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19505553 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.1908837 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188807405 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.695460607 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.921214135 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.209304795 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189456081 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191124087 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187778671 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188449393 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222466865 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.673766024 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287347859 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208204374 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.190446715 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194673874 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221244687 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190142032 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.394195444 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191583006 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.590600862 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264721533 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306079564 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774854993 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194228753 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288678593 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313062121 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190463434 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190360548 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190336337 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.192117778 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303021629 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191236827 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617046942 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.367962827 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.209236485 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.610795343 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291793746 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189968881 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604650861 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194791382 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192646329 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012197044 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291680328 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.191056715 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.192401577 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191405413 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.618150739 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191737631 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776790259 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.463071037 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195622228 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.71307993 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195518686 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.639477191 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.750657893 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896048093 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196583077 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303694411 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368878342 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208459759 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.192247486 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.608872711 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19677029 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252958675 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19243097 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590962329 seconds)
  done (took 365.766128212 seconds)
done (took 707.00361594 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.798787599 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.790426176 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.906028841 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.786988318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.751845484 seconds)
  done (took 10.153208173 seconds)
done (took 11.274987588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385541269 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386766966 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258606846 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388304505 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230465801 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407334186 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.367482473 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217163218 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298096716 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280102453 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30059228 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251979063 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232284156 seconds)
  done (took 18.127040142 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510360591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512484604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260636491 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515005686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237615245 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515691555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398246487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421749845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412589797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230885498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208382642 seconds)
  done (took 16.348429256 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514830718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513448413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265456428 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520696324 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239964929 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509310362 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403548896 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419354754 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413366261 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231641634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207775965 seconds)
  done (took 16.361494281 seconds)
done (took 51.95977195 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203007433 seconds)
  done (took 2.325621089 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240551859 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.404713483 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222420373 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210866894 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.205024929 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207158033 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209266256 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204683776 seconds)
  done (took 11.029031426 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203682083 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204677449 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201589808 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204620427 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204730995 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201974998 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201511146 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.202189 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20335718 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204824917 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204861711 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203113623 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205747647 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.205435104 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202659043 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202517118 seconds)
  done (took 20.382664 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204504311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20271111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202919535 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202555474 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202953134 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202885027 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203182656 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203576034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20214887 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.202941745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20297037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202883836 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203476915 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201679029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203448605 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204210895 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202123265 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202333814 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207365865 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203816416 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204692252 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203845345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203263987 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203383562 seconds)
  done (took 30.007330668 seconds)
done (took 64.868259592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.829146722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.886310921 seconds)
  done (took 6.84145026 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.20637345 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.205616004 seconds)
  done (took 3.538649461 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206122149 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206254462 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205820422 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206530391 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206258594 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206205687 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206726347 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20860118 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207759362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207693662 seconds)
  done (took 13.1947171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206143843 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207459329 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204272537 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207051894 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206836066 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205277318 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.208522027 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.208212807 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207764379 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205405475 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207968875 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20679403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207905646 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205300109 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.20698151 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206367822 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205542076 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206065991 seconds)
  done (took 22.846184247 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208081151 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.208761457 seconds)
  done (took 3.544852619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207160968 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205292576 seconds)
    (3/7) benchmarking "month"...
    done (took 1.204715765 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206043215 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206978788 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.206650565 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.207515613 seconds)
  done (took 9.572100812 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.210351048 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390720796 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.472717369 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790993303 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21190358 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212859985 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.052241241 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213462463 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215089907 seconds)
  done (took 13.899703979 seconds)
done (took 74.564138561 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.247053355 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226699269 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.413190882 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210466231 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225223494 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.504773561 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.211055654 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329463191 seconds)
done (took 37.500562349 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.223913714 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.18417195 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.9548316 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.191570584 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.229190701 seconds)
  done (took 18.691130164 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.246759868 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536718487 seconds)
  done (took 4.908780282 seconds)
done (took 30.95519271 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206872022 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20846888 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206503586 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.204224775 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205223428 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206423188 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204555566 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.204249998 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.201645589 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.206908813 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206006041 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.205050901 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.20434627 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.203489694 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206029677 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202036437 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203140084 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202979393 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.203521421 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202885412 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200661752 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205366935 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206050153 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.203356624 seconds)
  done (took 30.035600949 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203459591 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.204072737 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.204875647 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204755169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.203151399 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.205194444 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.205546767 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.202454172 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.204946271 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.205852793 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202958359 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201993638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.20468057 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202529354 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203719468 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.203425468 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.205236798 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203627847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204726699 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.203216393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.206097783 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202512704 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203341069 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204902607 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.203598022 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202137498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205352159 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.203859738 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205008474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.202291122 seconds)
  done (took 37.245318037 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.210493944 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.212068534 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.206497789 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.205181021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205466842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204577743 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.207173732 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.205082649 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20636002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.207153193 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205979139 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206517234 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206238921 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.206834757 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206310179 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205814243 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.206549986 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.207048919 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.207241617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.207662045 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206784878 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.20788632 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.208788176 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.206443646 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.208331183 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.2074803 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.20799061 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.205899658 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.207113248 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207699764 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207497921 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.207852262 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.206399336 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208841605 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.208742272 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.206955553 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213268373 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.214958679 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.208391896 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.209012069 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.208383225 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208569725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.209041305 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.209467147 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208901793 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209007368 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.206337851 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.210373401 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.210685391 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.207475505 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.210753979 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.209436559 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.210354408 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.208801117 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208513844 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.211127188 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.210517961 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.206545368 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.209717555 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.210002096 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.209316822 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212200705 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.210723981 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.209045268 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.208237534 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.209189683 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.209641721 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.210011014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.212119587 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21029018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.209762798 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21063007 seconds)
  done (took 88.134553281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.211136732 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210145405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205469812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20880329 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210380055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210162019 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206610746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211025307 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209295336 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.211221515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209552476 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211308455 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207584871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211652029 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211124291 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.208010448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212442092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209411883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.210128672 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213133279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210233657 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207241671 seconds)
  done (took 27.750005601 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210224569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215146961 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209539141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212560332 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213526611 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21403594 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.213745771 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218364291 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213177082 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21338705 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212122242 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214760244 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211190023 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208291553 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207867048 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212542693 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213349284 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212601453 seconds)
  done (took 22.959343323 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215341072 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.210441648 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.212650446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211578606 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.213501361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.213074097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20957084 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212753117 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.21377785 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.211881812 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.213643005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212603109 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.214493023 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211952939 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209724757 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211321785 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.214779806 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213191331 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220820098 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210289065 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.212049317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215185681 seconds)
  done (took 27.822359551 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218328915 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.214849441 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212829362 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214605544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.211494409 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212703828 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213197757 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211590281 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.217686349 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.211488829 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210590638 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213159986 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.214224498 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211564419 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.209336797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208949155 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214486425 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212584964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21369967 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.213647169 seconds)
  done (took 25.398247065 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215290705 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218768751 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215135972 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218645478 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217243779 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.217917962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214239519 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217810751 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217925284 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218172742 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.217076915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213566496 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217221831 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21768013 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21683339 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217584203 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215001415 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215423113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217081414 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217060113 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214392838 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216141368 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217430142 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213645495 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216686353 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216119566 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216498584 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217565635 seconds)
  done (took 35.199816849 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215575392 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216440616 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.214780687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.214105917 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.214830276 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.21351495 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215266999 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.214153253 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215740883 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213032304 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.215440124 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.216321261 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215158276 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.217394412 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214648784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.21593912 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21608111 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.213766016 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214395238 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213212068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.215632644 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215764284 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.216410629 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21265156 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2133433 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.215201753 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213115367 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21454172 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217333006 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21194417 seconds)
  done (took 37.581288905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.233848632 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233283172 seconds)
  done (took 3.601348642 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212428305 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216327583 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.215957846 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213298573 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215183436 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217451884 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217855914 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216216273 seconds)
  done (took 10.858667834 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.220433396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.217871382 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.216696177 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.215655767 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.219919017 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.21697466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225139706 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.237033911 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.21938603 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.218884218 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224624627 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.227324486 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.217911201 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216600975 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.216474035 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218433556 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.2162497 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216940294 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.218527213 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.220011933 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217633163 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220803274 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219747502 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214522589 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219402301 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.227346543 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242278751 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.216729049 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21613178 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.22039439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.217463147 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.21410467 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216964841 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.216874094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.218905865 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.217440461 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228140672 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236407046 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.223410582 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238588897 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217191278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.215233924 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.218512986 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.219035896 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219991758 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21899653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218438305 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.216886304 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.217723211 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2226927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.22309169 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217556273 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.216029615 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22173806 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.220374073 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225453051 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.237608637 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.222238417 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.228297113 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232093459 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254232201 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.249623931 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222923756 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21920749 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230562148 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.246379588 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227505974 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.239202546 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.219482349 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.221249442 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229289228 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253052405 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.247498006 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.222025085 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221418357 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.222648264 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22187659 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221781622 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228050058 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.244027407 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.22342255 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221305729 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231751462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246347095 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220700802 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224544798 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226878933 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.225898451 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221822513 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23326074 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.241797061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225441032 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.223672103 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.223926193 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225214756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226513976 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223731399 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225206317 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.224263017 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.223937842 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219708137 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226279647 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.235979566 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225033514 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228024981 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22853756 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.241573369 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.223460584 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228270929 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.221150573 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220087304 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.224066031 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229330174 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.22024483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224564905 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227789708 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.219587693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.220376971 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218320153 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.220118734 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228382826 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.246594771 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.220360476 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.220977972 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.225878062 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.231085198 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219005857 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.22294213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.220925187 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.217854892 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.217323009 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.221256076 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.220229224 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.220606771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219235806 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221010967 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.218212831 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.220576924 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.220149015 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.222285073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.221041563 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.221962498 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221425909 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.222899431 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.223675128 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.221651289 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22690179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240343702 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221960272 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.223451651 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.219066526 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222458766 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.222927735 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.221003269 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223358668 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220579507 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.223909214 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2230831 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227817802 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.222597051 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225325339 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.224783814 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228899593 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.225577838 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.228954407 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.226483227 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.22361812 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225978859 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225188813 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226679434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231731314 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230247869 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.232922544 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234740255 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.22689014 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.227640098 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.228405018 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229697149 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228746786 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22838281 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.230213137 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.237869402 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230394698 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236309561 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25151182 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228811975 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.230506946 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.225046794 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226589758 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227448113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.227848099 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231438827 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237619676 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24843727 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.224723302 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.228294996 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224958788 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228281365 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.227313442 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224764397 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224650864 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224073332 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225442815 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224750106 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225903504 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224860414 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224570246 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225257034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225977282 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.224077191 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226055883 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226064413 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227491563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.225497736 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224655682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224435397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.225023401 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.224253042 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226440962 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226571649 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226816434 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226501595 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.23363682 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222388435 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227900988 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231353401 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226000187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.225530293 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.224251675 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228960437 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226801731 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232711421 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243704114 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228075237 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23346007 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246529027 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.230323045 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.232361421 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228546114 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.221635833 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.229264135 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233485533 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.226507351 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223882696 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225960314 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228950313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226196954 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229239717 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238274335 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.221845194 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.222637873 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.224690442 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22048515 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.224691186 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.225396322 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.223510783 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224290957 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223237178 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.222761443 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.222807861 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222606905 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.222556178 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.224919984 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226853499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.231396884 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229171724 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.224577462 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225725566 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.225644465 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.228934826 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.225664361 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.223410037 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.222110396 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233832398 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2468924 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230231963 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243062407 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223753567 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228724746 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243689889 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.226444581 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222835837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222939644 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.222424375 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.222868018 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.220193116 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223528092 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225924355 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224734245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224171612 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.227284921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.222702365 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.221376054 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223104562 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.221831988 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.224290741 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.222071812 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.223398239 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.225281015 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22482424 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.22249738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.223697338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229873732 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243066051 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.223899846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.223935617 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223966094 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222985485 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.224959762 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.223897483 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.22650642 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237158125 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.227001262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.230816073 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.224692966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231737115 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.222961871 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.226207094 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.229430957 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.221363457 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.223149524 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.223566798 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.223779999 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230498107 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.242318879 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.224776007 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.228383613 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225556859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224515386 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.225079158 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224492238 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224599711 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223888066 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233225601 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.242779011 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.228608001 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226694312 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.2213782 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.225072704 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.224703638 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.223853816 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228922877 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.224698321 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.226382343 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.225162304 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.225428439 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.225141716 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.225791585 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.224346152 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.223355729 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.225666723 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234585621 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.245461832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229092035 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.227578888 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.233381378 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244916926 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233801385 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.244070481 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227041611 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.226841712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.226310253 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228630399 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.225510336 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227934862 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.227272263 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.226965113 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.231119928 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227839238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.230174951 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227780132 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227433142 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226559754 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238100855 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249272011 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230647012 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230889668 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225569366 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229458407 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.231902282 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.228406678 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.226501753 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.231279261 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237589713 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235069341 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.228708614 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.228849477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229845704 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227921011 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.229101721 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.228157879 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.228705797 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.228903939 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.22894798 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230075646 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230270713 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.228114094 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.228963107 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231160476 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229795668 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.238120368 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246236787 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.230015184 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228586175 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.229887188 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229706436 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.22993941 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.229997043 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231068945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230045676 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.230991077 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235849126 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.23657108 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.23244117 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.230608064 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.230527187 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.230254565 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230383109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231025825 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229468437 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230735086 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.230326688 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23020982 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.230454405 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.230054412 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231897014 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.230340267 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230110739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232107402 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.236848307 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231931554 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.229007103 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.229977841 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230793203 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.230254784 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.232444004 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.239235414 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252115982 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.241320697 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.238462498 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235892365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.231700655 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236009828 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2399067 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.231654324 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232360054 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.232026243 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234275144 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.232629796 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.234557217 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233579896 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238736186 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.251639074 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.233042857 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241385884 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.250793878 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233386799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.234391539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.236411461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.232224422 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229843288 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.233180875 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.233074675 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241238947 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.252210882 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233653564 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23394739 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.233317534 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.235265643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237250968 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233107273 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.235812201 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.231701338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.234383141 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233323589 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234870214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.231671144 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.233654644 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.235642233 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236848149 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.240456052 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232928648 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236295972 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234143943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.234948772 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23544591 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234961977 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232589502 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.231615048 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234786086 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234918542 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.235252635 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237905066 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.233909552 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236814657 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.235513901 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235778782 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238886875 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.244975089 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.242929348 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.23162725 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.235754397 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.235385008 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.238963364 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235470808 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.235903453 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23662543 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.236529976 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236215286 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237187222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.236396792 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.237999084 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25216728 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.254442942 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237616105 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.238220196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238702916 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.236828802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234594813 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.237345065 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.23778504 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.23937148 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.244555009 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.239047819 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243418063 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254176228 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2379822 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.239913686 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.240481489 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242425889 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240033868 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236818578 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.238067722 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242437201 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.251762811 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239038483 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246060469 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265370629 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.257070727 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.238907041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.237741087 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236969728 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.238778704 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.240369314 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.238308703 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.238279466 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238574211 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.239474743 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.238897594 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243850408 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.23991503 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.239761773 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.238330141 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.238605998 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.23928398 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236849009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.240233064 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.238262623 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239032723 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.239377317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.240157929 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.239213349 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252877179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.264047944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.240692464 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.23877752 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238069018 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24185324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.241418716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250367871 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.245959244 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.24079735 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.238705019 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.241054703 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241273497 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.238232731 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.240601724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.241350923 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239746525 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239503829 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.252762504 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265678133 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245858773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.240470068 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240799936 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.239768881 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241278498 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241567384 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24045106 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.24244085 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.243198495 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244908366 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.241940636 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.24159016 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.243556612 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.248480379 seconds)
  done (took 734.448385807 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239925875 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238095352 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238189933 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239591083 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240145588 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238914043 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239429888 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240533958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.24103955 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239084365 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.24165733 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239756396 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240560596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241786162 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238829026 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239488183 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240695324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239702702 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240932605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241044604 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240833437 seconds)
  done (took 27.197578019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.243895933 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.24211912 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243072 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244960481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240497437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244094108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241645734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243891406 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244145781 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24226777 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243959631 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243508915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.241558449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.242658912 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24147115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245325571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244397736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242951519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.246065454 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243417793 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245178384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243900701 seconds)
  done (took 28.513968859 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.245330587 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.245304638 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.2439539 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.243930024 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.244551669 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.243295713 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.246130894 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.245357862 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.246203815 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.246033615 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.244939244 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.247892585 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.250948357 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.249041441 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.246962904 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.245594147 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.389625077 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.246119354 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.245967275 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.245904923 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.242557799 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.252221844 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.26319508 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.243540334 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.245280623 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.246820417 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.246322886 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.24682293 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.246200349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.248545587 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251194958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.247339765 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.246563204 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.249590227 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.246624375 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.248945238 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.251806151 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.248519221 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.245100484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.247254965 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.257871035 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.266052927 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.247902775 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.253209539 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.267005216 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.248352954 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.250777271 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.254772059 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.245725038 seconds)
  done (took 62.480335943 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.248054436 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.248251189 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.245553638 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.249388075 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.248684395 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.249362195 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.248993943 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.249074247 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.247290229 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.246369712 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.249266265 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.247999428 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.246745724 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.249826894 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.251281379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.247564924 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.247863071 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.246977478 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.247275335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.247090466 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.247967111 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.251229232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.250444391 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.249165626 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.249682373 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248423294 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247684464 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.249975062 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.24881122 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.249106497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.249840505 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250671129 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.251079771 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.248176579 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.247599092 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.249937618 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.250601527 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.248519755 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.249599549 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.246776168 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.251976673 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251705108 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.25117418 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.250617686 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.248427984 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.248549149 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248589576 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.249047609 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.249225793 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.25101089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.251934181 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249070452 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.251452257 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.248545119 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252015808 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.25066918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249236248 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.248948495 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.251673801 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.249616462 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.249335518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.251159259 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.248922011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.254143415 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.250604694 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.248823175 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.249469905 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250981875 seconds)
  done (took 86.120268873 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25242655 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.25154675 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25173848 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251688054 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252177947 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.252041326 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25203693 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.251104275 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.25189279 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252365722 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253170401 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251396278 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.253119347 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.251427148 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25290706 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251462909 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253026776 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25363282 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252053813 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252241233 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.252327386 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.251622109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25300253 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.251607092 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252644429 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252742096 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253592673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252791879 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25465667 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25295538 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25372095 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.253861618 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.253602331 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254326011 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.254004263 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.254279133 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254802381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254418358 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254702187 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253712664 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253908215 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255592055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254137358 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.253450907 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254661246 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254763062 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.254650443 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.254835258 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254963227 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253479244 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.254511302 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25535993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255690018 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255065665 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254845744 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.256507213 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254916744 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255218761 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256516385 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.254286127 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255391775 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.255619552 seconds)
  done (took 78.889499752 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25595173 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25617998 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.253756483 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.253531904 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254978256 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252799487 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255755836 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.255172968 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25601991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.256236828 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256670157 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253662513 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254851799 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256158265 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253278418 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254693242 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252952451 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256364658 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257339906 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254094128 seconds)
  done (took 26.27066443 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.253243039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.257438857 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.25430779 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254523868 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.258573364 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256095366 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2585704 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257002747 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254260919 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257920151 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258618604 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258060308 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255532112 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255454485 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.257299816 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.255941933 seconds)
  done (took 21.272979029 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.25644583 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.25846425 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.257811062 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258026078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.255242395 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256424353 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.258040175 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.257296224 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.255708779 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.259529367 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.25861041 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.257112647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.258881762 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.258034096 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.256799491 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.258737923 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256154428 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.256065809 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.258326645 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.259281342 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.258674683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257347848 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259786791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259656204 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.257371236 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258030423 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.256516408 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.255692751 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.256434384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.260031178 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.256549329 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.259031662 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.256728485 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.257844514 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.259438344 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258318079 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.25984705 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.260279622 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.258480979 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.260256175 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.260248019 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258969999 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.260040634 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.261107812 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.257989324 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.26175668 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.258050638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.261064926 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.258048931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.257217676 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260562903 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.259605443 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.260021636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.261017983 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.261062307 seconds)
  done (took 70.386932186 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261385768 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261143935 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259946397 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262335536 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.261305221 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.258869852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261294422 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261406183 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259471245 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262067252 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26096628 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264012651 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259600801 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261268055 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259575048 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261792261 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260693241 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259995471 seconds)
  done (took 23.872140645 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260705248 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259868942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.262064419 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.259490717 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.262055128 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262674909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260710337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.262150025 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2629989 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259561876 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260443841 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.264949821 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262160483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.263739753 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260000754 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261238581 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.263205849 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263251243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261382325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261002504 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264139857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264206364 seconds)
  done (took 28.937901332 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.263674192 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.262398463 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.262713713 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.279266876 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.280403662 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.285099869 seconds)
  done (took 8.81038176 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269396108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264798527 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262244526 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265685393 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264710686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260751186 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262030154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260717747 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265476126 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262513513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261378954 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264826846 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264196074 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263004433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265376323 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264116843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261874467 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262449998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261073596 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265603559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26265372 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264984238 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262672862 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261938543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26355725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263222754 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265536015 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263040034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263988308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265441685 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266861378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26321746 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265971292 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264242222 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266197629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266301698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264132512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266586079 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266742494 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262921264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266989896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266763836 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267658148 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26382688 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267139456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263374154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26423447 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263843984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263927024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267607767 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266255252 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264677926 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268349436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267794941 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268047691 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268492085 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265010393 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265508009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267555254 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265956296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26409545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269105244 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265279174 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266396703 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268731381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265577499 seconds)
  done (took 84.68432921 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265753809 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265525746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266891465 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267054501 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265641047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265145317 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265179751 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264364547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266941366 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266613267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269381397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265188142 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266683211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266826071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267491134 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265536359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267433207 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267041523 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267979229 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269532236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26753036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267454161 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266738517 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266745709 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267022177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26956481 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26740305 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266671476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267343925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266049014 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268146586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266286346 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266626695 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268093024 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267775964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268315891 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266668313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267595642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267458711 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272004036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268024481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271347276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268014305 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268468603 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269393705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269209453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267484972 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268249121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269352132 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268151209 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269039103 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269870325 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269159176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268162244 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269208743 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270484473 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268982078 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268873752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268847148 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272236593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26972006 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269114958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272926337 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270294408 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269501424 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269311954 seconds)
  done (took 84.870034635 seconds)
done (took 1714.470655687 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.43354057 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.386892198 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.271013032 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.281017262 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27117846 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.270164752 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.267393473 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.27129243 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.269003097 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.271995583 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.272824395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.457491226 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.266674016 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272285258 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.270637133 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.368096475 seconds)
  done (took 42.088013995 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.297598666 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.277958991 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.383977139 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.298189563 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.298142162 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.45134544 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332402302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.275789177 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.437470533 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.316176179 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.746441543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.297803685 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.276369176 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.324833389 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.292940139 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.451736611 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.512758786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.751454073 seconds)
  done (took 29.208990953 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.696390127 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.28685745 seconds)
  done (took 9.169361622 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.295530545 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.278427208 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.277308769 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.275652558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.269722941 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.268865307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.275203472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.266247308 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.698055452 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.400580557 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.283679448 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.284659071 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.294878924 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.279667149 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276609925 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.310862255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.448012394 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276455679 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.273782118 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.283118782 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279390484 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.361399797 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.317653564 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.27679583 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.396653283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.70848496 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284833405 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285879212 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.426231269 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.276484654 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.276264124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.276773158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.274238658 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.867265205 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.700738964 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.284155528 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.313524156 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.284419641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274452187 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.410293929 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.279334874 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.282997076 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.270800543 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.716277404 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.413429917 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396347528 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.462661424 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.298194073 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.279470331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.339398119 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.277132248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.2783595 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306323684 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.037122493 seconds)
  done (took 107.729385444 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.320565318 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.662912813 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443192955 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290679551 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.883430639 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945760864 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296682568 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.54015825 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.341974196 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.276019109 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.566612891 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.766088968 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288615584 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.287148432 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.911032955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.332152817 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273836203 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.016283021 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.280716102 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.272491066 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762847647 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274528289 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.268996494 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.438250375 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.312703038 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715121289 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.623538474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.565263406 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.294510024 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.275924076 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.721310887 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292731421 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.318727826 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.27676097 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.534727111 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625029338 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61710866 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.306847658 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294035617 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284657395 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.312128593 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720955201 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62927278 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.301757295 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.283276109 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.722085282 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.30191149 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.288264999 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.284648306 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482160616 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.980134111 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.286139468 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.596879745 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.286073602 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.655360175 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.372686863 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.31810858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755054216 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301333184 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.25647308 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304537526 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.286297017 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287707661 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286568619 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284429462 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.613355558 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.656362764 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.285753395 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619146402 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.742715945 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.301113463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.79379749 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.185880571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306194634 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.37742717 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.290114865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.785461889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766791313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332637925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281602957 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.608258196 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307072829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.554929341 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.297370793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282207964 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793898281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293970417 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.317442672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.283726674 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.298231394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.92139179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288159246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540586812 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.356291225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.283681901 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.276005319 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.311781437 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280134466 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.284375602 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.281955079 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783794843 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.298001806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.380012282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293434079 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281489283 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297212614 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.281172256 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.278378064 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492744557 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.747565762 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.305154693 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283117858 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.280169821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307228846 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.460453592 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.279067541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.561876532 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297750034 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279652547 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302625965 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.94027308 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328716347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280960277 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.283530599 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.151664503 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.483382759 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.296202201 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.28572255 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280382771 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297479044 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.419989938 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296794141 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.306284356 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.279615347 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964086637 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301214228 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.296840072 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.612621925 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.284009446 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.072536334 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.298836534 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282792375 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.576620022 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.539131908 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.550923884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.281586459 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.302232413 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954948916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.336725558 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42314623 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305286099 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323951266 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481826778 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764635469 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.282272266 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.922462596 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.27870626 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485310965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.28239216 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586063322 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.742779206 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.293174905 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279349492 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957623104 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.992527203 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.942453548 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.281945285 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.54431419 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245108373 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.742698115 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.278323201 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.27975103 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.695926101 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285935511 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.287444712 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.281678203 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.278749047 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.426801132 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.452907124 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.443846794 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286673464 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708415821 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306271324 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281578044 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.299084078 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283712944 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.628155508 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360926816 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.282041053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.319837075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.282100931 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.287784064 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727171493 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.210872382 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.284393589 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43050951 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892454353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.295988259 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.282215932 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.871547201 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.572846547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.771288232 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357075277 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.565576585 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.302942838 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.315892056 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.829091135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331052301 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.730267406 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299325728 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.278930851 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849899884 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.295466136 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.637706871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.286034932 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.285644006 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814974285 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296169742 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.284975878 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.41877165 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300963902 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550241699 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.289831888 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.305511945 seconds)
  done (took 1098.030741869 seconds)
done (took 1287.414060935 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.285336974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.290900401 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.268229583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28490733 seconds)
  done (took 26.329895696 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.294373979 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.289519755 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.292250545 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.289096013 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.293110519 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.289999177 seconds)
  done (took 8.945621684 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.335638066 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.287789539 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292368708 seconds)
  done (took 19.115707906 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.484005193 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.530533393 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.620495384 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.320364673 seconds)
  done (took 10.157181327 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.291367713 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.293298553 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.292044815 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.295447074 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296988878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.298005753 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.294734456 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.293692741 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.297628823 seconds)
  done (took 12.855919609 seconds)
done (took 78.607097103 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.635105643 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.24075067 seconds)
    (3/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.403170604 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.684118512 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.875525002 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.906071852 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.30475716 seconds)
    (8/286) benchmarking ("sort", BigInt, true)...
    done (took 6.284666969 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.531748489 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.343619606 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.311679094 seconds)
    (12/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.066974118 seconds)
    (13/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.372677296 seconds)
    (14/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311611317 seconds)
    (15/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.747920168 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.310087741 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.91367179 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.128904243 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.282299888 seconds)
    (20/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.391337666 seconds)
    (21/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.481271742 seconds)
    (22/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.297206145 seconds)
    (23/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.374029726 seconds)
    (24/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.078014341 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.287185885 seconds)
    (26/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.28026192 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.091597011 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.390280375 seconds)
    (29/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.979389 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.306395203 seconds)
    (31/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.135180841 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.28375523 seconds)
    (33/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.684047687 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.265569232 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.269256713 seconds)
    (36/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.610643469 seconds)
    (37/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.460788629 seconds)
    (38/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.036138142 seconds)
    (39/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.29841056 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.526972295 seconds)
    (41/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.271728354 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.16655688 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.583223204 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.873021928 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.396440566 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.522255911 seconds)
    (47/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.63848936 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.549418398 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.730740172 seconds)
    (50/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.464376227 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.409262461 seconds)
    (52/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.153820171 seconds)
    (53/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.268902126 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344441286 seconds)
    (55/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.988058015 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.302836521 seconds)
    (57/286) benchmarking ("sort", Float64, true)...
    done (took 6.289941341 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.000876032 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.38532573 seconds)
    (60/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.508721167 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.303215961 seconds)
    (62/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.472493563 seconds)
    (63/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.268454683 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.621921602 seconds)
    (65/286) benchmarking ("sort", Int8, false)...
    done (took 4.302154643 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.690776045 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 5.45109566 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.522867874 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.298708461 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.616279893 seconds)
    (71/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.649664859 seconds)
    (72/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.375217811 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.270824558 seconds)
    (74/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.268418851 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.055893127 seconds)
    (76/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.630708673 seconds)
    (77/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.511314484 seconds)
    (78/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.773295911 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.678557972 seconds)
    (80/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.290275131 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.271154772 seconds)
    (82/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302664126 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.165171903 seconds)
    (84/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.291731515 seconds)
    (85/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.392210798 seconds)
    (86/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.413964369 seconds)
    (87/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.088285911 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.272684716 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.321656513 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.317189715 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.315178179 seconds)
    (92/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.634424837 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.271213421 seconds)
    (94/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.379130205 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.516676082 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.291486482 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.658199477 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.292014529 seconds)
    (99/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.297315237 seconds)
    (100/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.469517456 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.339792245 seconds)
    (102/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.883422984 seconds)
    (103/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.376317362 seconds)
    (104/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.290131366 seconds)
    (105/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.476475548 seconds)
    (106/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.371508262 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330967254 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 1.808693912 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.334755015 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.561904736 seconds)
    (111/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.711354398 seconds)
    (112/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.491625445 seconds)
    (113/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.762199151 seconds)
    (114/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.273716988 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.027199528 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.564383365 seconds)
    (117/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.308372287 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.84600651 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127558105 seconds)
    (120/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.47070917 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.392589099 seconds)
    (122/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.320428754 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.371665746 seconds)
    (124/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.3426152 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.338868787 seconds)
    (126/286) benchmarking ("sort", Float64, false)...
    done (took 5.552408052 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.392627263 seconds)
    (128/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.273428089 seconds)
    (129/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.326549318 seconds)
    (130/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.787733655 seconds)
    (131/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.281100966 seconds)
    (132/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.411693473 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.307149785 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.311743838 seconds)
    (135/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.304414507 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.920985946 seconds)
    (137/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.38268064 seconds)
    (138/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.376917148 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.012328189 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.319279294 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.494342664 seconds)
    (142/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372576103 seconds)
    (143/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.666298286 seconds)
    (144/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.357625371 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.315858005 seconds)
    (146/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.459156042 seconds)
    (147/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.317835671 seconds)
    (148/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.334566626 seconds)
    (149/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.29568407 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.319808313 seconds)
    (151/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.318927857 seconds)
    (152/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.070864876 seconds)
    (153/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.369927521 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.383028476 seconds)
    (155/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.275186778 seconds)
    (156/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.487707349 seconds)
    (157/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.655188113 seconds)
    (158/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.293712547 seconds)
    (159/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.273908119 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.296760338 seconds)
    (161/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.322262237 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.126480139 seconds)
    (163/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.780908904 seconds)
    (164/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.784497022 seconds)
    (165/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.270834217 seconds)
    (166/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.277212258 seconds)
    (167/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.955991192 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.292098087 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.214137949 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340715475 seconds)
    (171/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.721157454 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.66209183 seconds)
    (173/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.055490075 seconds)
    (174/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.27569583 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.354143092 seconds)
    (176/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.758980869 seconds)
    (177/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.275610549 seconds)
    (178/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.280782496 seconds)
    (179/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.278032999 seconds)
    (180/286) benchmarking ("sort", Int8, true)...
    done (took 6.311576053 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.314352292 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.839860065 seconds)
    (183/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.545242169 seconds)
    (184/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.32106201 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.390380917 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.370268484 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.640328524 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.45752195 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.278343453 seconds)
    (190/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.42773199 seconds)
    (191/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.423066572 seconds)
    (192/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.360949949 seconds)
    (193/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.021560976 seconds)
    (194/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.113841175 seconds)
    (195/286) benchmarking ("sort", Float32, true)...
    done (took 6.316572073 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.957341774 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.499437736 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.699021897 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.306073722 seconds)
    (200/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.451782554 seconds)
    (201/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.27860355 seconds)
    (202/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.653062951 seconds)
    (203/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.50899495 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.359948878 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.583870299 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.395335036 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.69666553 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.298397653 seconds)
    (209/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.343255336 seconds)
    (210/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.402932756 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.322379623 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.310448569 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.339613145 seconds)
    (214/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.102732178 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.306873499 seconds)
    (216/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.780916602 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.31156533 seconds)
    (218/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.302636549 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.025396286 seconds)
    (220/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.404355201 seconds)
    (221/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.279509761 seconds)
    (222/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.695913233 seconds)
    (223/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.281341604 seconds)
    (224/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.913514645 seconds)
    (225/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.286817688 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.280098595 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.727051266 seconds)
    (228/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.673237473 seconds)
    (229/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.28222336 seconds)
    (230/286) benchmarking ("sort", BigInt, false)...
    done (took 6.306124313 seconds)
    (231/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.698973766 seconds)
    (232/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.10387779 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.502312116 seconds)
    (234/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.527229971 seconds)
    (235/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.301392171 seconds)
    (236/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.044650826 seconds)
    (237/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.894086671 seconds)
    (238/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.281731321 seconds)
    (239/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.451451444 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.323517827 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.329249758 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.129020693 seconds)
    (243/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.532299306 seconds)
    (244/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.287270423 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.692822099 seconds)
    (246/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.386597956 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.191365732 seconds)
    (248/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.403263579 seconds)
    (249/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.300581981 seconds)
    (250/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.000815675 seconds)
    (251/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.323075694 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.303720797 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.972746799 seconds)
    (254/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.421887293 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.329259325 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.313440309 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349955478 seconds)
    (258/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.881228046 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.746765322 seconds)
    (260/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.285532051 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.284467066 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.38501049 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.382041467 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.414008273 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.303310609 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.09901427 seconds)
    (267/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.068891164 seconds)
    (268/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.284718584 seconds)
    (269/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.303799682 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.340754474 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.347502573 seconds)
    (272/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.519515823 seconds)
    (273/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.312521674 seconds)
    (274/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.283863691 seconds)
    (275/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.020139559 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.412208328 seconds)
    (277/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.361778752 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.311882939 seconds)
    (279/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.402650103 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.325222329 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.922323488 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.180819394 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.303951789 seconds)
    (284/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.308090773 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.319427367 seconds)
    (286/286) benchmarking ("sort", Float32, false)...
    done (took 5.292487035 seconds)
  done (took 922.045034269 seconds)
done (took 923.251103764 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.339145099 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332292047 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.316837626 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.338497453 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.425791162 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.339756282 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.327901009 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.318648994 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.363987602 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.365479292 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.314632379 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.337039345 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.315171003 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.314848321 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.31686916 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331960121 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297119935 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.317921906 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.333371311 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.326186199 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.331970024 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.314091725 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.367608833 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.33754244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.321352688 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.319175216 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.320745329 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.33698768 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.425866075 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.320304282 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.319866675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.32747473 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.296256684 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.315499483 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.313892512 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.336622938 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.328339213 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.327338927 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.319131368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.35152847 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.678195725 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335701953 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.316090092 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.319525484 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.318357601 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.322360264 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.317988331 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.325831781 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332131371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331411873 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.665140249 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.34827661 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.321114067 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.317505978 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.330230422 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.317887946 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.323434016 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335443088 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.337381121 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336290634 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.285496525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.325328476 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.321971532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.332668126 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327254717 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.704144299 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.332530285 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.324775392 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.67796431 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.341997482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.705735993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342276708 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.323042228 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.331544449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.352080717 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.299217952 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.315150514 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.318268131 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.326976889 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.316175199 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328768805 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333499992 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.323495265 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.320985383 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332415758 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.343965091 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.332367857 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.321352764 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.33123743 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.341254539 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.326289857 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.331674231 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.324604249 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.31807192 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.332201068 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.325334617 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.322693899 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.323838534 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32991155 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332368868 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.679309538 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357564916 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.317848728 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.319271241 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.319441224 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.334199069 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.682260794 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.340704801 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.343487467 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.369494771 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.324266354 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.291205817 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.324152617 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338738105 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33068548 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.326178048 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.317943946 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.293383233 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.678578193 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.353530699 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.32479937 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.319689709 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340548253 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.323755444 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.319739535 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.304921305 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.32486511 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337093806 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.443807044 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.333070693 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.354696887 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.319931716 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.326880855 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.345106274 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339892335 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.35307888 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.325508406 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338415052 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.340154885 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.320773227 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.332828967 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.333838105 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.325475034 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.330838796 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.318760467 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.347201811 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336110224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336557543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.346127997 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.44476536 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.320877096 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.296960091 seconds)
done (took 222.395059713 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387339563 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.310570028 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.404689416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.320759931 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.4188925 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.419137563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.31622938 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.315094156 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.316651057 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.69869207 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.316615312 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.325310185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.312884434 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.318570473 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.402627863 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320718967 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.316617593 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.662655515 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.318892722 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.389855254 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.31655193 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.31734905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.317750868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.699858229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.319273914 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.315398998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.391361152 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.320962275 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.66638257 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.318311391 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.316830855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.667251175 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.410339794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.337123137 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.332885411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.328288991 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.420448915 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.337687648 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.403474986 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.401091049 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.408213857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360847473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.31376808 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.319027349 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.321695102 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.321976451 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.317751871 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.349022376 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.318249139 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.318087853 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.665900384 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.331055289 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.329409939 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.319951396 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.320016906 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343328425 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.318422746 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.321659942 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.41377522 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.322385976 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.390536828 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.700884295 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.706122212 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.322214504 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.317042184 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.321686609 seconds)
  done (took 147.558333163 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.390380273 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.398693072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433249257 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.338973475 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.374919878 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.438677633 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.340542589 seconds)
  done (took 10.94974665 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.328882539 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.322637875 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.371419421 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.373222291 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.322950794 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501303995 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323683061 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.33430183 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.321475874 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.378209692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326913103 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.324144138 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.332561015 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.318964805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374484792 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.335466023 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.438271913 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.326821397 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.324254275 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.476332929 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321050611 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.333198935 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.378083685 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.336427609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.324403492 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.328405659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.13483994 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326347811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.320031176 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.324486948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323346344 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.402355055 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324700931 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.325602798 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.321549984 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442180495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.324476737 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.321530775 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.324879569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.322388279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.326614298 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.325733731 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.325545392 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.322245893 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.323248256 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.348954429 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.326310628 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.325423222 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.325285824 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32820552 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.375178771 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.326432612 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.322987054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.321813329 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.381580689 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331319156 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.325776653 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.322943076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.327098872 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323014583 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.476593686 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374234343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.324937447 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37360588 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327001239 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.326017376 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.325096099 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.325729315 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380590799 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327807085 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375009465 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.32391621 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.515991921 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.351120636 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326533089 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.328438482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.328454516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325730784 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.324289669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.331061372 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.323731453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.328506926 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.334434174 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323396547 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323690665 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.495618374 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434959999 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.324072318 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.339340634 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.333258115 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.325093766 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.380951787 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.327671996 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.325676007 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378636231 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441317058 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.38031004 seconds)
  done (took 152.804501757 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.333721812 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.334511079 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.329199707 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.344908863 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.329149452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.328508044 seconds)
  done (took 9.23717623 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.330360736 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.328636827 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.328023484 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.328507927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.327954592 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.330306327 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.328125982 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331647721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.331902156 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.328857383 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.32987735 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.330480692 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.329523809 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.328911931 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.328117888 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.328841232 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.33018096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.327832999 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.329974904 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328675026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.422973865 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.330459952 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330695416 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.330513387 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.336015644 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.329819237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337603567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.329149808 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.330312885 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.336840964 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.349773645 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332930443 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.330572495 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337151886 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.334511263 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.331566339 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33386576 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.331359187 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328802508 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.332113078 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.332799699 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332492518 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.332655318 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.333257407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.335718256 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.337588237 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.335746839 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.338978596 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.332970064 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.333928711 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.332469217 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.331892625 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.332048606 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.333432082 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.333688316 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352914002 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.336296901 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.332213881 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.332890879 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.333342289 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.335201541 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.334565311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.33460205 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.336076042 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.340270064 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.334912037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.333997888 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337261888 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333643282 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.333033235 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.333950926 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.331112933 seconds)
  done (took 98.300149906 seconds)
done (took 420.081056467 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.610445955 seconds)
  done (took 7.852147495 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.42521716 seconds)
  done (took 7.670186073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.953699203 seconds)
  done (took 21.208209873 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.355099644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.520048119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.349970117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.338409579 seconds)
  done (took 27.808409082 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.480543056 seconds)
  done (took 7.727614037 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.330710127 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.332719878 seconds)
  done (took 13.910505606 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.840635223 seconds)
  done (took 8.088529712 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.994015081 seconds)
  done (took 8.249351564 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.332624465 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.352670168 seconds)
  done (took 14.198570058 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.312148005 seconds)
  done (took 7.557125779 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.485358163 seconds)
  done (took 11.728028693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.335302477 seconds)
  done (took 7.579408646 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.356526197 seconds)
  done (took 7.600004177 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.031982812 seconds)
  done (took 9.275342784 seconds)
done (took 161.698628809 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.325904576 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.327224153 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.328514611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.333143433 seconds)
  done (took 26.557421413 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.366661839 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.367833445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368095934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.380552871 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.371263638 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.368722179 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.361264028 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.361675623 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.380736068 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.373015592 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.371632972 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.370097142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.36955997 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.359990399 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.373377893 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.373903185 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.379562236 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.370938811 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.362030559 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.372848629 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.33824225 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.382468086 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37508232 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.338095622 seconds)
  done (took 34.081003951 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.858025503 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406556569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.490330263 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.388408509 seconds)
  done (took 7.388915888 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.388456816 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.390013566 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.400105247 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.440648652 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.466275986 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.401277517 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.365254218 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.358984023 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.344988368 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.391023589 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467985462 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413834747 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.474895888 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338230613 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.525083568 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337285557 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.33794381 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.389798547 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.441192896 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.457285804 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.338321695 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.391350383 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.39402787 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.408010702 seconds)
  done (took 34.909171265 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.336338548 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.356600824 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.337294982 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.335969419 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.34579892 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.336809985 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.336108647 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.340316793 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.33819448 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.34370052 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.336938119 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.349433384 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.338136477 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.33727778 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.343376123 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.341572825 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.343427919 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.336698682 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.338470147 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.345343594 seconds)
  done (took 28.064862922 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.333012887 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.272701843 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683325114 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.586431963 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.331347718 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.338392005 seconds)
  done (took 28.794236214 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.405216431 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.550597759 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.338937719 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.679439594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.772627475 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.360504665 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.341024322 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.570303054 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.879055019 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.874257777 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.400531173 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.405329565 seconds)
  done (took 19.828364467 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.340328069 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.337141668 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.339698003 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.353201856 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.39273989 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.359119054 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.346158965 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.332228987 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.400442862 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.415078579 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.359386779 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.392925624 seconds)
  done (took 37.618473676 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425563725 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380517296 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.22919805 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333600741 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05333112 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545879266 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35315752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025919761 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.359478405 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610814666 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337292265 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433822092 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593187743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344121891 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343892772 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.301528029 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584995796 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796987695 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339461653 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.273351925 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366917043 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341444361 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.294727735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567474717 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571875032 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315239414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.597870669 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.113643575 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614529626 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356177928 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346943835 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337981115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61132291 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976100873 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454695972 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544317578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371720658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.971739733 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.319398151 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.217677554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347927212 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342944316 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350421229 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339723084 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.271862766 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337524325 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042083415 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.362681327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.049847848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339204779 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590712697 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441311614 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345235039 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.330215558 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343097847 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363078021 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.344507778 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43286048 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926469861 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.680507531 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353092435 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.279454047 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341935318 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300755444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965479195 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.364857063 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.343989428 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345622739 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276150029 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.196784054 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362925553 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488190717 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.364827738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990245184 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036413467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364172823 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275617034 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869178928 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349760267 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.277284791 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567890339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128633447 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277516234 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.285999796 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274264595 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028435306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349644779 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.705918149 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363626759 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051710095 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568196424 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38462142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364949556 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567117952 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.221976199 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344015271 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.342336627 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476284989 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363704523 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067178722 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29789347 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.347855425 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598144468 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.555012606 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344406489 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.294919988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831734391 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362500517 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.357827303 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.350383115 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55250248 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935605804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38200452 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.684432083 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36795821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.119567731 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052287038 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353698674 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.34781225 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357039819 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590533335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.075134704 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246315525 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413420775 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350315784 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34652751 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.311737597 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198322074 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.247959686 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.537179031 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379173223 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.35520239 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.34615596 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28888504 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.34323196 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361400444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.145703881 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56891608 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354825541 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620954828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278339075 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491195316 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355879136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.568117139 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.528405114 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.371684954 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60757754 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347540131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362423966 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357875214 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365514608 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445051563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368175626 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.347794131 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600403044 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.350565709 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.350934806 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.327553772 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.127836299 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354595629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.351704321 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355369718 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927489639 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340964966 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350229573 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236019153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.360533901 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413711768 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354084042 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555421173 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.157204653 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381934795 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.357208374 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.346346239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568334784 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356943985 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.228411332 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430213251 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.808857081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944417093 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383074337 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.281491048 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.058598109 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.039750923 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348412776 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.543154975 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348358489 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556125085 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383560241 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348470078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920876204 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372437492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.227759466 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359420151 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359537657 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354168377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348293021 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.105360313 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.728270886 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366058792 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.358577401 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491496738 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.363045781 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281601169 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866143952 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353729526 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34990023 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.125954673 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383372466 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.224013617 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143621013 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626048536 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351326132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622750744 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.414189818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388104778 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.350034754 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364676733 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368061032 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.352213807 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364079302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.360697196 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.29671812 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.794086384 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91658006 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070001382 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909666501 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619447884 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.38077991 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.232155433 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049227161 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30385328 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008516389 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537379083 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065023997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312311012 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818030293 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565827374 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121138318 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603740664 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58512561 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643929188 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.384421112 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612347143 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573349527 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387614636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356944676 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280334425 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.648797311 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898654122 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376973029 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434334737 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051837819 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375902199 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.137782006 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.407451874 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.012603592 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749762437 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.915589618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.740223461 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353378437 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374232833 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147088757 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376077562 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.878880772 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965676151 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381522716 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.821852723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306770303 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563244671 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389077386 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.34990832 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.611433081 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.36603749 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614965088 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608257089 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297290967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357270956 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876331 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23019463 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.35878435 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356010829 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079016748 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371046981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633588193 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.372231346 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.092863355 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374416283 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288574004 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289068213 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.047007603 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355255215 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330979979 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838374368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.374624445 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380806953 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365790551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19991821 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610109338 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.369547399 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934256833 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605872588 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3633362 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388102079 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.361005653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365349961 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.344938082 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254614971 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592326961 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427306514 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580625323 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.270146493 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.257517933 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437897839 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587790608 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.241075609 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370284712 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607481079 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.092890732 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.793099833 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063875444 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403894881 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362832001 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373790756 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374099911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378528724 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446472891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566915134 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.395402546 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368944599 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755638588 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378544297 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368337625 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.367679161 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449125343 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.738295225 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.093818415 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.132447194 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936061785 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100441541 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.95901815 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633475872 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360588511 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355320013 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286758849 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501225443 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.877214388 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625903273 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480899563 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.368079376 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382793511 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357111931 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374682218 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564628353 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627294869 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224132377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352607311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014666618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.235704702 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364304931 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.565266886 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838477164 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906177039 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47263923 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369050266 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054481708 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648116513 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.445616982 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354263986 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945360397 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.368614405 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.028936303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.362356956 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368167912 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508843009 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609426254 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012923389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.384012603 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.509039636 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.128903166 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.273407814 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617241802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.81275546 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.575648433 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964008448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070000637 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625088681 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427699936 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567412078 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.488508571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502766561 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.35993392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.264558087 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356636927 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202683157 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.067351151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.365527689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936738378 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644056898 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.359922539 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.36242122 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38404017 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.365973229 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580483216 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04278816 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579677946 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365751399 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355810355 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.927149445 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937258781 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638941259 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29874203 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.360428849 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594418356 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61812165 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382046714 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.81058377 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.068048236 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896408838 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.329755277 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380298494 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366081415 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049665764 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94668367 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.129212644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851505077 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.01818325 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362716137 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632787098 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.363414442 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357512816 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635773927 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.363368679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359569475 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571128901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.966540417 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131682843 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.37166188 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.39734113 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.304041423 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584900852 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432433546 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295834994 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359914263 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.764166751 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37928322 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48847141 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371419499 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.366734591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370062481 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.121460941 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643553292 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365607453 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.341956852 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.353724436 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371839411 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452899666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912282029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38508501 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.034832375 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.708737191 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616123478 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362720203 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.341320079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.364833557 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359439531 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068854565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.329984275 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363704392 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913118422 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.373684129 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.375660109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365062033 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.577751397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571462771 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361217042 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581537904 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389010474 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383467218 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.262060136 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.128588081 seconds)
  done (took 1642.965598691 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388947394 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.408779203 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.373533689 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.395623061 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420810463 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466752275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.415172752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456274723 seconds)
  done (took 52.601187477 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.368633527 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.51533886 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.392821802 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.362411405 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.37700231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.364788909 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.818185116 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.383805228 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.37372822 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.37265468 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.369710457 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.381287622 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.015402615 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.372008919 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.369321868 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.358656858 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.378468868 seconds)
  done (took 65.858255344 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.697319856 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.722054555 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.082151849 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.370738796 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.809191688 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.367669119 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.863052406 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.386446121 seconds)
  done (took 99.576416341 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382289244 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.381415373 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.383161384 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38264688 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.383572466 seconds)
  done (took 8.189847555 seconds)
done (took 2087.681278144 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.369304533 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.369898549 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367178893 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370591429 seconds)
  done (took 6.75320412 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.34318839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.070555102 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.354173323 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.369312775 seconds)
  done (took 18.415833244 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.369593232 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.367676084 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.044896329 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.986731693 seconds)
  done (took 5.31194333 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.123062517 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.130992668 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.115047585 seconds)
  done (took 7.650584314 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.369186244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.376316127 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.37694659 seconds)
  done (took 20.404627782 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.657390859 seconds)
  done (took 2.940320751 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.517412666 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.565660328 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.687882516 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.690697851 seconds)
  done (took 7.744777637 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.753993113 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.758604043 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.556059991 seconds)
  done (took 6.352762105 seconds)
done (took 89.591566506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.104621218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369133616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.576308428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.076013613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.5979455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.576182425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.584497417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.045700441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.648936698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.583908679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.079038861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.598160235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.528644634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369934865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.529908375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.369847352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.599339875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.156762806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.764855336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.973313055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.585468096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.71930606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.913445685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.738655965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.597951805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.528331358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.294545312 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36916122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.936443963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.318038466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.530001415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.141814631 seconds)
  done (took 189.090085139 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.372558748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387384504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371780163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391582679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.371900591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.37062665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.386966475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387217902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.37160967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.376711012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.371884733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.387401364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.388801574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.388435367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.372546911 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371417745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.400245422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.379645251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.372335346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.371396931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.388231475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.389876874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371800116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.37245611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.374539485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.372297624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37285617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388894011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.373198119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.388796747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.372889348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.37264637 seconds)
  done (took 205.415983209 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.376051099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.371879675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.392534524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.373269102 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.37378457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.39087453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.375751235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.382118115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.37885294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373197282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.374050835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.373757533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.388596956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374217713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.375827382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.372704659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.373458086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.390428607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.374553728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389931066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.37399164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.374018623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.391129725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.374706774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.375289029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.390991805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.374688914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.374103891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400960327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.374570118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.376350864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.374716982 seconds)
  done (took 205.420491897 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.570134604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.382365386 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.383189886 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.318896115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.383536649 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.382283417 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.377232809 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.578274359 seconds)
  done (took 14.66353035 seconds)
done (took 615.875296466 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.691911462 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.412891578 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.585367037 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.406624855 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.150232543 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422105944 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.400462826 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.572527476 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.323850129 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.58311861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.657676249 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.417577902 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.797013768 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.401885876 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.662000161 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.508764121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.259812226 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.378323276 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.715136949 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.927568809 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.669498028 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.835117582 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.591847932 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.29442897 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.824130577 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.832532832 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113496142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.249967162 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.419393508 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.728308017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.057657239 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.37702676 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.464608547 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.467276305 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.529067537 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.507151355 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.351443875 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.465773793 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.612644972 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.614998658 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.92453114 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.125876232 seconds)
  done (took 93.621662014 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.36692675 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.366975279 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.366921652 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.368349872 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.368999891 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.367788998 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.368312528 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.368022104 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.368788767 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.367732016 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.368611103 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.370256552 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.369175203 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.369298798 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.367635313 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.366910508 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.367711962 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.370470261 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.36808105 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.367982159 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.370918079 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.367970885 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.368265666 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.367168029 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.37034825 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.369450032 seconds)
  done (took 36.87144912 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.38663122 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.634058745 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.805798689 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.399477171 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.387199617 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.391457209 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.466275018 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.39682034 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.390411042 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.392027303 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.55647779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.393884956 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.423242738 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.827965507 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.397982337 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.388336446 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.388706565 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.388248534 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.641760753 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399717955 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.489904353 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396306243 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.465002532 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.405840833 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.412295413 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390429814 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.393829197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.95332765 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.410860261 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.557375109 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.167191652 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.468353633 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.899999008 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.832499042 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.169464083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.397723768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.390553995 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.562022372 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.393325956 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.389635958 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.466650898 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.397428653 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.806759048 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.055582316 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.413179694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.390970112 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.981926331 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.588136747 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.634762372 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406857403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.832217635 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.401801748 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394034751 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.393152466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.627337156 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.404476937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.391846677 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.952657426 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.421516787 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.467916832 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.400600201 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.392389391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.655481003 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.398531113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.643488295 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.401809547 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.399816221 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.412667404 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.811535392 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403172135 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.068714925 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.417465307 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.391953541 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.56083583 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.647394779 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.012304983 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.42209181 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.659243058 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914128094 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.491690631 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.404624052 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.947308193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.497020927 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.404492048 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.395041365 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396052908 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.393205408 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.443372358 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.467328071 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.018146122 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.087116787 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.983037194 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.490493015 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.412955327 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.3936717 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.952032667 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.418735022 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.39331272 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.817451549 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07675372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.420693923 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403272901 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.073275195 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.420514235 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.470727029 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.405818813 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.818499282 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.39566699 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.444801065 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.394540756 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.400643751 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.417808712 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.472053971 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.406790858 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.394722296 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.064143339 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.592959738 seconds)
  done (took 183.623674986 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.393154326 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.387078977 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.390009687 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.389671766 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.389571825 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.397327615 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.388680773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.388929146 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.395704224 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.389728078 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.389972325 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.391449917 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.390340555 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.396303701 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.40157201 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.395627995 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.003289581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.389695855 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.396603377 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.390030653 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.17760158 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.398939849 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.389856601 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.388474994 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.390268559 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.391079682 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.391628162 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.412496703 seconds)
  done (took 153.698283309 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.396720234 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.948688082 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.423430223 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.524702068 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42243621 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.395673036 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.523488995 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.460974497 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.423453662 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.395111055 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.394590677 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.693996864 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.404961037 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.895314372 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.582713124 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.548119027 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.894266263 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.415606702 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.395636898 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.395186735 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.525810092 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.40570188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.691119672 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.943796122 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.415867125 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.942981067 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.383062089 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.399198278 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.397377394 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.946429305 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.413018928 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.693843048 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.474705722 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.460800223 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.969450621 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.912600271 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.913058392 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.542985226 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.40572335 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.396141745 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.395994211 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.381790368 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946269717 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.41694823 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.399884987 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935867027 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.418021112 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.400219639 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.405320426 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.397183755 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.456206365 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.483330953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.721574803 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.954676176 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.492561457 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.418016691 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.526503016 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775853866 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.401351302 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89586763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.382739519 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.952338885 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.418938126 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.381926431 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.399819173 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.404904944 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.545185904 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.53576563 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.910888448 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.421049462 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.899521343 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.562588774 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.403046623 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.398373033 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.402259636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.952355973 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.917524255 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.562948678 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.539034087 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.594388669 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.392241564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.399853137 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.383945932 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.475794344 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.407845118 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953991482 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.917105317 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.419685964 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.401248261 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.401317719 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.401909014 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.571028894 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.978772502 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.495376154 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.897576483 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.713651976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.698988071 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.403651572 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.458993861 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.425510769 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.700372828 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.403295065 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458311148 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.834952014 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.703698567 seconds)
  done (took 166.182542946 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.647211927 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.573018104 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.49275361 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.558676499 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.018845116 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.961536076 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68900339 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.536309734 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.516818888 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663888287 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.529197887 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.492538804 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.613312953 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.489969217 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.132194873 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489316413 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.513013142 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.555340391 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.561672426 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.42053629 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.081956641 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.683416565 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.593392898 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.304409068 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496033499 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.159962033 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.969246141 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.943954752 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.582317896 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.706930377 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.922031584 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.520310222 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.351971285 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.075138108 seconds)
  done (took 67.155118684 seconds)
done (took 702.442481386 seconds)
SAVING RESULT...
DONE!
