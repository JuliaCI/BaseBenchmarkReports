cset: moving following pidspec: 884
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.409203824 seconds)
loading group "string"... done (took 0.584819746 seconds)
loading group "linalg"... done (took 7.308363034 seconds)
loading group "parallel"... done (took 0.159603203 seconds)
loading group "find"... done (took 1.149180555 seconds)
loading group "tuple"... done (took 1.870624209 seconds)
loading group "dates"... done (took 1.297660616 seconds)
loading group "micro"... done (took 0.225795657 seconds)
loading group "io"... done (took 1.021056699 seconds)
loading group "scalar"... done (took 39.159916027 seconds)
loading group "sparse"... done (took 12.521693049 seconds)
loading group "broadcast"... done (took 1.003896425 seconds)
loading group "union"... done (took 12.888533672 seconds)
loading group "simd"... done (took 4.649040241 seconds)
loading group "random"... done (took 9.075916444 seconds)
loading group "problem"... done (took 1.820317131 seconds)
loading group "array"... done (took 20.795935141 seconds)
loading group "misc"... done (took 1.681979477 seconds)
loading group "sort"... done (took 3.329987655 seconds)
loading group "collection"... done (took 17.277503704 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533705402 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128133911 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119418051 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119377082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146998346 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113224381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124821953 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085678428 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.800076808 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148502639 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118134599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430464105 seconds)
done (took 4.100230244 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174983622 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083170801 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082401556 seconds)
  done (took 0.208238582 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066193799 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12564743 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067709338 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068375565 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068781413 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068345214 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067899321 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06801851 seconds)
  done (took 0.578841098 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075177854 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071178111 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067541312 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069956914 seconds)
  done (took 0.330595492 seconds)
done (took 1.428101051 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801230746 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207275338 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190559607 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412568361 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134161474 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162477492 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640996412 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.299742305 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189003032 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0813781 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109187564 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328155024 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109190741 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641011612 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074446579 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090616367 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13561483 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.398278432 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067576769 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082155957 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088472031 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12778344 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084321033 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073879474 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146284899 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067498874 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136566564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079692992 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065975294 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212301823 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173950031 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655055469 seconds)
  done (took 9.143052282 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095249593 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096480746 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069292353 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122262771 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099200712 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071602759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0726596 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069461768 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089538111 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129086547 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088795421 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1023261 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065634219 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068513676 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08500592 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204734021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082461615 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083304855 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072855094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077420942 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108158532 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080583633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079398798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0792192 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13251534 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182540166 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095683077 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097296969 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066405328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079246336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114820632 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12521963 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067966909 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06801376 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126962427 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09665014 seconds)
  done (took 3.567777889 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00960079 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144089506 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090360352 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134779127 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064472675 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109060436 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06501015 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081800935 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210472431 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.388844294 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598765031 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110763045 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111762132 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102756364 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069522041 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068005087 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066422105 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489430519 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094711726 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105912244 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080888252 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071783389 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069952593 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353867495 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067244704 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063223443 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068266954 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056790665 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125078956 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067733848 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.940446746 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126381327 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066039377 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100610459 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1618433 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088634921 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273853236 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06719454 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063796634 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152295555 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06444767 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069267847 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06553719 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083600248 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102948314 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112158723 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06511925 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066663701 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163454722 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066531476 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081019541 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066451383 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.655379428 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154491728 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078242067 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066307164 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259371906 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089571521 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070550323 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066551559 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178160181 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133101062 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068127526 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067872548 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069347643 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070915597 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362826023 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066175022 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.872249224 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070780788 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078892237 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071474895 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07000191 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073431403 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07297945 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087961915 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066277116 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075362739 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065771469 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065855037 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066582533 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083846881 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.381251968 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066996532 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068327803 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064871578 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089653728 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096908025 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06662193 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065409462 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100440145 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068284576 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065905567 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107255423 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067247095 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083127319 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069638116 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113104068 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066575154 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188016532 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067648869 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097857125 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071760329 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098690083 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066107075 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079219392 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068042341 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.425499025 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065390437 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064779151 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067978226 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064932456 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067441583 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06647561 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07908208 seconds)
  done (took 19.987415832 seconds)
done (took 33.751542695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243487274 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077693961 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08175322 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073808665 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076282261 seconds)
  done (took 0.626243067 seconds)
done (took 0.707164894 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125926314 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1015833 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065668072 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098752674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064710923 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105717361 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10433436 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082023624 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100411813 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064298553 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097832561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064694578 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064543835 seconds)
  done (took 1.216321387 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083746962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083702148 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071090813 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084489889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064794511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08495981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083877675 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09255681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083684164 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074865207 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065474592 seconds)
  done (took 0.941015794 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084987785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086494407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072123408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084243468 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065808816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084414801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083914078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088509246 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08418734 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076661964 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065673379 seconds)
  done (took 0.934001974 seconds)
done (took 3.151327044 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081227826 seconds)
  done (took 0.106988827 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594424676 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.072639725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081621602 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11201226 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193266264 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121530646 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2760942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087488008 seconds)
  done (took 7.77060493 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104466381 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071441556 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071727396 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073965869 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070860155 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073213865 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070397067 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070066961 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074115279 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072644765 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074031965 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070765165 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073861051 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069969631 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073905672 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070938644 seconds)
  done (took 1.376208401 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093648619 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093188226 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075627074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078039593 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073720166 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073879579 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075771651 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07581389 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072422429 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073863374 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076234011 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075214531 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07316389 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065985215 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075188887 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077324109 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072622556 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075453794 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076083136 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076773683 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076418354 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066537337 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073007702 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076098434 seconds)
  done (took 1.982049533 seconds)
done (took 11.291292905 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117233772 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073467707 seconds)
  done (took 0.22086672 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083928791 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084890142 seconds)
  done (took 0.217721162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086123694 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067122762 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094487617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080507135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068509492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067855671 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090981096 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067950619 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067666436 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067891959 seconds)
  done (took 0.807365812 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068535699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07949366 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071990898 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08433274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076030623 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066165472 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074534536 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070279635 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079894463 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064421917 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072322279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083198848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070842873 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083788848 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073977708 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069013411 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071336267 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06854047 seconds)
  done (took 1.388569193 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066875949 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06827846 seconds)
  done (took 0.203348084 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069480878 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064897126 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06836393 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067261372 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06360556 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063800176 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063175464 seconds)
  done (took 0.505159027 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395129293 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115650192 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318873464 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072555071 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084178328 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259698705 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067155919 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072076389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072017588 seconds)
  done (took 1.556137029 seconds)
done (took 4.980243923 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07984771 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087142112 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095840777 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37539836 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091889542 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066276221 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115509905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1919017 seconds)
done (took 1.181163227 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212030699 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635611335 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413092243 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209090278 seconds)
  done (took 1.305816023 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342688869 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090087387 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05985221 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0691686 seconds)
  done (took 0.631278293 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068716492 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07090353 seconds)
  done (took 0.194762795 seconds)
done (took 2.413361398 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068371464 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067854235 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065587357 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06765768 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065485597 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065472328 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067632653 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067462567 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.068051034 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.067625394 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071421 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065250107 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065147114 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068048977 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083314854 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063644938 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063395474 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066085209 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063293411 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063840628 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065511029 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065947407 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063588267 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063402785 seconds)
  done (took 1.680821161 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084059322 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065672449 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071243637 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070679945 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069457511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07164425 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070377628 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066114079 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071492121 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068563116 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069229015 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069204668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068271608 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069118028 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068495756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069656744 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071029291 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065544669 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068262679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069271918 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070746307 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065925705 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069095003 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070813819 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068958547 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070601054 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068357524 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065768905 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071463451 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068869227 seconds)
  done (took 2.162634392 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070969291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064871621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066282489 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072732402 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065496501 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066444102 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065104046 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066100542 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065991306 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065116505 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066448024 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063870789 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063996801 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064194252 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064138536 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06727848 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078969806 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063823466 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06288935 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064379312 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066920267 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063219993 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063769275 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063325858 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063516061 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063172562 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064113108 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063263871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064468858 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06371708 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067073237 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066915879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063250227 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070506266 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067223042 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062822292 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067907793 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06292846 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063836102 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063280481 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062807042 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063160627 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0629336 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070208079 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063868555 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064832154 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063327595 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064864985 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063996869 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066070759 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062747923 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063752266 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065642916 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064418749 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067510388 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062926164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064380129 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063120778 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064400504 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063105684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0630188 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063092628 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065853525 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064025039 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078891008 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070294634 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063280813 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064966843 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06395357 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066116557 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064669814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076994053 seconds)
  done (took 4.799487512 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090446081 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.20058437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065624153 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065109673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061296027 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064429186 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069371989 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064019552 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06512493 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082397447 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063636808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064786608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065114684 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067974165 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064200872 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06488599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071872602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061253832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063533389 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066993364 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063785077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069187688 seconds)
  done (took 1.728310184 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15674334 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070274725 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105907327 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076041476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070269047 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075339827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069831893 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069587859 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069327298 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067310029 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06725158 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070425546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069235468 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067710919 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067349605 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06859854 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071377505 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069647228 seconds)
  done (took 1.455418774 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07823699 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067307127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088941442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065932131 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066521574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068923744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070441558 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073989045 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068709964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065544484 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073539473 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067760197 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067604792 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065275316 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068303947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066865619 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069911918 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067069841 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075441571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071563111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071603272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075305511 seconds)
  done (took 1.62783567 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081957527 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069872212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083961143 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070226907 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063448131 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066231764 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07161435 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067310707 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072649286 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068913095 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067836464 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065681063 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070227748 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067371008 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069876953 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066876945 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068853264 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067219757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069271027 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063306233 seconds)
  done (took 1.466705757 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087098563 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069654186 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068725756 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076904577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070003758 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069813978 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077944902 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07006842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069752707 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090493506 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069053673 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069405862 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077614775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073933465 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069595013 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076637872 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076639247 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076687365 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069350279 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069286113 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090413446 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069624063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076468989 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069233218 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069106628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069242121 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068835007 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073978327 seconds)
  done (took 2.136420404 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068410705 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067638771 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065054003 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064878177 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065131035 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065237762 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065183558 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065634246 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068038082 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065424098 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067170794 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067322527 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067893628 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067437543 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067724227 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067380324 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06758258 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065108469 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065257984 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065439883 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067585515 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068038297 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067780532 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064829013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064873434 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067779986 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065594245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064965168 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067773693 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065118421 seconds)
  done (took 2.076892252 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077127808 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075831339 seconds)
  done (took 0.228492598 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065641383 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08198039 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064711183 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071375209 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071759302 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06867807 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074699547 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069797833 seconds)
  done (took 0.619856385 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081505287 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077312555 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067575941 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079422675 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077470284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084452841 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138735276 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068907546 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075133112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065861434 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082225121 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06730084 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074473895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068495568 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074250714 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074728386 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065728292 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074068372 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070310957 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066889343 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069316928 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076793133 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070454273 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06361663 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069529232 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090992976 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079754713 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067313492 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070900572 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07554182 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07389679 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061434709 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067845099 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068450141 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065684923 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078385543 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082349955 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069142766 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075597458 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068527122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077677286 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062568278 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072274083 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074646963 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078711582 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068506372 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068200561 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06225991 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065768243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070795514 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062992649 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070406595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062211439 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0748454 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071553167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078732576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067023148 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069474883 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070637247 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071278685 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074676894 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069860073 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07079622 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068209432 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078419802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072560784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076992823 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062399732 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061586626 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065703511 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078200009 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09126715 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074371124 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068548855 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068880585 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065551787 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070841844 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06910267 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073722535 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074656693 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06802851 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073571904 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075563759 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068213167 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070393806 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075064801 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065675148 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071014131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065610042 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085529299 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066955175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065797911 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0658232 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078667519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071442647 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067989394 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065561408 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075972918 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061919922 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068221992 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069055621 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068712162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078581962 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072467403 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07302087 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07588171 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074141483 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067556081 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069691855 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06365446 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067833705 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065648791 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073993263 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06086195 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069425718 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068144746 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067399826 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075177507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065913789 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066544229 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074227572 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073279071 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06557039 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.189770117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06929973 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066459745 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070465113 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074246775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065082421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062538738 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063767571 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072101532 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068532144 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070308288 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071717955 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069389088 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061203775 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064421551 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070876254 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075448721 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06683552 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067325157 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072114866 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067914828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065275749 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072439467 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070949494 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067465121 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074318944 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068923767 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063115924 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070923973 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070760503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067063945 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071916273 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071362745 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070629287 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068597687 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066933369 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075100332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068918024 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067109171 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068208718 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066897648 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078381504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068350575 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061033295 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062999114 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074741404 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064445505 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065227244 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065267593 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068351892 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066518937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06420119 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065451471 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067934846 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075481559 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069693987 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069735322 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072676957 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077954356 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06691671 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07010642 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0678539 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068518572 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068250606 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076929721 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073185635 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072659176 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070101247 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064682819 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073415552 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075889208 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067173116 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065432152 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066752848 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072286533 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073352499 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072079363 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068754035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065933548 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068333267 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071337883 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070378124 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067374455 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067280373 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07380906 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065931023 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07480315 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068602353 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077909671 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070826752 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0626704 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07014998 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066732002 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074387901 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062690319 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066086833 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067004847 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068836727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067371799 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070512302 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06179036 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07511759 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075681039 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068626547 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067353652 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067578589 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075338268 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069712861 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072193849 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071826964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073753829 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077982146 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06510432 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069505413 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075373303 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064844136 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058891089 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071018747 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063604952 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064347781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065334705 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064673332 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07009333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074264706 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072720987 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060833583 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069437767 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065623307 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.197202045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062093738 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071408299 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070014522 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067970888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073121093 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066920634 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066569915 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070224529 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06681448 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06825045 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068788455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070901486 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069387583 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07053269 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06774646 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07108889 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067491004 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066082714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070683452 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067110971 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068334604 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072565697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067448263 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068140863 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070766641 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06859661 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068700408 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068585291 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067794007 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071550031 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068964072 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069138658 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070811645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063205669 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075477288 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067319936 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075723455 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068735208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064833821 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074751138 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070874358 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073564093 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067456601 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066729284 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067132315 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066057388 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068857874 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072836666 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064171109 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076538114 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073438345 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066762917 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068749425 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066718753 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067580361 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065696077 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066850835 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066599258 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06630286 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065681759 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070456367 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068619817 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066081494 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067902334 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066496037 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066689009 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066823188 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061962552 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067031653 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067807598 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068069554 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07781654 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068652569 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067358519 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067222315 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068417708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067170442 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064370836 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075735225 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076500999 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068766133 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074976962 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067489012 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069722823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078989469 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061840788 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066099498 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066176414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066168936 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075697822 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068785764 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077776322 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068456669 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06792593 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065115819 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069170671 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066586589 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062308526 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065601308 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071879319 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067578539 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067102488 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068162369 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070663947 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068804457 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078410411 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067195889 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068635297 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068189888 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065481865 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066989485 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067243465 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07107882 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068015029 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064821375 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064055736 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066705445 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068109943 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068293921 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06924855 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068306127 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074066202 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0667228 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069871722 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069759659 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061442705 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069738962 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066585132 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066675133 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066288576 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.202137961 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07051156 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067666214 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075517738 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066391265 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067745596 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066782058 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063596536 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066630388 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067253898 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068048161 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06822406 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069126892 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076171055 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066435079 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071629146 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068773745 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069519725 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076109674 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069754222 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072052214 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075543362 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069184397 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070924188 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076580066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072357119 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071209662 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069225123 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070411818 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07451727 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067581797 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074522205 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068530166 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069248977 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069929243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066844066 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068050003 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068240391 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067932552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074868639 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06901301 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067125005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067635617 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065567619 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068704019 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07135617 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076409667 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070830518 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071140693 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063122265 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065185764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067367984 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065029361 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068633155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06954304 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071580796 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068294347 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066393881 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065423912 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075191436 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071859762 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069858301 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063936309 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070038684 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067040962 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068682669 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067192334 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066806415 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067573717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070270095 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068047263 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065525319 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073297832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071818058 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069105588 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06986202 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069219949 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068710437 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062641232 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068747962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06971983 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072297323 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068661657 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066898731 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076341704 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06382043 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06672375 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069324522 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065163027 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070728007 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06099867 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067524565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067386191 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066886883 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060753173 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065046321 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063884209 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067979269 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065154363 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060967638 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076786037 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075317322 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070226926 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065087562 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065149678 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06104438 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061282237 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065468346 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066543943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067975318 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075649751 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065187719 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06527319 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061520095 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066402198 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068464812 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068553615 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062727891 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060292073 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063950141 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067591584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070040929 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063592825 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06462896 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068447788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066817394 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062845808 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067836023 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062161444 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068386752 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077279469 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065480434 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.198630228 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072212114 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074019769 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066507852 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061257099 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06645972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069852394 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067823295 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068253269 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067181598 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08157679 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069772838 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065923157 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065273863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069688242 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066616057 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075155529 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067636513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06735781 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071085355 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067920275 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075114327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070130053 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074200805 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069404505 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069098796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065412972 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066754349 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066164384 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067680758 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067983201 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066773479 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070940213 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075973024 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067314528 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079193226 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077729846 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068664077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063009452 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066149056 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06576473 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061311634 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067028265 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064073774 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064844169 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064169245 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065620071 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067402923 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071320419 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067304165 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066694751 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066355586 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060037444 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068934027 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068639716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06685903 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062934353 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066163012 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067302125 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07023074 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069252397 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06361726 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067860506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067875482 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066705805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061296395 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072899891 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065250071 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067744975 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065621165 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066332101 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066248187 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069189662 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07083278 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067248522 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068343017 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069619086 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067976681 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063159121 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062989103 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071372341 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063589275 seconds)
  done (took 41.869119342 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099251838 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063087912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061380429 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061420444 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072971734 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062278359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061773987 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062013861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062234944 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065373898 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06169178 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061762282 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069802957 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077836796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073334328 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066011993 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061023141 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061991978 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06066948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06204456 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069558091 seconds)
  done (took 1.54303853 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073035695 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075959187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07411147 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08152783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070303223 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069348558 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075075881 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070517302 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07897525 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071896465 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077642285 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069740503 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071279921 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072288082 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071768933 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070249883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077227345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069681198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069620051 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074295462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069304502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074574566 seconds)
  done (took 1.686965187 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066738502 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065512579 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067350718 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0611849 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065704775 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060594867 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068517016 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06339485 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068985639 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065104438 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064339254 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064477813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067080944 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061723148 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065960282 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062671707 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106920063 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069192297 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065463331 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066335079 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060639072 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067985224 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060744946 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061405449 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064558632 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068919726 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066175608 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064683247 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065691484 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064567056 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065527182 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063313197 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066858117 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065739368 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064400043 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064527087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065281554 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067010182 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062470275 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065039195 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067312915 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062313657 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065952417 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066848338 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065147524 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065133506 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069196095 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066980715 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061952087 seconds)
  done (took 3.318446852 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07837036 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109529317 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066720753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090932689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07982954 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072896131 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070110881 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089495236 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063480339 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065038465 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081409175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078375793 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065494011 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070758921 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073028656 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064886877 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066359281 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063812007 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068281665 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064411929 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068509936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071777511 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079396058 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077369038 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069011934 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064137644 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064487564 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069274573 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076719949 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069821064 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06918333 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070054785 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079464721 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066640891 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064156775 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067278516 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080765642 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064822276 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067103722 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062324783 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067196712 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068888042 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071764851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080995586 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06550138 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069777974 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064994956 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062297839 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076909544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06744226 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072827151 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07876897 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068839275 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065085754 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069172395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079009982 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065208496 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063410201 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068337971 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076917294 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062749809 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068881655 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078036331 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066854125 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071821095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078588025 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069802093 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068994412 seconds)
  done (took 5.090952082 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075104218 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093982254 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083878196 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084237353 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075570384 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075124375 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075518076 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075490553 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075636439 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080519999 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076161457 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115765895 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070435422 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078176832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075330929 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075619841 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075232333 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075603319 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074848474 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075005537 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074958714 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082104889 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074884953 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08244105 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079088653 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070380838 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074683132 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075014816 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082256859 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074991839 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086945588 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074613027 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074527756 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081967638 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078685755 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074645684 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064687405 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074242361 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074431136 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074960682 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070042305 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082269295 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07437846 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06981747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074913682 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075187602 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081785179 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079022893 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077083022 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079312547 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074822343 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082292572 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074529736 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075376043 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082535849 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085267735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08251656 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082687401 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074893851 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082158388 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082130714 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085347673 seconds)
  done (took 4.991340927 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081904967 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073975666 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080679163 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061813985 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063793264 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071820168 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063481529 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06369268 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07326887 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073722329 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076292069 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0712553 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074202606 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076061422 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071420249 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074411575 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072187784 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071353373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07336289 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071286422 seconds)
  done (took 1.580553407 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072813828 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082947984 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066170575 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070643829 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069500849 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071837038 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067611341 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068790303 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067179841 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068259959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075041922 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075501874 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066210219 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071720986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075580075 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070994712 seconds)
  done (took 1.22348268 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083881852 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072745999 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080132061 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065883023 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066501341 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063018486 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065549988 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060772231 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061685732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077779731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065769871 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.0757781 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064888427 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064510377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061848271 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070359885 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061965905 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062746194 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065338922 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077275049 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069352505 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063367888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068463252 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065134095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067617098 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069561181 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064537865 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065467181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062686915 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066845921 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069151989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068782507 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062490499 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06278421 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063886071 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063040832 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066299876 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066875137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070766941 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066208065 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065562372 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069182311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065924776 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066255989 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061420127 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065444838 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061502304 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0676003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063425195 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067718878 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06495908 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067927087 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065713326 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071727186 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068069522 seconds)
  done (took 3.761049057 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079418648 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069222287 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061343459 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064135322 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069053389 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067140471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069617767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06633183 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067526419 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063574534 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06682973 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069591289 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067461602 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068814051 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067414354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069134783 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060891485 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067447732 seconds)
  done (took 1.329776202 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070507927 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065222716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072274341 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065164718 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065353042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067509402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061528275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064808503 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064448082 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065847181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065734305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067673898 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06426009 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067338878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065842244 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065773711 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068018815 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064255492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065456467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062133167 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067441692 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064182363 seconds)
  done (took 1.526460738 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093938782 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082162076 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139688634 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078580651 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084368127 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071167226 seconds)
  done (took 0.628437339 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089906777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099304904 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066634758 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069134626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075463826 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06992242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068697638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068973112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078688364 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076001082 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069875464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078432565 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078772947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077333513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076039824 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075864203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069198054 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069956924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065526582 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083138207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069466441 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077367768 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069737518 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069294625 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069782455 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07686002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077775274 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075008817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069117203 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077443809 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075203093 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06951895 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077607664 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075395856 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068512609 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077823018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069380133 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08285462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074810414 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076800008 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068909208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075406291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077566799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0739396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07815601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070186355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074190225 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0694142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069971543 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085388735 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075561492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076947054 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078332974 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078300784 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077994542 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085088622 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075648612 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076982431 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075652332 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075427398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077303416 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075143763 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077149136 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075363431 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074933843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076983773 seconds)
  done (took 5.033210997 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10305503 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065920627 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069966404 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076105145 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077682365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070409662 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069975816 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069836519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070357064 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066875487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108558243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070655579 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078276622 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077507957 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069655976 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069490724 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069595407 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076986246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066225312 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084981793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0696424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076647628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077309295 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077171555 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075503273 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07565158 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069528337 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069325786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069331219 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069363918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073901157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06948182 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076607691 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066298101 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077275253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06982193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069175074 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074205623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0693976 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075035364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076807963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08269186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069610288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069301286 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075252779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069394416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069146738 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066528331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069775088 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066502398 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075223737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075340104 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075223599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077082793 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069620446 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069477602 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069949084 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069781739 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069723729 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075001611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076831347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069364422 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085209162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069705075 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06958395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076973356 seconds)
  done (took 4.999484254 seconds)
done (took 98.611909671 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187352216 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164848993 seconds)
  done (took 0.389376428 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068372559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098235471 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0792072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129935594 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066391922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100241112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09869779 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077704932 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066520344 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066356693 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06606126 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068812676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131390234 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066233145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065814787 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0687041 seconds)
  done (took 1.380779103 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099421194 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165641677 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1059163 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067319724 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101595847 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075118157 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066536351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078481338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073697621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066832022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074981228 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072600242 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06736039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073160454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07266519 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075039627 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067155389 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075581578 seconds)
  done (took 1.554044533 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098943338 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091193969 seconds)
  done (took 0.272258473 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155495514 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133017468 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201809537 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352427412 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164789526 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14814381 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143484079 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143880573 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115839044 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137691187 seconds)
  done (took 1.758193581 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099119601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153831704 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266385389 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117078948 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072373637 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094602373 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118983428 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078983886 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080761956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080088969 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080080543 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076128472 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099229348 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073830617 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073626236 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075665548 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102558312 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072494175 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073818189 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075621705 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099551878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065397881 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072467508 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07243336 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076353742 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077310887 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065653776 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065230977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075321426 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074255848 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075731551 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092120874 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076446537 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104746462 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070546404 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105857192 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076205908 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072916845 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074491442 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072695788 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077395186 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077465748 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072840887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075617991 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065527139 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076790792 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065832608 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065645505 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076891466 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066567877 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077157082 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075628758 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105150349 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066692905 seconds)
  done (took 4.681966187 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101919857 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10502953 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070987807 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112519785 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10283606 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073320828 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101860228 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095350724 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103644312 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07062672 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068856724 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070013662 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082479005 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082487766 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114861441 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107121801 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073367043 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072010441 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105841177 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104829006 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068746743 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0966574 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090809597 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102905315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067616992 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069889787 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067742845 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070478353 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076267024 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077870312 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069246771 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079982433 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084583818 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077440469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066680272 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067971467 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068049131 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079443758 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078885767 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078208566 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076883294 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068005635 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068120434 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069672117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069670938 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067771156 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07855535 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081184314 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078391228 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069419055 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070137792 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068191946 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069384518 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079682155 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077593889 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08099697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079337181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068667909 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06875117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072419295 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080189547 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079100612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079707484 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069607335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078385245 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06847811 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079684736 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084072323 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068083167 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069585297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068065197 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069023794 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069167891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076927525 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07735276 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069545487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069059097 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067981227 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079578556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078076947 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067876518 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076754233 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06715289 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068653535 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069367809 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069855183 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077005758 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079800229 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069452627 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068480717 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069341359 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068467411 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066974348 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076593372 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080013958 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078990859 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077737729 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068186108 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077543811 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076727059 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068777206 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076909998 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066876452 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068526834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067828877 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076171233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075082707 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077138411 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068461662 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066724251 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.207491331 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080234264 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069185437 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078273759 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080224882 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080402961 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068632157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080216521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06926228 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079015656 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069689953 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07967317 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068936941 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079503996 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068741559 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067926265 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068269562 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079434279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072847332 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068970757 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069707683 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070187148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080349124 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082771927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070703337 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078498062 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078481639 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070470758 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078117904 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069108784 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07895338 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069466662 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06992241 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067988119 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081852747 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068483177 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068547422 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069181056 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08042135 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068319466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079825355 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07785871 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068488129 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08133707 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080033173 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076665819 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079947405 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070567363 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068385772 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068288093 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069829796 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077113197 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079592044 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070559173 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068843391 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077659424 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079070154 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067411739 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07763481 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077986501 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078051848 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068748686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069545912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080177474 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080516802 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078099165 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077697889 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078005748 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068332478 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077007611 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077934054 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067731413 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084191203 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068058698 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082358287 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078217801 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076227219 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078014773 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0799537 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079939712 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079891716 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082954986 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068433425 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067670665 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085291357 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0677257 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069202188 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07749673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069070335 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069222459 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082727142 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068200725 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079152228 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06763481 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078086571 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067451709 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069965624 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083294041 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067986792 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069495534 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077450421 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067922675 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075588765 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078269758 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075811647 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066680266 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068974838 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07707247 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076643986 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06650653 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066455605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069023018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.209450472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0773084 seconds)
  done (took 17.351286099 seconds)
done (took 27.531287736 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213559227 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155594982 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182313149 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117837184 seconds)
  done (took 0.7956543 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116456555 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101753951 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092839262 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064660124 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10010833 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064531468 seconds)
  done (took 0.623180649 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311027858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210394514 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187611027 seconds)
  done (took 0.78218164 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200031253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187636337 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419075719 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26319015 seconds)
  done (took 1.258334081 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143176746 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088552104 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067356087 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085146863 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134258455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158494505 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100383006 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12535161 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07870563 seconds)
  done (took 1.109207121 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148533547 seconds)
done (took 4.791773241 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104872644 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116059236 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117967885 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.236433267 seconds)
    (5/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.167860382 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.112344875 seconds)
    (7/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07543714 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.236471753 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106701508 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092809444 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.209848113 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084636817 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08028134 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091665016 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077832418 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.182273828 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075416947 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090692464 seconds)
    (19/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078038584 seconds)
    (20/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072647678 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080627611 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073991414 seconds)
    (23/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076913218 seconds)
    (24/309) benchmarking ("sort", Float32, false)...
    done (took 0.131327504 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132504469 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208263551 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064641912 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088486239 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203239681 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089542714 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074321364 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082176849 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127898764 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088075133 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100184255 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07153393 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160938816 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091916379 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.162068422 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079192225 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.198962955 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071358312 seconds)
    (43/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.154718045 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068713581 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119195878 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.161165573 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.203353118 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071790781 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090856168 seconds)
    (50/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067649163 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051289414 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.104170404 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073312422 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123126161 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091682044 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090439181 seconds)
    (57/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10223656 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.155460132 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143268907 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074912083 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065063558 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073171978 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072626718 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052917975 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066994483 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092250381 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099324095 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151244015 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067182967 seconds)
    (70/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.160028728 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094624218 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067595396 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185727562 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144011885 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128697955 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200584494 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148754682 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050984681 seconds)
    (79/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152750901 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070095074 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.154217614 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182544356 seconds)
    (83/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082557665 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185589358 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.212205349 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071452617 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099368134 seconds)
    (88/309) benchmarking ("sort", Float64, false)...
    done (took 0.278444101 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147459995 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052246283 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066137573 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052271471 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142344249 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078179037 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.067221854 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155519606 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068490521 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090018826 seconds)
    (99/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.162705504 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09269864 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176234974 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156758625 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076407013 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16740808 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166566091 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051341192 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066954245 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213415395 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088140882 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075326566 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.1145621 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099623533 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052415161 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050466327 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050638568 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051159183 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205731653 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063117173 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072912642 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050648671 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180047065 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143990037 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062031751 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076244564 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143893245 seconds)
    (126/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080060518 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065072338 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170859133 seconds)
    (129/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16192799 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051843639 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117675872 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.135677094 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073125219 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072643729 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0723999 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097793399 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073586081 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071207 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071907237 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102902326 seconds)
    (141/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06589531 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072029891 seconds)
    (143/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110377705 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0726337 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146467065 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096610256 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108124932 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08712767 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071638407 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.143562833 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07311478 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0919338 seconds)
    (153/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069038187 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071944641 seconds)
    (155/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066300791 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064905739 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07279861 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15448061 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050458302 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069711996 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154112739 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050558085 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194580653 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05077158 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052457034 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073011221 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072051636 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05061806 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064925722 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065068809 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051163433 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065276305 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075291156 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06631955 seconds)
    (175/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051344086 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087452764 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 0.140138219 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051306459 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064794647 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181619428 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088522019 seconds)
    (182/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072057783 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136389208 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077587746 seconds)
    (185/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060290931 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080737512 seconds)
    (187/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050313857 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079709946 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065109719 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063268792 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071439582 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051459631 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07151577 seconds)
    (194/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11388626 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065924933 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065180994 seconds)
    (197/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051437555 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071858406 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050648822 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070796443 seconds)
    (201/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080169521 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075491754 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050332013 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086338969 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072446673 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.209655652 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157820009 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051308021 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051198389 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090468965 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051171426 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068448706 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086509098 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06362677 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16246153 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068591337 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064774721 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113220446 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073099675 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052611874 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139589607 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052825104 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091976331 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074847432 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07341159 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067328803 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075017038 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091055374 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050880796 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075647969 seconds)
    (231/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067795954 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051256973 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070827231 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193523917 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065788886 seconds)
    (236/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074116504 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064656573 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076520325 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050603873 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06457399 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171478487 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053038808 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060932419 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179742759 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053026958 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067835433 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142542975 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095380961 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065402627 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053874336 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.287715383 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050608276 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089882553 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077135121 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05186371 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051780132 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074894246 seconds)
    (258/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182325452 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053685831 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0789469 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052846712 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052038485 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065954082 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065098079 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068544695 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050846344 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066587356 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088179844 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071928205 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051121834 seconds)
    (271/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071640994 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073971902 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053493966 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069764256 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070765024 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065269545 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072225893 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121084245 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178783302 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067998829 seconds)
    (281/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064363909 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066826822 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072552961 seconds)
    (284/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111763624 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053742106 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075598815 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080612268 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06698566 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065347832 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05224015 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065405639 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073395475 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074153717 seconds)
    (294/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053359106 seconds)
    (295/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066649332 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065865855 seconds)
    (297/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051042987 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065049463 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072888769 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071029961 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065194522 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052787795 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050494313 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064953975 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071259955 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095368074 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05176474 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061817527 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088914419 seconds)
  done (took 29.620890639 seconds)
done (took 29.714518853 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083144888 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092836391 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07409819 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091839659 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080082921 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075477717 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072488633 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078344747 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079537261 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081648484 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077546406 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053913836 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074408767 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074488985 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075048521 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091422029 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078060806 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073339947 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072700824 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064352392 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072846537 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065663596 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066666361 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054134473 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078283451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072228513 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072272667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073208504 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065710659 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065028115 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068595583 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073796399 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065314749 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079003355 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072436629 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072971604 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074445283 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076145266 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066526572 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065624673 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074002358 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065143906 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072554238 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073442195 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07128482 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071101366 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072658782 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077861055 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091006932 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067503485 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074719369 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075466455 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075505176 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072039642 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069197383 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073115956 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070736183 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090779048 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073726223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067526274 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074034507 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073645912 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071399031 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072501566 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073116897 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074513793 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075329233 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070883581 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074214233 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071160702 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064856938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07249566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068232456 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064628688 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075600183 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076584269 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063821494 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070715228 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072322095 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070585557 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064074366 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066924804 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066150974 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071624555 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066622754 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053409476 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069216381 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071278251 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06389148 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072704957 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071577149 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072650127 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06655096 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075296681 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064069435 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070353377 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065055857 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064955148 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066835091 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069485468 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064833986 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06640207 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073915975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065955074 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071432761 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078320081 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064980825 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072237338 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063755386 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064083771 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07904813 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074432081 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065005884 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066817315 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064053185 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07252252 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064250935 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064979331 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064806073 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065282887 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071033253 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065041129 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066297581 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07189834 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077443467 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064466493 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068184971 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066276939 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064348426 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069716035 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064088418 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063708099 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065367551 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060497989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065554121 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063515976 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071301601 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065895828 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071419332 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065432098 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072217175 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068621756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.206462391 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070940329 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064624016 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059166969 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066855301 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06691224 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067547902 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065129993 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066463222 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065256791 seconds)
done (took 11.063268257 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068358279 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14191722 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097469973 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095750946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085864369 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066715634 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076241914 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100403305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067183831 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100656789 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087380018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085757687 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114391155 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064695635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065706613 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069998142 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066830087 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081597714 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10108766 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086322133 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115427935 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064787134 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091959342 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089759184 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088371662 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104166148 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068746075 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070147582 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069129364 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092302713 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087897027 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069916091 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065943952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097364575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093745175 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082910849 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066135577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082303976 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066084477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065227466 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066981071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098329971 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080441897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080502987 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069473298 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069224625 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066746553 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083392582 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089729301 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078654135 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08585954 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100849897 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068397357 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065177296 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063795776 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085875354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064500103 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069200157 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065752912 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068007576 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065313924 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068771358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080857562 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08016843 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069758353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079746148 seconds)
  done (took 5.366743984 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083043994 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090514177 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082949953 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083340233 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064822569 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066298486 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065462729 seconds)
  done (took 0.686429179 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066284942 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088577051 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088756254 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088749568 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080896493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086898496 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074688513 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067007718 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087844313 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067508752 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086989952 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099947112 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068888519 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073085221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090708221 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066207671 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090552093 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06663954 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069280599 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090007641 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0682214 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095141974 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069614624 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066243887 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080331655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066228497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113061943 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070643157 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067715981 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068463181 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063454144 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106354173 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079869754 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073457207 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065632092 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080708501 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080278036 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064580107 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083019252 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074933847 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080086742 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066365648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066874194 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06386344 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070263382 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076954966 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067137885 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066432465 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068252722 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08588725 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066865513 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079756243 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069182855 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071549598 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067537747 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072679448 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076629542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067117395 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086053486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067420891 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083285235 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082552108 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079668845 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082309337 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068085281 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079623796 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079846132 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068828666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067746085 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069742031 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082537403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064395358 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06765206 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076867034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067963137 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089038765 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089103594 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068153418 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080001681 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067190045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067039213 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066262071 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089180501 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071605024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066078651 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070802267 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069500461 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064260548 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064993758 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069791304 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064098726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067922419 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068875352 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068930184 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06869783 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082821374 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06833874 seconds)
  done (took 7.356961278 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067740478 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067298525 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068794915 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067236593 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067782276 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067813148 seconds)
  done (took 0.579866585 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093395085 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.0688962 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079267418 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070896044 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103739797 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08644239 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086551102 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077903163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083713143 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078881345 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086082825 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088711452 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091846994 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072487204 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085687779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070966953 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086923798 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074994246 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078712997 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071796056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086694839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071767773 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072793887 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081457413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075615571 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072219046 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066847569 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0778366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077680365 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077715624 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071560186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07529301 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069929974 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077044096 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086095845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069664557 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070591935 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076514894 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07139337 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075397274 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087456517 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071969178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073680172 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076396519 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077101807 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070192204 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077092629 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074211795 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085205767 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076397108 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076530427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070722443 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074945463 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076433249 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070013902 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077237573 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076531453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085829411 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071250548 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070090251 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06825219 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075007953 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077489959 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074988008 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077815166 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076888866 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070330789 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071820118 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072264888 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07104459 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076610194 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068267562 seconds)
  done (took 5.618394875 seconds)
done (took 19.698095354 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537475144 seconds)
  done (took 0.581321857 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60825207 seconds)
  done (took 0.701291306 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.051759461 seconds)
  done (took 7.134493064 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400160947 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.522527968 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718113092 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131186174 seconds)
  done (took 1.876397881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.69635308 seconds)
  done (took 0.813478876 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21185901 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201429717 seconds)
  done (took 0.525010724 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374265379 seconds)
  done (took 0.45227901 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114771415 seconds)
  done (took 1.191558383 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25677026 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174779452 seconds)
  done (took 0.521879331 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471625065 seconds)
  done (took 0.551842551 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.886600486 seconds)
  done (took 4.966061352 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210799536 seconds)
  done (took 0.347102711 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234071861 seconds)
  done (took 0.307041674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.735159808 seconds)
  done (took 1.808570355 seconds)
done (took 21.927973763 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082248935 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080099688 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080275836 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077588378 seconds)
  done (took 0.361750757 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076331364 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072977171 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075967334 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072612983 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075772199 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071952421 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074133263 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07507916 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071935298 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072537721 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071709027 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072231007 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074232799 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073709764 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070626041 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073920261 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075599497 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07183301 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074580445 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071963376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070218699 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074291398 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074558766 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070819088 seconds)
  done (took 1.835453768 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077360809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071930118 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074803036 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071410358 seconds)
  done (took 0.392423034 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078103883 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094898186 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089273895 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077142004 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092745548 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086182864 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068612796 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068705487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070534809 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076878327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06745767 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094998019 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08772666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076645172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079418877 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065195911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06778722 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087047215 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07732244 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077683928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069743235 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076541577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06713914 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087435328 seconds)
  done (took 1.960733782 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085750617 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104148687 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081049393 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088415281 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090928299 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065116619 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087050177 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089704503 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125813521 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064584508 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069571187 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064936443 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072531353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064753989 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080049466 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106925751 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10970062 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067882859 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096236708 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065190311 seconds)
  done (took 1.78190894 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072226275 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068732111 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065750295 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067600203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07664588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071866204 seconds)
  done (took 0.521010712 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068183839 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066837127 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067120696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066741258 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07164578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06663055 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064852432 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066758227 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066554618 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067103332 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065962755 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065797666 seconds)
  done (took 0.881672075 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.199362168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06798025 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068585416 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065333793 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070269104 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065590481 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080899472 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067516825 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09141332 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065653097 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066277399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067941444 seconds)
  done (took 1.059673812 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206594108 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075631554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23717988 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149761656 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110247344 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115002536 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111460267 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113050488 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141267892 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10013112 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167699314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165619948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106906504 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136221754 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088094321 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100102704 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153075394 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16240497 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104328737 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165882323 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144481849 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12524799 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147288894 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105276974 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10482879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121067009 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070396565 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078886493 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16973066 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132734393 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143774116 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109855351 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091358405 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176126741 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171300324 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140173639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145666649 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083014822 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103710471 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13372629 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198013984 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087278793 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159743413 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107661195 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079030106 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273532386 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120272189 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11972568 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105147381 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088972062 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144756718 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18129293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135830855 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086963983 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123011462 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11280592 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113215636 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112550617 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180783539 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160275858 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126979439 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070412959 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107384768 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152078425 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131726414 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107377354 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123527261 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090917544 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134255172 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154589382 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120054496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143625324 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116270087 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088437458 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119476975 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139614548 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127118037 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160166596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124022818 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072340033 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122843404 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101205817 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080161193 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144696817 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074399292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175637346 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099098629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108631752 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123460406 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107796632 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107922031 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157806986 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143805553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102551871 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065236667 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103602242 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118860674 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287901073 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087276369 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108923871 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116736523 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077461979 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137378446 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074936527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12271282 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076505163 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127123168 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12814664 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076385666 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122114509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103548956 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100540988 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131292121 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158952232 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087028325 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081062953 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168009543 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120808131 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101921074 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143508889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156176171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100909962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099854255 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148625728 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179471531 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088519812 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163348698 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105535825 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082876255 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087405642 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122543833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110987412 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122790085 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080828776 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117020884 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168370638 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073929119 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094390618 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133003049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078623475 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080257027 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104742689 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104495028 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09567505 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099858321 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102940462 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1344385 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121899109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104436225 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122387189 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097466874 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168640052 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086831566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100834062 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101930274 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068443528 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.28205311 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157061676 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07913105 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163725216 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123963933 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115746357 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118882088 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082749492 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139360059 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078355403 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069682633 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142201288 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110133005 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109365097 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150610026 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115137695 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124096978 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116949962 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131954211 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130266406 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130022902 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104694466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088232773 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111743734 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126037165 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072690389 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090232547 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079997757 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103910815 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095068881 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082940612 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140446773 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123893459 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108620449 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11150331 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095560087 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147542413 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076081676 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127465657 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11869295 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094908943 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152623418 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15353832 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131810893 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099079481 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135635625 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069399517 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073399779 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087195779 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122029038 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081391774 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082059412 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114831266 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145886273 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128684569 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133252908 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120179461 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266972084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155232537 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069441178 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116696482 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148042723 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120737884 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104251618 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089252888 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098433372 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142821181 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106416597 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181488074 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116014789 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122641145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153041734 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101092826 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078925308 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10249749 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13445879 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103271394 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143363085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099261419 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087386646 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109437518 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073918338 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098339548 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125965434 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118018467 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134623734 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114163943 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131175799 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076937759 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114618941 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12048292 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120723068 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063621236 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119909027 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160882071 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093932334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118845284 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154178635 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07857293 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133871805 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174398183 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142685318 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084558874 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107168089 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117979513 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126604623 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118564083 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138374478 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105017319 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284210503 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110516887 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085340909 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087180669 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097686974 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104910574 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094644598 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105826464 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11328748 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095095617 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130042674 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10224499 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108782793 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11686576 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097595288 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089988778 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095115101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175681439 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117660825 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169629866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099024127 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144050251 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162309924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074121579 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07813336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077351347 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139118404 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083525268 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129813835 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106363525 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11643977 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122785404 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142733952 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094571413 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06772422 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108333225 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132185165 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123853513 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097843784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102663393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162330916 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100540193 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078240565 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113043232 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115682023 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102261793 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172370739 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061512644 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105850578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076107861 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07992583 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127072311 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149473193 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07909877 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10298825 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118084028 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110527217 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127658635 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099030749 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10673442 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274050259 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151706517 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128099351 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088994352 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112174509 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129974619 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156000228 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10406362 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095312045 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170750967 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151578404 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159311285 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086918971 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114066288 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114061612 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107940599 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137892811 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082726315 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16241038 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081267013 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134508149 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102200253 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088184996 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128027248 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108117256 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087333932 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147653303 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116844442 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082019996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077160528 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117032193 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118399802 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105172744 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075197021 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138582035 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07294147 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131813749 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159625199 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080240938 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107030635 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096464148 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079010837 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106561883 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101759069 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087337613 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09880192 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169799835 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086330056 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148101776 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132115144 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111746296 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13441724 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249161377 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638700023 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078131253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152343448 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116011307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174498921 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099262106 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11765229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108599441 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120639968 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142664826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103243808 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178278086 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130590682 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115052803 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078997128 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100677446 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102989678 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087280845 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106713497 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113437015 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114368853 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092376225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114531923 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123154865 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080877333 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095088725 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155892657 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116018671 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143244581 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140775572 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085060011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117446675 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13718233 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079327488 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120238361 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15199665 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105845193 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099100371 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080389751 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099971645 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158182541 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072811201 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160449511 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119533241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109690561 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111507974 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110271319 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128721308 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104754751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119922686 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090906567 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108199642 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111618867 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079412177 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074415328 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252149157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111074184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097780891 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097194175 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098196733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151774537 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072228102 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098774355 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114353073 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143238865 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173000418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088651648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081904974 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117660913 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113473996 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112302227 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120527937 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078865186 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081341768 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080034359 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077668548 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108389408 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112311164 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113781065 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110289729 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162480866 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082282649 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228394922 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094718431 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103970837 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069813731 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078226038 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09558926 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097343535 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106848536 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108959431 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158683166 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094719491 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089804459 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091036639 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073648109 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082518193 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128301447 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108750658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117929546 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098337503 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062322967 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107065552 seconds)
  done (took 57.121036269 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107790187 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08253576 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093457061 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143251404 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122130026 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202201242 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154109159 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18874088 seconds)
  done (took 1.280980752 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067082903 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094561777 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101817574 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082417169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066811699 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067393262 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230389335 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080937029 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06662454 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09886996 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077521964 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068548342 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428458391 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067720895 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068464856 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060567769 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066799752 seconds)
  done (took 1.887821991 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385336768 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608656235 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350829277 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071968273 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.508575296 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083872164 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.168450183 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127018981 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07247709 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522974097 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406249355 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126943627 seconds)
  done (took 16.546854753 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074102789 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068635504 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083279954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083252145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071878918 seconds)
  done (took 0.465852796 seconds)
done (took 86.187890139 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081020335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.604340978 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052504106 seconds)
  done (took 0.766964132 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082545245 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084593115 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084907152 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082857995 seconds)
  done (took 0.434669625 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074033848 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076072436 seconds)
  done (took 0.234971361 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231530696 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162632206 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095925726 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082610984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078136067 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078973475 seconds)
  done (took 0.333742015 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071515586 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074906029 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071927032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07617114 seconds)
  done (took 0.375913943 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076666189 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052688044 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054160981 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05823287 seconds)
  done (took 0.32515309 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086666396 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078628239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078588058 seconds)
  done (took 0.32701014 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100652395 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084767035 seconds)
  done (took 0.267935202 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081907199 seconds)
  done (took 0.164901026 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093719955 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100712083 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131860478 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110449805 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14151429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109176753 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0854667 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085158126 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076242794 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086737478 seconds)
  done (took 1.101542664 seconds)
done (took 4.989699224 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079936875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.462863779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359557639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090216767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667749751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356366558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992181511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092826334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115552265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06767397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084117502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648747579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984696056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.41841912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972430521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31902982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648757996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067918543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067332432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067311654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977266658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067631524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067551021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067986147 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649490342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371153254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067878652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32465275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06758222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069432938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355184275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068259859 seconds)
  done (took 14.768893794 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069276193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118510709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072883197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084346189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069626208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069753151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071893769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068735053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120914124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067756063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085403857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067747192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071039891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084378822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087560659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06858146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068467436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068887141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068020346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068128297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086726454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067514624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068172686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068276901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067452589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079732202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068502821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06786022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067860976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069802339 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070399821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06859747 seconds)
  done (took 2.518555194 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113817108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123899931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073489605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102798852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11138556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069257652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141277835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092689442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126825121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0672257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085483519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068100411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101766545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068566929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087417259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068565655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068670475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067655938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067720386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068464746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08689109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067367845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068210905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068497144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068259937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081494361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06805603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068018009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06779368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069939835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071363083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068201163 seconds)
  done (took 2.742625892 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072727517 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074629337 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083402337 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083134732 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069096001 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071820405 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072795224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069051137 seconds)
  done (took 0.712437653 seconds)
done (took 20.843567358 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08224481 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069331991 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072202125 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08194682 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072916119 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077666729 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066657111 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074237829 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071921908 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073149011 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074226115 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067861836 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070956983 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06694814 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073744089 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067224833 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078769519 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070966378 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077970732 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07905383 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069311998 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073154365 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074519043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078503889 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07889517 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078456789 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077335143 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072331284 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068207455 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070214072 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076470056 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083807934 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068533217 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078551902 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067127145 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067324335 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070827134 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067477954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078718524 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07618483 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068818838 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.0757417 seconds)
  done (took 3.142379586 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087686518 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092222952 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084876911 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061489915 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066481105 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065639687 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089020208 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060087268 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05858875 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088374649 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055186291 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05929894 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065454191 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053376731 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059429215 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056611273 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061599389 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054842135 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06054662 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059601001 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08905931 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052635908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078074593 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062970951 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055302806 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061103344 seconds)
  done (took 1.862992953 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073599858 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084922135 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100918106 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131010318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105471335 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079389301 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079010316 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094320986 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088482035 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066820866 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071008311 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09311281 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089966054 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073745069 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067174372 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08645758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083008908 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068616406 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073143237 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094717938 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086777142 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085304404 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095206432 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083618046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066503264 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069130063 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070882534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080891094 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071609766 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076516535 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071041274 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070504271 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069063595 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078810628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071385369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068626602 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091495568 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077144316 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078498736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067921147 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075083354 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068154279 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092287065 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125564323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066913753 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07363114 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071014907 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077078814 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067436304 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087895893 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078763252 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067280007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070666506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066643698 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067426283 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080749127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069704756 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069382008 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07687921 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07348598 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092656998 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072044623 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083801105 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06716514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075637204 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067125199 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068279882 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066968477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095556077 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06923698 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110994204 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069439734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06850527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077298144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075606572 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074262651 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067619481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082836973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078132494 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071157733 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07718762 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071152828 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070383149 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091608202 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070498263 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068849215 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069019116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075276206 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070376773 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069551405 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080591536 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066665321 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07087012 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08462387 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06688148 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068828562 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073208639 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07221629 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066894302 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078943454 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072267921 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068346115 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077354658 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0675405 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070515179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080491484 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073822786 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066497776 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072033891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07333693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068822116 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069276792 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071136237 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069574334 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076540562 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074654559 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.0726278 seconds)
  done (took 9.092730133 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162734219 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157904862 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069693455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148107951 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076873739 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078720651 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15028562 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095369979 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067464236 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068220853 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068508711 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109619733 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105813863 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116074537 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078942344 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067458658 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084477961 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114924282 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151886763 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146132335 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08435496 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076858659 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069736417 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068842495 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07010012 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077806633 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085279309 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076844049 seconds)
  done (took 2.931120126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079325592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104735783 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074529005 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091528732 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091457524 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067925266 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070226562 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06982871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082093604 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07898059 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067901149 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072502879 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074778106 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071196161 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06813114 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074711583 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075138766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069934499 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071383375 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072897193 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07849551 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091660774 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071135999 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066899093 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072674198 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066674392 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063510898 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083829562 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067681345 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095251498 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065589244 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072456421 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082243959 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068358001 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067623292 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067218927 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067498258 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067057449 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069330084 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066288224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06627107 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057453289 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066598504 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078756076 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074408892 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056061939 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072129333 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072365225 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072671642 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065127619 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070228215 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069992834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070861232 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075187153 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071490248 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072699369 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068891747 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074225148 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076899958 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067440743 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064568575 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065840148 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072096701 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064851538 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075919572 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072485799 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066149194 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067355955 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069786244 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074635643 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067451054 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072623987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06551698 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070180219 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072332894 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069417691 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068993994 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065960448 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067589742 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068202029 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054940048 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067589262 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053137171 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070480894 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065803712 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066426397 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067424042 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07171996 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079186004 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068218246 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073411255 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068126641 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066164796 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070221859 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059716004 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070188108 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083061273 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082021396 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067114457 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065088715 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080703825 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072064009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06604418 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055569362 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072304479 seconds)
  done (took 7.609316109 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089955248 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069734153 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084662625 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090935472 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086582205 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074878122 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077499801 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069150731 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083370551 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074184797 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077079273 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067289591 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07834849 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077327646 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069957094 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077518546 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071502744 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085115415 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082245411 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06816872 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07538642 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080206134 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090368172 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081790888 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080589186 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08180524 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089810243 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.076824593 seconds)
  done (took 2.399105103 seconds)
done (took 27.125022364 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.132398758 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.333635609 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.138722877 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.484348901 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.698433509 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.407094357 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.258344316 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.127933397 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.360685282 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.200691808 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.343931098 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.289298172 seconds)
done (took 44.836627707 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.148136375 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.266277677 seconds)
    (2/2) benchmarking "String"...
    done (took 0.365273818 seconds)
  done (took 0.692252031 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.328591264 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.85305363 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.380227883 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.127200749 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.132523485 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.468931918 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.951430025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.643363959 seconds)
  done (took 17.616384615 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.241539677 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.403091343 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.901187177 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.903331109 seconds)
  done (took 7.570419947 seconds)
done (took 32.514017399 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.12927448 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.160218859 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.130668714 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.110494494 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.181444051 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.140088355 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.23554135 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.332899513 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.125737109 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.118730723 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.158208254 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.553977759 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.126055382 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.231134074 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.126451098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.136672949 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.176921428 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.551126446 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.281816045 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.145517213 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.133456692 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.144053543 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.124667982 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.138339599 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.178675696 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.129081261 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.546624371 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.129154364 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.753347633 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.126835274 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.163114555 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.420179868 seconds)
  done (took 150.191041223 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.12727482 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.162228745 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.218519694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.165259157 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.622176001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.300866409 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.24980061 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.653943653 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.13024994 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.153175137 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.42315403 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.125957244 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.447245149 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.070359496 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.156631623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.211599881 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.292057349 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.425085782 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.15877362 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.298541654 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.141620677 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.254744337 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.214934519 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.381915858 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.134146837 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.183538535 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.130352438 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.149238521 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.322376618 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.270432389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.136277161 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.175363162 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.261044217 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.995301769 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.14405582 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.135529165 seconds)
  done (took 109.481280939 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.522681876 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.124991193 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125025888 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125412561 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.130709645 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125019242 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.247175808 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.252391251 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.744896979 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.710400713 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178079106 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.944746999 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124432064 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.124155063 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.19146326 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.138166061 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.125431284 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.139635422 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15034963 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126465432 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127995526 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.256934934 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.136468197 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.328093796 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13318445 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127911856 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130603694 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.497158638 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12564011 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130579555 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.367255597 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125880135 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125305099 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.00454818 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 9.718135626 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.211322235 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126532279 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13046736 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.124848277 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.344622545 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125262816 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126231929 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.125357244 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12854074 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.287159491 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127749513 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.244855842 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128099284 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.610997499 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.12792727 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125268666 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.124384282 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 20.782734877 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.792081279 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.129356169 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.124459452 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.127550198 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124574414 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.124149837 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.130037733 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 20.743423877 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.204966136 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.125829102 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.127474625 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1304208 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.124767029 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.243302569 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123808719 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 20.378469458 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.17662778 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.253861195 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.249367798 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122857007 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.192181104 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.21637439 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123184891 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.122486745 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122850769 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.122949993 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.20487215 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.123131486 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.242507552 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131237385 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.124008338 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174125635 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.191920829 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123672648 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.004261016 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.123948762 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.125322989 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.415008878 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.189233959 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.12292992 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122617599 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123134079 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.244966638 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.243867637 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.890950734 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.123926428 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 20.797606297 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.132701792 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.260139402 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.123743403 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.306647717 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12358466 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.124419466 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.207368926 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.128031268 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.124702484 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123142298 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155887599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.123481257 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.181266488 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.122927758 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.497712601 seconds)
  done (took 212.292940255 seconds)
done (took 472.573962324 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.787332756 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.744949372 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.84833347 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.76686237 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.735918807 seconds)
  done (took 3.931317999 seconds)
done (took 3.98863501 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.206691783 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210067364 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.145052919 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.207587865 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.142128467 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.207167645 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189141711 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.148186637 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.176786637 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.147881601 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176974186 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.146720089 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134852248 seconds)
  done (took 2.287656243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.353333443 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.371289355 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.201702103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.352538073 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.177316422 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.351826123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.298100592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.28004283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.298884251 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.146169948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.136980011 seconds)
  done (took 3.023129671 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.356350099 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.374593491 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.20698236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.356717706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.179816476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.362434782 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.291914359 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.298578988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.281722318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.145656255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.137773888 seconds)
  done (took 3.047130993 seconds)
done (took 8.417979137 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.133607592 seconds)
  done (took 0.18121793 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.158947445 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.315110533 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.137081466 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136687484 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.132987408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.13372048 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.138573992 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133032679 seconds)
  done (took 1.34129337 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.133063068 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.131726663 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.130774832 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.132802909 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.130431986 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.131882679 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.129472246 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.129864833 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.132684727 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.132249504 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.132772825 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.129694075 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.132560193 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.129284136 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.132772868 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.129946072 seconds)
  done (took 2.157727784 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.132620393 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.131942791 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.131034966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.130372656 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.129243318 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.129181781 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.130811206 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.129598047 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.130701213 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.129575867 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.130925981 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.129703818 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.130446553 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.129025234 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.129635507 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.130991621 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.129585262 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.129864152 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.135521795 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.13049542 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.132354792 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.130629123 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.130655769 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.131034859 seconds)
  done (took 3.193357794 seconds)
done (took 6.92729581 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.924973162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.608155538 seconds)
  done (took 3.581324166 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.13179508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.132597252 seconds)
  done (took 0.383930645 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.132893296 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.135050154 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133983712 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.132753775 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.133733636 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.132806798 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13259313 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.132377893 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.132632166 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.132646534 seconds)
  done (took 1.385636041 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.134360875 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.134531031 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.130408998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.132681911 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.133269398 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.130547583 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.132714394 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.132808212 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.132711853 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.130237357 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.132875409 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.13040197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.133058171 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131034354 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.133569102 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.130447106 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.131317542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.130106265 seconds)
  done (took 2.432043149 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134426165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.133488064 seconds)
  done (took 0.322327927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.131597989 seconds)
    (2/7) benchmarking "second"...
    done (took 0.130384155 seconds)
    (3/7) benchmarking "month"...
    done (took 0.130098455 seconds)
    (4/7) benchmarking "year"...
    done (took 0.130439492 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.130365776 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.130942427 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.129920493 seconds)
  done (took 0.968263522 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.135103737 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.298088622 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370893016 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.775171841 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133465292 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.135317235 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.067030107 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136537251 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.137632435 seconds)
  done (took 3.243931133 seconds)
done (took 12.371804408 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.916064944 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.128029144 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.486042511 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.212299422 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.150939417 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.467174275 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.136092732 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.431556352 seconds)
done (took 27.984153484 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.193298811 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.69141415 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.751872359 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.672262803 seconds)
  done (took 6.170668677 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.109735083 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.661606687 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.172008042 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.704478783 seconds)
  done (took 11.707545285 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.496098933 seconds)
    (2/2) benchmarking "read"...
    done (took 0.478301312 seconds)
  done (took 1.037908752 seconds)
done (took 24.166742028 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134402318 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.131950183 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.129987454 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.133077838 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.129840077 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.129959923 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.133127581 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.132385127 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.132284575 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.132473148 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131991599 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.129479783 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129715403 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132546031 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13017776 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.130535853 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.129751758 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131920924 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129455424 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130162577 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133471293 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.133365493 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.130018228 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.130945287 seconds)
  done (took 3.202039929 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.134637437 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.131502168 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.133201812 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.132832753 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.130528309 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.133786157 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.133667362 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.130213728 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.133150602 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.133747176 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.130762641 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.130582194 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.133311192 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.130433787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13330597 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.130970868 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.133308195 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131007228 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133778021 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.13079407 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.132965139 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130826375 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.130672246 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133497559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.130126589 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13095678 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.132966515 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.131357664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133490932 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.130401167 seconds)
  done (took 4.018360292 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139612766 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.138822057 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.132569309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.133036201 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.132313791 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.133280954 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.132630627 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133094275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.133086664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.132983651 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.133216933 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.133247541 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.132785273 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.132736606 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.133172778 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.13243067 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.132800911 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132799254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.132399333 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.133739627 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.13308697 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.13261808 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.133312551 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.132585918 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132668343 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.132952691 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.13356662 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.133400355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.13373384 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.132828994 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.132846143 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.133560521 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.134014242 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.133947711 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13360236 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.134559756 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.137813968 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.139732202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.133825675 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.133627606 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.133664009 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.13415752 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.13381906 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.133321282 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.133481635 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133277155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.134050331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.133995895 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.13341166 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.133762064 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.133964201 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134104437 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.134028917 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.1341196 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.133428514 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.132638531 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133683591 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.133957033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.133179222 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.133542699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133457765 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.133332228 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.133766299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.133617122 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.133892202 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.133276372 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.133861287 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.133067674 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.132641248 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.133037014 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.133207468 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.134157742 seconds)
  done (took 9.681343339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135136901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131111466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.130495155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.130667489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13022855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133697064 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.130580444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13344095 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130254708 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133818884 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133173044 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.130506807 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131200699 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.133881801 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1341341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.131158006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133617887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131009484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.134450042 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.134172673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13279226 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130705569 seconds)
  done (took 2.965380163 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135453281 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.13364547 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.131066282 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.133240853 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131080437 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.133183215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.133522708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.133892618 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134474141 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.130782741 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130166737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133495788 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.131435318 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131482798 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130446504 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.131543116 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.133849219 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.131524814 seconds)
  done (took 2.439867247 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.132719353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.131289576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.133811681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.130644475 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.130924734 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.133204679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.130977947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134199538 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.134032362 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13157375 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.134288127 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133627674 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134488475 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131083765 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133901682 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.13155647 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134120521 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131494112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134101804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131251513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.131174768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133872332 seconds)
  done (took 2.974173531 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135766531 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.133480105 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.13138653 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.131444928 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131279418 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.133764344 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.134964129 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.131084349 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.133602872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.133629608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.130952879 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.133850497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.131133521 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131881207 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.131232317 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131170576 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133539825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132222656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134076122 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.131774582 seconds)
  done (took 2.707926048 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136363418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135080654 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134479923 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13441175 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134385667 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.134472661 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134188018 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134147676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134981836 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134709606 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.134561487 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135057382 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134641642 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134321465 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135018596 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134671771 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134797717 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134341931 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134554694 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134562988 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135028732 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134489087 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134373305 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.134881525 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135136643 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134330338 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134541555 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134800903 seconds)
  done (took 3.827607556 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135545747 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.13496653 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.131355466 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.131394193 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.132061887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.131429958 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.13128507 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.131225686 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.133585947 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131367526 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.133854545 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.134245902 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.133957008 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.134375115 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.134318862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.134247149 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134879175 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.131833983 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131454179 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13171241 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.13488446 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134631748 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.134655198 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.13131163 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.13145741 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.134334109 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131991794 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.131556125 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13364905 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.132254728 seconds)
  done (took 4.046881167 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153945124 seconds)
    (2/2) benchmarking "in"...
    done (took 0.152161865 seconds)
  done (took 0.361491008 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.133557059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133638054 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.134059706 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.131597227 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.131113837 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.134651126 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134683389 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.132093714 seconds)
  done (took 1.121191649 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.135019302 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.133701673 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.13399129 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.133529802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.134666185 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.134021395 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140256343 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.135861977 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.134572765 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.134492417 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139040715 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.139211646 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.135826367 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13411745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.133432251 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.135238815 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.134808579 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.134374593 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.13452154 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.134524626 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134880585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.135375344 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.136673718 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.132403279 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.134280075 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.142764128 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.138803719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.134645417 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.133394799 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.137509485 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.134050941 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.130939961 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.135246605 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.134233582 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.133674122 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.13511318 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14175908 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137905871 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.139566604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.136017174 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.133762664 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.131243995 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.135153642 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.135304424 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.135028546 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.135554988 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.134186805 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.131690376 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133805874 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.137758389 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.136753628 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.133607478 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.131414863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137512079 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.13575305 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140888881 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.136949001 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.136216312 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.140986462 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.142755676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.148539683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.140841626 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.135255635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.135906403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142434956 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.153049987 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141119435 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.133238971 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.130955101 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.134055725 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140658832 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14798104 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.144498103 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.135355135 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134039015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.133412425 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132917564 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.133994448 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140129407 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.138275161 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.135127286 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134175893 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142615763 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.150991119 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.132897636 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.134929807 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.134462636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.134786002 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.135475961 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142590012 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.13654471 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.13341834 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133173794 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.13286598 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.134294081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.134586317 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.132414021 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.134150672 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.131290483 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.133628898 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134213399 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.136988865 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.140628194 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.134837721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.134436521 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.140242761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.134911229 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.132810354 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.140335712 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.134778725 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.134568749 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.134017873 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.138489186 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.131002924 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.136050224 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.139967479 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.134664557 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.135389003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.134693328 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.135023161 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142793369 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.155169729 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.134999532 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.133559354 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.137345919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.143534284 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134238727 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.136641768 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.134746112 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.130855634 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.130722601 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.134908858 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.134667312 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.134519114 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.134276074 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.134465066 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.13093848 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.133417148 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.134005195 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.134701196 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.135346948 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.134292098 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.135256838 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.136444202 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.135598895 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.13515024 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.142007914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.135376137 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.135016223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.135363803 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.131005398 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.133892794 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.134513926 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.135115984 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.133904219 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.134494772 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.133752652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.135689116 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.133817506 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.133835861 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.133775654 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.134142058 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13633529 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.13525022 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.138609237 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.134063178 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.131047879 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.133813315 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.133559428 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13366348 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.133946976 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.132495567 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.136343222 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.140310713 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.133685438 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.13411368 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.136560205 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135239901 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.134876319 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134599346 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.136373948 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.139677176 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.135524474 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.140479375 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.136212999 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134631196 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.134446781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.133838469 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.133250102 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134366251 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.136178579 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.139757646 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146503745 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143454599 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.13453253 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.136303559 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134691063 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.137040525 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.137789998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.13604448 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.13400996 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.134620906 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133773498 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134436282 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.135584768 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.134624359 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.133608993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.134133263 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.133619359 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.134901608 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.133982496 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.134719568 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.134715103 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.132155269 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.134177591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.134720405 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.134043693 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.131333746 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.132737181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.133166434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.134276026 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.13552826 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.140842759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.132625062 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.134772298 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136062575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.135625075 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.133188809 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.133869353 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135769786 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.134839982 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141286942 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.136312429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.134772262 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140490602 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.136503987 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.133676761 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.136913351 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.135049845 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.131194654 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.136333557 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.140068842 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.133860776 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.135500505 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.13481052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.134243101 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.134645695 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.140875658 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.133094599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.133209596 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.134546685 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.135312913 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.13193032 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.135536938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.13534868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.135611721 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137401437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.135327929 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.134479637 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.134913715 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.135217033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.135548561 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.135617495 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.136634049 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.140668169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.139326959 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.136195693 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.136347312 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135098908 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.137027584 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.134249071 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.135163799 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.134257214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147346627 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.143864917 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140093576 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.137654278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.134703262 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.139350027 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.136918836 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.136876345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133977833 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.134519999 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.13394557 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.133454073 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.131919007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.134594978 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.134283844 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135187035 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.136463816 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.136992023 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.13462345 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.134077494 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.13555594 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.136604066 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.134413047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.133301631 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.134068845 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.135970625 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136060575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.134963216 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.133620704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140715655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.136361701 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.134817471 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.133864055 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.134299846 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.133244472 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.135189582 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.135199567 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.13704827 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.141429251 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.137047174 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.140775806 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.135154707 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.142717997 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.136361483 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.136713128 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.141543026 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.131605158 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.134401036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.133996554 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.135020729 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141994704 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.137261036 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.134556896 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.138574282 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134910842 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.135232453 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.134422101 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.135169068 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134460434 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.135390342 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142302155 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.137661547 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.137674752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.136670351 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.132682565 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.135449186 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.135116326 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.13385184 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.138018008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.135933909 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.135159874 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.134382388 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.134417265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.134022123 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.135331392 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.134425605 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.13149118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.134755869 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141293404 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.137173698 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.138427605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.134836607 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.141957979 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.137791255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.141644188 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.137520066 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.135356463 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.136081579 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.134559133 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.135358654 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.134510484 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.135051735 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.135673156 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.135540086 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.137967603 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.135190127 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.137937969 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.135307837 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.135901203 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.13449376 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143319528 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154557845 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.135975764 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137803125 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.131721085 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.135258326 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.13896566 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.135300443 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.133760397 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.137121617 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142923905 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.140726734 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.135142534 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.135691076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.134752306 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.136253391 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.13498908 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.135446874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.135697655 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.135049008 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.134855284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.135791755 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.138335808 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.135784127 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.135502411 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.136125849 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.135390743 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.144288018 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.138073018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.136380295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.135689253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.135026592 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.135426255 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.135881662 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.136264665 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.13585631 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134913951 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.136006798 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140242807 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.139940044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.137027348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.135610476 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.136340807 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.135395711 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.135401413 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.135490738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.135864993 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.135946897 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.135626492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.135927992 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.135619266 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.133814965 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.134684478 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.135619698 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.135487778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.136740141 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.14001933 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.135541229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.132232823 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.13484469 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.134740769 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.134420907 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.134977266 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.143011689 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.139098502 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.14322653 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.141605086 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.14021723 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.135006691 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.137820655 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.14139277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.134384919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.135917394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.13657441 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.136624933 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.136389514 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.137124337 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.136166346 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.141655699 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.136537239 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1349069 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.142944564 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.138763126 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.137616539 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.136241831 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.137796169 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.135591138 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.132388413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.134929518 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.13407549 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142256912 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.1391596 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136803359 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136863766 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.134694719 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.135789169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.139069446 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.135426937 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.13611165 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.13283901 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.1354109 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.13648515 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.136255993 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.133206312 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.135345571 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.134463205 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.137853217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.140566718 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.132121435 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.137842404 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.136338334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.136385971 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.136476001 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.136806422 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.132651084 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.133804529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.135722146 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.135994666 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.135770357 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.137591206 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.135901035 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.135889949 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.135290722 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.136554645 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.13768881 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.143469296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.141172325 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.132657829 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.13516371 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.135830147 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.138292931 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.137742446 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.137272189 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135899999 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.137466159 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.13577897 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136792293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.135617234 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.137770618 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149592465 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.13860886 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.134973357 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.136354553 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.139579499 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.13638442 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.132431958 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.135455652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.138204071 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.137803719 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.142532187 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.137182516 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.142229755 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137477517 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.13639672 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.138249715 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.137610124 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.141691137 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.138474775 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137517031 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.136734047 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.139813436 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.149319835 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.137086249 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.144698302 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.160716247 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.139043641 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.136986214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.137087381 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135353549 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.136022422 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.137148397 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.13676759 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.135686417 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.135278127 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.137062083 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.136785413 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140254563 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.137703616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.13583796 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.13607587 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.135147553 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.136587387 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.133129434 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.136183479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.135641866 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.136327858 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.136558005 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.136601934 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.135715764 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148623317 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.146003593 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.136203072 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.137007969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.133686587 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.139120575 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.139321969 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.143972394 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.141241541 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.135868004 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.137215845 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.137623592 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.136867509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.132925624 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.135677614 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.135718223 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13535202 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.133066671 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.149232948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.144902625 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.141407341 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.137319594 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136421115 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.136194379 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.136806945 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.136528514 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.136706634 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.137400888 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.136448593 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.139002004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.135451911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.136073974 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.137831943 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.14140147 seconds)
  done (took 81.408350017 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135937894 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132749954 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133127236 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.133032262 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133545947 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13270338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133054232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.133104132 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.133335238 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133499839 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.132495248 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133415532 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132687376 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13312139 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132972683 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133847235 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13282325 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.133283735 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132857878 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132964302 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133022269 seconds)
  done (took 2.853400667 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.138192368 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.133084493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133075351 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135720846 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133435164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135954105 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.132947985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135285567 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135917219 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13298991 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135557782 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135270583 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.13345836 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.133282377 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133068998 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135879814 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136295644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.132868652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.135929848 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133231043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136119049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133396295 seconds)
  done (took 3.017273866 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.140117693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.137296711 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.135149728 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.133888709 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.136633264 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.133740525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.136530419 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.135875447 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.135940115 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.136169258 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.135285643 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.136471854 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.14146978 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.139103346 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.137635368 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.135990176 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.279740423 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.137060467 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.137301678 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.137032207 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.133430805 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.141767198 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.135348353 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.133001732 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.134610065 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.137058951 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.136654235 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.135991011 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.136804637 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.137661201 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.140196983 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.136103694 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.135783891 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.13845914 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.136578158 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.136695514 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.139387225 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.137061142 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.133416576 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.13591061 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.145051591 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.152473538 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.137471391 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.142014821 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.138071305 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.136399431 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.138879183 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.142918417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.134264089 seconds)
  done (took 6.934657522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.138406242 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.135906185 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.132931191 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136121154 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137392523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.136235013 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.136214258 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135861325 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.133476317 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.133493465 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136473758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134116703 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.133216433 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.136529099 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.136332944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.133282013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.133373176 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.133526591 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.133145821 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.133803179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.133275714 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.135815264 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.136104716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133595955 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.136170529 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.134175587 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.133740525 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.136048279 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.134355415 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133490354 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.136609675 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.136272934 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136180543 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.134587086 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.133759814 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.136300248 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136013287 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.133340788 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136168835 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.133616951 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.136629743 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136339346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.136311211 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136679124 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.133651172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.13350212 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.133647722 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.134050583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134317731 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.136380608 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.136194597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133897342 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136581127 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.133601872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136434431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136533596 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.133729311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.133753262 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.136854346 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13387426 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.133790391 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.136350116 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133824629 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.136326538 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.136085062 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134049446 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.134325359 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.136209447 seconds)
  done (took 9.241689702 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139638841 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.137463642 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137673295 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137674547 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137832072 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.137749604 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.138280357 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.137512473 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.137803755 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138040432 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137755841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137076633 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.137424332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136909917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137359241 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.137702362 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13822742 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137914394 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.13826292 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137497632 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.138154314 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13807836 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.13841228 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137883405 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138161918 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.137746276 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.137881751 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.138266232 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137749965 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137772551 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138071168 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.1384118 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137768834 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137949405 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138225911 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.137895675 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.137624355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137976863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.138418429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13824172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.137727497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137917995 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138254736 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.137632222 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137983397 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13781222 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.138044524 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138155105 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.138000313 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137602198 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.138133515 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138268251 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137768737 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.137992517 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137885358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13736468 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138065644 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138163116 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13833564 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1381556 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138538042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137637635 seconds)
  done (took 8.609837647 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139149186 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.137570133 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.134993739 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.134725263 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.136929479 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.134475229 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.137202226 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.136638259 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.137474712 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.13703863 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136656187 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.134277522 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136084403 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136843487 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.134716022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.136014106 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.134805242 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.134455756 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.136931761 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.134599508 seconds)
  done (took 2.779580639 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.136887475 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137368992 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.134196196 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.134669876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.137495654 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.134508163 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.13747366 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136847669 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134550569 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137012515 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.138135521 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137270861 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.134261592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135049448 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137064798 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.134924793 seconds)
  done (took 2.234138262 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.137932402 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.137162282 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.137646776 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.137875837 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.134739326 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.135097257 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.13706504 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.134508338 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.134483968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.137766369 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.136795972 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.137470104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.137218494 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.138432657 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.13456217 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.137280177 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.134448403 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.135043144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.137704867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.137944594 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.13568504 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.134706619 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.137747858 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.137795349 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.134991098 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.135178517 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.134624435 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.135178557 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.134555933 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.137434818 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.134737648 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.135184388 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.134332202 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134612868 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.137654027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.134470495 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.13733255 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.137614748 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.137580605 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.137137401 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.137737065 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.134912106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.137193735 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.136912681 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.134505019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.137301057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.134410356 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.134792788 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.134736498 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.135273213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.137200445 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.137957947 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.137771518 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.137777124 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.137314454 seconds)
  done (took 7.554389189 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139751945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.137438219 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135147547 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.137151637 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137493934 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.135245511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.137207574 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.134801166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.135063491 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.137593701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135858526 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138111781 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.134421258 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137681885 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.135386121 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137464448 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.134906161 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.135212528 seconds)
  done (took 2.511787975 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137520559 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135096459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.138277458 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.134904696 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.13503608 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137938742 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134804618 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.137278281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137645002 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.135320194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136290775 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.13793089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137221166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.138466966 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135909166 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.134880884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.137500691 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137967958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.134864998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13505442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.140153398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137339859 seconds)
  done (took 3.064238421 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.139069108 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.136479958 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.152094094 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.152974481 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.157955776 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.163378089 seconds)
  done (took 0.957906999 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137971362 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137918068 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135112163 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137438762 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13760415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136756406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135138877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135162835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137622281 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135368478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134842497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138078812 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137518924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135562315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13766309 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137486757 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13514613 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134814469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13511495 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137882592 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134853935 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138407026 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135964765 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135023039 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135167982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135938312 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13778761 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135889401 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135096613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137488096 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137610752 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135434214 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137317725 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135634944 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138211542 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137862994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135619464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138286233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138018329 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135100637 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.137711303 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138128741 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137744474 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135269253 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138005436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137173131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135998625 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135558258 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135335207 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138016919 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138785733 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135371249 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139237918 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137693424 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137528798 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138377979 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135516717 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135172109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138058252 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135944484 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135468329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138501783 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135374643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135793295 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140246792 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134941586 seconds)
  done (took 9.081176301 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137296983 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134552223 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135512757 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13575278 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135220484 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134844006 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135150353 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134814831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134902935 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135374663 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138024241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135146689 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135331729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135668157 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135823611 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135797371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134685544 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135119223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135224269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138498429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135155996 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135082612 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135071302 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135190506 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136012793 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137466645 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134870148 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13507871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135547641 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135580464 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135561747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135578113 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135144016 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.134811835 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135026858 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135344003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135702796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135262998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135083641 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138343968 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135325436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137715305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135769163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135031994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135374797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135822717 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135261584 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135225911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135231211 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134911615 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135970364 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13587404 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135483328 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135242299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135063347 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13528654 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135466103 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135509378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135682832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137660702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135719819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135445891 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137989674 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135664722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136022013 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136037957 seconds)
  done (took 9.012657605 seconds)
done (took 186.660857138 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.165280449 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.195957259 seconds)
  done (took 10.412556746 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.298623074 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.250823363 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.135639048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.135759276 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.135340907 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.153295301 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.148810544 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.135256977 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.134921623 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.135002257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.135075954 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.32024424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.134324208 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.134779189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.134955751 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.228154162 seconds)
  done (took 22.816340789 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.140672233 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.139040429 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.150564514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.140860624 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.138078793 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.150019925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.170823025 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.141222961 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.171842756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.150615011 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.206454347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.147865526 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.137985811 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.187254152 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.15107473 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.152542215 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.231449583 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.212128311 seconds)
  done (took 2.976924768 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.214188445 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.143649277 seconds)
  done (took 5.425086564 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.157315883 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.133285557 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.207891926 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.145802015 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.415672816 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.426647627 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.174227222 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.175738788 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.134408344 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.155758378 seconds)
  done (took 52.19429686 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.144992073 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.141370331 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.141233789 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140013038 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.132894879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.133407307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139664688 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.135131238 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.816214541 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.190661391 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.148699212 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.145322788 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14143323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.141699366 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138481469 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.162631517 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.27650595 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138199258 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13686276 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.145099187 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140293716 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.19559241 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.154132648 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.140985594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171055422 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.811715802 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.146331517 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.146394509 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.271409614 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.138544559 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.139246074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140690844 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.142016882 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.523645371 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.442276265 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.141630133 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.152752107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.14796007 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.137809039 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.277313188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.140991479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.145830676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.009073731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.432992213 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.258824988 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.18595015 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.50370213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.157754147 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.141618053 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.169139961 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.142722422 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.140959112 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152604588 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.643977865 seconds)
  done (took 37.547477516 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.13391658 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.397281558 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.290744888 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.134739343 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.424813333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.344347859 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.136268258 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185373866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.136527032 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.365583023 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.298955851 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.245903589 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.135758226 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.133593393 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.135064422 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.131274292 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.295925298 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.210155103 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.137539889 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.131731204 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165894514 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.379148763 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.264347217 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.13538078 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.154811988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.347198511 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.262073886 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.244698108 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.412903231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.131760366 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.199703783 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.1350324 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.134739555 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.13104456 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.290998521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.232233969 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.223834712 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.134870678 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.131242405 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.130280056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.807207893 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.33272777 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.231951816 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.277680034 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.382373148 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.338878947 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.92263926 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.131323386 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.867423127 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.294134605 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.367844729 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.365007699 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.259823229 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.135284076 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.640172844 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.130965772 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.130673628 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.36861223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.364111378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.237134728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.133804745 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.13146077 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.130276761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.379664305 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.134143068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.227962558 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.133966053 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.130488326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.229300959 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.237304579 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.365285744 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.347941987 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166490208 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.44686315 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.613734881 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.381928072 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.201551246 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.366347767 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.133082487 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.130492704 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.218329382 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.979013026 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.29059479 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.384311458 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.388414161 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.170714372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.853382532 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.130280741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.361096368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.356834908 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.43718709 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.375706835 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.285348655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.265057129 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.130103854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.130001442 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.366272818 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.270118767 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.133573048 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.491692919 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.368034702 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.715696368 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.161531186 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.479925253 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.26720332 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.134994438 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.773836629 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.131961102 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.357610755 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.174273338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.131663878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.130820938 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.352562269 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.20824614 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.130107625 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.773168657 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.195228847 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.134365453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.36616371 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.133289426 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.396982734 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.133362368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.370744044 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.519344944 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165780675 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.355100434 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.37192784 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.133420721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.397202251 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.379090801 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.250116829 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.35444414 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.758122794 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.13107171 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.421838554 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.13318723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.129335414 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.304019011 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.131294895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.307594041 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.13312687 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.471439047 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156368149 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.285984141 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.132691816 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.389312362 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167988137 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185201665 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.133607717 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.264544575 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.133637266 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.000899432 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.287250812 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.13373752 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.130561598 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.821319645 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.129906483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.288587847 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.365253557 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15635946 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.206533923 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.805755112 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.13023288 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.21907471 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.158249604 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.471641118 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.131293035 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.285982887 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.133045562 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.653994393 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.129706909 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.374637368 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.315919746 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.134535365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.130285601 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.042743176 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.13021128 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.130323291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.29332413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 3.959317008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.130357348 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.335546025 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.134567305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.263273156 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.133811519 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.208453247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.486406369 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.130810805 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.13073274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.129279528 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.129696469 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.129189888 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.390987615 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.161727415 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.660140711 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.271143185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.403485009 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.45130987 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.382760963 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.178564519 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.134350868 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.37970966 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.133684612 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.195927827 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.132890901 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.154734449 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.368047492 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.132578405 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.346008046 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.412847193 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.070383413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181870425 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.13321079 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.131864051 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.005680559 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.28363981 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.224441758 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.133224199 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.131082998 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.2489957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.259156875 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.345450179 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.131850244 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.360029309 seconds)
  done (took 512.492484001 seconds)
done (took 643.922757197 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.133695095 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.133206385 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.11855561 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.133395059 seconds)
  done (took 20.569554929 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142384277 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.137218669 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.138850777 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.136729691 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.139280911 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.136281216 seconds)
  done (took 0.886757684 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.160470831 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.133662752 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.133477292 seconds)
  done (took 14.483272165 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20909287 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.522120501 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.251340986 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.568415146 seconds)
  done (took 1.607430374 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138674452 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139063917 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.138850972 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.140042494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.14023096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141742483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139278698 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.139474791 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141684154 seconds)
  done (took 1.320664525 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.428408914 seconds)
done (took 41.354136203 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.706883856 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.936194812 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.135371248 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.391645634 seconds)
    (5/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.266288313 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.137990615 seconds)
    (7/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.15183351 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.374602862 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.517494967 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.197947578 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.624463322 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.271696147 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.177275998 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.4276565 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.133350734 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 1.412011767 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.16190669 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.18255396 seconds)
    (19/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140185608 seconds)
    (20/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.149148816 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.132237228 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.337288514 seconds)
    (23/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.215405012 seconds)
    (24/309) benchmarking ("sort", Float32, false)...
    done (took 3.889519753 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.336397828 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.043744662 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.42094899 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.029442138 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.713114995 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.472385656 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.133091337 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.904756516 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.167645322 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.04881995 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.433474515 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.323004771 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.229325053 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.131365563 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.686478136 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.22220712 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.486053189 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.237043724 seconds)
    (43/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.294139823 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.201015106 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.130621867 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.13106863 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.119122071 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.612035639 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.098114531 seconds)
    (50/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.25181625 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.116504259 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.869599788 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.137927064 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.048251032 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.987818852 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.16284541 seconds)
    (57/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.271701046 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.119371592 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.489043124 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.131967846 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.517268287 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.246726158 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.394844586 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.430055782 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.249091273 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 1.023869334 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.19547425 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149439874 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.189472047 seconds)
    (70/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.590141396 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.135502226 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.334107519 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.474970749 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.49802619 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.164170288 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.492381195 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.191967403 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.475749866 seconds)
    (79/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.412833276 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.612379859 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.12077774 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.227836782 seconds)
    (83/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.950252054 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 5.133859805 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.106460098 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.218471206 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.203915985 seconds)
    (88/309) benchmarking ("sort", Float64, false)...
    done (took 3.870489894 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.260247406 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.265463797 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.136173952 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.212803546 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.217044109 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.135621156 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 3.875173458 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.391789053 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.146767835 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.768424498 seconds)
    (99/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.262681745 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.773963004 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.329009971 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.351159113 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.138955887 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.405493104 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.237526191 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.040223931 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.320006697 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.211525375 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.699339772 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.86427365 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.993905245 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.29029043 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.118963032 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.618171182 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.562793693 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.31459735 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.554557567 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.508545682 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.340656811 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.417679376 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.443657532 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.521880866 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.363508377 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.150790886 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.13190314 seconds)
    (126/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.648085869 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.357847035 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.134005663 seconds)
    (129/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.31792497 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.278275416 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.661662329 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.565454422 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.153947384 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.157005033 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.409214186 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.259353703 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.156401672 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.349044759 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.386995435 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.204151794 seconds)
    (141/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.131236524 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.600084002 seconds)
    (143/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.412044671 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.162568582 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.131361491 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.206519712 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.791465437 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.153951147 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.24221358 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.457681323 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.160954994 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.809341177 seconds)
    (153/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.260371912 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.248576202 seconds)
    (155/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.239471718 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.350393047 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.161651132 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.22846939 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.411585476 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.597364163 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.375307174 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.218652008 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.118441009 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.296805309 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.597231416 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.158307567 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.667516592 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.482208724 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.372279118 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.510864157 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.468393643 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.45740712 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.220288203 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.131737398 seconds)
    (175/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.358630379 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.049443726 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 3.107670123 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.143911751 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.462211218 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.135131786 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.215320132 seconds)
    (182/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.178167975 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.132888615 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.647212643 seconds)
    (185/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.309482132 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.963355139 seconds)
    (187/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.329204891 seconds)
    (188/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.27162403 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.133168658 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.322208781 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.157363443 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.095068479 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.158931655 seconds)
    (194/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.1166275 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.234389332 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.146853424 seconds)
    (197/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.72670803 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.163174381 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.11743089 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.537494704 seconds)
    (201/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.037088083 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.156322672 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.366850416 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.120202134 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.179832876 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.423438348 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.403779899 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.237626458 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.431641242 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.845917029 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.239702115 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.333379864 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.150359751 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.197489301 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.323876195 seconds)
    (216/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.197526173 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.190640069 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.207154682 seconds)
    (219/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.158263089 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.586360326 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.133618728 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.620250436 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.498644617 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.937506825 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.336956088 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.147732762 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.953725196 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.260751603 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.23476144 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.221526026 seconds)
    (231/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.21479314 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.43652799 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.158515534 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.11705618 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.415510236 seconds)
    (236/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.145243729 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.173733562 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.208723726 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.435009477 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.391942152 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.366530145 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.120024621 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.385722644 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.137551628 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204020929 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.137076023 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.230323579 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.238158689 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.237302997 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.301220092 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.522753094 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.748737814 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.216809038 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.256989808 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.301249619 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.710853219 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.147691235 seconds)
    (258/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.131462554 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.118035025 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.920383452 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.389310823 seconds)
    (262/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.750019945 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.757648722 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.221658028 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.19960687 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.313500465 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.253452841 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.327682127 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.164829658 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.490532032 seconds)
    (271/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.225435078 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.494851172 seconds)
    (273/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.117042292 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.179566365 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.268408184 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.425500709 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.161905448 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.119416793 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.221511316 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.80420608 seconds)
    (281/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.43881985 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.381836241 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.159231306 seconds)
    (284/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.325305084 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.473465378 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.371805459 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.833828084 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.226026618 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.218581195 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.490197858 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.280075367 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.241181927 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.886132902 seconds)
    (294/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.684738399 seconds)
    (295/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.136900417 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.979784389 seconds)
    (297/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.40240745 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.512941169 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.15329446 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.165756274 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.460205431 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.454100161 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.359046998 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.281916268 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.15916654 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.11914096 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.37854221 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.393724754 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 1.33673356 seconds)
  done (took 467.869902764 seconds)
done (took 467.983608381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.167354658 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159493721 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.143135679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.164303915 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.255509862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.170456462 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.153703603 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.145063637 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.190904311 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.192253628 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.143064785 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.169339509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.145493597 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.143404823 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.141893443 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.15665115 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.451643021 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.171198638 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.159873336 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151640246 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.159977326 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.142027588 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.192061235 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.169550411 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.146398635 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.144813574 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.146997808 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.162617319 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.254935568 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.146899534 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.145208831 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.154814153 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.450592616 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.168888067 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.137703574 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.162937895 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.153903883 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.153161838 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.147217454 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.175080289 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.545692969 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.18081138 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.145072415 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.143792567 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.1441131 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148332088 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.144851851 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149484036 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.155234642 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.157359018 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.537712733 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.195850132 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.146703487 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.144413097 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.153453818 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.14366926 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.146460413 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159610916 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.163454942 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159229013 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.440435046 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.175152063 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.146679265 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.160130785 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.150487853 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.576689255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.176229593 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.147020027 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.54282306 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.18571091 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.575612437 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.188374819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.145626423 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.158274688 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.175166924 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.450409671 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.165735088 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.143315338 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.150892821 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.141959379 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.153134879 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156885267 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148140829 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.144216937 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.157446777 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.171052579 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.154591956 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.145171023 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.152591427 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.163115467 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.150811845 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.15403048 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.147008825 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.138807625 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.152462825 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.147135235 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.147441125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.146771023 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.148382798 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.154170072 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.539385989 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198360877 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.140624073 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.140647927 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.143498544 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.15772937 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.540059425 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.182173968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.16564763 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.191241438 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.145134683 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.440846038 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.175337163 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159931275 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.152042257 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147222106 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.138971463 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.441098428 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.567743038 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.196403538 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.14549939 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.14311035 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161125442 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.145432148 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.140618822 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.4523855 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.172974667 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157596146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.265565031 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.154784752 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.175970876 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.142709235 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.147476547 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.172929944 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.15996371 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.175741542 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.146662061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160486989 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.161018408 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140383522 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.155924043 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.1547491 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.145504972 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.149195139 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138326528 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.173386831 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156940667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.15711954 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.165430307 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.265499741 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.141646297 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.441617655 seconds)
done (took 29.790595468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.215000229 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.135150838 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.241260168 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140803806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.222278129 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.22832225 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137806511 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.138053866 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138076715 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.512543775 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138525568 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139375591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.139224172 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137569914 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.224178655 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141009162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138308672 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.477766325 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.142155693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.213285078 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.14196548 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.138009624 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141368518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.516600089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.136860815 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.132760005 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.213538648 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.141562048 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.480525472 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.139570353 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.133109142 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.481866536 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.232457586 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.159285218 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.15166564 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.147743251 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.223581153 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144393829 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.223322438 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.222455277 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.242752745 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.182102829 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.139225515 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.142498688 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.142711018 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.143942254 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138314555 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.169011027 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.13764284 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138188235 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.476686675 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150541508 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.148471178 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138598834 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.138310961 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.163699061 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138983316 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143247351 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.232258042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142720548 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.203777016 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.515273061 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.515641441 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141189488 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.13359342 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.13845865 seconds)
  done (took 68.456011343 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.20845807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.214351389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.208434299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.144014648 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.191443231 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.209101025 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.143498484 seconds)
  done (took 1.376949027 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.149565101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141399207 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.191068388 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190630828 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141568848 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.291553329 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141342724 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.152196503 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.147546541 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.193560043 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142297003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141883639 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139695204 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.139437662 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189911332 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.152019961 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.257054367 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.142452932 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142219336 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.29289491 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138557517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.148495849 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.196431155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.153364578 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142192111 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.147182293 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.724632175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142096108 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138930422 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.14088844 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138490603 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1832485 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141815709 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.139552865 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139388756 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260510715 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142367772 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139270581 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141529885 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.136150479 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14105344 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141304162 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.141042437 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138658113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141796813 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16712551 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.141176696 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.141720387 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141070546 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142174733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.192583545 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141773886 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138507268 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139473372 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.196532842 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148026192 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14254911 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.138970608 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141911832 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138643403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.292914044 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18915972 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141546471 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189440813 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141830162 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14226419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.141878387 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142144758 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.236289027 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141555204 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189952375 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.138519037 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.298826861 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.165324357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142045519 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.144961217 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14377446 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142190128 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.134628538 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.147407392 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138461586 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.142601577 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147318489 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139133282 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138794821 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.253162262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.251268215 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.139132023 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.154374962 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148807479 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.13836076 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.194111478 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.141764279 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138873965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.196354793 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.257517713 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.198940235 seconds)
  done (took 36.456679762 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.148185354 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.149175191 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.142636637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.158180101 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.142102387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.141685516 seconds)
  done (took 0.940146602 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146217985 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141450225 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.141498838 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.141844607 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.142248229 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.143342925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.142909257 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143561741 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145249727 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.142531325 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.142774385 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144201393 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143325924 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.144622668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143825895 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.142016791 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142950291 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139475096 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141832416 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142631354 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.294721313 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14229776 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143062824 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142949501 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.145598919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.141643018 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149939202 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.141690213 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141754478 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.149598048 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145513133 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143610689 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.142392526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.146582717 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.146036488 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.143201395 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145436967 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.14375795 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139779787 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142698542 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143210603 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142728254 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142230187 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143966091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143508162 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.145440176 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146501605 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.150075976 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143299161 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.143466609 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.143922345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142083208 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142744735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14422244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.143555773 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146118712 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145968328 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.143289563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143224196 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.14338853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142579718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14321461 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144223979 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.146156572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.149421008 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.143012037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.143088384 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146434082 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142960062 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142387548 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143545178 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.139775761 seconds)
  done (took 11.561247668 seconds)
done (took 118.869800876 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.314699558 seconds)
  done (took 5.366526865 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.295224414 seconds)
  done (took 5.406043597 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.574979129 seconds)
  done (took 6.637668006 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.151810962 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.151528295 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.145701344 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.141834579 seconds)
  done (took 20.671806911 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.19506252 seconds)
  done (took 5.256924103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.158165964 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.133813081 seconds)
  done (took 10.396041366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.270654768 seconds)
  done (took 5.332726353 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.207354215 seconds)
  done (took 5.291309051 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.137610018 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.177125796 seconds)
  done (took 10.429271602 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.119689812 seconds)
  done (took 5.181401894 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.74707306 seconds)
  done (took 7.956656689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.14275758 seconds)
  done (took 5.330509167 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.14106752 seconds)
  done (took 5.203074654 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.234239383 seconds)
  done (took 6.295881125 seconds)
done (took 104.814524509 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.151285951 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.135803575 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.135510788 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.13514309 seconds)
  done (took 20.612762976 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.174351676 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.175203004 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.176296608 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.18635485 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.178659991 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.175637427 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.168053455 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.167964374 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186552878 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.183201219 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.182268508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181552711 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.193230477 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.17529229 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.177747132 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.177103906 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.186650575 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.176885348 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.168828954 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.179063893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.143618627 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.186634274 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.179203647 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.142786658 seconds)
  done (took 4.285793066 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.34581881 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.213475076 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.295604128 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.194456521 seconds)
  done (took 1.10835481 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196022392 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.196064831 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.207496094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.246173252 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.269000033 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.212162438 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.169414851 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.163731652 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.150051365 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.195492759 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.270912979 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.190113811 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.279754285 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.142017595 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.325281462 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.142583706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.141946402 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.194481696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.246343047 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.258360344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14266103 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.194248925 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.197777982 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.190949178 seconds)
  done (took 4.982118786 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.142723572 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.149348622 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.147571077 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141295117 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141555227 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.141823034 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.14746183 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142791011 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.164095378 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.142445786 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.140717345 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.141218633 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.140911047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.141588504 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.140794181 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.15411333 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.154782631 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.141437919 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144824047 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.147503454 seconds)
  done (took 2.967626176 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.136124121 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.989002222 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.487513062 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.391175507 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.136123815 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.13786243 seconds)
  done (took 19.339519924 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.155613578 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.146092351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.141484319 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.198509968 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.278491634 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.149176589 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.14227165 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.15173242 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.185604306 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.205447184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.162214334 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.167081375 seconds)
  done (took 2.14290429 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.136768878 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.137583434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.138040518 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.153374768 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.15229936 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.148225731 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148536039 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.135884725 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.154922716 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.1585016 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148157004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.152849753 seconds)
  done (took 21.830771677 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226074948 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.025989779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.189760121 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94351572 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631178874 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.347760654 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.663474411 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.499718323 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.157085208 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.409842265 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.123290622 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.371752558 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.390783556 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119061843 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.221052134 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.614658378 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.44804625 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.371819533 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184276081 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848203731 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252352514 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.492236119 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.971886285 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.263405994 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.347879699 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.26788894 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.396938006 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.094421974 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269073185 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177779315 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146815257 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13746042 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.410861924 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.514122951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262871669 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147068117 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824879462 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.883445382 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.124293855 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.850859024 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.022770167 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.262065452 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144965062 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136207601 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070591311 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.488736537 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.568084892 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.158916993 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.84755832 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.1372575 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147285814 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225052512 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140614436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.952162772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095813926 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437944688 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.134825957 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142764425 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.708688777 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18384303 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.586762608 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.16361173 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.326724716 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853566278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.599196036 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.291448674 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.14009755 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140841813 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07141044 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856553116 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25518536 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282060711 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.15691126 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787025589 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.440695662 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.139965267 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211635205 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.430408693 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779597461 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.163994915 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364894728 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081090556 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071115537 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.995818596 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071098962 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.406268614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2087183 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.781835234 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22420912 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.481347926 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164898867 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153711593 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143968503 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.360663663 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.995112903 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137894713 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.854634176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421633397 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158783621 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.475560241 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088980019 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140953631 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392155059 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.348335092 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.208787151 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.707719379 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30834631 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154121081 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.217709492 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.887042105 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239524083 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.409154716 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203300376 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188716657 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262303612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.097580554 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.442969367 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.199897733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.304891761 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.083667268 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.39494542 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.466547432 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.459149747 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201271071 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.146712199 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.147333183 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950126818 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75866476 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.404163308 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138380935 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.467309336 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238525851 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.138013122 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072517441 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.697633875 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.134580937 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.239082854 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.361994057 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.907726698 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.503016199 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071635787 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28327127 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254284507 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.360673413 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.781887914 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.224124523 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.396247666 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.455098783 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.285343215 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239187254 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15798616 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226301785 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159199639 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.393095292 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.482090465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.140929474 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141138664 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854948171 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.212760428 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137838095 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.141693543 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935623679 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.448092659 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.170540763 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140909671 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.045962529 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.151052381 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203585554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142463999 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147378766 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.660148439 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907556307 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.170421798 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.725323083 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36150445 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147858568 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.830312956 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31885055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.219002153 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.431709325 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205526113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.071683718 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.848588864 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.830393746 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138096147 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072079613 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137410802 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14714917 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149755145 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517755786 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.415972136 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192486896 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939074419 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.248540568 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14917356 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.142776003 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138913169 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.655448799 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18555551 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.582062486 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238237834 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275293221 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.151325695 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071716321 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141605661 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142464694 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139109611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.092629563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191289985 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874234251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.581733345 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.414065407 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917670948 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17726864 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866247507 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.262764647 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.155691213 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880214348 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03447959 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.223606999 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209295518 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148504345 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.844714442 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900406739 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.714020025 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.44903634 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.468937359 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.591268001 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.461100825 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.496453627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.476094447 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390487548 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670823292 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197956288 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.48486002 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099161674 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221876039 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.800210533 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.499294085 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152786946 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365975937 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.520044593 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.961206724 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293050632 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.349214975 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173453028 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.870660687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153604322 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.342637954 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279300584 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.965783465 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.347935977 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.481378503 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914818284 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.245515164 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.137508287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.855720073 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274004895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.872322806 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49903618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.472593053 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.229141697 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.627123139 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158609687 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.585068127 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.504283463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.277988486 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.313265364 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090612605 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149139081 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148771177 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137480612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.111932041 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.980933564 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.389944879 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149200055 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373239853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.222533002 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.490243597 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.052485899 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143839357 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138167388 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.442525355 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78419612 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361214239 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.410685958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.701385318 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144304371 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070964859 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072485257 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.830712608 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145808088 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.113192517 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.366294853 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.34222257 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09274558 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.480511951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.436674137 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.392441468 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.1522772 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.421365365 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.422727452 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872438299 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1888253 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.237937547 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8988007 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.253319679 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.406457956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.373735337 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937516867 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.390893141 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.198271502 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.017228246 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.138010454 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.367287583 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.407376432 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.171718955 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.385011846 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.87188607 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.149074142 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.506482871 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203650826 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.159360911 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.30306185 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327453315 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147785436 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223007999 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148664377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150725885 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149040041 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184353385 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199260599 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270886019 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151956535 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251633488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205018288 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.721020851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147026207 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.423941989 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.509749808 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.474519147 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209010583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138926541 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137249453 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071735664 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274483053 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.585978938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.41344826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26794963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.438553853 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162445034 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897998732 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.333359441 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.435612333 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.413474585 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.037903963 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09229488 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.234166038 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.404619342 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149153715 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.349623021 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.372333198 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.480607394 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627119321 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.201697326 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.561318093 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.429613205 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506941884 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139016167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730935791 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.152824001 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.905230205 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.232008098 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.16600466 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.416254533 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149894178 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.522412054 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189445228 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.335915619 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.654162198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964028909 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.498377162 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.123792518 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223816654 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.424122421 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.543630788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.464840649 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209711593 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149526259 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.851189496 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275497772 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.99713986 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.407791653 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139267043 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34971294 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.847907103 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148354524 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.419611806 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.457849711 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.135942608 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.017197613 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162910335 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148495118 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.362745202 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.425373204 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.426168928 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148025025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.146145063 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.952970086 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.423855968 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207024516 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072765388 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.141680737 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245131548 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.397769514 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159983938 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.82614372 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.849171968 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.444503871 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.182929374 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160643224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.462513726 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.57004941 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.485196633 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.675429134 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.378809036 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.715731626 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.901632338 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.497079524 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143526382 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.466029664 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.499209758 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.141961412 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.568686289 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234017572 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.421184486 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.466465108 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.15241061 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916647559 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.179432249 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.361870263 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731422288 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102293469 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138616451 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.197518494 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156758715 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26940211 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15018342 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.04160908 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912829782 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.941732522 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635341886 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144150107 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.124916847 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.94684214 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.609095203 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228653428 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281952089 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163074762 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.846292527 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.431895539 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.392708176 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.573622144 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.195507238 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.143229209 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139046127 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066288672 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.334576691 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.518880253 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.445742898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.428562658 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.233305718 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142961177 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.35421561 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350616045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.180167874 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29147024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.444993816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233060889 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.90726189 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817928137 seconds)
  done (took 850.895642411 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.162037702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.141814406 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.15917181 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.192146123 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.15702429 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.178979637 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.146195174 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.238718066 seconds)
  done (took 41.440723643 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.140510099 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.336177083 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151487397 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.138708594 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.172505447 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.139077652 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339794801 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.149077287 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.181934935 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.148654021 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.149855431 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.157812387 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485910705 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.165770117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.139661944 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.165260025 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.162124824 seconds)
  done (took 43.400912578 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.141592349 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.342285877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.175887248 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.166108669 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.105622898 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.156753359 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.056797962 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.188387241 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.139587329 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.354624481 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.479183624 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.17834247 seconds)
  done (took 67.547040332 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149546651 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145640586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145167892 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.145790253 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146855091 seconds)
  done (took 0.803344515 seconds)
done (took 1081.502100726 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.388433731 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.361411796 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.366587029 seconds)
  done (took 0.788195214 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.286841377 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.33474004 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.457278383 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.477674241 seconds)
  done (took 1.644937835 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.439015249 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.530473175 seconds)
  done (took 1.030045378 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.503761626 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.155974379 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.535690993 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.138065112 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.139359161 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.142649687 seconds)
  done (took 15.488904252 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.146499449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.145403048 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.142922739 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146208566 seconds)
  done (took 0.641269442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.125302019 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.890938641 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.127700454 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.145967864 seconds)
  done (took 12.350592421 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.890615561 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.541257108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.886264837 seconds)
  done (took 2.382785411 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.568341292 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.091919864 seconds)
  done (took 3.720583048 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.390467927 seconds)
  done (took 0.450793589 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.170997628 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.413123951 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.693868507 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.666497575 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.757762349 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.949313827 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.423822291 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.366309908 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.578743608 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.592201346 seconds)
  done (took 5.685477199 seconds)
done (took 50.826596785 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.499367699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.511754595 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.343166735 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.470103508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.362693627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.34289628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.34869299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.450598547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.97172759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.9664536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.509855486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.361427295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.30392054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.49992094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.307201885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.375748786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.361387768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.518849245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.164356567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36135875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.360185036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.095705718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.349642699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.112225569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.365700872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.292243215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.687272728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378370133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.31797295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.696200315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.294407361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.51657787 seconds)
  done (took 113.554670136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.859417892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.1397407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.140487478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.139184231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.523031463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.14110573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.140773502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139817154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.116791297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.099702942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.139652894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.525851115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.140242114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.139653661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.139052857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.139807942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.299336749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.887794949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.140101348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.138712351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.139717545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.342726484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.140141466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.350196154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.277698085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.141453166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.059026198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.140152312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.140039344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.062590896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.140183464 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.139951389 seconds)
  done (took 149.270867947 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.089885757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.140376957 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.139701771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.140355809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.140662262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.140862076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.139608307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139529315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.731483766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.728837511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.139764802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.140915789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.141291955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.139808413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.142211029 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.140039519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.139177862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.124153743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.139775391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.140310928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.140776851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.941949897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.139814158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.9786905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.148146521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.151787327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.140123951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.156530375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.158411211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.158753833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.164018326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.140217351 seconds)
  done (took 163.405372511 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.343315061 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.146914918 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.147537771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.07558696 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.147944629 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.146694988 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.085116723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.34420392 seconds)
  done (took 3.528810452 seconds)
done (took 429.827665356 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.579460869 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.426597547 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.323744894 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.171543811 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.410566219 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.205650638 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.168030935 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.228061239 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.900507104 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.239404952 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.845526299 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.181413112 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.940631578 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.18747613 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.287107584 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.220352683 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.704585791 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.801344393 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.34051468 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.238813227 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.347017639 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.130675345 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.240870107 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.935349205 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.964180659 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.165841178 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.346750077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.720455259 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.175017034 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.329492888 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.909140081 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.565462421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.181224544 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162288005 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.218638572 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.199346545 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.519399332 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.179719643 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.283758808 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.927633896 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.233759562 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.787426061 seconds)
  done (took 28.980965277 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.134957795 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.135223766 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.135575897 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.135464279 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.135385806 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.134818593 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.134395677 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.133410268 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.134862005 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.133803884 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.133547954 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.134858784 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.136069268 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.134569872 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.133183035 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.134203769 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.134682085 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.136444869 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.133771 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.133492378 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.134286952 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.13349517 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.149251335 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.133812973 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.134589239 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.134996132 seconds)
  done (took 3.59427736 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.148651538 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.296347813 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.40896429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164536788 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146890194 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.150439016 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.165589772 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151298535 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.149401485 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.14981468 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.241061408 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153306556 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167102332 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.403758385 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.161012565 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147393053 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147768283 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147537841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.300961832 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162615866 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167586762 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.151892833 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.165742839 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.160211888 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.150409056 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147451094 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151438949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.62020166 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.154816582 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.240559305 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190047436 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.169342576 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.567297635 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.410198047 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.631094492 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1557943 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.148409356 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.244876612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152797424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147649475 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.164965476 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151076065 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.39957808 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.643021822 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.160487148 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.147579379 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.629098918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.251601765 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.188310109 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157578976 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.402650144 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.162538563 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.149095116 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.147930494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.184065914 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156117925 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147204641 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.467995446 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.158006387 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.165350232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151122868 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.148121805 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.306731485 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.155798279 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.294358017 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.156015344 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.155102756 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149488768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.399472486 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.162285267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.654330408 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.160264058 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.147696246 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.241403173 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.298067686 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.655099858 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.159641459 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.307857865 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.585493184 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.170775911 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15399903 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.607705665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.175180454 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.154021518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.150185651 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.149461909 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.148658801 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.191425489 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.163869081 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.565339704 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.655538862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.485230312 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.172685859 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.161929705 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.148456232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.46697581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155099166 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.148145237 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.393534566 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.657675964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.16050428 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.155286918 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.636791522 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.1616018 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.167456036 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155175173 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.405782668 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.161389085 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.192376787 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.148097809 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.155665151 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151395506 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.167012933 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.153310655 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148383005 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.624595524 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.257210779 seconds)
  done (took 29.360601772 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.142806692 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.143878513 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.143795567 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.14364334 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.141855723 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146917826 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.14068942 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.141774063 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.146557955 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.140775217 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.14097188 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.143091482 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.141303669 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.149009075 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.252315189 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148421561 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.755731555 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.143259179 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.141711505 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.151967722 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.787210765 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.146523649 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.140991869 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.152047438 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.150235015 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.14179035 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.146955339 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.242972224 seconds)
  done (took 117.578590998 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.150417084 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260209669 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.162546427 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.175396979 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154501262 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.146306627 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.17077201 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.161072709 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.151466899 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.145895532 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.145496361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.206002962 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.156686269 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.244563211 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.177524475 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.175119329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.24805606 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.154681539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.145646198 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.145708355 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.175114506 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.139716114 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.205486526 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.267024091 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.162111562 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.2602258 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.148115357 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.1490043 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.147842838 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.261756642 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.158608462 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.204932617 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.172565171 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.163570067 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.262972151 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.258409128 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.25112022 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.175598916 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.149790754 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.145942121 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.145710645 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.134830276 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.259537881 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.163045552 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.14852432 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.2504822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.162123127 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.149392095 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156882786 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.146628655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.160113323 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.163178297 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.209417004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.274473524 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.176408728 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.171414 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.171360667 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.428594387 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.163665901 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.245994278 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.139481435 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.262461165 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.163795657 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13462407 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.147254526 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153069129 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.175119779 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.175917024 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.249071034 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154683332 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.246158761 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.180170825 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.151415088 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.146834555 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.149051598 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.262324253 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.258952199 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.180259202 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.181016636 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.174697687 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.13999443 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.14734626 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.13511527 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.16475128 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.150483726 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.259779518 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.259322724 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154484389 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148895264 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149380796 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.149137066 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.171597765 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.266633533 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.177834861 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.240859431 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.212308739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.215802367 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158301956 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.159783821 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.149697746 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.209769554 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.1590476 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.158770267 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.474758653 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.221983693 seconds)
  done (took 19.808712389 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.599258944 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.23050868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.202443723 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.469435539 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.568588178 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.022770942 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.196615637 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.194597213 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.217073235 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.376467906 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.26469684 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.21559058 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.179829014 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.167367836 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.195196448 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.216619509 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.203431424 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.501968304 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.309930498 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.292219985 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.201035479 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.484304634 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.520689656 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.617229676 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.230016054 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.529078385 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.878388202 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.363276067 seconds)
  done (took 11.520261011 seconds)
done (took 210.907592235 seconds)
SAVING RESULT...
DONE!
