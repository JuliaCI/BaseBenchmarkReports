cset: moving following pidspec: 11210
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.175721766 seconds)
loading group "string"... done (took 0.527490094 seconds)
loading group "linalg"... done (took 9.814694824 seconds)
loading group "parallel"... done (took 0.174645045 seconds)
loading group "find"... done (took 2.496550883 seconds)
loading group "tuple"... done (took 2.261362972 seconds)
loading group "dates"... done (took 1.437672128 seconds)
loading group "micro"... done (took 0.586750199 seconds)
loading group "io"... done (took 0.563718375 seconds)
loading group "scalar"... done (took 55.537325013 seconds)
loading group "sparse"... done (took 13.666590873 seconds)
loading group "broadcast"... done (took 1.31969395 seconds)
loading group "union"... done (took 2.563936628 seconds)
loading group "simd"... done (took 3.806618989 seconds)
loading group "random"... done (took 13.853176493 seconds)
loading group "problem"... done (took 2.267333506 seconds)
loading group "array"... done (took 23.35053231 seconds)
loading group "misc"... done (took 1.08133063 seconds)
loading group "sort"... done (took 3.747267836 seconds)
loading group "collection"... done (took 20.460869424 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760310442 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162954481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.243599349 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.888647297 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.302522677 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.208582746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.20010843 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177500086 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.617919657 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.237411844 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.197720746 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41029695 seconds)
done (took 7.21449048 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.511401035 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.09546787 seconds)
    (2/2) benchmarking "String"...
    done (took 0.221091607 seconds)
  done (took 0.966367371 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.09752533 seconds)
    (2/2) benchmarking "String"...
    done (took 0.144580436 seconds)
  done (took 0.890646809 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138193651 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.167715268 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.146957329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.132526321 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.14774902 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.13013059 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.146813935 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145778864 seconds)
  done (took 1.667604022 seconds)
done (took 4.821753308 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.529410477 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.903943796 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.526914867 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.206474056 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.355086781 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.334317055 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318486634 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.255411862 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.15013271 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.10180873 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.227813849 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.443364635 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.466189433 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.947900018 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100512163 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.156895364 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.188458256 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.806658311 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.122233365 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.157828572 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.5374106 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.244362022 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.158575713 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139047386 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.24531426 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.232846304 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173340396 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.152490718 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.720447541 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.176172479 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.242897907 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126619139 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172733379 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.20747182 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.285049357 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155501964 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725075531 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.243871983 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129360685 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.145107244 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.732035343 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.181622077 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240933059 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148369401 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.121149679 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184619855 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.144179267 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122104414 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.162773478 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.146167753 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217757318 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.490899542 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.151006715 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.236540832 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.150830554 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.735018875 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.144143757 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.330748987 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.182752388 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.156825323 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.11989236 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.148687477 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.205949697 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.144186931 seconds)
  done (took 22.786036803 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.205851226 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.224543432 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.13978778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.184924821 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.188794035 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.139016882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.131677635 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.138452019 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157679323 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239410697 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.184160131 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.234705119 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.118651989 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.150722506 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.19662459 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.277188279 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.168480963 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.149363556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.149586557 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.153408432 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.168566515 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.156853789 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.138673065 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.158148192 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.219754106 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.252164176 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.155224934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.170921442 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.152123025 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.142276079 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.187929428 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209417088 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.121575498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.149924627 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.236623244 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.150090453 seconds)
  done (took 6.978555299 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.264777238 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.146254776 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.272258324 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.230009974 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.189027698 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.220060539 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.228799002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.321772797 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.32791802 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.246137985 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.206406255 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.178810186 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.141152906 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142300309 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.148451726 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.140607368 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.121569624 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.889505632 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.216041018 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.182172571 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.216749258 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157113805 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.141007795 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.411586259 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128720858 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.14366272 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136749563 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112684459 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.249916281 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135999832 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.519786966 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144246358 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139224571 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174938769 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.251692376 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166231586 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180487587 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136171368 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.144967436 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250471928 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15821966 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.122061293 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120589759 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175845852 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.173824396 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.149464085 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163907213 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17610576 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.13206305 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167585738 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.918672993 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.241833163 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.179274038 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.144074511 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321690777 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.147940228 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158825379 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.14869001 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.237852831 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182117053 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.145012948 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122520819 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152260186 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.122798643 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161732285 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.230533386 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.129675481 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.201922783 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152820116 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158782514 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.447628274 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.150923101 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.131127067 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.165969285 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.144592749 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123626408 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.143860619 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.124384509 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.148022672 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123603953 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145229961 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.124131005 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204823483 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.14504459 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.163562553 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.166499607 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.133023621 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.143273164 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15688388 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.209901549 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143477972 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129776675 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.219255188 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156936389 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125003863 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.144452141 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122245551 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155710565 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.188093148 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.147371105 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.288339955 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129130773 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.169792905 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143767759 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156520441 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155952939 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123373734 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144937806 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.138639187 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12781425 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190796106 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.148636642 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.126547091 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.146971425 seconds)
  done (took 27.348211199 seconds)
done (took 57.75930615 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414800207 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112959067 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110114924 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.131376463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111961897 seconds)
  done (took 1.611201332 seconds)
done (took 2.323300691 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.228647078 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.332449492 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.245652133 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.147720816 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212021636 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213308425 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195421993 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209833244 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213567696 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.230350044 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.12985885 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.237643368 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.22704407 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.215777696 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.124256746 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.253894311 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.204085612 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193434044 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.249976843 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145669737 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144804317 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.16575236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144911313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148404256 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14417554 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163775323 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148280472 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163635722 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138923974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.149479569 seconds)
  done (took 2.382335001 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.173874747 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146547521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.161921842 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.137868745 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144685102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.14848753 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142171934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16149023 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147160743 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163208317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139638383 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148081539 seconds)
  done (took 2.366322965 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.129210235 seconds)
done (took 9.856461086 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.078198747 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.454546738 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194703494 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.267481541 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.372546124 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.291678572 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.585493138 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.213796079 seconds)
  done (took 14.315811347 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.209114438 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.157700099 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.140317117 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.154897825 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.138269942 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.154766459 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.136198556 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.15730766 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.136327096 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.154884736 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.137646398 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.154940099 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.141769694 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.160181099 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.139211366 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.157623991 seconds)
  done (took 3.20675078 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.164046467 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.17960567 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.140910409 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.162987772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139317555 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.160799613 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144921616 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.160977307 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139465746 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.157094458 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144706478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.16027165 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.142545903 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.155255069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.160912394 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.146099286 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.155546284 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.144538262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.162698884 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.146002319 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.165274877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.144891725 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.164486751 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.149059336 seconds)
  done (took 4.4826987 seconds)
done (took 22.732338667 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197404938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150423224 seconds)
  done (took 1.078341021 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.199399997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.217362299 seconds)
  done (took 1.155274597 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.161307356 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.15487642 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.171906464 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.168246881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.1412877 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159438046 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.181002298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.141908697 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.139094634 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.156222793 seconds)
  done (took 2.317137689 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.140299781 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.156166719 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.153298455 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.208230882 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.145620176 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.157782601 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.140451549 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.155659104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.140345897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.153211159 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.141770765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.168657989 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155585258 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.154912615 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.157541205 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.141766289 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.161289453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.1387571 seconds)
  done (took 3.5143587 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135974719 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.13809093 seconds)
  done (took 1.0190465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.138654539 seconds)
    (2/7) benchmarking "second"...
    done (took 0.152096317 seconds)
    (3/7) benchmarking "month"...
    done (took 0.138665695 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153553404 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.13627922 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.135723528 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.15317591 seconds)
  done (took 1.756850035 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.629813662 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272442233 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.423269026 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124442398 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.139126531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366618998 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157763555 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107648762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124918971 seconds)
  done (took 3.118991845 seconds)
done (took 14.699489423 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137378677 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225449194 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.651644537 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158646715 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.153645162 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.197276917 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344516919 seconds)
done (took 2.618288514 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370776357 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.188387062 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121201 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.138965534 seconds)
  done (took 1.565912914 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.127936593 seconds)
    (2/2) benchmarking "read"...
    done (took 0.143712376 seconds)
  done (took 1.032274984 seconds)
done (took 3.356921654 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.154114097 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.154177978 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1394846 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156796732 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140025354 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156368856 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139662544 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153721919 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139823492 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153327028 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139549446 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.15626388 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.139447394 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.156567309 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136363994 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.156460645 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140047959 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153159902 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136861022 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.157938059 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139915842 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154413897 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.140514749 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156607127 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.140422147 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157791254 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.13680928 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.153900087 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138870346 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.157342643 seconds)
  done (took 5.184809891 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.164917787 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.131245635 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153562576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143430574 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.151719705 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136911473 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.150734706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.132727551 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.153631553 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.134259394 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.156224974 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136054403 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.26847872 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137088492 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15359365 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.16002683 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.161539372 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.133605095 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.15051153 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.138011033 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155995983 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.134047968 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.153868212 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.136535621 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135712871 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.151605727 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.13574781 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.152783613 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.13554085 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.152798479 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.140773953 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.158828744 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136469639 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.165486797 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13990569 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.154262033 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.14419897 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.151471843 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.137419524 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.151823732 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.133723049 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.152669145 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.134183978 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.158348932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.136785332 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.153004191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.135212727 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.137287393 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154624628 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138035845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.151226303 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134099573 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.155297387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.136599317 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156947148 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.134020391 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.153783058 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.133790925 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.154494416 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136532381 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.151242601 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.134270774 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.159717195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.13863542 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169303094 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.144097967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.149723933 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.138973048 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.155223723 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.144099686 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.155694923 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.148695936 seconds)
  done (took 11.403997328 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137495625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136876669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155686497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137316495 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155155284 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136566401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.155997818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137930326 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155248393 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137573912 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15563735 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138584114 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153952938 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138252381 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155009339 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.139377158 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137702618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155860282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.13821044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15617915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138757826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.15654895 seconds)
  done (took 3.981480716 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.285558698 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144132343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.207412455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.171340405 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.156625736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.169821575 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142635302 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.16284549 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141616528 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165598765 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147841557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162569488 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154450552 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.165954547 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163875052 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.148324802 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161996431 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.14807441 seconds)
  done (took 3.773590594 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138856647 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136553172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158097309 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136612493 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156013491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138080212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15603968 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138451603 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.155543582 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.138256977 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155940608 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13901349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.156540951 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139387564 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136929498 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.156240381 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.136539786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156460891 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136910053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157242432 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137907247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156320267 seconds)
  done (took 3.994847652 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153855077 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.157996754 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158004639 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162288123 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140032998 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.15830452 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.14599931 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158593082 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.146721076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.160601302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141520841 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158289513 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155546736 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158292373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.146848138 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.159475338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.140045543 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159293786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14175842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.157531264 seconds)
  done (took 3.840087862 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231890092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176736895 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175333364 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164753704 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176397908 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156121255 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181787907 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155625622 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173613083 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.185758225 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157174017 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174859162 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163572152 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.178916437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155315194 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182700346 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162232509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183142391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.174651699 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156350525 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186178782 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155053384 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182383109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156023929 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175350395 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174364862 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155695092 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.180575037 seconds)
  done (took 5.611980399 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.158638337 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168390539 seconds)
  done (took 1.112133577 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142473839 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141719975 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161658662 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141033864 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.16222095 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140429769 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.160599938 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140048271 seconds)
  done (took 1.972619183 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.204196245 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.227878364 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.165157294 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.152449185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.228579339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.218336658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.221886914 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.146345535 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.161095993 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.134284823 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.222242313 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.13200789 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.164244797 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13759946 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.161108757 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145114033 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.160704197 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.147777566 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.168325963 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.142504672 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.165239502 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145571287 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16243689 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.167163438 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.136860195 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.164071265 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.145760362 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.169695717 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137621918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.162765562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.139738391 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.159433365 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.144205965 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.163832775 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.142293918 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.229633719 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148487703 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16018306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.141940931 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167368395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.171801267 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.163543379 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.148598145 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.162073379 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16568069 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.145603307 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.164426229 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.14159074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133539998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.159112896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140724912 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155840872 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140445736 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161317587 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.142795015 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.168746508 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.162920214 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.139176047 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.156882369 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.138010543 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.161731608 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.1399761 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162731707 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.145209075 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162989947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.143340369 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161921563 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.142753293 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.162428711 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.143487033 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.161143476 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.180746101 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.16372998 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.147620664 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.17568917 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.14409331 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158972542 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147677589 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160262683 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.1426951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.163996413 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.168589589 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.16392638 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137446616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.158805128 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.148390617 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.163005227 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.144156776 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.155062231 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151631416 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.164867982 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.142385826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.15670858 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.142370401 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.157256226 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.144337376 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.154540872 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.143320985 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161953193 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.147213498 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16621459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.142558458 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164942246 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147771936 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168218308 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.14160263 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.216368656 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144338817 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.1595562 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143294634 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169695077 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136503591 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.164036374 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.141211551 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.16031758 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138366516 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.168109383 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.143094023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.166215565 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.146309697 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.166125651 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145142609 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.16620964 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.140720248 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.160381581 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.147450752 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.172060658 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.145071936 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164982718 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.143320736 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.164975247 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.143970481 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.168050811 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141155591 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169370029 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140474888 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.16473262 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.144419818 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.16955075 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144787829 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.161082696 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142834685 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.166750677 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.144060077 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.167105365 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.146412324 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.160675809 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.136596992 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.166643466 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.140344911 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.164435256 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151718169 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.159850743 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.145112568 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.160979723 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150528467 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.160683996 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.147287066 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.167591638 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.148628887 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168970253 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136919621 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162625362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.145922356 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.168313513 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.139942562 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.166379889 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.144230178 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.170261315 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.138345061 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.168277003 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.151782637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.16872799 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.149015701 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.166067804 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.147242061 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.160788189 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.180592697 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174184527 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150413706 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.16622416 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.144940484 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.168285682 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.143958522 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.168209824 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149621255 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.169865157 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142757777 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.163597494 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150819759 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.16158057 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144855943 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164626408 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146826205 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.158099289 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.145418459 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.156878577 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.148367646 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.166190226 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.148631499 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.16977508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145433389 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.163284227 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151462141 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.160747252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.146807402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.15731609 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.148746497 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172717855 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.149953189 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168779135 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.147119807 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162635953 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.143857492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172711018 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146649458 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.164938057 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.145696436 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.158160163 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.138157055 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.169518582 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.147138334 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.161610738 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.144566576 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165629791 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14708355 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.161861108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.13712019 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.169438593 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149061995 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.160093278 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.145995906 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.162148105 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.143072497 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172275321 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.143328159 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.167892749 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.147622088 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.169167289 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.144010655 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.166502652 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.147509224 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.169845044 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.147983142 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.167294778 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142602014 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17316708 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.143263528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.165001 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.142115635 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.168402914 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.149005823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.174886185 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.147051859 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.162107489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.142218465 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169379076 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.150824491 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.170145339 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144086615 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.169653031 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.149246544 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.170759068 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144186632 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.168561122 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.141292533 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.156938611 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.142082654 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.157981384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.145883622 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.162134392 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.149505234 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.163107686 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.144136342 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.168735731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.148250016 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.16364974 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.151023546 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.176068963 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.13924859 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.158858438 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144139895 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.165158507 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.144359564 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.163178139 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.146357125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167737157 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.149095303 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168689052 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.143409379 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165797458 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.151886844 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.16379222 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.150863424 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.170551033 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.152559262 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.164459107 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.150034868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.163095708 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151150004 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.168456279 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.146626788 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16422146 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144701049 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.162630916 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.143764545 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.163830326 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.138489961 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.162813152 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.152059432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.165405828 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.15114126 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.166516357 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.144328651 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.164113174 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.142164794 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1725565 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.144374187 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.171819798 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.146124612 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.160049493 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.140766991 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.170861858 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147315973 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.172798471 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.140860097 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.171423959 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.152534469 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.169910727 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.147786594 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.174960862 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156657616 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.171470258 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152447343 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.16045093 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.144446123 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.170089965 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.14696038 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.169141324 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.148519726 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.160057608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150151241 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.172261148 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.14830967 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.164350474 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.141278636 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.167667546 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.153855348 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.171149937 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.149455618 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.147667406 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.17241382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.141952193 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171716442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.152406346 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.169425295 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153004628 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167997585 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.148838531 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.164485934 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.150494343 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.168822878 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.140124015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.162404521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.143716983 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.174520856 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.140857186 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.171800872 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.151119439 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.16510506 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.1452489 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.17268552 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.144773281 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171309425 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151954526 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.167612637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156048491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.169063795 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.145814162 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.173677839 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.151630021 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.162510822 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.146986654 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.168680663 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152837732 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.169346153 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.151991595 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.169009325 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15151546 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.170398487 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.152913421 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.173553268 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.151684189 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.162170961 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.154547359 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.171378665 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.150035469 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.165919294 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145919133 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.164781842 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.148755503 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.174939331 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145151094 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176674793 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.151601466 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.166929972 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.146553817 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.172810476 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14659179 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174493068 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.144851683 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170449279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.140701894 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.172678518 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.146135046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.176068956 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.144992634 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.163647304 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152893521 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.173779257 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.152778614 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.17340224 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.156692488 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.163761188 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.141383033 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.171290001 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.145337241 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.177060451 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152577259 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.168095935 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145969652 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.170797955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.148715169 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.175004065 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.142961185 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.166751361 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.148980039 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169991756 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.147301644 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.163552687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.152579902 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.169663231 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150941674 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.168960223 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.143294318 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.17043278 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.155106284 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.168183829 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.144274607 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.166911116 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154406231 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.169452907 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.146101557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.162429029 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154830085 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.172670304 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.155013475 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.166715832 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.149027336 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.168081331 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.150117799 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.177196443 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.146302122 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.170802035 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.148034633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.174259841 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154233878 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.162597376 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.146781424 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.180002026 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.154202283 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.173327763 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.150441052 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.169954253 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154570326 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177358035 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.150101912 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.164882397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.144182314 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.168924883 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.142702797 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.171871482 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154542275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.169619367 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.146585472 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173937627 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152821021 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.173304257 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.150628291 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.164050551 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156205798 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.167527336 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.152694979 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.164531938 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.144748391 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.171716513 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153971383 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168450462 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.149433086 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.170928708 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.153206909 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.165958216 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.147349088 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.173532581 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15268995 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.175461287 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.149781917 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.168463403 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.153467204 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.179413078 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.152083202 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.171142705 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157284021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.175864744 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.149306514 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.170187033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.153523829 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.175548849 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.152783915 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.176893148 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.148170361 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.168772036 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.156817618 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.177905324 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160896926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.170452215 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.14501773 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.176086271 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.148593764 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.165298569 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.155619527 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177444045 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.156398648 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.171222795 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.148013927 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.178829059 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154706616 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170995544 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.148643596 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.169829683 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.154943978 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.169085535 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.153516194 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.168744887 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.156821053 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.177729444 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.15541196 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.179749706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.143535801 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.178505277 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.152746738 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.178158292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.151078444 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.165375731 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.14557225 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.172460395 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.158211959 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.177503979 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.153813676 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.151672589 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.175303104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.150974294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173172717 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.14776947 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.179706702 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.15480748 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.174087816 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.151855298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.172267796 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151022292 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.172962433 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.155405337 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.179027077 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.15178171 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180887735 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154381217 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.171941252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.147072572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.173201607 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.151836134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.176018547 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154954195 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.170275486 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.145331895 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.178405577 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.157493264 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171950004 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.157933749 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.178820997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.14789367 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.175907099 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.156772747 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.177428791 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.151470142 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.175495201 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.153061902 seconds)
  done (took 95.291714385 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200878421 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182451866 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151851964 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173505115 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169013701 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177249113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.153124246 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176773851 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154475876 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185788232 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152813473 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174134888 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166106113 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196916531 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193305184 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163581541 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174240891 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154865704 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174616951 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154959638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.188830994 seconds)
  done (took 4.501144811 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.153174626 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151484121 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.174371444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151604173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174829841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152818464 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174817725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153195141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17378446 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151307687 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.174621456 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152528673 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.173159005 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.15316259 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153016072 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.175449988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151384383 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176151179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.152331079 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.17471769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152408111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.175263635 seconds)
  done (took 4.457793298 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.18285171 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155419806 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172982044 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15200108 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.17860884 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.151674598 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.180578305 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153278109 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183464192 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.147147532 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.165896693 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146810617 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.17356774 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.152601816 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.170455237 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154355697 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182920225 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156501954 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.179563526 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.153849957 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.165867169 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.154438499 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.176460778 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.145087381 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.158386891 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.180660515 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.157689343 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.179399864 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.143704913 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.180451159 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.153391934 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.171010462 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.144649654 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.168218814 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.144151902 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.179309066 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.155943944 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.176381168 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154080787 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.166812198 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.156093416 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.180533911 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.148354402 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.153746643 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.176702236 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.14741197 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.179735486 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.153432515 seconds)
  done (took 8.732830241 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.180799127 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213459139 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.157593601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.208673961 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.191465979 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163397402 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.180709491 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182611799 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180621527 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.15722625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.192385641 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.167393034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.182477844 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.159979708 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.181279373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.158216972 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182825987 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.156763548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.185016777 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178729019 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.163420214 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.185430911 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.170217294 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.190250104 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.159681844 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179827881 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157312752 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.184911119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.167048134 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.186803861 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.161046619 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186386059 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.190600361 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158389298 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181510417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.160843894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.191643228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.16006526 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.181334945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.157083052 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.180911555 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160859384 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.188053285 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.171464008 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.183074774 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.159905134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.182613709 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.156435318 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.190096229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.159180565 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.187540177 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.192988669 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.160952938 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.182191588 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.163074135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.191624719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.16032805 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.181365638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.160528867 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.190792905 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.158315923 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.183693989 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.169257428 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181714344 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.185265537 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.168891929 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.183564357 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.161207604 seconds)
  done (took 12.911619575 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190171161 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.185941725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16969648 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193878895 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16201872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1879022 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.164054305 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.184904581 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161806544 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189663832 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185753302 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.295661798 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165807436 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189526379 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.16365296 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.437384572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.166437549 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.186976271 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161558694 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.186502814 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.162449518 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.192685999 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162398716 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.192857946 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196596801 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159476069 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184842221 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.161731176 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.19457044 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.161815474 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197695744 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.160935403 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.164122558 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.193855043 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.175283016 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.187221665 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157446162 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184273326 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.162019554 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.185852217 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158982616 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.192983607 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163776584 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.182288422 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.162309429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.186365556 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.192541027 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.173441238 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190281898 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.166814152 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.186650284 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169557597 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185356153 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.184226436 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.170538048 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.199205559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17133313 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.193678533 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161587937 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.19294671 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.193443388 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.175775809 seconds)
  done (took 12.348645968 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.161342411 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.156565453 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180089589 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157174291 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.180852719 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157922291 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.181886801 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158407418 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181953805 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158653465 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180471576 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158107591 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180212539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159064034 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.179642668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158630714 seconds)
  done (took 3.605219268 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17653072 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197379294 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.262161169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.16101452 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.182037211 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.166750913 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.184006864 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.16218017 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.18082878 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.165113223 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.185561557 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.161891708 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.19959612 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.159399621 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181718746 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162304861 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.181623036 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.162838018 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.181045869 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.23969277 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.188424082 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.160717501 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.183714429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.161988147 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18509593 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.186309408 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.164810792 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.181111894 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.162301334 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.180580204 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.16185839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.190463046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.159115302 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.184601975 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.16219531 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.160320451 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.182807494 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.159140539 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.185996277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.159106996 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.187469954 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.159700593 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.183706985 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.161522007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.181703378 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.161459545 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.181154581 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.164876756 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.183934622 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.161378212 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.183984926 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.167264096 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.189065547 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.166584046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.192282665 seconds)
  done (took 10.657868746 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171117557 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.183855052 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.172667334 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.181059439 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.161317914 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.184102538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.161891728 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.185169726 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162098778 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157420978 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.184544087 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.160703533 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.186072428 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.162499049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.185968231 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160364048 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.18269574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161478184 seconds)
  done (took 4.029941546 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1590312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157702013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.183136167 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156998366 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182673565 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.158085242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181614045 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159004886 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182650545 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158371785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.18164574 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159163856 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181429457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.160145262 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.158490215 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182739335 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.158465312 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.183691814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157201932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.182666429 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158015064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.182547981 seconds)
  done (took 4.65502924 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170365078 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.261048591 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188084339 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.244033584 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.182555716 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.154444686 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.190621625 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.181460508 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.173748407 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.17906845 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.155897752 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.177739167 seconds)
  done (took 3.189457006 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186790816 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218817859 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161587644 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185352923 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169938684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189306179 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165068564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189496778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170485182 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200085404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189337204 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173605178 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195768836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172359237 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193946747 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168527468 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189564276 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163810874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18654048 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200399998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165564605 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19742936 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165148361 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189340438 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166437878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19706393 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171560737 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20004304 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188274165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172909921 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192674328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164983868 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197844304 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175872369 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186812824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195395198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166178248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203829658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170144137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198102748 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.162380793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193523063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171716007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194940201 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195756894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165604994 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195157037 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164930933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189821836 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186582677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196302273 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196500617 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169996663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196879459 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172963598 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210721199 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201273958 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172694911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194789777 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.177066311 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197012432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192852449 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175113182 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201151675 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170044355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196410051 seconds)
  done (took 13.119481088 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200600184 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187340021 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167156123 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203706631 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172735137 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192509474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165454972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190949303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190699952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165059016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.233931523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166169701 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199950891 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17497721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191798787 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165389576 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19165372 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197074124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164248413 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210842029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166092379 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198366116 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173175646 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200191199 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203334592 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170937393 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191830228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16619789 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190960348 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166564897 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195718427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166785669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198546502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.187914689 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175748657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192161812 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168274266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196141959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167114376 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195902893 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173521308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206730884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191095004 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167849114 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203153266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167717342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190273654 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16407565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191826124 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163715542 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203566533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202021435 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179236709 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201425079 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167302572 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191722654 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16700165 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191973719 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167400356 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19567618 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19786335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168670195 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.211205667 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16837228 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191146079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176156939 seconds)
  done (took 13.158815915 seconds)
done (took 232.290179696 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.311164309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.343878248 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.162137761 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.561717999 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153393707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.885105057 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.742394913 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.248500913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.178420266 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.153232392 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.178158722 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.17324668 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.565510261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.154139495 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.177724048 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.16982449 seconds)
  done (took 32.10926715 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.346769521 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.396206235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.168883397 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.184389708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.159726247 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.184363671 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.157766787 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.186883726 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.159883202 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.18897424 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.158816163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.180071411 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.164291743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.179854004 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159372511 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.184913499 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.16493933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.183849992 seconds)
  done (took 4.477756803 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.178891523 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.243206469 seconds)
  done (took 1.385111297 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.189518518 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280155276 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.383302472 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233233019 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179914154 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.202548826 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.209263071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.196736024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272565015 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.170540052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.196726942 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181242628 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185894456 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.188225927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.176364138 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.180257107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.187620014 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198582157 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.173469162 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.185248751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.183709074 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.186543777 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.163419298 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.199133721 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.26482221 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.171697136 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.187892396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.160720786 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.187554897 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.173347174 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.191047574 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.176246848 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.194841024 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.244909261 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.18535576 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.213301826 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.189264551 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.160335765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.198451227 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.159754325 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.188177546 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.185998123 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.172675227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.179766869 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.15921264 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.186904831 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.159204388 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.183617419 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.169678183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.186807069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.168151322 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.191112567 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235460462 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.16335712 seconds)
  done (took 11.452397992 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.994373657 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.209666948 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184305711 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.146464496 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205119682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173426017 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.019217592 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186012964 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312990936 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.084265188 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175188448 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.194035699 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301435837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.341455529 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.336433284 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.440693967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.850371512 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.171172055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.217329079 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.226817593 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166150576 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202751822 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.175649831 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.505193983 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.186805299 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.160201583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.188705047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.169349435 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239045393 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.185554759 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.163648501 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260756108 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.358506387 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271677697 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.185743443 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.158918641 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.18527055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.250384773 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.330670689 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.278575808 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.255039124 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.157005158 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.18529382 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163831448 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.200244469 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157483471 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245226132 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253857233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.254472604 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189182918 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.168051763 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.19264575 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187003523 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.217235844 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.184257387 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.426231662 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.447918873 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159938601 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190671521 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.173101776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.353742869 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.163803964 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298517378 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.206846932 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.275259728 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184114648 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859242923 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.246911521 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160511657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19057071 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.165643537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191384543 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163871393 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245944621 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.486418574 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168111487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.191510788 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160023272 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.287153953 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187917785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.160109148 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24215742 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188344945 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166061489 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195664009 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.191008043 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.228442149 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.337273392 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.194453681 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191039893 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.167514247 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194493666 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.163780705 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295251302 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.291530571 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.240687238 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294218631 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.190617387 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.246956841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249295444 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16613647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253484783 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189395879 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.173146243 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189769426 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.289478883 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.223949067 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163363778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.190968546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167430218 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224850942 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.190130753 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.168316572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252866669 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.542844179 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.250590385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.182376776 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167764665 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192732545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.218559597 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.196386914 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.322949753 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192550229 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.249786718 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165399482 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.183772122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167326763 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246080236 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195858819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167348576 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191214619 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169906953 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.341888532 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.30699037 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.171722431 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310534247 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259935261 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191496728 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.257247666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167369287 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250620113 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19464407 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166924848 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186752871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882510808 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173538232 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191988971 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.166308672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.267623208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188050856 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164826019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186935464 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160398192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853676626 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191794989 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.160575867 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.190871504 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166100203 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192532955 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166954213 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.193572641 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.246269896 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309126111 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.195854409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166245592 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.189321696 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.243290065 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.162730432 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.187697671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162972734 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.205833046 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168591133 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.190690138 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.165488037 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253488569 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.244281295 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.296153232 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.665687599 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.164064795 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187647717 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306557061 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161334603 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.412787115 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168966211 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.32397501 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245480907 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162312535 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.42074551 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249458482 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.269898027 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.190334869 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.231949754 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186087729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.16710432 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.242540203 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.189789596 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.168445101 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.24193861 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.197110521 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16896592 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.357678535 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.162241854 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309883524 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.185319588 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.254688508 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164806341 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.192532652 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392463032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161826468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200441427 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.246449839 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167179486 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.189397322 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.949181516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.16211182 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198811107 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192318679 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.302446675 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.248250958 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169966322 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195916578 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.196555203 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246799915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.269204589 seconds)
  done (took 61.781792096 seconds)
done (took 112.170237479 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.326247333 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230191288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.42539835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236931117 seconds)
  done (took 2.278813135 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.346880915 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.203520019 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.306197671 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184586254 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.286762831 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.188604832 seconds)
  done (took 2.526480299 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231798882 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229554051 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22880927 seconds)
  done (took 1.704200422 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273352115 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275414811 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412374304 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326420018 seconds)
  done (took 2.364547143 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340197758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.178432167 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.219549421 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290596406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.305768544 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270221669 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.186940187 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.238577698 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.218345166 seconds)
  done (took 3.296086041 seconds)
done (took 13.184103079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.203921645 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.219115638 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.185756311 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.201516407 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.193446358 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.220971082 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.19202656 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.217743422 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.19202081 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.20339042 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.188384694 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.199118753 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.28255149 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.191797403 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.200900228 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190854542 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.199476165 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202948545 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.218989299 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.174278093 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.218913327 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.174602969 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200516089 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.182234004 seconds)
  done (took 5.861297984 seconds)
done (took 6.875238826 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.270447991 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.184476579 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171847481 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199691924 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.27932377 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179930463 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215642614 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173883273 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.2099002 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.173245779 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.188078575 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.187684244 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197816274 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.273139387 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.175898564 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.189336953 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.164981782 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209613249 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.187928404 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.217001595 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.25440468 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194733957 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.182813482 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.189744447 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.281894421 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166537437 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1982498 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173373126 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.213671812 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.172721039 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199296768 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.162687668 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.214443015 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188674031 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190897639 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173466757 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190766152 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138109846 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199103304 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.176310381 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.211424778 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.174681002 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.198613206 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.164989072 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.200437118 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174027666 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189445418 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.177107651 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.187406674 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.174589203 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192467876 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.19072211 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.198138164 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164798998 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.187976549 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.164947535 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.209924817 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166216995 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.21221238 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16731897 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.188628997 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166274392 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.175328517 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193587825 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.173777804 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191583608 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.174136471 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.203704868 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.172596286 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19475656 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163968008 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.200881144 seconds)
done (took 14.846918286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.169464836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.237309329 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.278175614 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.253135684 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.223572023 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.20770505 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.178357791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.215631534 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.178081745 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.230528871 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.200942441 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.225589896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.286365326 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.181080075 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.211162261 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.176834107 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.203045043 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.172708523 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284178284 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.219735482 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188614101 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209384115 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189838016 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.211310332 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168378263 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.219854799 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.198922688 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.17885738 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.194695389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.189417914 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.217278659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.168673554 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.198256149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189058554 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.214028717 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180450704 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.208517969 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.177662168 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.195377483 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.174154481 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.20392242 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185857292 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195797722 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.207258847 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.181491688 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.210691689 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.177964703 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181339177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.198216711 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.175791761 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.197923242 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.219460039 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.186311257 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.212295438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.184004075 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.219594804 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.187696571 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.208770235 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.173842234 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.208828867 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.17207586 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.195388189 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.170855768 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.216757041 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.172804259 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.209399986 seconds)
  done (took 14.289527866 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.18668701 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225193605 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180150216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.207482525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.172731911 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191788971 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163495195 seconds)
  done (took 2.375836227 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.164554004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.292200209 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288973331 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287120631 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.283414879 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.296533735 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189811446 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190734986 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202423436 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.201470233 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.290909018 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.324520394 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.176461211 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.205612898 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.291192262 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.164346589 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.291688976 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.270705978 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179820646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.290583462 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211160146 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.197767931 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.205636385 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164368962 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283160667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.194112912 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.340512497 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183707469 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202940921 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.179105823 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209662827 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272674522 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.258157423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.207976803 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173287357 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.285797375 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.285988741 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.210495903 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.299394302 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.169669736 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.285396956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.205886982 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183184854 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209305006 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182819552 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.275854071 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.212558448 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.18327629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.206748743 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.267845122 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.206025783 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28986763 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179212128 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.210398558 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.175387066 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213026144 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188419164 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.209150165 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.298882824 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183600935 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.287337408 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.290696637 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.287811941 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.290757504 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191642622 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289640271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.27930091 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.20769055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.257639736 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.213572636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.292003751 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.178930203 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.206461509 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.282570396 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183729034 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.293786767 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.295805995 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207440844 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.181098358 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.197187141 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181402469 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.194617343 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.292925906 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.183495584 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179037163 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21689948 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207835183 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182483408 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.284908605 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217720767 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182759117 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206177556 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.187323714 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.209101586 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184875972 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.29331468 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.208546308 seconds)
  done (took 23.36985094 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170086743 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167772281 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.200861114 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.169217042 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196241608 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168937129 seconds)
  done (took 2.157493586 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208158529 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209623394 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192517801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.209173729 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233045714 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.297695755 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.303264899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208247589 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.200203769 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.220783021 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.302022118 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.3033271 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.30129691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.186922261 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.306065129 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.185864234 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.305228147 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.212732935 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190622249 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210079287 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.18162229 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.215807584 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180058159 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.288801729 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.215080045 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.183370032 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205071211 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.19049366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.220128848 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.20424826 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.18808574 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.210211927 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.177840639 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.204559151 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.305724525 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.176313644 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206703089 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185694462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.213901248 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184191961 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.305351391 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208542777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.190592148 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214894446 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177703272 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.205825642 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.185757649 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203692007 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.307630687 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.187594563 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.216268563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.184434597 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.215525722 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.186253751 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.206041634 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178546124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.214419332 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.309342176 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187505469 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.20589118 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.184027627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214837099 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.203471146 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.191669921 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.211219433 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.186845214 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202797076 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.18673632 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208667094 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185470948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214849814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184561301 seconds)
  done (took 16.68234934 seconds)
done (took 59.915808688 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.808893133 seconds)
  done (took 2.894297101 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.160402341 seconds)
  done (took 2.246939748 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.878560831 seconds)
  done (took 19.001203414 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.484651178 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.416854435 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.104671706 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.242896151 seconds)
  done (took 3.339799056 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.140517176 seconds)
  done (took 2.241735364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.485592815 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.349834179 seconds)
  done (took 1.929594246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81972929 seconds)
  done (took 1.931162329 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.813158153 seconds)
  done (took 2.909852156 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335999393 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.314173421 seconds)
  done (took 1.756616229 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.690946382 seconds)
  done (took 1.801782458 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.440870714 seconds)
  done (took 14.553492615 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.321312912 seconds)
  done (took 1.437010687 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357762187 seconds)
  done (took 1.475418438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.666488211 seconds)
  done (took 4.787395735 seconds)
done (took 63.406750158 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.183535208 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.213787026 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.18743953 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.210483241 seconds)
  done (took 1.897483064 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188770366 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209642394 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.188515478 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.209292105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191930728 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209968494 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183672862 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.213895295 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183906344 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211707251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184845929 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.211248628 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.18863904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.208523138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.184093122 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185124524 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.216713752 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.211637797 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186333725 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.212081057 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.186975861 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.211872172 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188846348 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.214842785 seconds)
  done (took 5.894950334 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181650246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171902569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204585617 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171181376 seconds)
  done (took 1.842405519 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.195455326 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226441057 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197289066 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220013644 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200275509 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.227392526 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183283928 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.20893098 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183218701 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222160195 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201952499 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228575233 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.19792219 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218411591 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194811943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.20769925 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.188382476 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225705771 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.193848714 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.225115415 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.187233617 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.221844547 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182532539 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223569432 seconds)
  done (took 6.085525139 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260471014 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225303367 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210610177 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242063685 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.18158683 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.242158736 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.260161344 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.191436486 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.216418731 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.190196086 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.213728094 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.183914414 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.259183661 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.196697564 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.214257109 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.184233653 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.221732167 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.215361831 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.229119743 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215682963 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.189696958 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.223923627 seconds)
  done (took 5.892875649 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.275254398 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.206728753 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.172393973 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202526527 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.185444071 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207879194 seconds)
  done (took 2.37734789 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175268792 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168576692 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198192341 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168930226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.202494067 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169291735 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197906844 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169301697 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.19834001 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169415967 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197022786 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169588345 seconds)
  done (took 3.314552111 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305305571 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218790685 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.353904309 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.469595364 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259152086 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256339768 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.350111127 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255173991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.276636765 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231708918 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249910967 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258654795 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25094423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275860112 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240569282 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246529669 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237612961 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.329967777 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238215043 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332179037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253024937 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244043879 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.289892697 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246439504 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205531618 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260973571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.214471856 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196273657 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261558724 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259726703 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267689541 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21849684 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240014127 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285162903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304030682 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241558819 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.394126153 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201260959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.262514993 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.29295061 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.32910021 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23667064 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258651373 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248537675 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225406257 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30955339 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2161169 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.282982321 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.229357748 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214056523 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279941881 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276363554 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.26518143 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203660363 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403029725 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231821139 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.208484815 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277943843 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286898228 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300019051 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276607773 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.19075235 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269451159 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289101779 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313121834 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.23919108 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.230478856 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222991085 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26323444 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276496236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279101538 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257687004 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285483567 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196796734 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270021083 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264523258 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249985527 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273986416 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271131607 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.216587587 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214203427 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229943196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190477637 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.286151277 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216963786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315327015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198678572 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273094509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273179221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220075019 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258453543 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256107063 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230019653 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245132067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158658601 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240488418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255098397 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225153533 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225667499 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218542351 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236038558 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221817509 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22034336 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219731016 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2365532 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.222948375 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253913447 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238118421 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.23111945 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27765099 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214819783 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.26189487 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266058896 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292115439 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197267006 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229177378 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324789733 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237354724 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.235532083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271090836 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.297592922 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.210140894 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231270355 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258685403 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260851447 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242421141 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298585439 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232897274 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202563186 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226333844 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2399525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2587112 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258993394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193859783 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.264097082 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285464093 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193433392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236036261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283397149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199669203 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22166134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200763855 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232802891 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.239664462 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.219573424 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.236011434 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221425548 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265437363 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265780843 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252603356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20281421 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268133376 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226761823 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.238565766 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245883652 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.184713705 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.272100836 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298939632 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22700021 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248904775 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.257814099 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278314875 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270805118 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195572477 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282177423 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227289279 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.188661111 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258296128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267265984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229321382 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288264641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275673094 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.263453872 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.26424815 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214962844 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265906698 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285085485 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253987413 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.208278609 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272882466 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269244509 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.188010486 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.220708803 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194528028 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234778792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195691863 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236851207 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276866696 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258599055 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274369797 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235231038 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236657484 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291384589 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.193256985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258110124 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.277747781 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205772735 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.288749048 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292186145 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27882876 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208684855 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260292652 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.217517944 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19553019 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230786486 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228821713 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23667976 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203261487 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239986668 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292536585 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267457158 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216052223 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288354012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261587229 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305562995 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.219568379 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.230105656 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263982363 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265598636 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257472267 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23102618 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.228416007 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293712998 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238823282 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293384419 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237414701 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280919616 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293147529 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.265119086 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199431551 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243555254 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228164626 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236992257 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259265051 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211316619 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23002169 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24508328 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.20816985 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239937075 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284591099 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210921536 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273725301 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.255197364 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265639482 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195259355 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238653681 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242948641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244133959 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163491911 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265049163 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290180136 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248541138 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218529797 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268768252 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227673597 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.419198478 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280729707 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273027213 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234325214 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207081368 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273537343 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254967904 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227532072 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286987872 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240167313 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306798069 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240402019 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.238793746 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198288951 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246951423 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249662232 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.198584714 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252602248 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.260580804 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.213229668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285966042 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23567867 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239802119 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280185314 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.245724423 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.217444103 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239649358 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329279224 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267182535 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240937725 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.265654423 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263055055 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252245883 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224693303 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194394249 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232140381 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28889652 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197818089 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279239613 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262896715 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279541283 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27574898 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260839769 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210439962 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.227206559 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237899869 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248937091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280073953 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232777373 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.207849227 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287674729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.18626239 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232178939 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259953461 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35731468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246244168 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268484156 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165425233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.387051459 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229446691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202849051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260032285 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26974679 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.203919802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.286401152 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244962467 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239929212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.25884974 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204560655 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277200581 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282318504 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266080784 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272384228 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.214768645 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262845964 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25519658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239669331 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247911309 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.216154395 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261283824 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297278413 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.275372235 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.201047511 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271910142 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27139248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241329812 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27142721 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239232045 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252974807 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229112668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266470894 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206336625 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226033387 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259132546 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.235371299 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230388523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272601368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239626878 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231797983 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226914568 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216205964 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267423973 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237067716 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.20085594 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285432099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.197140913 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283039586 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311070309 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230848494 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238541761 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245385728 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198486687 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238781047 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24392447 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201445097 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.276448602 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245850766 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.231318244 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274598723 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232720457 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263957107 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253307669 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211875534 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.371762376 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.228211635 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262900243 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252563302 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322563536 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25055146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248861624 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273255232 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251378253 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233214213 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249113242 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.322326727 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232840687 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270562765 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233499908 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211805686 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239899731 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.202411777 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255451211 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271999354 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210117408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.237908885 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.268295476 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21459626 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.24819245 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210537084 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302560227 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253763855 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289864648 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290127416 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209547607 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279759142 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275073195 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20001096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.267046727 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272406063 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213618159 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253346628 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.203155112 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.238869279 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317481136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195741214 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262606565 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277035693 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271481525 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244334684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.236883311 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279852168 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211480848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279400802 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196076511 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252968901 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273863146 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204556367 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.228808448 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274080556 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229320674 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.269991274 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243885696 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.249571976 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300853575 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1939379 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235891463 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390978468 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261969973 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26702119 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227153344 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20817822 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24945243 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261888591 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.237074786 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274760084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.231086884 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200968228 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.249656715 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224239943 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230799482 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241369524 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28736359 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258793824 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292891131 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.206570628 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.357609069 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21147904 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275272342 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.208364004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200346179 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242748397 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204826936 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243684985 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279584073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323371593 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.236433172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.249770762 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23707008 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.19859369 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232289239 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23353915 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25253593 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272964872 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219608794 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.195864768 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212146869 seconds)
  done (took 121.490500206 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249643516 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.426443669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.272262598 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.347995007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.32305664 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.390084464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.352135152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.343521668 seconds)
  done (took 3.961052007 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19248558 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.260773907 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.243778357 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189218302 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213336978 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.552704148 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240499877 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.1927257 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.266086216 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227336921 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.184765677 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.646503262 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222280486 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.219599855 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223299641 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181907422 seconds)
  done (took 5.505066428 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.19332332 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.631452534 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.161180033 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.372788867 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.34091098 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.28900258 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.894995615 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.271732899 seconds)
  done (took 13.415838432 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.248289684 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.279464609 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46107204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.386810382 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.298512892 seconds)
  done (took 2.942064769 seconds)
done (took 175.724746819 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.197355931 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196535574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.23281729 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.230470195 seconds)
  done (took 2.107260539 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.241102401 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154359663 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.188690547 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.154065917 seconds)
  done (took 1.998744518 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.480910647 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154725506 seconds)
  done (took 1.926473519 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.220457632 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.240875325 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209408431 seconds)
  done (took 1.946312291 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.209106511 seconds)
  done (took 1.478407371 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193629621 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.19159278 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.318877587 seconds)
  done (took 1.974316306 seconds)
done (took 12.700658467 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21778509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.05114133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.657818261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.207874764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.843253343 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.471392222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.546425341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253644372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.280423629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216640854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.248677335 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.76862307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.530325628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953602966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.515277938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.953409124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.799942704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185574235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223030857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186645294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.526260686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183002385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216519828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185440809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.796346534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4915178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21454655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.964596835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214403053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19487884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50506129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183834667 seconds)
  done (took 24.044346885 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.188010326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274580173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.24008345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.219079924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192995818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.218287021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194951741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.230060554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.322308899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185177538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239909014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183453684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222610063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185164546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243056654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184328083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219417741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187127622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224991833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18813805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238579691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183695369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220323971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185835388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216437911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.204521105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216927007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198147643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217670389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195172316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221294002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185999825 seconds)
  done (took 8.109894708 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.22891855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287802183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241543102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.258976715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.274067597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187043543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.308006327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253472376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.298408332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218839806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207417152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219605518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226581295 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.220117466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.21025835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.218377095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187760796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218468517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224774352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189690306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.2402629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186515243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219638394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18793854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218369875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.207237697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216668493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.200095547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216564816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196402009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222304124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186402025 seconds)
  done (took 8.463831294 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.201335793 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.200927196 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.243794096 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240800629 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197860649 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197955704 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.232263883 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195177968 seconds)
  done (took 3.001343456 seconds)
done (took 44.895247956 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.731995079 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23653968 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.209146002 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.201515936 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.312873367 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.22702367 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203970695 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.226078769 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.201398166 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243958397 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184658613 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.22629351 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.207310512 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228611801 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.315954952 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.203666879 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.320913913 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.317541102 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193936394 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234742291 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.19361503 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.320852456 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233114179 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195641876 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.298757044 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.192093535 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.30570794 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196706117 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.230767883 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186693389 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.317657024 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.2317295 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.195331801 seconds)
  done (took 9.600737192 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.298049758 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.229922684 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1948404 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229314041 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195962076 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227380209 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.334636298 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194845546 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.227512575 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195216061 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.192735058 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.31802571 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.234747943 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.190861878 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.230979179 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174947786 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.336428926 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.194512486 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.220808349 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157949137 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.224415402 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.195632042 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.34792996 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.191582959 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.229315733 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.194198704 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230434372 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.20089095 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.229490747 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.213401347 seconds)
  done (took 8.141365548 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200710355 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207955676 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.250154363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296110687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225052613 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.240321885 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.213356114 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241619603 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.217146852 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.223109856 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.205044746 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.258333366 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205685728 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233122975 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187607382 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238335349 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203819134 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222524326 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197628389 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239700003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.208330919 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.240583262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211032362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231206117 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187263139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228958522 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198885663 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.235698464 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196420903 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.237346718 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190631597 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224050932 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.191206893 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256216017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.189507895 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237250937 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.241989075 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.203995396 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.235772908 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.223927602 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225553576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.192504667 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.24935861 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.248071248 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.223096827 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.201317412 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.224397388 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.205778329 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.22065142 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.20812462 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.264841799 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.190578509 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.243441612 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.187633795 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.220922557 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.197387077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.221890803 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.195498314 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.237453268 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.189874012 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.242941546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197545907 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.234924304 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.19289478 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.234364369 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.1903124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.187864324 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.22648577 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.249661426 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.199776969 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.261525369 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.189933346 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.234712954 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.204294094 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200171889 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.235832198 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.18877549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23610167 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200346629 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.228772889 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202249763 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.226585101 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.190690491 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.238770893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.243237457 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.203912406 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.233704463 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.201650084 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.222890927 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.193025322 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207004393 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225237764 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.193795013 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.237517642 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189273039 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227606722 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199859671 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.232595006 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188893208 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250966715 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.192511403 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.22302181 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216787333 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.22733053 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.194117573 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.233140351 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.231870067 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.223501751 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.199767043 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.234647947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189542784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.232204233 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192597729 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222525374 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206342838 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.23956175 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198789841 seconds)
  done (took 26.843696037 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.415177414 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.407944997 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295176322 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.45575006 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.238550353 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.329097357 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.404121453 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.40989078 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189973854 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.260461001 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.280985694 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.371112842 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191235414 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254633778 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.411566126 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.456467275 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.257594616 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264619727 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.26027747 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204957735 seconds)
  done (took 7.689368666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.20195885 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255055901 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.212452796 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240646547 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201758871 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236752574 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192937521 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.244494454 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202309915 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231212993 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194192346 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231099077 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204480958 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.205577006 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237958571 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.247358755 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198684453 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.224743832 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214338193 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.224042786 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.209978376 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.249322456 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.201000987 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.244834319 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208834466 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.233743953 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.189500287 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.227222528 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197856067 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.233088368 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.19207619 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231482769 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.198840705 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168317235 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.23728437 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206067858 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.230840309 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.19355961 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230983467 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193566821 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.235550165 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.202637884 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.2322692 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203017245 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.21093327 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.212706397 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202584247 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.236837656 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172584371 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.243364166 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.203768335 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.234937526 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.200308432 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.20932507 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.23421095 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.208158647 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.234451617 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.20215687 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.227900996 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189017539 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.22404047 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193740368 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.233789133 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.202695873 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.237893192 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.20014771 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234572962 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.191290451 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.226446316 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.194866729 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.228223905 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.204654558 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.24643325 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.200543663 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.231934905 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.20280253 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.233211584 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162673695 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.199363758 seconds)
  done (took 18.369587506 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218075553 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235783118 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209454128 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258004207 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.203448865 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232780161 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202152464 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.244139991 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.205137304 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.245117594 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.205165383 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.238077007 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215953879 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.236288696 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203840183 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.241180911 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205504194 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.263845965 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205338986 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250862915 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.203778608 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.230931275 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204816583 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237926834 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.218308685 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.237272007 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215960146 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238747101 seconds)
  done (took 7.661910617 seconds)
done (took 79.598491679 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.506464373 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.66724792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.441273311 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.447628287 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.460806295 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.441895109 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.439846581 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.440878938 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.985342208 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.41824484 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.441888502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.439709653 seconds)
done (took 31.51934354 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.58135909 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.10683521 seconds)
    (2/2) benchmarking "String"...
    done (took 2.120372771 seconds)
  done (took 5.570699104 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.097001802 seconds)
    (2/2) benchmarking "String"...
    done (took 2.110960852 seconds)
  done (took 5.53635458 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.431075692 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.442566223 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.821311834 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.43329546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.430816887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.432402435 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.433135029 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.434802386 seconds)
  done (took 17.758479184 seconds)
done (took 35.209689225 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.495306185 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.768436331 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.712681721 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.429386047 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.433075054 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.432805344 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.435006922 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.506472124 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.438573573 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.431421597 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.870522387 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.731687998 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.451767064 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.86753689 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.430359665 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.44929494 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.450067976 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.838375822 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.435013446 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.479504865 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.429257926 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.418645754 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.452370243 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.449661519 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.444578849 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.436076524 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.441250823 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.43603231 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.740675701 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.462423228 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.483977897 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.434920663 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.432415626 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.438319929 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.452909624 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.445403888 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.784632328 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.451310808 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.439286139 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.437384538 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.779196671 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.439685903 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.435537195 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.436165259 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.420629311 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.44067994 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.428306711 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.557995291 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.470359112 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.447047923 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.523938402 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.871330179 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.440385244 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.444063473 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.450007503 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.803788267 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.468153833 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.561426593 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.467236785 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.45084999 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.437078889 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.438469323 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.491880293 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.443091931 seconds)
  done (took 160.078076444 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.437094793 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.439983894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.439904252 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.44448646 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.440172314 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.439858927 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.437768099 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.437263046 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.440882066 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.470500166 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.442790863 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.441093988 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.440981704 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.429854226 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.446165856 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.455929812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.437346151 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.459678262 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.468599912 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.438408347 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.445889771 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.441324882 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.441874185 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.441425147 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.452078041 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.530068379 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.445922261 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.460732643 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.448899167 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.440669348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.456865362 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.442427608 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.127733864 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.30604551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.447020239 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.484222925 seconds)
  done (took 89.036742989 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.438478498 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.440846089 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.440278554 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.475741264 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.440218012 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.056319086 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.082183614 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.508634755 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.834318997 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.845010925 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.982549662 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.752837663 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.437555595 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.53406385 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.439168305 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.451713358 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.439950434 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.536370251 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.468988135 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.439869007 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.440418896 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.057499631 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.452814956 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.515315484 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.630310198 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.440686062 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.478414153 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.839075849 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.440542827 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.475269111 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.784020467 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.477174492 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441691718 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858051945 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.111766126 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.557661098 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.442984901 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.47782732 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.440344839 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.731311272 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.443397063 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.443772435 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.44617942 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.153586816 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.442385287 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.056818081 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.442688026 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.448766169 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.440690056 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.443275931 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.149602332 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.205621488 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.444014957 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.443399914 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.444508005 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.442963964 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.443019705 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.478686027 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.364490415 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.361316356 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.446489446 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.446246777 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.480437199 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.444483916 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.443191914 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.789730107 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.50858027 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.594958931 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.061369258 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.442251344 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.552500156 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544502637 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.565506592 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.444734386 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.444882707 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.444224333 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.444785583 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.558941474 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.445419321 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.895327718 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.630687293 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.446647872 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.925726912 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.546622901 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.445858881 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829016821 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.444637734 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.445711805 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.194257015 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.445930011 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.541293318 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.445378091 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.446323483 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.445860303 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.445746796 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.446136846 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895476779 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.089990129 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.732748288 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.446781338 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.630696844 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.451289632 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.905926343 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.062897124 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.110645607 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.447915683 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.562305487 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.634562256 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.449310808 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.448959389 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.949859152 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.448380036 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.508859178 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.447409385 seconds)
  done (took 400.367565658 seconds)
done (took 650.813124221 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.431861038 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.432021565 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.431578614 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.432663235 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.432678973 seconds)
  done (took 13.503078844 seconds)
done (took 14.844766708 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.666179124 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.654230598 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.654987596 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.513806791 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.670220074 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.675696385 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.575764392 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.667124022 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.674410847 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.662413769 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.484048232 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.676178565 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.639915328 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.679773262 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.505139451 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.570549269 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.599425757 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.595959754 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.585820053 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.760159056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.804556965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.514310541 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.753626249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.495098714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.780720679 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794863739 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.67007775 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.616563265 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.478876989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.471144866 seconds)
  done (took 19.485290573 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.566670595 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.764952173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.804586081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.517348557 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.765524254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.494967594 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.765980577 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.78578584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.670393757 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.622593031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.477528905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.47197136 seconds)
  done (took 19.487658807 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.465667578 seconds)
done (took 74.102572382 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.489739661 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.55425943 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.496357886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.469195502 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.467815606 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.468613076 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.470613145 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.468910105 seconds)
  done (took 13.231374944 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.46765391 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.467148336 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.46694188 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.467581329 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.467052829 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.4662318 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.468976329 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.467752642 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.469722701 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.467963812 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.467658629 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.46835271 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.467582707 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.468779629 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.467958584 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.469041233 seconds)
  done (took 24.832732009 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.470111439 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.468724232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.466099875 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.467802623 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.468421375 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.469424006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.471485036 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.468829105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.468815658 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.468866969 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.468808149 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.468760913 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.468318869 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.469989485 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.468787688 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.469664953 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.469350604 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.470637769 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.472886859 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.470072292 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.469296931 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.46819022 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.468494109 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.470760753 seconds)
  done (took 36.61093915 seconds)
done (took 76.021539481 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.469336729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.455207032 seconds)
  done (took 6.273437483 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.526812904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.529571199 seconds)
  done (took 4.408016526 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.471349409 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.469782214 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.470413861 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.469794317 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.470328249 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.469542067 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.471248118 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.471974573 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.470073682 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.469916782 seconds)
  done (took 16.054466974 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.471802422 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.470425754 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.469212378 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.471039689 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.471160484 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.471263619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.470564159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.470766454 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.471479645 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.470824186 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.47098065 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.470985852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.471641814 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.472151201 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.471839947 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.472418781 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.470660721 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.473129904 seconds)
  done (took 27.83319609 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.48572423 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.491023476 seconds)
  done (took 4.328037139 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.600969381 seconds)
    (2/7) benchmarking "second"...
    done (took 1.514718804 seconds)
    (3/7) benchmarking "month"...
    done (took 1.578027176 seconds)
    (4/7) benchmarking "year"...
    done (took 1.568236971 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.513658372 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.494473774 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.514624631 seconds)
  done (took 12.135312312 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.466270682 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.759057086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.944959377 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.635722158 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.456945757 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.478343206 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.456300943 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.478467222 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.480872736 seconds)
  done (took 16.509014349 seconds)
done (took 88.889793975 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.457186111 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.486340347 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.50754585 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.475980229 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.770930835 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.504191717 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.460270585 seconds)
done (took 18.016338964 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.446436912 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.445357741 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.448384736 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.47565688 seconds)
  done (took 11.168825394 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.460646307 seconds)
    (2/2) benchmarking "read"...
    done (took 1.78839417 seconds)
  done (took 5.602405714 seconds)
done (took 18.125244895 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.475489309 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.475667853 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.47498638 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.475458271 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.474613524 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.476084807 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.475118562 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.474835785 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.475053503 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.476073363 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.474939505 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.47504453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.475637025 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.475055682 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.476320506 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.476045807 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.476274418 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.477316135 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47521186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.477042283 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.476544983 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.477847732 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.475806138 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.476975919 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.477012056 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.477637157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.476398876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.475702548 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.477719127 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.476890965 seconds)
  done (took 45.63543986 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.48072871 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.483900673 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.476123566 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.476691519 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.477165042 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.477476017 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.477425067 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.476933336 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.477207168 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.477019542 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.476572145 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.476598212 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.477055068 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.477632482 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.477172166 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.477198122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.477920103 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.477024178 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.477028235 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.477521912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.476976357 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.47872773 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.47745521 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.478076741 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.477631723 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.477582538 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.477495216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.477919891 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.478149003 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.479409734 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.479209699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.477774514 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.479050119 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.478943009 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.478264424 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.47745783 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.48290217 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.485920083 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.478525544 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.47897684 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.480076826 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.478644954 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.480352043 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.480021295 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.480408012 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.479071081 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.479970622 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.479535145 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.480797208 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.479800502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.479872241 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.480428432 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.481244906 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.480732573 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.481061479 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.481111037 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.480760175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.479815208 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.479654172 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.480036683 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.479964793 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.480053112 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.480029907 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.481091115 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.480975179 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.4805204 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.480757279 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.480403892 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.479817039 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.481017236 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.480170483 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.482221469 seconds)
  done (took 107.858264598 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.481072141 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.481866206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.481494038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.482465636 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.48188666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.482007266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.482031527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.48179013 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.482182133 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.482119371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.48062729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.483244748 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.483086263 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.482815026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.481555063 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.481499403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.484068788 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.482895858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.482304197 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.482843953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.48238007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.483415119 seconds)
  done (took 33.970385957 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.481964704 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.48429822 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.481582618 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.484611991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.484989455 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.483317697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.483447395 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.484027828 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484268767 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.48317871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.484027773 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.484522156 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.486317485 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.483621342 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.483088324 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.485972349 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.48222057 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.486594644 seconds)
  done (took 28.073353549 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.485135351 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.485038651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.484762057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.484845831 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.484125121 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.486008301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.484143285 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.48528304 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.484190484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.485272423 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.485442198 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.486012333 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.486793435 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.484386661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.485108694 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.487110118 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.484704776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.485624154 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.485283045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.485866496 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.486799178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.486109438 seconds)
  done (took 34.041089215 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.486311734 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.48626955 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.485325529 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.485836731 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.484709376 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.485606617 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.48641732 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.484873828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.487480102 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.487382192 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.486277641 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.486220227 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.489005141 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.487867525 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.487305074 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.486070809 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.487376729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.487424386 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.485981798 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.487256647 seconds)
  done (took 31.09533872 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.48813249 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.488928449 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.489161401 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.487701716 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.488250368 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.488795735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.490689445 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.48933836 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.489808653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.488963239 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.488323345 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.488440312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.488405078 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.489707375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.489236937 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.489984576 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.489864404 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.490039151 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.488978947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.489640795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.490730704 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.490578569 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.490271584 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.490092996 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.489864909 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.490865624 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.490837537 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.490870222 seconds)
  done (took 43.072372861 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.50970869 seconds)
    (2/2) benchmarking "in"...
    done (took 1.508077629 seconds)
  done (took 4.38437416 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.490010886 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.490146863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.491129812 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.49030705 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.49117564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.491439526 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.491049268 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.490818945 seconds)
  done (took 13.293796811 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.485424756 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.492173768 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.491272334 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.491770734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.491718322 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.483774774 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.491658766 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.495019607 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.485852843 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.486746081 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.490357074 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.491868251 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.487217877 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.486157125 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.484766 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.490770592 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.495054141 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.493470572 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.493353867 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.492721531 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.493734279 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.489205027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.490474829 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.495330213 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.486728921 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.498159322 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.494437554 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.49699909 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.486172958 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.493104086 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.488221185 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.496621058 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.494697463 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.494352435 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.492833665 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.494508443 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.496390627 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493435773 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.496422288 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.50003528 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.495524298 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.493729755 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.488976504 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.492009694 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.492208111 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.498585459 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.495870895 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.494857666 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.486658093 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.492442015 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.502001703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.488359623 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.497180405 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.494114586 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.492159342 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.498607591 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.503051502 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.491704856 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.496902579 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.500220072 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.507774993 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.50536441 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.49776519 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.499924648 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.49676818 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.503344986 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.501276357 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.503263094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.499048935 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.49734091 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.498440378 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.51154472 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.508740191 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.501874622 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.497636687 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.497082098 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.491022145 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.500474624 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.499615182 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.500420567 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.502729524 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.498370818 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.497926179 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.502092003 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.493535165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.500882935 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.498229051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.498261547 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.490740718 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.50434784 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.506086628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.498812583 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.492033803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.494050226 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.49638314 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.501111693 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.492372675 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.496945766 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.502994715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.500861336 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.500631798 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.494723881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.502268694 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.505457208 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.501540194 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.502882541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.505610301 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.493628458 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.505250143 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.507182483 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.50172937 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.49315588 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.500021146 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.504332835 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.495988204 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.503145211 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.5059296 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.495600033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.505822599 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.502270929 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.500257157 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.51147025 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.5074485 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.502444515 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.497560826 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.509083154 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.502871961 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.500230213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.506809479 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.501369552 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.50221989 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.499363196 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.50808809 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.497244442 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.507863566 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.497977157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.505914211 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.50305452 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.502845452 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.499667005 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.502678474 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.501288739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.501591934 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.504820972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.509118023 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.49945486 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.512181865 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.50332903 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.50260595 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.504155172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.509029786 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.503605335 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.499356065 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.507446466 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.496352215 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.505493906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.498719901 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.507029498 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.503351719 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.505401123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.503866649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.496462653 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.500567547 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.508262515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.50470966 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.503536902 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.508280645 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.504863598 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.504974349 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.498517034 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.506081209 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.495355279 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.502660592 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.51129386 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.505160163 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.505233653 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.502871558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.511178408 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.506523816 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.505892125 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.500892042 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.5072624 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.510956935 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.507952492 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.513914034 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.507309074 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.506089636 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.501332489 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.50322922 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.509673317 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.5014904 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.513212345 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.518324749 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.521692629 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.502837898 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.51186922 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.498958851 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.510581301 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.50640926 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.514091622 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.508028125 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.507402789 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.501561914 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.511518166 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.502535595 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.510719685 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.498909963 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.510308716 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.508931732 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.507238003 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.508879431 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.502479686 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.507838845 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.512145673 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.507739971 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.507706651 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.500501559 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.512071476 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.500147138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.50533687 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.511895842 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.508189657 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.51110284 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.515832804 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.506472998 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.51044856 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.510514016 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.505145601 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.511351736 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.50733475 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.508915325 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.514449075 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.511368139 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.506547029 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.516074742 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.510073592 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.504257404 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.510149214 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.516496283 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.510003472 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.504764318 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.516323159 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.511857566 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.510922611 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.50962036 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.503201504 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.515505183 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.513687956 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.518143152 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.504412322 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.514365517 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.505507433 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.51398891 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.508227906 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.513540626 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.510888382 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.515693561 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.518268664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.512166394 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.508488512 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.516033268 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.512319439 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.511651401 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.50554282 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.518951527 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.513110944 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.513000238 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.513261175 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.511484637 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.516193675 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.508110586 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.514482509 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.508527114 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.52814586 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.533064997 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520821722 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.516479225 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.516498502 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.516432999 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.515528581 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.509390061 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.50890974 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.512771634 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.510779131 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.510249661 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.516951396 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.508885358 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.517625533 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.513362066 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.514647473 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.517920595 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.515113235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.509070031 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.517977799 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.514450481 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.514210007 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.508118371 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.516128266 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.512618827 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.517880779 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.516293476 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.511357462 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.521875609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.518982552 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.514268016 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.515708114 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.512654086 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.509838666 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.5133048 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.520779009 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.510901276 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.523654848 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.511089767 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.518951846 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.514914815 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.523081042 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.525827021 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.51264143 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.522687702 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.516702071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.508161521 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.511702168 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.518894367 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.522048925 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.52769519 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.510349871 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.521988674 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.51736947 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.517577856 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.516985584 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.517366448 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.517158198 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.518084091 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.522355151 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.520598896 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.515242534 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.522127383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.525822899 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.517972767 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.517147968 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.511488525 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.521677777 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.52604982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.514671307 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.520853348 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.515396486 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.520294867 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.51761497 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.518625728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.518449064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.518494844 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.523268948 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.524405313 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.522431168 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.518206822 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.522845268 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.528635325 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.525513101 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.528374438 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.515984282 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.524681712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.519180082 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.514810778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.516478215 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.518866992 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.52173659 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.514723486 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.524162283 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.520680553 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.517352781 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.522223157 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.528083638 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.512386591 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.522854629 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.53221901 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.515066972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.524967964 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.521830784 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.51447633 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.52387892 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.522385545 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.513636972 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.518857772 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.522557926 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.530411328 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.516470949 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.524234936 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.51679842 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.52736151 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.524626081 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.523611143 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.52160555 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.523665718 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.515885066 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.523414147 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.52494713 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.531427288 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.517807359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.524074309 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.518254211 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.530545101 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.532577531 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.51874552 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.529984723 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.524599538 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.518316525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.521855264 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.52996775 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.519881278 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.526076922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.517083115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.522738232 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.522387837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.524890744 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.527099096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.529754198 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.518428766 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.51941992 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.52720952 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.525861088 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.524629352 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.521131742 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.532600381 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.517616861 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.519114636 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.526929042 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.520234468 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.530930672 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.520194786 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.526461926 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.523571269 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.530089473 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.526727133 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.528484493 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.519420597 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.520994508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.533587797 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.529411597 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.527764849 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.524695145 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.530580336 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.520930687 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.52561385 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.527623032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.521525749 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.521497591 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.532580719 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.521545634 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.522730523 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.522379696 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.531277964 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.529634292 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.527208858 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.519991628 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.5346589 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.53424632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.535172022 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.519748955 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.524359317 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.523583861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.530085551 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.529939098 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.520580803 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.536097375 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.532614407 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.532654256 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.526175111 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.526372706 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.52087868 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.533319294 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.530393896 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.525168815 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.536576999 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.525330023 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.536337943 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.528992014 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.528971168 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.519415539 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.522760411 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.52491807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.527124792 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.532806563 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.528733614 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.52926969 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.528537584 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.535372895 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.530532969 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.531749375 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.529520869 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.521629004 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.531350698 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.522296802 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.530962789 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.529269739 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.523821098 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.533589786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.53143235 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.524620318 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.529469408 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.537843591 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.530707128 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.522640719 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.529089353 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.535181187 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.538872487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.531794967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.52398126 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.53011411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.535640858 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.532432807 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.532082361 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.525238711 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.54435856 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.542570374 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.525307686 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.529783798 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.53741784 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.540210879 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.533966846 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.53108098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.527758869 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.531503118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.539679941 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.532873161 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.535502023 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.535891004 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.529457394 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.53666705 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.526455584 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.532295272 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.532330834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.541349483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.533151937 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.528441128 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.545839168 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.542107735 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.531072135 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.548963995 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.537497245 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.533250533 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.538133125 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.524705356 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.536450115 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.528862569 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.539169501 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.534068321 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.534116253 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.534094189 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.525402264 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.535846871 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.539670932 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.544300794 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.534719753 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.52657315 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.529611955 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.536405579 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.534722728 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.535342947 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.53441533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.534079006 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.534537227 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.52877235 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.550923801 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.551919877 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.540878528 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.536737661 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.535436778 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.535055837 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.538119713 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.534310413 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.541770948 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.536809155 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.535363963 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.534205112 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.544988703 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.538563423 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.530474847 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.531070918 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.531658893 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.540419128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.546395818 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.556104005 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.53846665 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.537240975 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.539647476 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.539253985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.532034207 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.54249124 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.538742278 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.53355245 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.533260129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.540958348 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.538040189 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.538925688 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.530267344 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.544946157 seconds)
  done (took 904.580128943 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.539678784 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.538884181 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.539296861 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.538582976 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.539318476 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539391181 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.538550049 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.539985679 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.53865056 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.539190029 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.539158701 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.539263259 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.540459759 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.538954508 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.538585562 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.539639763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.54018234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.539376698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.53976189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.53984586 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.540377749 seconds)
  done (took 33.734491965 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.540514639 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.541252843 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.5404578 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.540475301 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.541468054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.541593152 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.539534478 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.53979704 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.540900516 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.541000865 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.540836218 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.540686474 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.539727075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.540506034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.539175861 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.540900876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.541440347 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.540536986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.540401492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.54108218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.541155219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.541859712 seconds)
  done (took 35.303644839 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.542291007 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.541008318 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.532805611 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.544656647 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.540490266 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.541463668 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.543438914 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.542720514 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.542327694 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.534407773 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.534923373 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.536766393 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.538862851 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.549565808 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.538408371 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.548379097 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.542500411 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.543491754 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.544078524 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.542887761 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.54569131 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.550409193 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.542230032 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.534904465 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.544776691 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.543058173 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.542576142 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.54458028 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.535324043 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.546859006 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.542762845 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.536521415 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.544468748 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.542065768 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.538174604 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.547154088 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.542806818 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.543040089 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.54390538 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.542471809 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.555242091 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.543607628 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.549971782 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.552500517 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.544414116 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.539387351 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.551024928 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.544491977 seconds)
  done (took 75.471495227 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.544295774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.544267017 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.54479553 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.544973341 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.544823793 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.545545329 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.545574876 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.545041907 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.545012797 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.545230282 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.545379126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.54639938 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.546532802 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.545598879 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.546416359 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.546350857 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.545739702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.545839523 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.546376443 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.546966066 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.546410367 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.546087259 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.547404803 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.546428861 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.547932526 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.546011211 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.547555117 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.547626765 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.547708721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.547630484 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.548063015 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.546995618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.548027278 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.547788207 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.547222369 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.547616212 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.547300152 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.546768481 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.548932377 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.547829238 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.547054596 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.547198818 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.547869967 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.547988657 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.548301583 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.548863819 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.549313337 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.547735951 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.549506287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.549535691 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.548899643 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.548523701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.549104258 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.548243357 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.549274086 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.548525171 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.5492469 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.549618188 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.549521841 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.548740362 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.549086507 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.549948722 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.549889597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.551495048 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.548944253 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.550156777 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.549262567 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.550060367 seconds)
  done (took 106.646608147 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.549986591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.551111498 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.550240219 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.549844175 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.550824217 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.551348605 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.551464847 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.551584972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.551356403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.551725656 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.551342089 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.550343861 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.552497678 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.550825005 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.551600898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.552296875 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.551591405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.551398161 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.551968398 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.553442065 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.551137148 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.552533343 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.552699259 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.554148674 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.551736571 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.553010899 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.55310999 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.551867425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.553504329 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.554156477 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.552134493 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.552287334 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.552449233 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.554114529 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.553223615 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.55339758 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.553997909 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.552453532 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.553352992 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.55361845 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.554271547 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.553333796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.553173675 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.553016975 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.554419197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.553929387 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.55496836 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.555009228 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.55435689 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.554737725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.554883543 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.554824419 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.555338615 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.553445517 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.554650514 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.555013081 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.555987428 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.55476949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.555223439 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.556074718 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.555227937 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.55617451 seconds)
  done (took 97.709209822 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.554662814 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.555893654 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.55556982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.554540396 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.555140188 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.555702222 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.554094498 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.554793806 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.554283062 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.556032785 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.556664013 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.55634996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.554523878 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.556152519 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.557088166 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.557667759 seconds)
  done (took 26.312462317 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.555339054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.556227827 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.557761161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.556408104 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.556896514 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.556269683 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.554573194 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.556348964 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.558793085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.557525313 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.556561927 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.55635233 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.558435189 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.5570775 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.558571174 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.557870092 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.558036575 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.558528672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.556947347 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.557174226 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.558923425 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.558249486 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.557877723 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.558205282 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.559139181 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.558015708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.558273876 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.557732361 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.557176623 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.558891707 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.557416985 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.558512505 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.559195556 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.558907937 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.559946246 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.558315349 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.558674643 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.559470556 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.558440924 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.558652457 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.557877236 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.559470841 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.559991599 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.559980645 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.559444651 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.55875462 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.560418077 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.560332493 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.559433397 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.560055017 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.559906199 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.561838179 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.559859273 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.559788067 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.559666684 seconds)
  done (took 87.13410731 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.560586337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.560337303 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.560087681 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.560785983 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.56016598 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.560092993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.560110794 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.563224346 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.56095579 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.561419399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.560014608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.561929979 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.560087007 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.561602061 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.561028732 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.56108955 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.561348239 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.561780412 seconds)
  done (took 29.524612255 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.561325396 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.560984402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.562135675 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.560964267 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.562569289 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.562637293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.562851706 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.562103745 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.562503778 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.563334071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.562688693 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.5629306 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.562487905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.563297518 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.564005765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.562562341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.562517037 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.56350767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.564394555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.561700601 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.563387605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.563087545 seconds)
  done (took 35.805429212 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.553665362 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.553788162 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.553005274 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.568139222 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.564771188 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.555216234 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.553757501 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.55410537 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.57119316 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.580858939 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.578335669 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.562683727 seconds)
  done (took 20.178454809 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563852138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565027958 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.566384412 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564358958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565523137 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565487903 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564534277 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563860398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564124344 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564979108 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565155497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564905913 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564837343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564600552 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565315177 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565358317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565397305 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564781625 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56468254 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565721174 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.565956193 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565233344 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565141466 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566459336 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565753262 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566193315 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568009887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567127046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566955302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567479042 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567088235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56745183 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566047032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566599689 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567525993 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567382829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56781825 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566288899 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567283149 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568368152 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.568082391 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568535092 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567053655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567929144 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568183105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567534825 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568584675 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567236249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567340282 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567781143 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567856689 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568612109 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56680476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567340885 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569884351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568497923 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56886973 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568665598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568418936 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568466211 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570475484 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568688064 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568566868 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569019609 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568399974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570058741 seconds)
  done (took 104.845535426 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569843185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570008648 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568908736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568879057 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569431345 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570338636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569454265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.571420696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570239622 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569406153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.571520013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570636206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570351569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569238844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570469107 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569139704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570175046 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570870751 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571533403 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571825284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570337817 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570848614 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571787202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571953378 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573063338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571507308 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570532921 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570870448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572948222 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571471992 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572221498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57292424 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572368042 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.572834232 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572504447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572325725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57173464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57223427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572685891 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570680427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57273506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571988218 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571580463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572808244 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571497509 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573427483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573943027 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572153729 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572520039 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572297074 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573557418 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574265633 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573331844 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574363828 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574476894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572345794 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574927277 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573814871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573706531 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574209496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574498493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573786651 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57467773 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573699571 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573256661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57424117 seconds)
  done (took 105.187870037 seconds)
done (took 2005.212571878 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.562191655 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.563675467 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.569862742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.757234985 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.564860628 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.230786201 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.147235593 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.565103901 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.5653874 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.565096912 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.566033316 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.560870112 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.904643665 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.565526251 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.566270103 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.563504346 seconds)
  done (took 58.258153538 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.59741368 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.577010784 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.705084545 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.570380719 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.597483007 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.790606648 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.639557045 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.569807335 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.773497592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.573084115 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.571138989 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.59501495 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.570103126 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.565008881 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.591566625 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.7887197 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.862922686 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.57374592 seconds)
  done (took 33.953458302 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.102864459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.573568964 seconds)
  done (took 6.11748364 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.593617632 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.572292193 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.574321548 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.57126266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.563465351 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.563846744 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.569549155 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.571028595 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.563136596 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.717786853 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.57363329 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.586042539 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.608442337 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.572412017 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.581557592 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.620846316 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.705797374 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.581788146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.578694054 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.579317437 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.571998751 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.748858102 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.62114162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.582469477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.720059255 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.568814794 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.577439104 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.586933418 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.721373864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.582382826 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.573187348 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.572082502 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.574627447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.566706539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.134647375 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.579114197 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.605394562 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.581406047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.581013962 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.726995264 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.575484099 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.579440311 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.567540591 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.130476805 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.696507769 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.815130871 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.583608941 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.575469531 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.57479994 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.724459699 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.575578266 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.576418821 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.63709776 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.568820112 seconds)
  done (took 99.256708944 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.59135904 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.566551839 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.754489125 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.593366851 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.568040467 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.582864958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.567906824 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90789131 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.618494878 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569244486 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.919789069 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.262815202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.576758702 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.628695848 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.617598906 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.593820223 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.567769551 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.567312909 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.569755263 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.567415864 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.170525827 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582593112 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.570030164 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.724777094 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.612652914 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.174455365 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.581605202 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.568929729 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.573068828 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.569907908 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.227937275 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.571724224 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.630936382 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.571544571 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.885300501 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.023916068 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983433977 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.573536989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.597670512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.570203306 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.605631679 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176491198 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.00515644 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.573202949 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.572126079 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.179873753 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572428589 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.571944003 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.570062944 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.846443098 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.572326246 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.572676355 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.58546011 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.571785479 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.571468725 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.630640665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.613519563 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.179150528 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.571600539 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.57148793 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.594428162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.575055166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.573771765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.578826225 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.572978268 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.010745907 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738843986 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.573365335 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.008006596 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.225022772 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.572995283 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.314987995 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.577765822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.577361234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.649472124 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.586009045 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.573600476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17198681 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.610853605 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.572802312 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988624195 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.573562224 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.90734179 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.592354954 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.57434224 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.211165144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.583254418 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.634802131 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.574106663 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.574304251 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.574352492 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.577626836 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.891968447 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.596736228 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.573413256 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.574763572 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.606970222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.573681397 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.574407711 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584192557 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.321751008 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.58917695 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.575759318 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577853744 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576315421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575512996 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.576356445 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.578016433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.8597639 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.575036511 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.594926676 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.59301999 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.577088192 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.585835112 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.73049374 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.578886194 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.94573487 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.577645897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.585293728 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.576002247 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.575918952 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.641656777 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576450029 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.584727751 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.531842017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.896727269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.605808112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.577825199 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.579637106 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578145804 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57678007 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578208651 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.60873749 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.580262488 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.440260883 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585354777 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.592545319 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.577610951 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.582016743 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.577691242 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.578503948 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578313912 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908931632 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.896663867 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.77014522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.578954825 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.579015705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.43532507 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.628781426 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.766503408 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.59929022 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.578657125 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.885169682 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.763483118 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.581517826 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.579457235 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.579367746 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.869606047 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.58018848 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912665483 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.254711605 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.578811063 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.585904665 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.431772239 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.330681951 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.58104953 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.583655539 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.909504495 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.598986774 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.580126103 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.580829235 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.580928725 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.580621789 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.585705877 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.579588708 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.579685777 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.581690625 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.693640548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.780529753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.598198921 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.589171616 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183800888 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.585963923 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581908027 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.583416455 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.584225619 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.581522057 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.605305044 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.583628221 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.632050037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.582806156 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.591201701 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.216448522 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.582099808 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.584182738 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.779509784 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.399347003 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.582852213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.582423541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.582850057 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.611684428 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.213601725 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.632122983 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.95250049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.583259871 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.62634538 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583014713 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.628000973 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.213022356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.584446373 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.584539433 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.388780912 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.594972745 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.275996145 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.583382454 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.584993157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.324085992 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.587143664 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.588958189 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.585149683 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.585364083 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897426953 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.584591528 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.614060718 seconds)
  done (took 555.155595063 seconds)
done (took 754.180255669 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584371496 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.586328188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.594917612 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.592617981 seconds)
  done (took 11.819444827 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.600879605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.590724576 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.600060494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.589862493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.600817403 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.589751957 seconds)
  done (took 11.034653799 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584196291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.587112934 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.58964961 seconds)
  done (took 9.220793054 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.829612781 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.593573915 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.003798041 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.599148695 seconds)
  done (took 10.488148436 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.599623741 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.60020745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.601239252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.601823823 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.603026724 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.60262281 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.602016577 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.601094013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.603562278 seconds)
  done (took 15.87780356 seconds)
done (took 59.902568128 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.667678453 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.66934357 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.588150896 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.630603921 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.730383691 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.672807106 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.676150895 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.678990235 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.675943749 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.626695457 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.671577522 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.621025221 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.669279584 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.799617743 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.625855546 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.670456947 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.619200744 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.766308401 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.675970818 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.62799636 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.694307164 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.626410601 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.627383795 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.628124922 seconds)
  done (took 43.402197037 seconds)
done (took 44.864719726 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.617862622 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.690163394 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.596315716 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.596742791 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.598928035 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.588741291 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.618857957 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.598580078 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.6104675 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.612660113 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.590261516 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.607999461 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.61200598 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.609994395 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.630972119 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.598593559 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.598536134 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.608385547 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.613315923 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.614997398 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.600033915 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.600781504 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.624887739 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.598020213 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.606864857 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.60663593 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.605471267 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.595796425 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.606663781 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.61400564 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.603963556 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.604801532 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.615004754 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.610622786 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.600857612 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.609785803 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.601528999 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.693426036 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.620634697 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.611877392 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.608095072 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.616602382 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.604785583 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.60347921 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.613295666 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.627232692 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.608127299 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.615330659 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.604535362 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.605059005 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.621412012 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.612884867 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.610055538 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.607196956 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.602740517 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.616428538 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.611492163 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.621233651 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.608426186 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.603590288 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.635031074 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.621973999 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.612889166 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.608696124 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.608389198 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.616241756 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.611151178 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.618500796 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.610107872 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.603328279 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.603608763 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.611124432 seconds)
done (took 125.496698298 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.725235874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.599525658 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.754082125 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.609782427 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.769909509 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.727263113 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.610508192 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.611860303 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.609840182 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.407595508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.609931899 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.611558338 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.600677678 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.610277134 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.726643535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.611012877 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.610439857 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.298150603 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.612428543 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.741470845 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.60166154 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.611372422 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.612463006 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.403231769 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.602539227 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.59771548 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.743104427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.612202604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.305604998 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.5981912 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.603766206 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.301849791 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.744965833 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.62977396 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.621257852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.620530451 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.774024587 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.614556718 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.728661222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.728421058 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.757978846 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.650317583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.599506356 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.600739001 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.614669465 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.614945245 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.614301371 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.641535044 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.601893061 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.612797701 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.301700885 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.622412169 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.613457593 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.6152044 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.614683974 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.644204802 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.613108303 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.616186885 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.746339559 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.614801302 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.729782581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.408270369 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.412693612 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.614176845 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.607053567 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.613978484 seconds)
  done (took 126.682487308 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.673793141 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.680725606 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.728799594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.606762465 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.657147765 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.727662235 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.607179334 seconds)
  done (took 13.154256426 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.611982951 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.615267211 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.6553786 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.655577373 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.615081125 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.780274336 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.615808144 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.618501438 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.614833329 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.657107108 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.61642009 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.616363122 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.625076058 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.607550173 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.653098029 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.619635793 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.727089151 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.608870919 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.615882952 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.764815202 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.616493189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.625830818 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.660212701 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.620390621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.616690818 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.614868434 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.367069889 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617946806 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.617123486 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.617632042 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.617398201 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.676489174 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.617589941 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.60790778 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.616134013 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.72494262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.616349527 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.618309406 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.617034249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.610003927 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.619300117 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.616432637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.617773302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.618755965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.61731817 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.633699868 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.618544488 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.617513522 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.618389074 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.619400733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.659056819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.617927118 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.618115484 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.617758438 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.663258493 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.629564373 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.617830569 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.619351265 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.619530665 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.619787494 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.764947026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.658058891 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.619649602 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.657139485 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.61788718 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.61959315 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.620541362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.619655262 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.703654716 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.619294183 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.66162105 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.619480532 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.793205421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.635536228 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.621064633 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.61472 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.615484932 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.620237416 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.608206969 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.617400779 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.619642586 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.613892796 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.61881401 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.622071694 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.621657884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.771280059 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.722867024 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.620874773 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.628578798 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.619078301 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.622864686 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.663933395 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.622839731 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.623415345 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.662903647 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.731143831 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.665031403 seconds)
  done (took 165.10508741 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.625781495 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.626419466 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.61788587 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.640324232 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.613759979 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.61309726 seconds)
  done (took 11.217578186 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.615564453 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.626184572 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.623438353 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.624561461 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.623995255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.623399302 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.624763241 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.617103459 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.627000899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.62551631 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.623630119 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.627160836 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.624923198 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.626391515 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.625000855 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.623978516 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.627033458 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.625010447 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.626341511 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.626622385 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.611926601 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.626745296 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.625488262 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.617193283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.633851668 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.625016532 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.639486275 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.626457185 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.624519798 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.624971419 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.628917588 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.62780198 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.618613151 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.62154876 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.629394675 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.620149681 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.629956828 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.629422872 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.626551384 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.626565715 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.628883095 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.627152116 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.626857888 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.62932848 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.619613993 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.622112987 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.63222107 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.642971708 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.628787429 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.628649562 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.629585374 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.62768292 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.626643328 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.628507156 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.622952821 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.622095046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.631011796 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.627301899 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.628812324 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.620694695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.631181062 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.629117157 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.621631617 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.633640817 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.626897046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.629807735 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.621728675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.63297525 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.631579243 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.629334002 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.631751415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.630189547 seconds)
  done (took 119.587828785 seconds)
done (took 437.215936451 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.168408343 seconds)
  done (took 4.654059087 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.725237037 seconds)
  done (took 4.212084509 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.415566449 seconds)
  done (took 25.907175878 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.649262709 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.620461208 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.644771803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.619021792 seconds)
  done (took 12.020162362 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.211971818 seconds)
  done (took 4.700890334 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.627101614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.644034513 seconds)
  done (took 6.762627217 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.011173661 seconds)
  done (took 4.500494737 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.355474815 seconds)
  done (took 4.849271554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.640582394 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.627943407 seconds)
  done (took 6.765589088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.602370684 seconds)
  done (took 4.091552814 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.017342378 seconds)
  done (took 16.504676931 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.645707684 seconds)
  done (took 4.134281075 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.623988744 seconds)
  done (took 4.111072203 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.712982701 seconds)
  done (took 7.200300536 seconds)
done (took 111.900609968 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.617095611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.618272602 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.618114798 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.617891902 seconds)
  done (took 11.958475182 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.694475362 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.693281118 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.70348217 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.68865358 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.689071553 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.698330771 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.657123723 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.656136574 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.685879055 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.682505151 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.69732738 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.690344489 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.696317583 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.657948965 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.682619635 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.698735057 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.686193074 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.703755503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.657166444 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.690797141 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.632037081 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.691053155 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.684052909 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.633687461 seconds)
  done (took 41.839808914 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.1215883 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.695267027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.779532638 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.676076007 seconds)
  done (took 8.760118446 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.736749437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.737925632 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.757737114 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.792871444 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.839925886 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.750260939 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.659371036 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.655090902 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.639656084 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.737432249 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.810522958 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.737767855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.955790577 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.634323108 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.953392058 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.633725029 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.633551623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.739812684 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.787764249 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.817414273 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.634553197 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.735873675 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.746252169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.738169604 seconds)
  done (took 43.35527892 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.643432591 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.651630264 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.636072309 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.635829279 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.635813296 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.63905843 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.650085818 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.637620035 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.642929584 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.635416905 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.635606093 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.637864602 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.649093193 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.637583412 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.637195355 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.643317046 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.638734295 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.643186361 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.646419682 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.636814404 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.637380237 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.643897804 seconds)
  done (took 37.586760022 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.623191067 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.624515514 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.975239654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.876295937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.624077033 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.629874327 seconds)
  done (took 15.845944519 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.71239837 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.86047149 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.629518972 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.053785336 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.138568398 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.630226736 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.630928704 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905155796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.275630619 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.302290832 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.678524317 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.708892536 seconds)
  done (took 24.020569218 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713840879 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635076971 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.63393801 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66218443 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63379654 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.634500406 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666673894 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163290521 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.638058463 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909740191 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643712874 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7156621 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881955711 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63675757 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634525508 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.609112963 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869938393 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224968529 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637942514 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635522417 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666144289 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646347778 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636226915 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875557119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.636646933 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635598732 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.897457848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634466311 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970160621 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943785547 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944323254 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637306837 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909952153 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133151588 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740677085 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873444231 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650655153 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636091031 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.622773102 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.635935278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636130226 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637518467 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943375495 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638869908 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637100812 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635067082 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176638649 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.643284131 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.636712806 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.637691446 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947347109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740506843 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.642643687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637859458 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715940825 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638320744 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.642086866 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756354211 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279497734 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637403384 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640631355 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.64255201 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.627988053 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651975355 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364060272 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.646610038 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.643704584 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645448647 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638644209 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638307124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659855653 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638213847 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.657596566 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63840838 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502392312 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654438373 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639625875 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28075772 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642037432 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.642200371 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863494687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639150791 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639676115 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.639505409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637979604 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.544763669 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646306314 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.614916623 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67138936 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170744666 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880781654 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662036881 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668333778 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.861214652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.614479619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639692937 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.651560257 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643167548 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660997101 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175299155 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640034953 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.645838796 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889559813 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.851707902 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640357698 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.626135914 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184394098 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644711254 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.667404334 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645123153 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891839161 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.349162265 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958924801 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644747254 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676294046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.640876513 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.602180451 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648301704 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.648059721 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659342983 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954987679 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.618272141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642522501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71577052 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652237788 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.640510739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641363213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644087713 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641657949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.873540116 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664516362 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957682944 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.645633979 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643233584 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.657791462 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644776116 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.644349513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864982347 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649029598 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917719456 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642587553 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645936319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645454006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.862093283 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.655498388 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.651147411 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982814077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642645124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649497999 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959503189 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679676173 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757793633 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678779064 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.645515542 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90043502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.650745649 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.651142527 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645325375 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648097873 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648740207 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.653827431 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644083412 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35282585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620810848 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.65178748 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647409177 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.662877278 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719828275 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654194772 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892870815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.655069964 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637593998 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.653935481 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.660759322 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868906679 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95658888 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.648894941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821378706 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.18091546 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354662584 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662441667 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.646577767 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.644479754 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.646635552 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647217186 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6454641 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647622957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892396007 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968760235 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.645309587 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356520603 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651288461 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649926002 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.654336854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958247329 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.655592794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648737375 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.647161763 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648640737 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670185069 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96382576 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869353574 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.663592302 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.648732484 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.21043522 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656361122 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649448946 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.649542513 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675535816 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650569576 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262093556 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989969324 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640910304 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982911605 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650932283 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.666305803 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.649460976 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666535999 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660278927 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.670321747 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658089465 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.896245733 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660111069 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65245089 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288992276 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554602199 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.302084462 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660785035 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.657973373 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656241173 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18906103 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650039206 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651607207 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929515493 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190928541 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650720173 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186748374 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.653831336 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.552523732 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964281212 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879945336 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655761527 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.670964167 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966667234 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863923728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677917535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653932042 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657563319 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.629106473 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26131265 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657460648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832365227 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189322341 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671162962 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653295588 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.6879268 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662279294 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120557939 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653117956 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651973214 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668725438 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658018086 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264565706 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658379259 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652900728 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385694006 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.666541177 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.201760541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651998733 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.898451225 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96985368 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.950501769 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.666159583 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.657874589 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.898687015 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968313238 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655245877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671935501 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306746648 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.524875148 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.661476775 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655220746 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.618906092 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665766959 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998009145 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.656985016 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.66092037 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662447311 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655751962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656408969 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.655463529 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663493557 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626896921 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245660467 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.677398567 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656163444 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663156004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663164826 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904304656 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.673621618 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366295992 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884558935 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647449878 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689762928 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.662491203 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656619717 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.633132313 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656762312 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655593795 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647662301 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879350499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.657052609 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.632242815 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.71710276 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867676069 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656988478 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.657073168 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911384186 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.659857314 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.67992066 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564289956 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690634016 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656744891 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658306662 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65156794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712081859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731777348 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901507087 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.974785219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.973553778 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127736298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659348718 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662351233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.675815589 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744594747 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658931423 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.660963472 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.65945086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370136818 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537465997 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375603444 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976054514 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.660443357 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66942839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659231916 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901173902 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659098115 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9350563 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660948749 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.668594717 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683272494 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661459879 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665739821 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877659771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93494383 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660637319 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67585 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667829924 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.66041908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980857133 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.873255616 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256498715 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309416852 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664662257 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669444709 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210805505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936817827 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660304163 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661932551 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661063183 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.662986175 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674608236 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.668605104 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664107773 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888306377 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976151837 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15783344 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975710035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.691747771 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.536274499 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662120651 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909703773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504033388 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.913274955 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383653925 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493146994 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917077262 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737919815 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912165769 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.670374915 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899722991 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.675205979 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662520853 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663416009 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664654529 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.6631159 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977931928 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378017603 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918722103 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.668665418 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.674966814 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692468235 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.914751248 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891782351 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572348697 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88709687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984445537 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.675047852 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663579947 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385560689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982910549 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666059351 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.669673775 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92613053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676080431 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700570482 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.541285791 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.665814237 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313676023 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.879827104 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684272272 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681500351 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503843558 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385331642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.668541255 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25987657 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669862455 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673836183 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942457889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.673821383 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.66732135 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96224712 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.671327423 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682587394 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928029331 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.385305814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.57467373 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.673517931 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669923799 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.669401311 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668441921 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713241667 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670154741 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677143766 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.142699432 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.672946655 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669452246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681734133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.682635402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678455152 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.674016149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667824866 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.675719111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.652641951 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.646141299 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.670033455 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817046532 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289311655 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668422288 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.2817553 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.00711588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916844043 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.669395314 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.651963287 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.674447416 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668934414 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669967527 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669294655 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.660754232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319738003 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.683436818 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.990541533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675964483 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.882125214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882124645 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671458822 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924285994 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690288716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69680376 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.645911044 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671599958 seconds)
  done (took 1120.242417222 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.706524356 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.719475711 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.717634568 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.752641354 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.720381161 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.735844698 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.782932577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.734160951 seconds)
  done (took 23.394891943 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.667690253 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.670552294 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.664667327 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.671463909 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.673740918 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.20672657 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.66254344 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.672826295 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.689475046 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.668698137 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.667115889 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.411546385 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.678009521 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.68608866 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.68070223 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.679429305 seconds)
  done (took 37.587312727 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.835326925 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.861009907 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.249221395 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.756435707 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.701906418 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.667485368 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.060798178 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.686386177 seconds)
  done (took 30.348511611 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.678665282 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.684571456 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.685849502 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.688210208 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.687928311 seconds)
  done (took 9.955449416 seconds)
done (took 1406.38270582 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.682271922 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.683509414 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.681584222 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.681850723 seconds)
  done (took 8.25892432 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.650887598 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.661399227 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.662931094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.671269705 seconds)
  done (took 11.177022171 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.128542442 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.325026328 seconds)
  done (took 5.986774476 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.678663455 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.442567674 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.437590917 seconds)
  done (took 9.092167775 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.004151279 seconds)
  done (took 3.538141744 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.072545663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.184474065 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.669374982 seconds)
  done (took 8.463769869 seconds)
done (took 48.04938699 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.670746942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.438153789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.827009678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.685243063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.874278096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.824367668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.961149419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.674365445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.685050269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.669178135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.685468789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.867778155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.945646503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.440163351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.94893319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.437960301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.835101944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.687230432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.671091972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.679561528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.963671333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.681328082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.689470055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.671612406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.851505299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.815886916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.679702038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.447828081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.685918035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.68294769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.823061461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.673743114 seconds)
  done (took 92.710927668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.673668356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.699100548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.680995014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.676264089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.69442825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.673928355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.674093917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.673991533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.680093083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.672415271 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.673594068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.679944811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.672994113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.674288735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.67396092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.6744353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.692567943 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.673731893 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.689803442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.67465025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.678468193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.674930444 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.688373383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.673806946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.674862985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.675669446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.674770137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.675076086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.674623027 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.68660914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.675488844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.675536091 seconds)
  done (took 87.246423457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.674487067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.677917022 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.677833576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.708553842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.674534256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.677159311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.698309933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.67669148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.684719986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.680462055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.69456647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.67535537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.677456433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.677733106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.684798102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.676536839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.683851032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.684578957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.675689053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.694776052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.676446781 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677623993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.681446227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.675434394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.67681812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.680090394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.676406557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.692352858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677866007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.682979095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.677080326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679834814 seconds)
  done (took 87.350221729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.917766524 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.694143841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.694554418 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.689141891 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.699460733 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.69409184 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.690015557 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.923646945 seconds)
  done (took 17.547010916 seconds)
done (took 286.39090816 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.690150014 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.694443458 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.722123551 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.701657135 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.706521191 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.719881377 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.929022999 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.715325239 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.915282232 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.705327632 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.706322761 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.690510033 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.650699766 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.844350557 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.688911609 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.69174423 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.683812196 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.682451715 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.698694374 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.943633408 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.719691845 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.696926001 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.698280696 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.713581725 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.674535994 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.765176586 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.767204737 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.856527908 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.819866372 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.768460454 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.700003651 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.691787478 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.698795568 seconds)
  done (took 76.893576048 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.690154495 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.69693415 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.698385304 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.699125386 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.696642873 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.699726456 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.689660956 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.697172558 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.698227731 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.696809488 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.698758672 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.700081766 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.698833432 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.69724328 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.697855004 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.677208858 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.690503006 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.696763275 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.691375836 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.678968465 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.69762542 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.698381975 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.703427397 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.701119888 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.702672054 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.703844506 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.702413985 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.704953406 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.701927668 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.712667563 seconds)
  done (took 52.465481523 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.699400308 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.695466692 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.68498655 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.700166534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.694641934 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.698276998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.047901212 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.699321523 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.69692581 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.697552382 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.702424055 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.702517128 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.750188059 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.690748979 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.69572287 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.700143285 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.700315723 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.693473674 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.686011653 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.710256567 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.056117191 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.701866342 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.047170502 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.710334498 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.700689535 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.694399734 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.70054253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.689039454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.697885444 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.701391923 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.647322719 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.04844639 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.688425093 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.68794315 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.632270758 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.712095609 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.705540598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.689873267 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.698948874 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.697084441 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.045284011 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.697771201 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.688673579 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.691181612 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.698409983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.705405298 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.689243745 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.730479806 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.994728383 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.701450047 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.687773412 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.699403139 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.705947636 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.699707479 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.994767693 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.699627793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.69671532 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.688678515 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.702503213 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.049531062 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.706452844 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.698383184 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.711533896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.699380296 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.704927168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.699015446 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.712392387 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.699171645 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.692676012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.702088875 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.694308895 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.700844344 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.705200829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.706584945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.702629294 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.691164825 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.722377578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.692098822 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.718003091 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.048215082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.705377545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.708518533 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.061788993 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.702918437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.710653632 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.710343479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.709652004 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.77949855 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.050619954 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.654165701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.71229984 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.694211548 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.052914415 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.709294833 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.704521624 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.69676333 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.708411644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.709587431 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.694479147 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.694426165 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.70095988 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.715696126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.694948621 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.704944117 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.055798636 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.707168232 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.69464902 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.703087291 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.781182936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.711734612 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.717169367 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.706478584 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.064241356 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.707480114 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.712830926 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.697689259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.698656151 seconds)
  done (took 243.423024215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.70029115 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.698369677 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.700380083 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.696618606 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.698877266 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.706936561 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.697159659 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.696821817 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.701555994 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.697734747 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.698652795 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.706449866 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.704944073 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.69765928 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.698978041 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.696579059 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.697355968 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.712748107 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.698545281 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.698219309 seconds)
  done (took 51.559975373 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.711251071 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.383070163 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.357557934 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.713773836 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.715133777 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.70812866 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.774170797 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.714042886 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.711166187 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.068237429 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.91803701 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.712627545 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.714841829 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.713739477 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.35891874 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.713525191 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.071416436 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.383679229 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.71567614 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.384023521 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.714977666 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.716003242 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.706523732 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.385653268 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.079437684 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.055410753 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.775960319 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.386899919 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.715741491 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.715511179 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.388054221 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.715454476 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.710350843 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.382220003 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.716350271 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.732973836 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.721329215 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.780578264 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.780547342 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.074696708 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.39557034 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.069387099 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.727302517 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.898239202 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.719801629 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.693396758 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.397373271 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.717774483 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.695763493 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.719317999 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.725249761 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.376106831 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.708877331 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.376759001 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.718680746 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.717799143 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.391456656 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.373735215 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.36503313 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.920561257 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.709307236 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.062284691 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.716379038 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.402799297 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.718376629 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.719173893 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.717671222 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.927271377 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.389934913 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.061789891 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.075475499 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.077364539 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.717885944 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.79136122 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.718467893 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.07824835 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.790791819 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.154861354 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.082368219 seconds)
  done (took 154.976837035 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.024475896 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.820980735 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.153425378 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.345301016 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.278896223 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.87102832 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.841633355 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.980731911 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.718779489 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.821169997 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.485006454 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.817109477 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.534212103 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.787180922 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.831300306 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.846931011 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.177726944 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.720029184 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.439407842 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.457126928 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.716654915 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.830679739 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.527967147 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.128060415 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.725096621 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.54243081 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.708606539 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.300200958 seconds)
  done (took 63.995408587 seconds)
done (took 644.855343426 seconds)
SAVING RESULT...
DONE!
