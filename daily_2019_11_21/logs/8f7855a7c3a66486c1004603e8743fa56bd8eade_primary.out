cset: moving following pidspec: 30747
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.336628368 seconds)
loading group "string"... done (took 0.620295206 seconds)
loading group "linalg"... done (took 7.224914245 seconds)
loading group "parallel"... done (took 0.155714115 seconds)
loading group "find"... done (took 1.149368847 seconds)
loading group "tuple"... done (took 1.790233894 seconds)
loading group "dates"... done (took 1.312662884 seconds)
loading group "micro"... done (took 0.219899813 seconds)
loading group "io"... done (took 0.9544194 seconds)
loading group "scalar"... done (took 37.646575084 seconds)
loading group "sparse"... done (took 11.850542925 seconds)
loading group "broadcast"... done (took 0.930319664 seconds)
loading group "union"... done (took 12.136559824 seconds)
loading group "simd"... done (took 4.415760433 seconds)
loading group "random"... done (took 9.083736882 seconds)
loading group "problem"... done (took 1.888468866 seconds)
loading group "array"... done (took 20.9197938 seconds)
loading group "misc"... done (took 1.688760401 seconds)
loading group "sort"... done (took 3.350663533 seconds)
loading group "collection"... done (took 17.285006378 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513036602 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124674922 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118027708 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119210901 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147168427 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113150953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123986073 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084191126 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.77365113 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149068176 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118384704 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431324522 seconds)
done (took 5.101422636 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172423537 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082806184 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082317255 seconds)
  done (took 1.273314112 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064671108 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123253526 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06655799 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066424996 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066481994 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065744583 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0661707 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065822565 seconds)
  done (took 1.631568855 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072584476 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068738271 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06795871 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067925342 seconds)
  done (took 1.385616756 seconds)
done (took 5.645821066 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792356977 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20211127 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187767231 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410570642 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130163293 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158543589 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645619217 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321520263 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18789452 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080507126 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104948812 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328117899 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108418673 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641375053 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073630464 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090394123 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136374768 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443803951 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066754911 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081619866 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088803473 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128264482 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086700463 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073929305 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146717171 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067239723 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136890379 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080056931 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065788038 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213117587 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171878812 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659787496 seconds)
  done (took 10.258306582 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097503626 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097658738 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068266096 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122989423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096993754 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069418299 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070936734 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067307253 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086946201 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128373625 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089431572 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101748291 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065006313 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06903707 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084819456 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203687796 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079536607 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081140155 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07013921 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074983792 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107760898 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078312943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077426956 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077300978 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129121482 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178767264 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09545694 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097438497 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066504785 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080861425 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114413246 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125540546 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064938451 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065543969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124943908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093901682 seconds)
  done (took 4.5507729 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000894712 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143122172 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090167313 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133640904 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064361576 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108854554 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064704237 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080241273 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209795701 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.446062381 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586086043 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11101403 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103434126 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067147537 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068359788 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066619939 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.375211329 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095817638 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108300197 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081500566 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070396582 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068752203 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361827341 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068713756 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06348666 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067931602 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05747885 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124946443 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068304235 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943956723 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126350259 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06609674 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099841885 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16737846 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087333518 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140793338 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066617257 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.193593281 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153411551 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069416719 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065516514 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084153377 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10305257 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112899739 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065634401 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066000803 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160450959 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064595279 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079417111 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.63537128 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085120748 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064004795 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150292659 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075961148 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063505825 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255009346 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087509642 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068838864 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064739192 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177259549 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137600611 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067121226 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066906923 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067315636 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091913616 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069088321 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37129579 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067548491 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.881536839 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069117193 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07650532 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071374232 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069275879 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073199427 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072224141 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087322402 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066362538 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074449054 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065536994 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065431106 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067279321 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083573677 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373917216 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066443214 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068245412 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064530198 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088534283 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096750369 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065981838 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065065062 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099617163 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067607794 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065965891 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106179822 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065964581 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08284333 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068608282 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112397992 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065937871 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182249318 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065891736 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096518551 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070246265 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098417916 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079814245 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072129198 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418700368 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064211973 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064812677 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064895129 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068116322 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065280984 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067135898 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066418613 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079465242 seconds)
  done (took 20.899160034 seconds)
done (took 37.816283022 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238466946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074084875 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073876671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07402603 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076067502 seconds)
  done (took 1.734546071 seconds)
done (took 2.9123262 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122491847 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099817686 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063764728 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09652922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063854678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101251047 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100570772 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081781181 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100377449 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063714407 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097527228 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064347454 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063431463 seconds)
  done (took 2.31863671 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083730924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08406732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069999473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083864913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063570425 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082807775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081886292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089430729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08144745 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072710138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063353819 seconds)
  done (took 2.029332586 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082383562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085016513 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069764313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08475213 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063537568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081884124 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081050753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086583245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08214662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073840789 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063085516 seconds)
  done (took 2.021736667 seconds)
done (took 7.536312397 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077678229 seconds)
  done (took 1.238190608 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599513764 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.163869221 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080991452 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112194805 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188362906 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11934481 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27814021 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086407479 seconds)
  done (took 8.970879787 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102389888 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071906398 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069888773 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07130275 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069156087 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070742805 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068276799 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068036846 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069095685 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06805602 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071674598 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072434327 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07080197 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070897234 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0682676 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068982657 seconds)
  done (took 2.383967294 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092623681 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091327525 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07357693 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074212128 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071432879 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07132301 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07361014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073264468 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070654401 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07185286 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074537524 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0733298 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071115824 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063999836 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073363134 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075585912 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070301483 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073595984 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074016441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074936286 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07433304 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063705012 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071220236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073593616 seconds)
  done (took 3.040620636 seconds)
done (took 16.801669146 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115348027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070686375 seconds)
  done (took 1.352642429 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081670783 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083551392 seconds)
  done (took 1.341535371 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083238483 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066911698 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091392698 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078165085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066073123 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065571188 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089534659 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065786176 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065560966 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065248624 seconds)
  done (took 1.913846002 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069112049 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078126037 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069640757 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081185189 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07353382 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06370948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072023472 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067131199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077900913 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062107371 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071333242 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082686627 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07141921 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08446922 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072316355 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068207691 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070292384 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06713416 seconds)
  done (took 2.477637277 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065447709 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066774045 seconds)
  done (took 1.312207595 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066656715 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06310432 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06731229 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066149562 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06322268 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06177744 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062857898 seconds)
  done (took 1.62754887 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382018071 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112648003 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310056956 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070716361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081072733 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256606493 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065228947 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070211789 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070426865 seconds)
  done (took 2.639838717 seconds)
done (took 13.845313259 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080066988 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086434262 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095675513 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374929339 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091754316 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065401271 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.1137419 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189863568 seconds)
done (took 2.290325262 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212644394 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.628443376 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401893325 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20465237 seconds)
  done (took 2.419315631 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340153446 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087575545 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058867971 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06661032 seconds)
  done (took 1.746419827 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066243235 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068619218 seconds)
  done (took 1.324684857 seconds)
done (took 6.894722264 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066424966 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066081002 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063979449 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066005139 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085514769 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063678539 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063318606 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06606752 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065836484 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065899916 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068393011 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066122054 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063590069 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063030547 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066317174 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062985787 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063315629 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063501209 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0636942 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062937874 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067277924 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06611577 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063246019 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063206556 seconds)
  done (took 2.802853023 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084502403 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066387307 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071570049 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072375432 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069897275 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071179929 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070911389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065542108 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071813704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067726483 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069884622 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069510722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068138214 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069707073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067826599 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069687514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071025354 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065885416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068551055 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069788676 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071442746 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065892278 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069701623 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070895247 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069387046 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070618229 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068062969 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065590394 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071719563 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069643906 seconds)
  done (took 3.29397334 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069609369 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063569805 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063834796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070428805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063671039 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063596306 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062804327 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063448393 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06399773 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063104747 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064572709 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063409307 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063879114 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064310434 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064059261 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066768949 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078787969 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063367678 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06339019 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064007085 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066787452 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064722812 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063478087 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063995841 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063130934 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063111977 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063823579 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062804358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06380759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063433652 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066104105 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066902184 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062843624 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070282627 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066705291 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062584713 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06694423 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062819086 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063487221 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06248232 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062509462 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062705971 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062581726 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06961912 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063012117 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064410548 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063376683 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063744268 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063431636 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06558186 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062417191 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062874081 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064792508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06387532 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067004962 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062435496 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063739221 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062640859 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.174302615 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062924916 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062702026 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062818122 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065310205 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063848907 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077599787 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069750832 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062422689 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064248112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063812636 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065607625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06429157 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076769154 seconds)
  done (took 5.983117907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089631314 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087056088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065091676 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06480366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061436765 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063356515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069647762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063522042 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064889681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081401743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064009923 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06464665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064886829 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067111198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063831055 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064891081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071646853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061490498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063401357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066925514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063971476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069151479 seconds)
  done (took 2.708824607 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157323546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069925544 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106265584 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07504183 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069748761 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075671213 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069490996 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07008023 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069525519 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067079231 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067583503 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069121988 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069641651 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067703124 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06697954 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066899155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069649233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066985602 seconds)
  done (took 2.58100935 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076880499 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065654535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087489707 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065501192 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06598331 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068537799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07005434 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073688048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068340121 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065319373 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073948986 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067739217 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067634631 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065410437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067697556 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065669356 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067968403 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064922237 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07337798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069678936 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070203567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073292406 seconds)
  done (took 2.742421473 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079775574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067468065 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081386913 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068354285 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061159604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063760594 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06976667 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065232303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070072293 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067198842 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065250754 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06321298 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068730094 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065601642 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068385122 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064725283 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067100165 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065120259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067438438 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06119154 seconds)
  done (took 2.560775481 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085438478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067704201 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066703039 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074711794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066886017 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067111867 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074878742 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066936747 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06648336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087354 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066942026 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066940895 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074828301 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071627439 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067039381 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074922731 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074769623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074298475 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067409892 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066283125 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088315959 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066911092 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074515081 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066932196 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066488252 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066681254 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066650834 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071489681 seconds)
  done (took 3.207754464 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066305781 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065437682 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063741676 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062920417 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063491132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063377128 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062907068 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06278653 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065752638 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063026058 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065563499 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065447749 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065255739 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065693932 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065754237 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065925014 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065778285 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063005789 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063557781 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063244399 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065856964 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066326431 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06553379 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063510964 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063752219 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066004104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063256799 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063375668 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065519548 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06317452 seconds)
  done (took 3.148586376 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075468576 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073364788 seconds)
  done (took 1.363877045 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062021654 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081234234 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063381511 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069592929 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069630885 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066146996 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073186177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069041075 seconds)
  done (took 1.766188706 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081519149 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077455893 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067179937 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079837965 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076250058 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082945803 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134023604 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067280865 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072351109 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064126229 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07966995 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065094726 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072263266 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066354787 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070885862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072497566 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063819573 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071588431 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067972084 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064437036 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066558562 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074515119 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068175379 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061354514 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067244731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087842408 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076757166 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065416269 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068542763 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073888521 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071450361 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059701681 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066318628 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066587845 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064554304 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076032515 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081342782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069110685 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074802837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067224748 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07649881 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061363085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070589892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072527768 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076052056 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066517282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066748473 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060836849 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063690782 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068367261 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061348824 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06862589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061168832 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073304434 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069976925 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077074789 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06506595 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067437497 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069254171 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069652115 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072838286 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06799201 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068989251 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06592749 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075739202 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070851933 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074536228 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061176621 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060141475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064037084 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075366901 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088616549 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071975001 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066336179 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067806922 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063964278 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069158753 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066758267 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072136428 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07242425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065807614 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071095075 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073268847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065760385 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068410955 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073886678 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064280265 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068814893 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063591112 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082179526 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064724493 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064588107 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063708216 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076078954 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068978326 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065360824 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063865398 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073403777 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059714633 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066385868 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066979422 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066818748 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076379344 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069137267 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069562517 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073103648 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072000298 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064703593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0672726 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061542079 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06549363 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063385527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071932683 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058661444 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067453359 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065412047 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065033259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072858585 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06295885 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064228403 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196852758 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072621188 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065584552 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063733516 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070077541 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066820684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069237506 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074624002 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064835636 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062069719 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061045138 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070341859 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06675221 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070023208 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071759682 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069527801 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060658676 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064537466 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071208789 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074752729 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067410168 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06681554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073226412 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067651123 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065928307 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073294491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068845706 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065301279 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071995306 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067067315 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061223717 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069992003 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0689541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065048795 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070058724 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069307445 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068699203 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066864587 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06404579 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0744162 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067304783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065682599 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067019737 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065062604 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077157723 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068502295 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061063416 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063087196 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075363644 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063832329 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065364999 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064880379 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068216729 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067260482 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064689038 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065575796 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068476597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076735432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069834336 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067307511 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071152093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077366529 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066436931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068216495 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065774402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067061355 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066211963 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074949372 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071194903 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070510931 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067996707 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062520736 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071692117 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073927135 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065218507 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063488823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064826803 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069885453 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071696029 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070244941 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066624482 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064033745 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066873119 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0691557 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0687667 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065696506 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065239847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072654842 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06402405 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073088292 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066698213 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076514456 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070097679 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061104591 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069194672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064362153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072685636 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061519426 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064096254 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067379613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06724056 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065129126 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069084362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060625154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073384051 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073954759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066556872 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065481594 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066147779 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072572668 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06625228 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068922736 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068407249 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070951489 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075109189 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063974898 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068154167 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075270909 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064772794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059205729 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070123984 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063156629 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063706166 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063855758 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063078011 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.195645271 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076045843 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073455964 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060969951 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068946654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065833776 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066241046 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062513899 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071332114 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069231919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06784154 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074341195 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068195398 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066473198 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06999071 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066381576 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068537202 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067715463 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070175996 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067695921 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068361669 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066423942 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069014377 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065478972 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064740963 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068129707 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066486066 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066251016 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072105793 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06572704 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066777851 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069296878 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067365665 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06726966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067601421 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065349302 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06966243 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067625527 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067046777 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069327214 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061545046 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073511169 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066030896 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073227293 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067138999 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062723911 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074290606 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069352644 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071946278 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067121419 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066979037 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067664867 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066517408 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068647526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073016634 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063961864 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077812723 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073936401 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067583597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069206379 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06708584 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06779245 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065247021 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067248424 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067149017 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066257719 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065640923 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070541635 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068367616 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066403339 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067588846 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06701894 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066833481 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0669598 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060221369 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065255868 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065320469 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065775345 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07543005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066475552 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065398899 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064786762 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066937363 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065210639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062766127 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073983221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074963917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067169916 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073178269 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065378677 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067241859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07655311 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060205297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063825778 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06333803 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063898661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0736422 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066365559 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074801494 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066005366 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065093354 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063029574 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066329574 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064647456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060857618 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063501279 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069408282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06488904 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064584427 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066238799 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068540602 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06714392 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074543772 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06429376 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065556078 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064704052 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061654505 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064012464 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063463568 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06733963 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066903373 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063402994 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062113923 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064514132 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065846921 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066277447 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06678938 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066295621 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.201628748 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066749678 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068905864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070116625 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061466352 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068876727 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06589107 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065885021 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066219117 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070269384 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069703623 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067909754 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075846436 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066243947 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067777825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066809643 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063904732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066665993 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066491773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066411502 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065961868 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067641241 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074419421 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063932033 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069426845 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066676039 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067589413 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072728575 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067314997 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070332565 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073161425 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067163108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068180662 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074052926 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070821644 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069658721 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067445661 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0675649 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072554334 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065251139 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072808483 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06734582 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066736451 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068019025 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064118383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065517874 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066090835 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065656683 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0723174 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067429308 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065980939 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065209914 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064670927 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067950958 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070297641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073757262 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067895407 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070060538 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061409541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064339335 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066677761 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064279502 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067239902 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067741131 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071702532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068463231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066665823 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065002868 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074638682 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071780575 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070342079 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064134926 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069918911 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066533181 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068446697 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067510701 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066019932 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067089131 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069852306 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067392269 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065179494 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072807667 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069369816 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06654239 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067456099 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066339575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066066951 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060754291 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066405493 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067444943 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070757952 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067985682 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066314301 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076665238 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063803376 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066229332 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069167286 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065565774 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070623303 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061553203 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068193341 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067033084 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067111761 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061327669 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065563006 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06434484 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06871314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065273713 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061607424 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076484309 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074661262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069600511 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064474264 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064361419 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060481571 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060725765 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06456203 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065697407 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066516514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074426912 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064072214 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063789817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059745548 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064792945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067629491 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067841841 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06198769 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059932344 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063640142 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.198112968 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073121675 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065464601 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065708436 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07101388 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068423336 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064470216 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069760922 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063370047 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070600467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078290615 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067311381 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06799422 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073110505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07371797 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067182218 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061951095 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067797809 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069278985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066277756 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067274753 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067854393 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08135269 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069266478 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06600831 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065946965 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069764665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066304971 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075186997 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067185196 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067686139 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071450708 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068605859 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075335053 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069475037 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073798237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068801758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069464186 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065266798 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066400171 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064701194 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065720467 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067017255 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067335836 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071413129 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074809905 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065149435 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077531048 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075378274 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069369527 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063165157 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065185754 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066940829 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061775298 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067677563 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064958243 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064393714 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064735112 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065291793 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06861774 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071971031 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067129598 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066234743 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065750347 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060324584 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068632828 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068285386 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067027029 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063995049 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065712142 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066554269 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07052803 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068836377 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063579659 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067486581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06760513 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066753525 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061498099 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072244042 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064888674 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068006876 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064831136 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065900235 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066985245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069385642 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0707414 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067131319 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068213705 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069663779 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067871672 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063055063 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063184584 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071250907 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06358261 seconds)
  done (took 42.337773657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099513013 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062585096 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061472775 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061605386 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073200068 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062162048 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061186642 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062569552 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062139651 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06433198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061386891 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060958209 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070233396 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076939373 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073179821 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066099679 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06089038 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062420016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061070076 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062361424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070349465 seconds)
  done (took 2.702235446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072707227 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077718018 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076746855 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081889441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070975469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070163963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075300371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070494317 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078205546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071787016 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078310276 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069976876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072279596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072406898 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071949677 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070609891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077704906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070214966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070386991 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075414929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069996569 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074812179 seconds)
  done (took 2.907404196 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065601365 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065235621 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067350001 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060596498 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065406256 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060740775 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068691438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07137871 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068953934 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064587475 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064115505 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064066663 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067108301 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060900602 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065298551 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063140495 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107851907 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068332533 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064964137 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066025598 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060662213 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066554425 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060584786 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060754935 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064224278 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068904508 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065546785 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063198616 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064587881 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064361404 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065071569 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062812663 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066924195 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065599212 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064420753 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063806981 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064465769 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065142602 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060643059 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063236993 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065862253 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060976291 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065888569 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066755273 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063553146 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062977859 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066440855 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064955488 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060172714 seconds)
  done (took 4.499181354 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078340714 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109978433 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067291995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088262445 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082344558 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072454102 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068867387 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089349077 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062452695 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06373948 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081167641 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079107276 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065139774 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069636262 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06943111 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064751159 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066402815 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063989473 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068508753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064457809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068986541 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071702737 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079627694 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077907892 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068958557 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064415864 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06463381 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069579395 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077833088 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070436497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069961896 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070557546 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08048398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070719081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064443731 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067392065 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081956833 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065441391 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067886491 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062906873 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067269513 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069411274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071689553 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081410145 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065235276 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070233563 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0652189 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062225656 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077645234 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067923438 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0725987 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079206701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068763331 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065167835 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069578402 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080070297 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06458661 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063161612 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067541078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077124826 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06276892 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068999693 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078777162 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067076584 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072706082 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079207053 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070279305 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068921791 seconds)
  done (took 6.296056185 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075209012 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094607757 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083047626 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082852584 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074883002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074881202 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075009349 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074851311 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075342693 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079721084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075861125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115854068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070425122 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077433114 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075254864 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0750222 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074975159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074955411 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074863652 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074807043 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075306311 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0823709 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075170138 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082477043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079338944 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070174728 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074567181 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074950342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082480855 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074729959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079052686 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074797736 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074697029 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08221895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078895077 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074604511 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064421308 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074386478 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074588052 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074631603 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069938488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082763762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07504079 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070039077 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075087848 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074395603 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082267268 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078965449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077482108 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079504446 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075145273 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082870274 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074543524 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074864346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08229149 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085611 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081970559 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082480903 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074837599 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082448031 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082179365 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085805788 seconds)
  done (took 6.144620103 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082164925 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073665494 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082264518 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060748221 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06500983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071371738 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063926219 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063741652 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07410472 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073688609 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076202044 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071143298 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074320383 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076401732 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071787312 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074247308 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071542724 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071073039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073688412 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071559859 seconds)
  done (took 2.752832137 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074440739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0821068 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066955709 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071621644 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068202143 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070987967 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067848286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068741866 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06642763 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069057362 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075845391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075613802 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066963399 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070771437 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075784532 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070982384 seconds)
  done (took 2.44484264 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084346522 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072691926 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079897112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065988491 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066325595 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062094598 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064920909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060501807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061791669 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077708826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065908098 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075963592 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065180091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063946886 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062441209 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070754868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061920738 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06314472 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065784649 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077708638 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069597817 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064098241 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068641621 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065386071 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068623992 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070652624 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064989539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065987287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062943969 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066097678 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069198528 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069336826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062890339 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063443082 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064222723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062901534 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065523425 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065914955 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070619655 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065652566 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063738046 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067950235 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06569768 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066502975 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061740636 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065739362 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062094948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067968394 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063710805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068253428 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065472018 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067909199 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066388611 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072597881 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068929784 seconds)
  done (took 4.993960081 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07993203 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070508061 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061281421 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064140214 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069109358 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067497525 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069509849 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067641329 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067835612 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063994915 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067946788 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069079937 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067095749 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069349205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067180339 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069817973 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061696463 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067290724 seconds)
  done (took 2.535378683 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071421446 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06619675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072966195 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066062994 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065705838 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068056728 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061928506 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064023563 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064773826 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06561114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065926622 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068273768 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064467724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068112721 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065621518 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065335758 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067587364 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063697071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065373314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061421427 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068086878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063755749 seconds)
  done (took 2.760343271 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093604112 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082594855 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140343205 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078243987 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083772534 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070590046 seconds)
  done (took 1.856258263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091174108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099650905 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066436139 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069343098 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07578681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069742224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0694592 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069907072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077976695 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075530076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069327933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078917072 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077999929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077810878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075420536 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075125748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069349048 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06990552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06569548 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083419034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069583666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078382099 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069988254 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06952297 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069933509 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078112569 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07847154 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075856036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070116371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078169912 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075913859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070265826 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078693785 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076123358 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068901799 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078067019 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069523796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084003576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075338316 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078262765 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068471754 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075381615 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07890385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074366176 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078148557 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069641562 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07430818 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070199095 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069698973 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085566211 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075057773 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077409143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077631534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078285074 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077889785 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08563908 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075764476 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077445555 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075727883 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075465077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077210686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075284794 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077413712 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075948828 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075479469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077395402 seconds)
  done (took 6.292711022 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10356095 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067069409 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070377868 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076414538 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077788365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06983616 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069994921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070030209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069633856 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066900166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108802227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070170197 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078014534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077928607 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07005326 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069525137 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069573163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077350636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066551102 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085873994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069601933 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07775973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078161638 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077331916 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075853104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076149375 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06995931 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069762595 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069637682 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069557528 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075124183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069763394 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077746364 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066485063 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077625574 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069791285 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069390844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0746093 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069710253 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075429161 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077416479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083227313 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069662524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069123402 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075400352 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069561029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069760714 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066572989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06980574 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066354289 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075654305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075418618 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076422213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077287909 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069475034 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070107081 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069616925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069832618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069937569 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075343717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077178986 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06947034 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085518009 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069598709 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069687058 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077315372 seconds)
  done (took 6.195874662 seconds)
done (took 128.066983352 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185942843 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163567266 seconds)
  done (took 1.652975432 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068987743 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098071376 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076636934 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128807459 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065538535 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099777582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098880137 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077611164 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065620127 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06544614 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065453965 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067903058 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130856203 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066129998 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065826772 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068485227 seconds)
  done (took 2.62430406 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099456781 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161695921 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102348576 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06438036 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09863198 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072312687 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064265903 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075443439 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071028132 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064516095 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072402376 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069578815 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064950217 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069864139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070554738 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072262303 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064610401 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072408787 seconds)
  done (took 2.744292637 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099346538 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091935372 seconds)
  done (took 1.50964663 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157548036 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105324541 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144651044 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353398298 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166503464 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.238030823 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127654 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127922641 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117940342 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122665741 seconds)
  done (took 2.977063186 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10032423 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154673399 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266066295 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117239506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072354104 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094181714 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118278704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07794319 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080555002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079940989 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080295004 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075980723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099797432 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073493582 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073857572 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075616657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103466567 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072758907 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074913599 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076410327 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100100389 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065238134 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073099356 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072330405 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077535916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077563523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065040929 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064729232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076227556 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073986403 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076296738 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093038735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076651719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106614872 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07000523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106848488 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076285224 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073879023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074124086 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073376101 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07863531 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077725652 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072096901 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076125905 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065044023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076572249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064884759 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064900879 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077334512 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066556733 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077517352 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078392518 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105761289 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066109532 seconds)
  done (took 5.92962364 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103578137 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105949688 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07120931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113558832 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102084909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07201084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1023942 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095416821 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10423611 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069995704 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06754638 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069858102 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081845206 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082957089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11466358 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107130006 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073068938 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071172376 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106615066 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10472007 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068336712 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096433691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091029266 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103384807 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067238961 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070365503 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067732129 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070403851 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076468673 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077753337 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069424458 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080159994 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084518834 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077823274 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067169363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067526641 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067902869 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078871423 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079107888 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078426341 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076878171 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067580047 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067573506 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06900172 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069290165 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067502577 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078498496 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080412446 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078568566 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069042351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07005502 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067472365 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069057131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080186601 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077617087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080841262 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079546053 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068251748 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067938313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072022755 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080263797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079685381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079432636 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06917736 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078388623 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068084611 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079474617 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083939087 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068290208 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069702494 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068182491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06918662 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068959802 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077275888 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077677472 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068898806 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069201712 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068309416 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080235285 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077842642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068151645 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076530853 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066629043 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068123025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069221486 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069236996 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077382843 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080040559 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06916892 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067992944 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068934528 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068339363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067059088 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076233256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080079811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078454488 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077277714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068518971 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077340124 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077562583 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069058254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078406052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067552517 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068387921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068251492 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076865989 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.202923304 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080878404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06949678 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068725718 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077538603 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080420951 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068763693 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07869383 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082213497 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080322307 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068176618 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082052704 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068820623 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080018249 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069630589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081000727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069677947 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079739128 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068356621 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069643719 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068841425 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079558851 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071869292 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068679448 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069931263 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069166271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079157523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083507557 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070054295 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078282197 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078370887 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070725656 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079776199 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068856134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079714254 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069655904 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069481831 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067332844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082953154 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068761524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068367178 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069534497 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079880254 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068187275 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08049309 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079788707 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067982444 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08178266 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080610923 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079982347 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071533303 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068459497 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068244503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069486247 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077786268 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079981052 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069929052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068716253 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077889701 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078783602 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066749332 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078487552 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078415294 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079326654 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067880264 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069579946 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080663712 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080341698 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078089151 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07770211 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078223074 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068394357 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076801302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0777954 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067645331 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083930545 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068224848 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082722492 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078666271 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076562384 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078793595 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080673249 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0806753 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080430148 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08313679 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068291385 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068403879 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.086401628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068578002 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069985985 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078696674 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069739874 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069446836 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083640856 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068519683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079742385 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067821955 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077717499 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065893474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068282485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081838264 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066864441 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068251384 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077936258 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0679632 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076036399 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078273932 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.20642792 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068798099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070619763 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080638041 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079483779 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068322918 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068319931 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070332658 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078580225 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078010318 seconds)
  done (took 18.583815676 seconds)
done (took 37.347532772 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210950784 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152896901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182665566 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118144499 seconds)
  done (took 2.082269089 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118483644 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100948616 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092578834 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064654984 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098686894 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064697955 seconds)
  done (took 1.897837197 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313118075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211479001 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188654644 seconds)
  done (took 2.064272975 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203167133 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190437968 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420208923 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263123659 seconds)
  done (took 2.544000425 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144384027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08945736 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066610779 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083634416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133875557 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161045328 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100543798 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125186678 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07834474 seconds)
  done (took 2.392363244 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149411035 seconds)
done (took 12.48081592 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.241362057 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193964805 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109080205 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106104991 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093405204 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191296493 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124693678 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.100994635 seconds)
    (9/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214406398 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071369534 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.238946619 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.2026084 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077547473 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203891814 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145090853 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073553645 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069124044 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088898759 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202576452 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063712292 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072317588 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122667958 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09310554 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09944931 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109514823 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092178234 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154603197 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121668869 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071339641 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069028784 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.208891727 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073336497 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193779589 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204344594 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113220677 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051390858 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14354896 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076239839 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073320593 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078868223 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085455406 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050015477 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.201316032 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073319591 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07117852 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063115154 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050239404 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074480158 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.222551514 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07376073 seconds)
    (51/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.201010801 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096226053 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107675045 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067146653 seconds)
    (55/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137426786 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101884891 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179283905 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157498334 seconds)
    (59/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.154368428 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076782416 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164803414 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141917521 seconds)
    (63/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076061216 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066296157 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053223308 seconds)
    (66/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076081062 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140323884 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100456898 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.15489677 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.066192455 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071083074 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053383085 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051302574 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09177798 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139238523 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090766602 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141412232 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.212738183 seconds)
    (79/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073538748 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096068897 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.049981292 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087640813 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073020317 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050099111 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075160017 seconds)
    (86/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060743597 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.328239745 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197245821 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178740577 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.186370141 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051553601 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168747322 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050918464 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090664522 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184137609 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07056449 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09038945 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061659797 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09283468 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067889294 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074042767 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06556428 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084233585 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074547168 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076815013 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07314727 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066081179 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077048438 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11807036 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076123299 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077385317 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061106457 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184952657 seconds)
    (114/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110563246 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140656082 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080651893 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07214162 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074455998 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065589826 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.195902066 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050209708 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050174281 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050578044 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067518433 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090116506 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.137103172 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073435505 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063755269 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193652038 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085247073 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111131449 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071073092 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072046096 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.160683013 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093651629 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065146889 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069941478 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094700076 seconds)
    (139/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101349078 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050306914 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051842895 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076037413 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074636128 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071970729 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155040079 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099978357 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049949753 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065030262 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06450316 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072082916 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183677191 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079685468 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080334543 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089755214 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089942309 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093718003 seconds)
    (157/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075624893 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075329736 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073582494 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073373663 seconds)
    (161/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061774625 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068054905 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06586261 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051415291 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119805931 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087622231 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064638333 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.282394415 seconds)
    (169/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188504013 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050471498 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173657839 seconds)
    (172/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051614159 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071249496 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05043871 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152968738 seconds)
    (176/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108512916 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072164293 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148960623 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144447561 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050441208 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073840801 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073061949 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064358828 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107528174 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071140103 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050020213 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.050976874 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0691605 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072202673 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064024799 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063074457 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109725357 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086226361 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049952454 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064610203 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088714273 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072415938 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05013843 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064123744 seconds)
    (200/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049477651 seconds)
    (201/309) benchmarking ("sort", Float64, false)...
    done (took 0.282263512 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066425135 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155809522 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067322901 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075255937 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073227653 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173870159 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074987664 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07109013 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066465855 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066750106 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050594866 seconds)
    (213/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062559948 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112768871 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070425483 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092472935 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065912988 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092841221 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074094118 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070761603 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050949372 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080650983 seconds)
    (223/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051440194 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064325945 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065004873 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050762981 seconds)
    (227/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050900364 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05166824 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072481395 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065219227 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072183863 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137977655 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08068012 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089532824 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064674808 seconds)
    (236/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100729015 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107302483 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124471302 seconds)
    (239/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061960609 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111410849 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052694031 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15578766 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087424875 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050873549 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050314447 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050753071 seconds)
    (247/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051537165 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071195185 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072561293 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099588127 seconds)
    (251/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07781617 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064582546 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051915392 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176685391 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067997037 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052103333 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05166844 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066134612 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049916736 seconds)
    (260/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063975786 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052532423 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109192115 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050541837 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071964587 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07304927 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051712581 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088013134 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064477726 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064410656 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060138492 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160753427 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.049849451 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070687145 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052721788 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066585237 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065969459 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125993893 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065125671 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051418394 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072817779 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050067329 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067958518 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 0.131893653 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064027519 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070671694 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063710411 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072380527 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088841587 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051701459 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066319802 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051923234 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071094184 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070354772 seconds)
    (294/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051088063 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06451407 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051224989 seconds)
    (297/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066438649 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127314841 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064953257 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061702584 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064549059 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135943314 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064504611 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070985687 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071955824 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085069855 seconds)
    (307/309) benchmarking ("sort", Int8, false)...
    done (took 0.141957712 seconds)
    (308/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080389308 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06513348 seconds)
  done (took 30.705003855 seconds)
done (took 32.070647441 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087076786 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09409122 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075367067 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094646261 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082040124 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076965293 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072719951 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078759246 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079823893 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08248372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078475138 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054731965 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074806682 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074451464 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075229219 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091391559 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078519399 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07305529 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073159202 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064711536 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073186843 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06545653 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067359506 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054389242 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078554371 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072188554 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072379937 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074230715 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065945895 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066027392 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069266376 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073954644 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065587173 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078672356 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072224903 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073721379 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07460108 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076786988 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067395085 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06589506 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074814123 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065487968 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072913114 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074503809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072117095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072169162 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073113241 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078064357 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09203884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068050799 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074515421 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076583353 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076048421 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072606334 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069911461 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072700679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071089083 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091288514 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073440839 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067855764 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074615882 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074233939 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071277615 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073071007 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07268157 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075344367 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075696669 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071505405 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074485069 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071395927 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065038793 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072886491 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068797881 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065253795 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075774618 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077213913 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064326661 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071609464 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072450927 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071303533 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064351293 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067248211 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067148773 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071953038 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067464607 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05404425 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069466775 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071814028 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064902243 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073424675 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071790558 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072774563 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067184472 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07579396 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064679123 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070421219 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065143097 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065529858 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067315522 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06979848 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065103489 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067894231 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074425101 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06669626 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071254033 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079233077 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065068502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072413474 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064562267 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064490879 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079641808 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074140071 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064977933 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067430385 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063890194 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07241946 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064169462 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064696784 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064653207 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064912089 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071415606 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06471639 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066592078 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072222076 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078420774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063847879 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068065652 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066013137 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063805885 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070795837 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064305992 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063918856 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065769701 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060838673 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065835468 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063551608 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071796535 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201204225 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073968352 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067447372 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07415328 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070879675 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072370649 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070920873 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06447549 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059632946 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067615663 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067695422 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067239839 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065286121 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06720879 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06612418 seconds)
done (took 12.417317966 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067665683 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143504047 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100325529 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095953568 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085830573 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066224019 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076108998 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101658282 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067864737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102071874 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08794331 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085159529 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112024238 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064696978 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066102202 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06944894 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067053464 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081472903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10125516 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086385185 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116830494 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065261394 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094898961 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088998516 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087261883 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091930614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068977072 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069958085 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069531834 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100403829 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086691137 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069916394 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066248484 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097444347 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092862724 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082878806 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066140059 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082626007 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066445878 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065614568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067795201 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097759971 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079479145 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080046229 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069770329 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069020938 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067103399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083437208 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088926473 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078127757 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086044891 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103452443 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068579869 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065149722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064237716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08503119 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065138759 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068532394 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065687692 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068060556 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065056634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068439554 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080362239 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081235895 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069368073 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079491533 seconds)
  done (took 6.749484783 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086715194 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090380547 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084142354 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083615315 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065194815 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066415993 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066147032 seconds)
  done (took 2.000566239 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067877856 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088484691 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089179329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089405504 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085196675 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087691221 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075541091 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066050562 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080474608 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067556681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087539695 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102414476 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066929173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072189185 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090758482 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065761148 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090231579 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06633622 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069307663 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090259943 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067941972 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082727863 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069541731 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066718463 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080720065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066877159 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113929743 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070923461 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067627776 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069240874 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06371187 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1080212 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080509777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075335849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065899497 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080520036 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080792042 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064382421 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083050945 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071029698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079718231 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066526967 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06685377 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064084314 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070323446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076768928 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066893278 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066866357 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06856806 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086361086 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066980466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080051738 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069693883 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068461683 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067602839 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069854184 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076684163 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066866984 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08609397 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067469989 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083151602 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082626695 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079810873 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082812679 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069229679 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080488835 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080217781 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069012321 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068021243 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070241132 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083490536 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065160634 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067641087 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076608036 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067998922 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089244702 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089553477 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067543772 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075548221 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066976117 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066852776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066209595 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089304455 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068541476 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066059683 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070697842 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069226654 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064437972 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064791641 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06975772 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06414745 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067800467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069190875 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069395035 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068824487 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082933562 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068507111 seconds)
  done (took 8.71390195 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070349164 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067385615 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069376352 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067155889 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066990435 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067609957 seconds)
  done (took 1.890548449 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095621711 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069304076 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081052882 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072418573 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105683597 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0868774 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087567358 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078343324 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083753487 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078574695 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086537262 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088526507 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092753485 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072440117 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087245583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072604228 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08772136 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075687613 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078472347 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073334815 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086092484 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072453301 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073101509 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08165099 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075584288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071900538 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067138348 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078948969 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079007855 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078422764 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072542997 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075787151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070861707 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078091877 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087350484 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07016104 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071650753 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077298798 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072316503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075645227 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088456754 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07302417 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074635203 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07711771 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077949393 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070486971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077356942 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075608837 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086040434 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076915407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077104122 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071473215 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075090704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077226181 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070241085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077569794 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07666148 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087068227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07252165 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069892778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068523993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075882621 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077173956 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075468229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07894957 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076863239 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071524111 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073479786 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07297198 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072471932 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077069625 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068906013 seconds)
  done (took 7.051077337 seconds)
done (took 27.851028836 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535795064 seconds)
  done (took 1.97871547 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616996964 seconds)
  done (took 2.085173946 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.243373559 seconds)
  done (took 8.706747561 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404492503 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.498313574 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725856363 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132689383 seconds)
  done (took 3.26853997 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703979085 seconds)
  done (took 2.178798552 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217593242 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202717088 seconds)
  done (took 1.904629633 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379370323 seconds)
  done (took 1.845408042 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137208792 seconds)
  done (took 2.601531084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26086498 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175862446 seconds)
  done (took 1.91003678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.481715557 seconds)
  done (took 1.951647998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.852696619 seconds)
  done (took 6.324590431 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222436943 seconds)
  done (took 1.741683587 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245120144 seconds)
  done (took 1.717309814 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.728797802 seconds)
  done (took 3.204483021 seconds)
done (took 42.892797697 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082063051 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081231656 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081045132 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079437967 seconds)
  done (took 1.783333006 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078718041 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07297313 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077427562 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073195866 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077347241 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073073536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07542581 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077302488 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072762332 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073310632 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073250002 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072946284 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075280046 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074594376 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071303641 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075760251 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076703053 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072648483 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076160311 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073042952 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070839804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074996908 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075273313 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072375497 seconds)
  done (took 3.262764767 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080457436 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073628427 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075988111 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071901196 seconds)
  done (took 1.782202045 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080290446 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096371904 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090840251 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078175273 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093101799 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087088432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069649386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069301482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071236817 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077911486 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068337953 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096806922 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088799053 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078027776 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080291464 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066178904 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068387292 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087912698 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078355216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078416324 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070230544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077977481 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068915427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089524537 seconds)
  done (took 3.386925438 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079920193 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106050277 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078216565 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089366668 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091370406 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065705036 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074448709 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090969058 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126739941 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06528194 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070320773 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06631707 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073163555 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065153069 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076673024 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107209555 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111340591 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068793273 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097215637 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065780254 seconds)
  done (took 3.15421916 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074739886 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069653189 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06594261 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068659687 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07694851 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072970919 seconds)
  done (took 1.915989286 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07037936 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067969029 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067622186 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066975034 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072091075 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067034052 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066228442 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067545854 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067173446 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067266751 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06631083 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065694961 seconds)
  done (took 2.295300556 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205743228 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068806763 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069007269 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06574975 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070267944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066952388 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080738528 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067363453 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091485705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066414807 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066737076 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068545291 seconds)
  done (took 2.470877264 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213916653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076608522 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241701098 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141203511 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112370385 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117162479 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10475534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114743158 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144322923 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101774462 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169648655 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169712153 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108725408 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138827037 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089096015 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100335286 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156420863 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163926777 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106348738 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167972614 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147165549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126462634 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149491772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10522555 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106705477 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123710027 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071446215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080536446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176962544 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134567846 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146561775 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112398494 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093967755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178869866 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174875617 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143395204 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138030816 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085274043 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105234856 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136008173 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201885158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088219932 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162116897 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108857158 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217307007 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13624684 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121762589 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122426088 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107039681 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090437578 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146321711 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185929674 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139470947 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088765976 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114525996 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115049199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116950628 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104370448 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185040858 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164422776 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130107566 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072283282 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10156029 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155874572 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136017219 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109569371 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126621119 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094489064 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137496336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157181101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12121987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146984752 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131215129 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089644417 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12056147 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141676212 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12978502 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162981884 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125317511 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073317645 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126262094 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103321004 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08118174 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146153897 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075402786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177996702 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099315753 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109434757 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115336748 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10990655 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109736027 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161677576 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14633257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10317245 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064569326 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245826855 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122900563 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149577177 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08931818 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110271206 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11997271 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078825119 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141650196 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076370018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12572893 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078285286 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128141283 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132496199 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078593748 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124397353 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104435059 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102164645 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134219619 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163021625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089365799 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082557161 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171226384 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123173117 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105050796 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145927364 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158718808 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103061538 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103580056 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151700709 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181638547 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089865516 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165141137 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108215913 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084364337 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088839154 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125004015 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113702667 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125002531 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082307159 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119598295 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170348498 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075175121 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096749854 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13528202 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07932025 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081121988 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106670693 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105879089 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095617334 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10048162 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104110668 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138047235 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123880661 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105489712 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12438155 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097805057 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316372298 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089253135 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102716471 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105479992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070845924 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138698504 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159086257 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07933615 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166527087 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12412137 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107690055 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120662548 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084669892 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142107707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079001162 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071077767 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147596041 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11189599 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112098283 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15361104 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107183789 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128181516 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121138328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136166863 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132771494 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132092605 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106010037 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089303616 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114052074 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127424577 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073361105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091717774 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.0807922 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10438383 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097240161 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083757553 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143312321 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125147269 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102062316 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112616812 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097210863 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153854617 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07655843 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130006258 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120637204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096571706 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154107413 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154638666 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132984419 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099258045 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137540822 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070345515 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073697533 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089217059 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12317025 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082464217 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08254805 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25928664 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151357327 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132472799 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141063835 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114990407 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121767901 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157204726 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070939371 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118252635 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150541921 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123129245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104695344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091200986 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099820282 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145260808 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109183156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185743117 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117978575 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125712522 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155349888 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101032399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079852091 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104014109 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137731581 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105117326 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145976244 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100610958 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088899847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110948901 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074736398 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100425865 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127913534 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121261587 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136708401 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115946587 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134230034 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077754756 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117579122 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122289087 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124434475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064244901 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121603912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163735718 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094797243 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119026981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154309895 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0791502 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126332231 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176587791 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14525036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085202364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252972141 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121906813 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130277785 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121840459 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143044851 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110021832 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140377575 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112093482 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08696449 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089033189 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098721444 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105649375 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095877695 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108290651 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114614926 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095875796 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134656657 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10531789 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111597953 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119153806 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098902443 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091660198 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097813622 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180356428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120366121 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173171373 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09995434 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147454292 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166095549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07564957 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079661138 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078175759 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140544669 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084643696 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131969297 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099883612 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10809787 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1253267 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144792006 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096377608 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068936091 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109730422 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13554876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11446201 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099095326 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105469245 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165813463 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102016398 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079330732 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113930056 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106188054 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103248599 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173521979 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061375813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097837669 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076287457 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080193323 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128095862 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294763356 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081803565 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103948034 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122151051 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113352812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130421938 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102702295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101522803 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118133144 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153378422 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130129782 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106123152 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11334497 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130313274 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15846811 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106825975 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097689472 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177164736 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15614894 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162225554 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089712063 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118797653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114901918 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110666549 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139086935 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08414553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165505479 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082664121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137702219 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10504856 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089924776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131268652 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100995213 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088774557 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149292941 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118739473 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083109999 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078159819 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119628862 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121188157 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10779854 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075506394 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140478224 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073958902 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133234546 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165508385 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080611554 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107606322 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096932728 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079542031 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10705934 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102590118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086956315 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.236818963 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179152536 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089857303 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15321545 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135395486 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113541648 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138465683 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103033985 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64161811 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078572952 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154790121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118054558 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176142852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101588314 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119769934 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111146185 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125169337 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146652356 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105382618 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181054589 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134617995 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116937825 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079675517 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103516869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105652208 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089177535 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108897459 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115431625 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117887484 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094276086 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117593537 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126526012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082363655 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09679471 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158508841 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117709225 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145192339 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141535435 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086294918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120142398 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139593913 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080720204 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122952063 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153933343 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106839556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099084834 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080955937 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1018459 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159682775 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072937811 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160871335 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263496121 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112116303 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116248791 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115636984 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133767601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108591747 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122822394 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095444142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111234659 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114091254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082980223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078577758 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107049604 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113342621 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099303095 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101367515 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098565315 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154520982 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072347994 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100000549 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105867239 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148136812 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177909602 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089223652 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082674148 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120887282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115037974 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114975408 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121614688 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079460628 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082176685 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081510779 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077702802 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109652662 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113639947 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105602232 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112273861 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16487452 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083639126 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232090597 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096235688 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105605436 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069861297 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078928762 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096975502 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099698633 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108917595 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102335346 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162369049 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096411772 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090668875 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093257088 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074650754 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084209745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130318911 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110345991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118612299 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098398702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061766638 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108322486 seconds)
  done (took 59.323361643 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112290518 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083471318 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097336695 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143647605 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12427964 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203524943 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154197595 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19029886 seconds)
  done (took 2.708719889 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069794072 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0960133 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103063634 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084540086 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066989481 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068531774 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233339585 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081733276 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067601085 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090856444 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080101671 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068768749 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428188795 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067553506 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067494322 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062197394 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067433784 seconds)
  done (took 3.3765579 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390243708 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614535616 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383310202 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073335709 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.436880166 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091262481 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.120801848 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12814728 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072514691 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536010256 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704805288 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124169298 seconds)
  done (took 18.263180475 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077406005 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069605342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084191201 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083587151 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072636614 seconds)
  done (took 1.963323179 seconds)
done (took 107.218372242 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082576394 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382553714 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053049633 seconds)
  done (took 2.038424542 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084945527 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086024732 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085217815 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083107935 seconds)
  done (took 1.926404196 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076173977 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07595645 seconds)
  done (took 1.731505115 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234738701 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168171673 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088040381 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084885328 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080155761 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080058767 seconds)
  done (took 1.83237958 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074334849 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075556847 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073387045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077078169 seconds)
  done (took 1.881572604 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078344346 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051811043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054537135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0580235 seconds)
  done (took 1.821844934 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088883788 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079087557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079088332 seconds)
  done (took 1.829098436 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105539864 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085547246 seconds)
  done (took 1.774307267 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083916772 seconds)
  done (took 1.66458883 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10164538 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114387789 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133337958 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112266358 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141088911 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110060208 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086227714 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086517078 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077230885 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087012171 seconds)
  done (took 2.630965909 seconds)
done (took 21.278494201 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081451244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36283657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360000791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091136821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670487244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356624108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966641693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093186336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115447281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06805734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085029203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650527263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.992085532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.315235955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977856266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318486592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650767874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068380722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068157085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06803803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954136152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067584638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06770707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068538617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648678681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37183723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068452371 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317764738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06757835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069503931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354904043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067794724 seconds)
  done (took 16.05112231 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072944365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121376695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073270684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084982048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071474863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069896139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07117936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068974929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122049859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067347925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084946108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067555198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071915507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068683382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088035613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068073727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068924821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068259878 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068220866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068547889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087016095 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067557133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068167121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068608252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067583086 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080136542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068209997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068028392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067915305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069641527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070543405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068761607 seconds)
  done (took 3.993675739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120816945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127777374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074269311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105756419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115104057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070103188 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147655699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093172603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129496797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067572224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068305922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102791623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068998895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088598327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068765713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069223841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069323159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068310803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068796604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088266672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068064698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068509886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068998979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068650118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08226477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068605685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069325769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068426579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070978911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071509557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068998557 seconds)
  done (took 4.266313194 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074933526 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07506709 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08373775 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084767448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070217978 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071884386 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073165994 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069760165 seconds)
  done (took 2.201836671 seconds)
done (took 28.101168834 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080924333 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069320739 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072636666 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082060514 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073170881 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078237487 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066947212 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075467616 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072500519 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073502774 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075603483 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067445285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071363614 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067289581 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074531271 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067393468 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079070673 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071643803 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079365581 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080097485 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070175041 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073725386 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075067734 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079128505 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079600059 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078935251 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077694668 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073460996 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069304415 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070409558 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077091226 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084228631 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068205666 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079529966 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067945358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068357738 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072017431 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067768176 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079476477 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077634504 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069974459 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077028756 seconds)
  done (took 4.690413676 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09022581 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092807024 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085151038 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061860119 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066712573 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065298192 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089331489 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059841022 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059035163 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08805127 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055450018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059361981 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063077118 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053414666 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062081613 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05673171 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062009563 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055232799 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059876362 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059537188 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089366733 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053047698 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077899015 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06318053 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055580278 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061095736 seconds)
  done (took 3.349817028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076614721 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086554113 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091109401 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130608144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105928046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079905245 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081030449 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095292358 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088707145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066892806 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071242592 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093684091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091820501 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073857049 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067563072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087075665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084621237 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069311304 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073491606 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097345596 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086847116 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087080942 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099256018 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083517354 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067176857 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07078004 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071373931 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082142247 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073057396 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077473081 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07176963 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071217317 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069697802 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079767235 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071687527 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069695363 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093112604 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078182836 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07959179 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068379918 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07130696 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068987972 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093024146 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133754353 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06740063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074804382 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076693845 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077664547 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067663894 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088183347 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08978454 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066851859 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070752821 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066663347 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067165881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081111366 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069069781 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069447943 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076203585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070308716 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091977288 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071920597 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082791749 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066869341 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074914454 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066538516 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06859173 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066869518 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095271209 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068475069 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111139427 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068520039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068196791 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075744644 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075225595 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073488603 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067347994 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082715663 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077585298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070790169 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.0758039 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070795178 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069967614 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090782957 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069322753 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069251198 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067783198 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073145083 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069858777 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068535088 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08006204 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067179552 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069841763 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084478181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066929617 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068100691 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072968535 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071965801 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066631521 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077958123 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071775999 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068123916 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076277895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067143069 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070378251 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080220956 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073523588 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066412437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071903237 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073584971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068086222 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068717699 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07014739 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069040338 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076213759 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076759189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071745523 seconds)
  done (took 10.615031839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166190551 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157493108 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070940761 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149769098 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076887829 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079299076 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151164599 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095086213 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067862043 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068955409 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068931004 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110461046 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1064957 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116309411 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078474521 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067496923 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084731646 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115206534 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152721122 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14627148 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085101724 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076783914 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069988078 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069374818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070494583 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078819739 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085863311 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076364174 seconds)
  done (took 4.377445483 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08172214 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100724801 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074889565 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090797399 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091786058 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067517011 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069826371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069764543 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081367209 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078522443 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068080165 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073134863 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074806466 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071122727 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068711432 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074964287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075065394 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069407358 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071798575 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07328694 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078156286 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092239454 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07171564 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066970118 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072633421 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066934192 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063829086 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084611119 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068382969 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094711981 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065601155 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076020132 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081783472 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06822856 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067363343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06734604 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067729656 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067228067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069178033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066269489 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066098405 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056820467 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066578939 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079041824 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073898876 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055965218 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07264892 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072589038 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072374448 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065220332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069977619 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069639469 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070527815 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077372225 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072474326 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07277041 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068006239 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074060884 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076150283 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066826769 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064649382 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065843262 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072061111 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065420417 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075672709 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072169699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066256792 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06773378 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069028716 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074002928 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067121631 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070251659 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065079355 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069413067 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07197563 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069156526 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068133952 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066323026 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067159506 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067547801 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054509569 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067080687 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052612559 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070671676 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065617545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065924657 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067206659 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071919668 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079607697 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068942349 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073076887 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068201173 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066176341 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070555235 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059855393 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069976095 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083468705 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08256312 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067269182 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064864454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082056067 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071817442 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066301863 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055400783 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074996386 seconds)
  done (took 9.109441914 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092697705 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069973875 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087300941 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093423349 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088056651 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075742361 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077774084 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069582301 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083259244 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074348499 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076960644 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068461756 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078308932 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077414085 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070168262 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077512965 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072036007 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085010233 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082917674 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068315046 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076648738 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080959635 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090576473 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082818503 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081200377 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082450038 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090867132 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072094041 seconds)
  done (took 3.868657006 seconds)
done (took 37.599319178 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.691210534 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.859237667 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.675505129 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.055990486 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.875781549 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.697794774 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.797585446 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.667356936 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.730015994 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.709441319 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.912170361 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.789890996 seconds)
done (took 64.071203165 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.693113285 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.813999544 seconds)
    (2/2) benchmarking "String"...
    done (took 1.939426695 seconds)
  done (took 5.364965492 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.957097584 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.242194067 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.920960422 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.671406238 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.674554726 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.012302232 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.483404135 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202255961 seconds)
  done (took 29.818345964 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.796922819 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.898855363 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.363400425 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.392196908 seconds)
  done (took 15.115760871 seconds)
done (took 61.647794386 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.699720154 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.693146662 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.691691081 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652074817 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.727291061 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.683859332 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.18574927 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.826317402 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.667412125 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.656224396 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.668141415 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.10754473 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.679845624 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.115164275 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.668912948 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.679344597 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.72691067 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.226593693 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.825267895 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.681149263 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.668009939 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.716612582 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.671040371 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.676454925 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.675890196 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.667188882 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.086600516 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.673643901 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.271070514 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.672425439 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.698030751 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.255330439 seconds)
  done (took 201.202974562 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.672322148 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.521763105 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.606131701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.671163252 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.029402824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.852180984 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.789787908 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.116635504 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.670375376 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.671999969 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.823951046 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.672615036 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.864195337 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.619468903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.69824476 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.762473601 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.849721489 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.886011728 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.703305555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.839602075 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.676643404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.671683007 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.600065959 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.817107859 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.703974117 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.773961914 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.847633849 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.701289377 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.863210323 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.808422451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.694397321 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.68170158 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.892301106 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.547229671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.697122514 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.689385272 seconds)
  done (took 165.597065594 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.057211012 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.675382745 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.673989065 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.674283878 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.686631145 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.673312641 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.796578911 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795431627 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.275096224 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.683608786 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725582703 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497112794 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.673601611 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743034525 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.684918295 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.6755061 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.689398374 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.699622162 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675385048 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.67361602 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796461792 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.685008058 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.247364093 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679792641 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.674354341 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.680098442 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.047684077 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673484466 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.679844047 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.934467405 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.674124269 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.675471374 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.554684436 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.940318359 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766051389 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.675006769 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67998916 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.676697314 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.89702014 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.674701764 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.675557672 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.677471992 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.84015715 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.674950359 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799557459 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.673639427 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171076485 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.674876112 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673604207 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.30123625 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.675324538 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.674811419 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.350599814 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.675579051 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.677253759 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.677775447 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.67588079 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.676500704 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.682559509 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.394349684 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.748083337 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.677574916 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.677503464 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.682666927 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.675791987 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.67687197 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.912848711 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.676195332 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.119910931 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.729265951 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.911986349 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795641541 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.677218065 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744990501 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769835134 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.674309018 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.677576093 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.677630822 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.676599093 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.759332982 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674583927 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.806711047 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.68352438 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.679447258 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729331479 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.748937033 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.676888389 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574172715 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.677260902 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.67799463 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978813991 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74301431 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.677072252 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.678399879 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.678131214 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.813872136 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796648409 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454484244 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.67613406 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.478022431 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.680850253 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.852904184 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.678914835 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.865852583 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.678857395 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761747343 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681389505 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.678031456 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.680398461 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.67805143 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.710908008 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.680231036 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.735172894 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.678891598 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.052634575 seconds)
  done (took 391.875976962 seconds)
done (took 762.402418306 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.35634606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.308684772 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.417818863 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.336042313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.310573824 seconds)
  done (took 13.343696403 seconds)
done (took 14.958845598 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.767380797 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.769439543 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.707057035 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.769055468 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.700548993 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.768652052 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.749564014 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.701752369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.741318491 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.705712273 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.738686217 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705994106 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692509287 seconds)
  done (took 24.134198152 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.934506096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.924183552 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.751874862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.917373062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727518199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.910504364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847007056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83380844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.839822289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6960416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692800471 seconds)
  done (took 21.692846741 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925430196 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.927115767 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.757875342 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.923962653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.730968315 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922367979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848329479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835718468 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837631717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698460707 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.697345796 seconds)
  done (took 21.725275451 seconds)
done (took 69.168086097 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.688820579 seconds)
  done (took 3.30524672 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.716840621 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872448548 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.695133941 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.692398609 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.688033236 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.690689666 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.691113229 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.69399813 seconds)
  done (took 15.362304314 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.688204771 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.691023573 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.686104695 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.689422724 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.686412608 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.689134934 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.68669045 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.686137116 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.686013364 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.687664217 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.688608048 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.690967155 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.690699198 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.689147185 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.687033679 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.689065432 seconds)
  done (took 28.631575166 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.690002177 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.685971387 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.687871153 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.687957327 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.686900839 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.686011821 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.688404811 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.687429839 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.687704463 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.686457276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.69273722 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.686973354 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.687900695 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.686326187 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.686944835 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.688559091 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.692893315 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.687598363 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.693766578 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.688377378 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.686741039 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.686712081 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.692676175 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.688841378 seconds)
  done (took 42.143881843 seconds)
done (took 91.06151709 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.581604375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.077938669 seconds)
  done (took 8.280814507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.6924928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.688418896 seconds)
  done (took 5.041187025 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.693911495 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.691827647 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.691509511 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.69072529 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.690954359 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.691708595 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.691729641 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.692143465 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.69059955 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.692053482 seconds)
  done (took 18.539297077 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.691245818 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.695076849 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.686506391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.689815093 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.68913047 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.687756591 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.689937395 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.693941544 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.688386512 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.686017499 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.686527085 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.687708076 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.689903997 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.690431229 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.687592807 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.685241842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.684754034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.684851243 seconds)
  done (took 32.01721381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.69424743 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.687301555 seconds)
  done (took 4.998907079 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.685592626 seconds)
    (2/7) benchmarking "second"...
    done (took 1.685217816 seconds)
    (3/7) benchmarking "month"...
    done (took 1.686851932 seconds)
    (4/7) benchmarking "year"...
    done (took 1.689284576 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.68476741 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.684763069 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.687530585 seconds)
  done (took 13.422912783 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.689642649 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.848647584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.909151261 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.339860377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.688226979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.688004062 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.614387498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.689572846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.692812787 seconds)
  done (took 18.777845134 seconds)
done (took 102.697911556 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.496779478 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.678606105 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.01983752 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.73490977 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.739707737 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.026777045 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.699128337 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.996571259 seconds)
done (took 42.007287267 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.717271415 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.237677885 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.277449587 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.132154153 seconds)
  done (took 12.266461665 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.666885834 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.20195066 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.721138371 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277311921 seconds)
  done (took 19.507742924 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.055644266 seconds)
    (2/2) benchmarking "read"...
    done (took 2.037112332 seconds)
  done (took 5.714946424 seconds)
done (took 45.819897722 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687571856 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.688036684 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.690425212 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.688046688 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.689216448 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.688135735 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.688300526 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.691828535 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.693314618 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.688886651 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.689157887 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689393976 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687137824 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685240599 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691754875 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.686367245 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689966476 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.689514266 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.688759752 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687636103 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.696982287 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688986568 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.687240787 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.688602333 seconds)
  done (took 42.158877963 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.689477671 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.690061999 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.689249249 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.689347816 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.683195534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.689707469 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.689657591 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.687679426 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.687958982 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.689024864 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68837869 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685892839 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.691230657 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.685092397 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685643972 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685091993 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.686071141 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681886373 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.688392449 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.684806791 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.685360347 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683330176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.680952869 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685450154 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.688321865 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.68244025 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.685721541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.682751136 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686017588 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.683740764 seconds)
  done (took 52.212183872 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.692791487 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.693109967 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.685713009 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.685718146 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.685615409 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.687993837 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.68382181 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.688534585 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.68570554 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.686182055 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.686297939 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.69044179 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.686813483 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.688915829 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.687078511 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.687565754 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.68814526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.686558358 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.68417194 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.687170425 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.687925431 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.686293861 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.688214499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.689673081 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.687125207 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.687192863 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687008597 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.687481728 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.688403517 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.689490613 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.68682695 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.689452507 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.689634473 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.688309508 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.690085759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.68766485 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.693562239 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.699173854 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.689325425 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.690451621 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.688931539 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.6892013 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.689035025 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.689409516 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.688607733 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.688993566 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.68860173 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.688188531 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.6898842 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.688499507 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.689662374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.688446097 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.689471463 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.698670013 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.688077553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.689342487 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.688866025 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.68663886 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.688801841 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.694777993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.694352826 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.69396685 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.688834861 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.691661214 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.692002264 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.691143662 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.689914255 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.692339682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.693394834 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.690791803 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.694361687 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.692578976 seconds)
  done (took 123.250226573 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.69183945 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.690079287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.690438581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.692242667 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690170375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.693208975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.688866054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692870606 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691737138 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.692410855 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691241635 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.692708959 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689769362 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.692462808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692781044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.691345628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694234113 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.688843485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.689287571 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.692513044 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.692329026 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.697681288 seconds)
  done (took 38.840604625 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697209686 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695605012 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.693206446 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.698088353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.695502041 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.699742917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.696757976 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.698054855 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697783084 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692889329 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698343532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695440165 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693386937 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69548572 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695488221 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.694468985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697759513 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.689781221 seconds)
  done (took 32.150137274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.694633573 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.694710035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.698009145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.695352136 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.691275317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.695671972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.693326715 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696155468 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.694463089 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692527678 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.693049647 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692094759 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.69319786 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690831646 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693831899 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.691261421 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.696470054 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689823504 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.693088916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690027175 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.692570246 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695898484 seconds)
  done (took 38.885748789 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.693974102 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696271634 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.692860917 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.690157205 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.690895957 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.693200106 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.694999655 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.691851571 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.693170193 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.696675395 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69184177 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.697096297 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.690870763 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.694892026 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.692320457 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692579427 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.69545115 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.692505172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691857391 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.692351173 seconds)
  done (took 35.490359782 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695583213 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696320045 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.697172072 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696160856 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.693456463 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.693811135 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.69477915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.698401303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696201338 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70014767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.700354347 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698040963 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.696897875 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.700793403 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.6974326 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.701441476 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.701073439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699893422 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.698395605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69829853 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.700405194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.701511921 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.695347419 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698524236 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.699201179 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697126068 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698360246 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.698549054 seconds)
  done (took 49.16918108 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69679994 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.699670606 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.691964269 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.692255418 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.690964154 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.693305227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.692503342 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.696482994 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695157751 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693782969 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.698323555 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.70029646 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.696729455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.69800675 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.69946636 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.69704851 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699964297 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.69506815 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696369748 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69879835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.696286886 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700140418 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.702459563 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.697759901 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69736277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.700589392 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700304883 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.699664834 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698666326 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.696950023 seconds)
  done (took 52.543927635 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.716811197 seconds)
    (2/2) benchmarking "in"...
    done (took 1.718455413 seconds)
  done (took 5.065710726 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.697527905 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698165001 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.697016693 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.694901907 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696432174 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.702298841 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.701358362 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692777097 seconds)
  done (took 15.209942918 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.698534564 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.697016172 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.698407572 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.698933481 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.699169407 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.700025812 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702102151 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.698830167 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.699787763 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.702912945 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.704550884 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.707719258 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.701454268 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.697948535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.699843707 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702257429 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.701522716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.699941418 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.699537984 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.7036888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.701926477 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702813026 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702521476 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.70229362 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.700759059 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.707445089 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.70498953 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.702397757 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.700616548 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.70443614 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.700309772 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.695857493 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.699655519 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699250524 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.699967416 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.700997102 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.707661848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.699435446 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.707326846 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.701018311 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.70001749 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.697510417 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.701106252 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.701899475 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702887592 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.701724798 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.700011626 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.697239531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.700508461 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.706461161 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.708423422 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.69977415 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.696581322 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.701837471 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.700732751 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.70558585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.702289295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.704526825 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.711297384 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.709584533 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.712058229 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.707949739 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.70223103 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.702117899 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712854608 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.726110761 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705841972 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.699030989 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700440998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.702490675 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.705898927 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713194262 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.710996634 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.700306888 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704216585 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.702399799 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702983278 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702238228 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706466886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.703383953 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.700414767 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.703504478 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.710707819 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.725572186 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.700679759 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.704384817 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.702244755 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.702146798 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.702516737 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.713178734 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.702314718 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.703061074 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.703096381 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.702406864 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.705162728 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.702524147 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.700611525 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704123697 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.700059411 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.707016775 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703519338 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707374913 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.712990817 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704791768 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.70459634 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.710233809 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.705872696 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.702783883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.709479312 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.703492087 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.705156814 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.70545303 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.711810431 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.703356458 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.70655576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.712461869 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.708479255 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.706453548 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.704143024 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.701778734 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714705494 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.729561838 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.704732969 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.702562861 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.707234503 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.714107745 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704315989 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.706449896 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.709886342 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.702285087 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.701341261 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.703945029 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.70497662 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.703821172 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707627812 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705889464 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.699858721 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.703480639 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.703973835 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.70877761 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.709632981 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.704584181 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.706983582 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.706123811 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.70377821 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.703668182 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.715195522 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.702914328 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.706798509 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.704791824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.703788958 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.703736206 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.709650562 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.70556713 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.705973351 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.705437064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.70502839 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.707783452 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70642592 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.704893029 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704653922 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.706994941 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.707524992 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.709165796 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.708673052 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.704540485 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.702567212 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.706373127 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.70750832 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.709311486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.705388577 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.707543388 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.709377128 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.717506687 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.710114707 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.709785013 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.711085124 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706753719 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709095729 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.71063586 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.71138393 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.721143908 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.706576184 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.711736382 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.708423316 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709545905 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.710060153 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.711471501 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.710223037 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710823814 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.71109476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.718773228 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720110091 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723090954 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.712022014 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.71140209 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.711202226 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.712634317 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.717790416 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.713500083 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.71459596 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711758759 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.709202136 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712413752 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.711049285 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.711571112 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.708508527 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.712042815 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.709854322 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.712853513 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711309153 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.711313583 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712491195 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.710174971 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710985009 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710864616 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.713887806 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.710086887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.709385275 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.710158419 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.710738862 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.711578242 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.719727732 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.709815456 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711017122 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714058269 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.714528071 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.710399409 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.712586356 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.712964161 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.71046215 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714708736 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.713620495 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.71266629 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718844102 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.7150666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.712163934 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.718072672 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.715457696 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.709905202 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.713716074 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.724032947 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.712627671 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.716091327 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.713853298 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.714967475 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713560771 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.718399635 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.71204743 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.714789441 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.71334143 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.71962224 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.709799019 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.717076481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714448724 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.71525411 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.716337336 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.715892739 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.714078374 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715809121 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.713910518 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.715702152 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.716155373 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716029877 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.722500862 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.722698328 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.718452876 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.717216456 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.717546159 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.721538103 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.717013445 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.716324384 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.718947205 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729415276 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.728828316 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.723877435 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.719287745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.7158339 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.717933853 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.716128978 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.721099279 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716294446 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721198215 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.713389941 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.718486233 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.71568317 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.718728888 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.717259725 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.718386403 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.717002585 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.723332243 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.718306167 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.72042666 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.71844297 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.717341121 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.718746462 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715966686 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.717888249 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.723212358 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.721724874 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.718766103 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.717693005 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72660729 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7189655 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.718889082 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.721074675 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.717586391 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.717412056 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.71797261 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.719301736 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.720600838 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.724195885 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720901712 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.730089364 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.718017438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729289067 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.72076117 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.722497874 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.725651948 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.716160597 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.718965946 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.720562594 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.716556282 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7273587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.717721401 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.722225791 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.723197775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719383396 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.722693997 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.72145546 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.717775694 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718762022 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.722129452 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727793635 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.723121176 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.723458843 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.721673491 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.721050744 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.717355324 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.723046668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.721031571 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726616427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.723471935 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.723038239 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.722268918 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.72488518 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.720825902 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.721873832 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.722129025 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.716881354 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.723392876 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728974651 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.72411924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725517867 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.722476582 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.727194001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721762889 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.728697393 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.720578081 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.721753176 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.724684852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.726198568 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.722825205 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.723497136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.724251376 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.724202065 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.724023566 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.726149511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.720768286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.7261343 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.720636343 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.72273841 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.723005406 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.734670615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.751385537 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.726215272 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.730409539 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.721601575 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.726184023 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.729342697 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.725200357 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.722640527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.727276816 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.73710048 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.732794669 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.724025249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.724894921 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729652828 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726283715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.724102237 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.724131853 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.72196053 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.723974825 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.726460046 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.726924996 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.727952357 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.723111193 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.72656348 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.723571965 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.726345355 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.731696407 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.726703985 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.727968944 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.725166991 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.724291009 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.723133977 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.726383629 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.724455657 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727442722 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726393255 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.727029971 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734289555 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.7316318 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.725393099 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.727272223 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.724071002 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.724670183 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.723872456 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72332011 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.723097407 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7266542 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.729897343 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.727709136 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.727072218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.727158083 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.728917163 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.729357603 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.727757079 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.729677825 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.736031459 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.729424675 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.725073623 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.729356772 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.729994897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.728755428 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.728509783 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.734351179 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733426821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.740012334 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.737612021 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.732099493 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.729334375 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732801876 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.736050756 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.726302257 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.728927964 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.72912013 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.730128044 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.728138456 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.731555937 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729975041 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.735707725 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.729054619 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.727623078 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73729166 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.732252961 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7303547 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.728590082 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.735472312 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.726676603 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.728142873 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.731097742 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.729021494 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.736460116 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.730527949 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730488454 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73265514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.728245368 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.730727549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733738045 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.730648749 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.729092384 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.729055189 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.729752124 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730699131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730342881 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.727887411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.72938501 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.730906807 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.732124771 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.738524206 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.727203624 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733108126 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.731778671 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.733250035 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729295404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.732326821 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.728232673 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.729177732 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.73460402 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732561667 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.729679828 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.734507594 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.731170812 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.734392592 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.733889347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.731923019 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735024516 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.74373941 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.742098016 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.732038214 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.731065877 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.732510991 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.735460471 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730739637 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.730526335 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.733771859 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.733975216 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.733160683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7318882 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.731486847 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.734540415 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750702852 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.734233324 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.733005381 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.731669944 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.737825164 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.73435166 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.730973014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.731732356 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.733681941 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.734712137 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.73830092 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.732135032 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736457123 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731908037 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.734027784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.735788704 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.735276737 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.742892273 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.737992424 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73653642 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.734118233 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.741032667 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.750673984 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.734541396 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745844893 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762264855 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.735103869 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.734025107 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.730394514 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730217351 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.73436636 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.733462371 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.730544889 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.734625701 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736946415 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.733157879 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.734469304 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737963691 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.7360367 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.731396561 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.73905239 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.733209862 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.73453042 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.730040466 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.730483513 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.730832624 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.732079419 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.733154166 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.736235773 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.736490735 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.749420569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.74632337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.735823229 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.733728522 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.731736478 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.738849136 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.736750917 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.744533534 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.743262784 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.731920182 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.733557425 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.737118707 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735487027 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.732377824 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.733732807 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.734128039 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734494578 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.732925795 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.746189673 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744442813 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.739418706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.731511692 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.731515679 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.733595486 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734502388 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.735982073 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734852828 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.734284452 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.734307674 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738114368 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.736314262 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.734804465 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.738785174 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.74253355 seconds)
  done (took 1026.393893103 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731628789 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733376417 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.73446915 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.732876895 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73359178 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733832177 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733047659 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734421566 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.733359459 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.731443911 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.734048068 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733085206 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.732993171 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.734529546 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735938307 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.73409478 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731061133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733995103 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734500559 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73723304 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.736630836 seconds)
  done (took 38.071831467 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.741983188 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.738025125 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.736021839 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.737130768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734869139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.737578009 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.733798191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736829931 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.737050008 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734900918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.737630315 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737615551 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.735957885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.73470905 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734861564 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739261889 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738391139 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736913645 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.738631303 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735002802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739516722 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734603057 seconds)
  done (took 39.880022615 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.739669339 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.739424047 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.738646758 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.736042037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.737745082 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.735412275 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.74019092 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.738026063 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.739378361 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.737609128 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.738148584 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.738621214 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.746844983 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.744950761 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.74056174 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.739410024 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.883646561 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.739032795 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.740184209 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.737435597 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.736965505 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.742929432 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.735489676 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.737743882 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.739294173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.737247819 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.740790686 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.739974242 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.739205455 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.74365202 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.745177852 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.740172031 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.73900689 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.742312526 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.742594264 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.744356526 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.745484846 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.741000339 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.739129196 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.74216121 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.751206573 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.763074894 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.74136189 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.748783589 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.741067185 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.742634686 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.744973761 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.749575256 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.735992106 seconds)
  done (took 87.131446053 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.740377306 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.741376358 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.738216042 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.742484214 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.743308013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.741584477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.742406096 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739683463 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.739547196 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.739996254 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.743156263 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.7401344 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.737460782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.740500538 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.739245096 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.737795275 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.739480282 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.737354358 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.736050253 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.738296655 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.737924418 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.739123046 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.741792624 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.73833383 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.74050358 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.737889555 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.738006287 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.739139247 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.739128194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.737228488 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.740297525 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738950638 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.740729823 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.738163153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.738667445 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.741622946 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.741797177 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.734475141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.740925115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.741310911 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.744632473 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.743929957 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.741253526 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.741445551 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.738623882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.738212561 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.737616934 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.739311299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.740938609 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.738298162 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.741986484 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.738816947 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.741663727 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.740869094 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.743716233 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.742191136 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.740539445 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.739974919 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.743787366 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.737865587 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.740689202 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743491184 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.738053998 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.742354104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.741992794 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.743297244 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.738795757 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.74327584 seconds)
  done (took 120.004633556 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.74202911 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.745071877 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742724748 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743686636 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746225428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.744989153 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.745804535 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.744027176 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.743924968 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744730409 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747070206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742631416 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.746251377 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.745309854 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.744281958 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743651265 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742817369 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744024781 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.743536489 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745880618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.743483156 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.74454409 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.744879188 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.748221565 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74768855 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.744547884 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.745797146 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.748809183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7485038 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.745338496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746707641 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.747869478 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.747887747 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.749023309 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.746058348 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.748346653 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.748656629 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748985122 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.746050296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.748315131 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.74936216 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746466136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.748501746 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.749042931 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747091121 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.748448356 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.748450868 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.747226309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.748416662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748281363 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.746261505 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747717062 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749220283 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748331233 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.749402154 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.74766595 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749276655 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747084158 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748148134 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.749043621 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747102929 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.748649427 seconds)
  done (took 109.96001128 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747960729 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747857216 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.744876958 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.745397313 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748120305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745150238 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746706339 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.748914238 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747654074 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.749417191 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747959925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746308206 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74642949 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747755034 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743960128 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745328847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74320587 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.744509301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748200202 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746793382 seconds)
  done (took 36.608579286 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.746821342 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.748181448 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.745399925 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.745423456 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.750567027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.745684677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.748944648 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748034517 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747783497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750691156 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.748828221 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.748229987 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74667782 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748555585 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.75005777 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.745965238 seconds)
  done (took 29.642049255 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.744808469 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.747934309 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.748660717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.750958828 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.74895103 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.746258769 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.752275474 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.748162449 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.748377374 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.750960664 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.749621802 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.74945455 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.752192742 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.750902231 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.749730742 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.75188034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.748707663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.748298274 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.750945015 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.749139468 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.747306302 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.749415082 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.749764503 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.753027453 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.747949428 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.749455531 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.749306021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.747712327 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.750359432 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.751857312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.748747511 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.748568641 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.749010402 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.750786089 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.75430655 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.74939393 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.752199462 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.753037565 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.752932383 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.753750512 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.753515574 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.749089772 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.752182954 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.753823666 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.750272688 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.754768409 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.751553413 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.749991786 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.748692961 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.750852339 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.754645322 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.756102573 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.75289722 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.754232501 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.753282283 seconds)
  done (took 97.963524952 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752054169 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.755621216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.752910617 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.753529853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.756194317 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.751315286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753862765 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.751680508 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750939416 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752996997 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.74984667 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.751188839 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749367317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751732153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.751270154 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754166752 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.749510231 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.752800451 seconds)
  done (took 33.222054972 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.752513682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750337534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.754542254 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.750315923 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.751881887 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.754735288 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750642876 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.751484654 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753170501 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750848647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753352535 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.755682114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75227529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.754570152 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.752484791 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751942451 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.754276269 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753749141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747807303 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75034628 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753406026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752270734 seconds)
  done (took 40.2338097 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.75254101 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.751061151 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.767526936 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.777745241 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.775277021 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.79138121 seconds)
  done (took 12.295051214 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751560095 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753337109 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.750171004 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752006591 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754265385 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754359592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751203669 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750217045 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754008392 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752263639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751037482 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754730153 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756598648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75251056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754691475 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760115681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751025411 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754413558 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752701739 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75569798 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752945143 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756996996 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755131768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753048811 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75434237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754490105 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756990931 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752784667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750388122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755270889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756622716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753035231 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756369946 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754426634 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753220176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755851073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75410185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756468948 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757044624 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751835789 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754724874 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756755328 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754473189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754670174 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758198526 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752589776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751474293 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751712807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753750085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757257142 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756042134 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751615908 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755729481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755245469 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753418987 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752886439 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75527216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75581831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754975991 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754518157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756402078 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758825463 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754627753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756449549 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757115141 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756452372 seconds)
  done (took 117.474891223 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75958572 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757044657 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75673835 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757778828 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756512946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754472634 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755677638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755287788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755816692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755335584 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756223376 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757746031 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755186052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75529174 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750402177 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758223218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757959403 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755913921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7554216 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758482378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756395824 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757349039 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756747954 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756672773 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757336304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760340933 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758154669 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756936826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757677691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755899572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756393504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756689438 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756613966 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.758208845 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75991517 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759042869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756147515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757788732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757775758 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759404166 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758093317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75792745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756056108 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757727604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760633504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758096214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757649305 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757343174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758006275 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756664492 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758982596 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75809599 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755925224 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758265014 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758099122 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757160058 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758007205 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758115811 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755914349 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762129069 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75837717 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759578024 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761131562 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759815521 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757698076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758000302 seconds)
  done (took 117.67770121 seconds)
done (took 2393.149707957 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.838145994 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.899427829 seconds)
  done (took 15.425620505 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.920302617 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.86747944 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.754872405 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.802744151 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.754078078 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.768286428 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.774750246 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.75168229 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.752813047 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.754309619 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.753365876 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.938525653 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.756710612 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.750915434 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.7545156 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.84699385 seconds)
  done (took 50.38860603 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.756812245 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.76001885 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.769339123 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.759710979 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.76022348 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.777858619 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.7911751 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.760078103 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.81723532 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.769043634 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.884506382 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.76682365 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.757893061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.814519059 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.768789696 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.77446064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.847308915 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.832081004 seconds)
  done (took 33.851319205 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.836004915 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.761139284 seconds)
  done (took 10.288867635 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.779286504 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.747680786 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.771085891 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.751368468 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.763406011 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.763510586 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.770933037 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.758996896 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.751162105 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.761904906 seconds)
  done (took 69.306105759 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.764606175 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.760024723 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.759427046 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.757492346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.751007011 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.752274095 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.759791256 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.753127648 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.453752331 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.796100091 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.767700201 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.765929882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.758972352 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.759871079 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.755648828 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.781114076 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.885877616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.755247412 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.755397429 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.762855626 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.75893089 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.813927147 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.769015373 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.757673852 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.789366896 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.450621774 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.76653928 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.764782705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.925478833 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.755348469 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.758508756 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.758215211 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.760642208 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.136744653 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.0365084 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.756817109 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.767003503 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.768550888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.755577701 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.873586007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.759826956 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.76484334 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.734133376 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.014730374 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.863317789 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.801702304 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.137651468 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.762628996 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.760918941 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.790663501 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.760290248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.760742051 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.772635906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.270073045 seconds)
  done (took 126.623789781 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.756085376 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.018638079 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.910430753 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.75417201 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044234392 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961743578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.753388283 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804820443 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.755348362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988255376 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.920750355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864667742 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.757487522 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.755088913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755030338 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.752847473 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.91693811 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.828601255 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.7552781 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.75231127 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789068614 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000761517 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.88335472 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.756028869 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.775881241 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.971511728 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.880381913 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.86356347 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.044877898 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.755129267 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821834992 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.755994541 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.756592113 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.752454511 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.913692754 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.851713573 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.845683555 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.754955129 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.755385797 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.754022967 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.430962232 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956608379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.853440483 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.900271372 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004829013 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.962560287 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.545417012 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.754533495 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.493727594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.920234518 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.991094215 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992480275 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.88344942 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.756910669 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.269801124 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.754332783 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75376631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992610671 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987933415 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.858663891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.758289971 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.756237132 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.755612832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006396832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.757954352 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.852299541 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.758419029 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.755633736 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.855007783 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865715312 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.989587595 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971487781 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.793427043 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.078191666 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.235610559 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006901845 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.82721756 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993259447 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.755833666 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.755308947 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843277776 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.601942172 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.918489154 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007973903 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015500171 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79569758 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.485029797 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.757087735 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987106885 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983389422 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.062552251 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000405963 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.911151139 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.949622047 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.757463547 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.7589359 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.005028354 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.896679533 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.759393978 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121825907 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994662322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.333006503 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.788058041 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071861813 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895870046 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.762425281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.402778213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.75898506 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987492156 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.801356806 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.759584458 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.759518952 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981583584 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.837313292 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.758237097 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.393629924 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.823319184 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.762470184 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995828835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.759014247 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027160484 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.759812227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000962082 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.44714978 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793833045 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.989461119 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.0018319 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.759655203 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.027748424 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007095362 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.879169839 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.983493954 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.383148012 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.759671486 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051617259 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.761738066 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.76047629 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.938572481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.762021142 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.908157263 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.762379598 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105057499 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791012776 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923834055 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.765124096 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.019815639 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.797481741 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.814139093 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.761715107 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.888039538 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.762901075 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.640991112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.916371447 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.765068965 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.759225016 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.503353456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.761191846 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919696987 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997154732 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.785557438 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838297709 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430500759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.761014829 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849936494 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788603523 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.109553483 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.761884772 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.919931313 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.764290608 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302217317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.761013916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.008336147 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.947131525 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.764668092 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.760510769 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.672657742 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.763227104 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.764551331 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.927683443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.244626641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.762412043 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971982877 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.765211522 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.899952467 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.764654008 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.840126324 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.118089793 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.762818875 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.762141952 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.761877159 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.764127202 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.765414666 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.030130315 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.794260972 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.295814991 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.903545129 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037034009 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.084677888 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.017686469 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.809516347 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.765334657 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.01202696 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.76447735 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.830099587 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.76590632 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.78820524 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999821718 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.765420202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976842044 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045958866 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.70755425 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815809196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.766156922 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764117721 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.641090388 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.920772847 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859544372 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.766104266 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.769126128 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.885136896 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.893604476 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981378622 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.769016121 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.93647879 seconds)
  done (took 879.710849737 seconds)
done (took 1187.283581256 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.76796603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.763561645 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.752250872 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.76825505 seconds)
  done (took 28.751327883 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.774837485 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.773932137 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.776481388 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.774176501 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.774484195 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.774620387 seconds)
  done (took 12.34917837 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.786710199 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.76702124 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.769235763 seconds)
  done (took 21.022423335 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.842918619 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.190909862 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.883933444 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.221250345 seconds)
  done (took 9.84104198 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.776200851 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.776772371 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.776167362 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.777433917 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.779067299 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.779867021 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.776443827 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.778975846 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.779363814 seconds)
  done (took 17.704338044 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.109561033 seconds)
done (took 95.476778781 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.945532985 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.998989468 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.789642131 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.043271555 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.797688069 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.86499782 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.408560233 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.757704077 seconds)
    (9/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.762441476 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.908333962 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.755839825 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.68351674 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.818401562 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.373407577 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.890911177 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.795703695 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.833277721 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.779302405 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.133660401 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.756081756 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.461859725 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.304496865 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.87154467 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.776931261 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.766455348 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.830111781 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.037610002 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.119560651 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.877210911 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.834834537 seconds)
    (31/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.723735538 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.799866557 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.756694495 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.816759674 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.853634752 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.756096732 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.830521268 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.226986535 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.985980528 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.881036115 seconds)
    (41/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.03234131 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.954291784 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.258120594 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.866215664 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.940343154 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.11626288 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.939450705 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.861485287 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.072089102 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.902184241 seconds)
    (51/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336098772 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.83282681 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.783620152 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.836240304 seconds)
    (55/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.901215825 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.975110308 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.775753432 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.887536464 seconds)
    (59/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.62278474 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855970491 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.032296071 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.794888368 seconds)
    (63/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.785080972 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.775254613 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.083746875 seconds)
    (66/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.436425692 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.772226783 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.915169706 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.761734264 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.454916905 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.915026552 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.762106446 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.992582884 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.471847501 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.774042964 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.861037707 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.774593794 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.763947817 seconds)
    (79/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.82583037 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.810048881 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.168213292 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.685967509 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.793606524 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.865249802 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.791960115 seconds)
    (86/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.282637689 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.966272866 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.042255606 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.970457514 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.128370388 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854455548 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.055975572 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.085631456 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.120832228 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.954139358 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.792918227 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.075121343 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.058020046 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.555231101 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.850892215 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.783155575 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.855017741 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.587559906 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.699451163 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853329154 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.058011659 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.113393219 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.074529784 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.327885645 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.77260289 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.826978378 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.027760452 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.778312197 seconds)
    (114/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.270616541 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.773334179 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.461522969 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.185936376 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.75915686 seconds)
    (119/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.40071262 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.48033287 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.079779505 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.880607322 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.146947824 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.856840609 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.942617651 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.308567219 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.793665568 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.855231205 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.242982108 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.035550121 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.056191092 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.99168331 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.050409845 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.245363386 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.421188573 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.165230712 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.915856497 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.834368596 seconds)
    (139/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.911448219 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.402512226 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.768997286 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.101244472 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.489705586 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.024070703 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.937742995 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.914802777 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.162469077 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.777835028 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066164838 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.806075787 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.774041332 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.912931713 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.287143282 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.832943277 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.567776197 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.77804903 seconds)
    (157/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.934265912 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.908109117 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.797653496 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.792715148 seconds)
    (161/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.030472562 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.847519792 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.77370928 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.186359871 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.778442048 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.9906585 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.159328877 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.760755518 seconds)
    (169/309) benchmarking ("sort", BigInt, false)...
    done (took 6.861597557 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.082774282 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.778052799 seconds)
    (172/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.259589323 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.059925215 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.888892927 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.966099648 seconds)
    (176/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.737113348 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.802428539 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.808181041 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.88827669 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.020616712 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.807933701 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.782531625 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.419030959 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.950243875 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.811591898 seconds)
    (186/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.868808221 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.34908016 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338877389 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.801863321 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.917484326 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.837229417 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.097024753 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.700994076 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.861527866 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.073374066 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.900262407 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.803033512 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.161429706 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.177608913 seconds)
    (200/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.134015983 seconds)
    (201/309) benchmarking ("sort", Float64, false)...
    done (took 5.58683935 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068625848 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.009978662 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.175264309 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.721182314 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.994641339 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.778869928 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.909577259 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.995393172 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.779134856 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.857566202 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.175114707 seconds)
    (213/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.915588825 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853378248 seconds)
    (215/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.8585246 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.464047161 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.787529578 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.222528079 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.85983824 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.801702081 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.956969092 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.290475377 seconds)
    (223/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.120087244 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.821286552 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.152815798 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.700625705 seconds)
    (227/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.981920174 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.243810804 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.80565069 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.098399505 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.112715545 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.649278803 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.599432918 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.756607361 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.001911841 seconds)
    (236/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.911612031 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.950756745 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.806242225 seconds)
    (239/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.976152544 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.762407361 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.781803365 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.040328833 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.68559145 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.145700551 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.121384606 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.900036147 seconds)
    (247/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.942864643 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.880761095 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.791551295 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.91956621 seconds)
    (251/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.458972073 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.864460773 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.345087988 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.766652545 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.960037799 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.151592155 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.24734918 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.766996545 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.562263167 seconds)
    (260/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.8680119 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.745471025 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.458642072 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.758324194 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.790930842 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.123236293 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.084421517 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.678981675 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.006855394 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.454140783 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.949323384 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.950209432 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.953663658 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.840430273 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.738102472 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.931420007 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.837070762 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.856586911 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.75415698 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.26865062 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.832683258 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.859723614 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.818218359 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 5.467727022 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.839998754 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.765237508 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.893477279 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.554641821 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.774180704 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.732640294 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.383924648 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.774247579 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.882919528 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.770430543 seconds)
    (294/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.89326146 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.013038285 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.762147487 seconds)
    (297/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.856674601 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.854186293 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.411935964 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.15991244 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.996247461 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.752138655 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.102326033 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.775412061 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.7750543 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.765858045 seconds)
    (307/309) benchmarking ("sort", Int8, false)...
    done (took 4.718075673 seconds)
    (308/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.686096854 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.141710998 seconds)
  done (took 986.199996149 seconds)
done (took 987.96815212 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.781783268 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775228857 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.759610088 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.781150038 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.872289805 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.78850304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.770991767 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.760832205 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.806546269 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.808832712 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.758809219 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.787709552 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.762492549 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.760548004 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.760232318 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.774747497 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.073325472 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.791133585 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.778033643 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.770000009 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.778814677 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.758558824 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.810168802 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.787751454 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.764448317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.762421019 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.764205414 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.781446796 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.872840814 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.764434244 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.763066221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.772127239 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.071224044 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.788911043 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.75473893 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.781267723 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.771949094 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.769724385 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.76520065 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.792378958 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.217787296 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.769704202 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.762609196 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.76237448 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.762063772 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.765619719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.763298222 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.769643145 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.774788466 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.777081421 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.212794971 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.784702856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.764840878 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.762286383 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.771910126 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.762845686 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.769694517 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.778783743 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.782301146 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.778772338 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.062583585 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.796248185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.764491338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.778814507 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.770426709 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.248577505 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.765103459 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.767069538 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.220393376 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.775524435 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.251313623 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.779024697 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.764393722 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.777174701 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.795895917 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.073146385 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.78930763 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.763014024 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.771246584 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.762296077 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.773231456 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.777389528 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.768256682 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.764657664 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777312493 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.791960178 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.774823875 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.764525319 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.772853157 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.783621947 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.773431614 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.774206829 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.767721298 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.758640693 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.775466772 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.770858355 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.768018682 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.767872541 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.768659207 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.775477971 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.215949155 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.788739704 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.761098753 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.760960282 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.76465258 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.778788009 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.219874913 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.772814694 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.787425982 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.813209157 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.767856861 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.064534533 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.798212057 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.780363392 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.773291372 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.770111618 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.761490339 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.064571914 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.246298759 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.78854234 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.767750203 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.765863753 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78358248 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.770112091 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.763097186 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.07638662 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.797217552 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.780917337 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.887883819 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.776968826 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.797217741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.764245015 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.771386276 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.795194266 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.782866755 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.797979845 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.771762541 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.780786656 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.783548917 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.763328971 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.77796458 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.777652707 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.768793297 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.77383775 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.761449292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.795328751 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.779527774 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.780162867 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.787542696 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.889621325 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.762714131 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.063169873 seconds)
done (took 277.886123466 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.834011863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.756699712 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.858009358 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.760629551 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.844300259 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.845566808 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.755604458 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.756070009 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.756453715 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.131662127 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.756157781 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.754517492 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.750844677 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.753093411 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.837579409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.755337617 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.753076846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.091249814 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.752758693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823772473 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.748749147 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.747012086 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.750999776 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.124436875 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.743563495 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.747373441 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.820878394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.745688974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.084676633 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.741200653 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.734941097 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.083326401 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.835924081 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.769714341 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.752892436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.749436811 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.825604602 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.747512689 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.822307167 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.822534626 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.839595468 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.771857195 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.741523238 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.733354192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.739875518 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.738443779 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.733549544 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.764675736 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.737600775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.732429244 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.068937017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.742353821 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.739190129 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.728863983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.729888292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.75421273 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.731797645 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.730627019 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.820427829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.730594072 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.79139169 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.105621607 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.100699196 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.727079331 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.725063624 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.724933022 seconds)
  done (took 175.903866049 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.792297979 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.799817011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.794300096 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.730520347 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.775679478 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.794843205 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.731407544 seconds)
  done (took 14.075090277 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.73289857 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.727522247 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.775922532 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.776649674 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.727409486 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.877268989 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.727378 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.739051739 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.724930889 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.778607551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.728716676 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.727715263 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.734433932 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.722308278 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.77558087 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.739423094 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.843320055 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.728069858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.728057584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.878778703 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.725896902 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.735194351 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.781472187 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.739959871 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.728930503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.734289412 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.321243999 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.729550066 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.725599774 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.727890473 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.724853731 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.770516353 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.729021455 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.727401409 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.725554376 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843400158 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.728620508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.726367854 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.728919668 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.721739504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.728377698 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.727352366 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.729284038 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.726778424 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.728398004 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.752501994 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.729182531 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.729697886 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.728405975 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.729522003 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.780011741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.730190098 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.726309565 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.726790071 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.785267356 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.736229506 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.730035708 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.726661861 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.729700351 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.726359638 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.881658006 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.777918455 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.729844325 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.777882648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.730465717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.730806495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.729948148 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.729765273 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.82464437 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.730618593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.778325394 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.727440665 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.890313064 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.754204235 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.731167116 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.73286302 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.732696011 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.73072562 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.728227858 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.73700104 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.728001418 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.733048451 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.7375278 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.728531571 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.729097537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.843723994 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838876162 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.728548398 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.744947197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.738148494 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.727689981 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.784540654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.730496288 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.728890743 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.785430961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.845768227 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.787392785 seconds)
  done (took 192.064525226 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.735769133 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.739257148 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.73204125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.747148864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.731924147 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.731217432 seconds)
  done (took 12.07934145 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.734632246 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.733428569 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.732261846 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.73267824 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.731799097 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.732298553 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.732590761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.733427101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.736177064 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.732022662 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.734124863 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.733680735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.734457506 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.733051398 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.733325018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.732692676 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.732882099 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.730051499 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.732194098 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.732098476 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.891810507 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.73329778 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.733231833 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.733797567 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.737205289 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.733172292 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.741326687 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.732794994 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.733760191 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.742047059 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.737709576 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.734712438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.734455116 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.739888094 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.737331511 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.735789912 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.737546903 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.734773668 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.731106837 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.735208451 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.735708466 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.734480805 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.73430844 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.734766182 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.735506198 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.739455436 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.738563254 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.741582595 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.734980185 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.734632103 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.735065417 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.733910648 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.734896198 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.735171229 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.736172072 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.740552449 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.739509702 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.735145667 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.734647865 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.735418898 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.736117398 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.736549689 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.737272611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.740042584 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.733391868 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.736883382 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.736097933 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.739639073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.735853092 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.734405215 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.73688761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.732333976 seconds)
  done (took 127.75538361 seconds)
done (took 523.586539568 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.820533825 seconds)
  done (took 8.486311882 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.774823335 seconds)
  done (took 8.540531779 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.45117243 seconds)
  done (took 10.116962201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.736088145 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.793838006 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.732514935 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.731917835 seconds)
  done (took 28.671666158 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.769621237 seconds)
  done (took 8.434991715 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.744237467 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.728251397 seconds)
  done (took 15.175594439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.766508037 seconds)
  done (took 8.433343926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.051925 seconds)
  done (took 8.721919073 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.748018616 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.767953229 seconds)
  done (took 15.200651997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.716547055 seconds)
  done (took 8.383350667 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.339820678 seconds)
  done (took 11.016113718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.739433258 seconds)
  done (took 8.422356901 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.771017982 seconds)
  done (took 8.438757099 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.734859025 seconds)
  done (took 8.401576916 seconds)
done (took 158.109512639 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.736544886 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.730585073 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.73088746 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.729379881 seconds)
  done (took 28.594956171 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.7700501 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.782138081 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.77118513 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.780591243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.774136315 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.771340776 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.762380293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.762849681 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.782469921 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.774453289 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.773065437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.772525459 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.770755185 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.763104612 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.773670106 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.773045222 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.782512635 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.773555261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.763437115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.774192116 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.738152521 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.782314518 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.774738995 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.738958401 seconds)
  done (took 44.153489074 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.938944159 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.808849995 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.891805143 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.789213178 seconds)
  done (took 9.098236401 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.789714173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.792094905 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.803126258 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.84146634 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.86532118 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.800889298 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.76234519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.760269717 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.746126718 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.793036957 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.867223462 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.786054603 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.875119687 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.739555706 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.921172326 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.739202445 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.739190351 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.79068487 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.842306594 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.855258069 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.739020846 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.790532099 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.79410309 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.78756851 seconds)
  done (took 44.890550302 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.738114022 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.746261198 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.743950833 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.739221093 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.738428809 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.738599582 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.74502321 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.740039414 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.760838584 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.740364379 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.737610909 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.738741817 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.737526838 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.739523025 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.739043752 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.75156917 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.752749182 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.739278053 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.741759152 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.745752888 seconds)
  done (took 36.525015824 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.734050586 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.653068981 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.085961808 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.990850206 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.734635807 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.733695074 seconds)
  done (took 30.603508827 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.752745882 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.745851667 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.739476239 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.797357654 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879782517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.750350808 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.740001483 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.750350549 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.78572684 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.806476508 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.761334085 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.766526696 seconds)
  done (took 22.947090661 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.735982029 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.735096504 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.734449702 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.751054242 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.751602396 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.748090268 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.746518741 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.733608072 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.75377228 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.760514151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.749668272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.752790204 seconds)
  done (took 42.627486407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827861973 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.626039643 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.771331789 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428664439 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205727453 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946771883 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.251754461 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072969599 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.739797686 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009717618 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881569369 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848291359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990156356 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737404223 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.75268566 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.220567697 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039508122 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969208731 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767973576 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547551395 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790000786 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345114897 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.656610666 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799427907 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.949677524 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.871258814 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.99886605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.701777683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883361358 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779226608 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748371535 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.73884684 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012994459 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116727065 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844978069 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748895231 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35661493 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.457545464 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.728148208 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.548644412 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584337075 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871949214 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748791479 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.739683024 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.674412149 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311694744 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118911199 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.746144797 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.451654538 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.741439064 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751948591 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829757655 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.744439728 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.556394805 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651947711 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.017137207 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.739135186 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747968146 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325260868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888991848 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35474524 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.723145374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.937601084 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548814409 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145044296 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.895796446 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.747258753 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746498997 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677578056 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.554484286 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801267222 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889808547 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.764465759 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393949317 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060881176 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.932416877 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689294031 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032791566 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.069061946 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.72271006 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971771049 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.697346454 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675186575 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.622564376 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.674251234 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012402783 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78166096 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.379355263 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786839047 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072028123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.751854622 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757826502 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747225644 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.964117027 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.307346212 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740703887 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.619801864 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8940235 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762197322 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07348888 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675367474 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.74445963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995641294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.952354931 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.049300985 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.267130265 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904014002 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.741580075 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.821052133 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.738843761 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795756075 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.017631784 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80497338 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89194716 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810341581 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.700939512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059152501 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775780493 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.91042192 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.843501458 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876736402 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.080961104 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037569167 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810678706 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.746815301 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.747090389 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665664361 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304673442 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.015211616 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.749578546 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329061976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802361595 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.750187272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684170985 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.348620152 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.885429642 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.720933441 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972757823 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.748462165 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064018252 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682929271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894282284 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.862855562 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.972115433 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.398799841 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.831774821 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006453671 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313436412 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.113025877 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80495687 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769717814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867518853 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771830942 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.255322889 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046255006 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.754002079 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.754006907 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.571639179 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.758222686 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753820028 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.757386634 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507421463 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032290767 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782028383 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.757765611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.643033418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.767700556 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820054793 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759171544 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76390512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.298209129 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462907533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.761354706 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.376316874 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977887826 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763806328 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.548257691 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874522427 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.838548501 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03861125 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819593992 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.690688054 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.467533929 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.449065512 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757193496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692614481 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.757594784 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766841826 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767488024 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.137549906 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039624555 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806356575 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.572340546 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.805192194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77074238 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.763214055 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759361942 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.299733828 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918143956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377448423 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.811245786 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896074157 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.772927647 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.692936595 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.76312132 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764953477 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.759744783 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.716863476 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813287299 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.581028766 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144581878 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017641709 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.371907919 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775351147 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.597993963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.824495771 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.779971591 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.663845743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776452256 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.815706911 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79271841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.789250232 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.613724226 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47929664 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347862948 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100973155 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095834216 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234659258 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.363505784 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089566423 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116197742 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015564084 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.310491148 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841371117 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120928413 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725293991 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864387237 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.431276395 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14075291 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796784683 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008867227 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16813053 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.743101651 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809376715 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991403947 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815556758 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.78182306 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746719409 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.987867247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922488453 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590809033 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991141518 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113269684 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.519435544 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909189601 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.781033852 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.46790166 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872140526 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.495646477 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143096174 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445810341 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858440551 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259290378 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.78549858 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.228051043 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137108721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.195473924 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.908743488 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718565921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.793702732 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.793072371 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782657109 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.778289986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.655758025 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.035336517 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79448338 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018156097 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.139367178 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088325533 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.694203478 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.788647181 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783426394 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119201499 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.65637986 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958554922 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.320448505 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.314670914 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786324026 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.718324632 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717471909 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.476754018 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79242873 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758337635 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010043693 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.977632191 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696587645 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419280819 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032842007 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038643876 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.79857583 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059358704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064385593 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.501159649 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80946543 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.883915975 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513174105 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.901304164 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.052670729 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020113748 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541267138 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011721103 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.834310413 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.608049339 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783403822 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999244969 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053698517 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.78957594 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037289597 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.508850558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.864253252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125385803 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858789765 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.81545831 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958750221 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.992023774 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80807224 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882177141 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806681205 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.808284176 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808497357 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843819124 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806178552 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92987322 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.814145229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888670295 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970638643 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.334559087 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.804736396 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076217549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171876646 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135347998 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860044536 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.798257099 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798843646 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732802411 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935052309 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244603643 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072870378 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.928732231 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.097974893 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82511804 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.552818732 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271044753 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045887355 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074463098 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.69536454 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799863547 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.818221354 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.065802131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810899982 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.011987547 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031900237 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12088817 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274676603 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.128207038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168794342 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073231541 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172285374 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800187902 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391535341 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.891949017 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.494367984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.852138654 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.828031048 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081269569 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815974711 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193054889 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828213003 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.005494144 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.322980387 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625743708 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099231804 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.797971034 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87233449 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087189449 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20784419 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122510384 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877057154 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816681127 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.508422881 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94284124 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.683059067 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.075535747 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80609694 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017119461 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.516292555 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815848456 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087400304 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120216602 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.804002774 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.725836604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814771089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.816168693 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030043151 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078010947 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061479358 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816460351 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.815402824 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.623153897 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08342815 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871413098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740818964 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.811388625 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905542664 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.057974328 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827888234 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.325053987 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.519169069 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105566426 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.730484206 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829333124 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384041146 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182221033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139209985 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.353747762 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036958549 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370928623 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.809284737 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107078222 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.812341074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388936458 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117288337 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.811318196 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.503056174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85220945 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.079719773 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13512405 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.85114658 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618611379 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.791849666 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042626753 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379166829 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759455795 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820607287 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.879446411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.819676744 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.950297646 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831864711 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.731205013 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821234456 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.567163573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313104603 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.826034686 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.809276353 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.608118316 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.532127419 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859555412 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96535155 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828272066 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.532816696 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.112871945 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074474736 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.512304244 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.83140626 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.825038521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822078629 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.748946689 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017367594 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.201468528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119813098 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.362480602 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.862404313 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82489406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.036384487 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033004746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.752519807 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966166289 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404248393 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863718205 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.593356635 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50160821 seconds)
  done (took 1644.900641853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.831512867 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.83311535 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.853081682 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.829565763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82105947 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876345319 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.876160873 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.852028611 seconds)
  done (took 56.529917972 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.820732882 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.021699854 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.831702677 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.823996046 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.832925428 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.824239233 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.994473047 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.835242305 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.832364235 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.834542568 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.825094609 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.822097754 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.137321062 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.848532776 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.823352534 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.807120245 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.832247655 seconds)
  done (took 73.509450161 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.825384961 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.048557601 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.861692551 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.838469125 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.77326479 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.836186321 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.795477163 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.849199444 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.828977429 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.057896822 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.462262915 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.846822796 seconds)
  done (took 89.783329488 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.834164709 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.830313137 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.831084163 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.831123895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.831652695 seconds)
  done (took 10.921030629 seconds)
done (took 2136.814405612 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.221000727 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.056524198 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.064843181 seconds)
  done (took 5.880354468 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.977107156 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.024134498 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.144718895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.149710706 seconds)
  done (took 10.06118727 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.120271525 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.212533655 seconds)
  done (took 6.094206355 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.248976648 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.829255309 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.228203518 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.827508505 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.828426297 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.827923905 seconds)
  done (took 22.251224087 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.826855696 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.829671507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.825858825 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.829363553 seconds)
  done (took 9.069346384 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.802899901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.489123596 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.801593824 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.819375009 seconds)
  done (took 20.667109369 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.570007071 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.218294882 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.563040396 seconds)
  done (took 9.102280837 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.297701296 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.708236286 seconds)
  done (took 8.756888653 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.079337801 seconds)
  done (took 3.830184247 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.952087831 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.127175394 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342536999 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.34988147 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.434274656 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.700690344 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.154981054 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.079492116 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.32233108 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.274326984 seconds)
  done (took 24.488928509 seconds)
done (took 135.487580371 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.200224438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.056469486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.011847499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.167110195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.041840815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.010661512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.034716748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.151391712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.664187458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.658795363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.161790338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.037139878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.167972429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.047647404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.168820143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.044600066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.025916025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.199601275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.849200811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.084784701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026581385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.780158248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.995674271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.79491401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.030378928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957023585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.372357883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.04612712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.002739607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.380496727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.957437636 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.239126154 seconds)
  done (took 171.121684363 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.7045082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806922341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.806849087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807254884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.019355673 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.805995806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807432249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.807647184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.950936968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.952036709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.816955435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.093936449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.821472685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808291511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.809596535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.811534856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.08270668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.781100558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.818936394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.820877671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.826217018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.955689913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.828603352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.992471431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.102254494 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8271463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.808037661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828831339 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.811458831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.817111747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.819645494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.808844884 seconds)
  done (took 205.303233321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.807779117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.809400988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.810878619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.808532401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.810586565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.809424259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.810035472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.807800839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.493926346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.485335534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.816339401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.815138813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.814748175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808924364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.81551868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.809220197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.813896545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.814507819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.816532592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.818926415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.819921733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.636532519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.819860173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.645025725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.81625889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.816731809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.809736189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.818314885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.821006507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.820322294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.821568149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.810137628 seconds)
  done (took 218.807743313 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.01127659 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.816659824 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.817502465 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.760545446 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.816826859 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.816568204 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.764878462 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.014106691 seconds)
  done (took 18.575317247 seconds)
done (took 615.575459699 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.249187936 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.095803299 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.991302449 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.841529474 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.106982749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.876216226 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.836594866 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.903330378 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.566302974 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.904591021 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.529460474 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.857044369 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.624252018 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.862931974 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.960650665 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.898639731 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.423744783 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.5167537 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.01571358 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.918067154 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.011047439 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.774062791 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.918021804 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.58473494 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.645341821 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.818018426 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.017460058 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.428393464 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.850895739 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.001041166 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.574224714 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.207410298 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.850738519 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.836468054 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.893679275 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.871064172 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.181362566 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.848761388 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.957626214 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.577871622 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.926327571 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.450656887 seconds)
  done (took 100.94973868 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.80759154 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.806667801 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.806143364 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.806838686 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.807558877 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.806637591 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.805887534 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.806460685 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.806385098 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.806619242 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.806040012 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.808220686 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.806148005 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.807684776 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.806106473 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.805800967 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.807078454 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.808748721 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.807178962 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.806354941 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.806832415 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.805857187 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.820246709 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.807173496 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.807480682 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.806778576 seconds)
  done (took 48.747325449 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.819503985 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.982397612 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.067603966 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.839296334 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.820136049 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.823609141 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.838344641 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.826019231 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.822555572 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.822936081 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.925526612 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.827941854 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839421688 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.070146381 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.837461851 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.821481335 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.820892365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.821155026 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.990088039 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.838109646 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.841814669 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.82700223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.840822566 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.836492239 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.824507632 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.822789292 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.826820586 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.305537559 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.831954851 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.925491505 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.865752617 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.841987388 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.247219656 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.080478511 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.877224912 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.828955323 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.82300963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.930132489 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.832707369 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.824808652 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.844310177 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.831217941 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.071515578 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.299925195 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.837724079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.822231909 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.316734871 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.938281018 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.86454899 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.835132168 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.081677117 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.839814278 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.82387435 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.823475711 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.8609678 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.834960472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.823244005 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.164391477 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.835656444 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.841584724 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.827877119 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.824271607 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.995018343 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.83303473 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.98575681 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.833111404 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.830104641 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.824318678 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.071649961 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.840094428 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.309073272 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83766669 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.824223678 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.925743905 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.990077676 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.341921938 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.836756435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998123785 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.263161252 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.849925856 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.832229385 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.296415223 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.853784554 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.832315753 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.826593102 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.826188372 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.825388698 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.871819975 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.841673769 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.243505401 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.312891507 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.179053724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.852517801 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.841749525 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.825662335 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.164714945 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.838266565 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.827886242 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.067103275 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.315184289 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.839682704 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.832549528 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.29075656 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.839074529 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.842912444 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.831909512 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.076808264 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.840378898 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.873209573 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.825214293 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.830901765 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.828301709 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.843732877 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.832826621 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.824537659 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.280944761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.947753843 seconds)
  done (took 226.831881884 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.818391944 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.820713031 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.819777865 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.831749784 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.819404401 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.825989125 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.81849911 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.818893374 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.824461389 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.818864491 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.819466801 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.819142469 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.820523315 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.826831676 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.864869702 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.826928567 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.432861294 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.819510668 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.8199836 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.822186014 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.46886779 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.825851157 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.824282807 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.821840099 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.822536221 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.822753716 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.824197718 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.280416906 seconds)
  done (took 166.536439297 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.826792515 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043159808 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.84431666 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867441963 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.835785281 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.826092866 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.851202793 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.851211929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.832270029 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.825393548 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.824941571 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.888128005 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.83954747 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.974274621 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.858739836 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.859018998 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.931406527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.834602499 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.825332366 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.825711654 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.856044697 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.822557537 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.889067211 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.955928239 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.845545715 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.946976352 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.832661209 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.830011404 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.827225148 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948212902 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.842228321 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.889889232 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.857697006 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.846844622 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.952054596 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.945625305 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93530864 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.858784887 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.833582051 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.827036688 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.827111577 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.815817885 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946941705 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.846803661 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.829320207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935281009 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.84653588 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.830681335 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.837518321 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.828238644 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.841800901 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.846951168 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.895854871 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.96188156 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.861451247 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.854268473 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.852893463 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.11256568 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.841887306 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.930172761 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.822254174 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.945603611 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.849395624 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.817253885 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.829371491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.834998899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.857080008 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.860560928 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.93565413 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.836964939 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.930640562 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.864883435 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.836063838 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.829598979 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.832198137 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.946432126 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.948496464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.864360766 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.868425511 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.862061046 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.826166225 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.83079184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.818419291 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.84856687 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.834352614 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.94596555 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.948513783 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.839159144 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.83239697 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.832467542 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.832699912 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.856186229 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954640677 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.865811333 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92998858 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.899956541 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.905417099 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.844701885 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.842955292 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.833964632 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.897589518 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.844743836 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.843352057 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.162484706 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.905910885 seconds)
  done (took 198.461318334 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.310489297 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.887209178 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.88829238 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.15685629 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.250404167 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.674565663 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.880314901 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.881292496 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.90385039 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.069115354 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.953268631 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.901946791 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.868601908 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.854395939 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.879097054 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.905121875 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.900576066 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.193188624 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.012483235 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.980784874 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.861932952 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.190996811 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.194879368 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.322389555 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.918526321 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.216551814 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.560248931 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.138439862 seconds)
  done (took 60.522040194 seconds)
done (took 803.792860844 seconds)
SAVING RESULT...
DONE!
