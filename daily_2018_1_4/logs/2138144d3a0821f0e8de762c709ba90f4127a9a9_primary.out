cset: moving following pidspec: 31728
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.169344166 seconds)
loading group "string"... done (took 0.509531553 seconds)
loading group "linalg"... done (took 8.649391819 seconds)
loading group "parallel"... done (took 0.163655256 seconds)
loading group "find"... done (took 2.477647223 seconds)
loading group "tuple"... done (took 2.094519323 seconds)
loading group "dates"... done (took 1.387629658 seconds)
loading group "micro"... done (took 0.469058783 seconds)
loading group "io"... done (took 0.557554906 seconds)
loading group "scalar"... done (took 45.967772326 seconds)
loading group "sparse"... done (took 13.225269837 seconds)
loading group "broadcast"... done (took 1.177863741 seconds)
loading group "union"... done (took 2.60724813 seconds)
loading group "simd"... done (took 2.99360221 seconds)
loading group "random"... done (took 11.355548034 seconds)
loading group "problem"... done (took 2.237557679 seconds)
loading group "array"... done (took 23.399217314 seconds)
loading group "misc"... done (took 1.050569829 seconds)
loading group "sort"... done (took 3.702905337 seconds)
loading group "collection"... done (took 17.77819402 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.767085965 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161984692 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.24524811 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.302616359 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.295486235 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204987361 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.199546167 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.164670692 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.620753858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235823258 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.192160717 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403528276 seconds)
done (took 6.583433347 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.332599407 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.143382157 seconds)
    (2/2) benchmarking "String"...
    done (took 0.210693513 seconds)
  done (took 0.989612298 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.145162475 seconds)
    (2/2) benchmarking "String"...
    done (took 0.152979073 seconds)
  done (took 0.932877267 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.132716151 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.165299352 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.146550727 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130058263 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.146602589 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.129966909 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.144863852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145857737 seconds)
  done (took 1.641141632 seconds)
done (took 4.660447044 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.488462717 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.916229176 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.571858207 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.2059451 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.362104002 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.323637274 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.353286253 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.258524318 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.132091952 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115966397 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.210086749 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.464128627 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.439481244 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.951947935 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100684831 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.15242594 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.172950398 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.820405995 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.122820933 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155893421 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.534842004 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.235394136 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159251663 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137278643 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.244168912 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.232307536 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172364197 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.147231763 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.72508715 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.176392861 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.240629852 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.124471381 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170448008 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.209663519 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.280470434 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157316604 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.724974241 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242707693 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.128299441 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.143494096 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.723001414 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.159123545 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240652047 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.147475123 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117730941 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183773218 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145765504 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.119386637 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.163969455 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142693218 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210504847 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.497666544 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148450416 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.229083251 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.152065715 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741024274 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.143825767 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.334115735 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.17947185 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149288211 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120148589 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.148637398 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.198912194 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137048556 seconds)
  done (took 22.699358383 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.205302503 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.226918445 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.138467718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.184708444 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.186690661 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.137804246 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.130752404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137392261 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.156143383 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240786402 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182675601 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.234972274 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.116790869 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.149928147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.197260527 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.276915575 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.16916668 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.149764758 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.149204033 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.135228881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.185359102 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157902624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.136175871 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.152326861 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214698983 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.249669537 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.151516867 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167868449 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.146654575 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139421133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186112492 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.206095722 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120390631 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148578738 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.215471085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166438818 seconds)
  done (took 6.913266022 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.260920111 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.145832209 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.275196513 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231137764 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.189283672 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.22068838 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.224122466 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.316209321 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.244905731 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.533021687 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205147499 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17147703 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.139512388 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137502307 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.123714668 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.120144853 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.902256572 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.21459861 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201423327 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.215810846 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152640106 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.129642225 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.417181954 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129332626 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.143478287 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136432156 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113557283 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.249357754 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136081706 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.526089822 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.143624688 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.138204543 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175577921 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.247504621 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166754996 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180769531 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134826006 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.145813397 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.2516162 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.164204259 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14264596 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.000227782 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.141716749 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123093755 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17501552 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.158365583 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.149622879 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161034496 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178666814 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.143960344 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149912811 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.935147707 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.248320307 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.181041208 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.144275104 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320271551 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.146796544 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.160739371 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.150389198 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261970068 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.17765319 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.140115751 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122504298 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.153947746 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.121516602 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161955871 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.18537855 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.124983833 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154235562 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158350915 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.751158305 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129951638 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.145117334 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.148533603 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.144255064 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122915492 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.143236319 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.123554353 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.147408455 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122339843 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.207492412 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.14280419 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128616656 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.139674867 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19069188 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.154932115 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.146486387 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171233652 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.149562917 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.125943614 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172043312 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141177775 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.130085497 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.218676608 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156657061 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123280368 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155912154 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.188532868 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146861081 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.249824969 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.140360804 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.149914573 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143301472 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171398003 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154583351 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124207613 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146560232 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.124612526 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.138848809 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123431402 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206233696 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.130512038 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.139998062 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.129150625 seconds)
  done (took 27.525431586 seconds)
done (took 57.770196171 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417949366 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110566111 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128025443 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111784102 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110826797 seconds)
  done (took 1.593826445 seconds)
done (took 2.291218842 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.166694954 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.162086374 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.139417144 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.166249614 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.141419102 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16402126 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.162596602 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.142088264 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.161501481 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.138369075 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.148221672 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.140984408 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.156459756 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.170765566 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.136008701 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.160378014 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.14785481 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.163618293 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.155962359 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14907934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16244544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.147171473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163675046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.132433709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163265102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.148835996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.163584224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.147322559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.15777871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.133191241 seconds)
  done (took 2.364961041 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.163099231 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149104905 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.163461515 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.140192122 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.162201746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134341442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162634002 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.146849035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.163148901 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148198427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161630451 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.133160271 seconds)
  done (took 2.363487587 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.145851805 seconds)
done (took 8.686290058 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.695585652 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.025698061 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.21996935 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.306740882 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.590852845 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.331099222 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.673868364 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.247949812 seconds)
  done (took 17.920244181 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.157163009 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.152965696 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.13911642 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.203469672 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137854917 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.158181476 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.140375207 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.152138007 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.137533445 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.152982561 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.136737168 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.152261735 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.136149508 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.155681216 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.140278511 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.152778054 seconds)
  done (took 3.162985102 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.162422544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.17923703 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141719379 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.161089734 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.13956262 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157936528 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143281305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.15903829 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.13825838 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156320826 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143733185 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159087001 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.14276518 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.155775585 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142114943 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.161698865 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.153666454 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.14494214 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.159649454 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143884509 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.159728196 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.140470722 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.156755676 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142710728 seconds)
  done (took 4.416465222 seconds)
done (took 26.202059108 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195385758 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1466801 seconds)
  done (took 1.056938905 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.19828255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.215260959 seconds)
  done (took 1.133123649 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.159610412 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151107273 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.163201275 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.162022587 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136570914 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151781575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.159543129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.152340253 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.136118254 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.153017641 seconds)
  done (took 2.2499743 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.144679198 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.154749857 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.150997074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.201888121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.14227604 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.155991727 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.13887345 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.156419566 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.14172004 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.152277575 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.139185973 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.169309042 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.157235308 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155581156 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.156376032 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14059937 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16072315 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.139271581 seconds)
  done (took 3.479738723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.137200497 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.13611194 seconds)
  done (took 0.997877028 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.140390021 seconds)
    (2/7) benchmarking "second"...
    done (took 0.150465787 seconds)
    (3/7) benchmarking "month"...
    done (took 0.139476406 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153113453 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136388112 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.13444014 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.153358525 seconds)
  done (took 1.733420806 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.632725064 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.268123606 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.419125658 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123996845 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136698977 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363364977 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155709382 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105772899 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123914523 seconds)
  done (took 3.080958971 seconds)
done (took 14.45278752 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.138850024 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221834084 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.643973389 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158354371 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.153908873 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196842807 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.335791374 seconds)
done (took 2.580301088 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369484442 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18577059 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121208143 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139667312 seconds)
  done (took 1.542590661 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128374518 seconds)
    (2/2) benchmarking "read"...
    done (took 0.144154279 seconds)
  done (took 1.0077664 seconds)
done (took 3.287375379 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.153175409 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.153031098 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.141335486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156875819 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.13938932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156234179 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.138696189 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153272712 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139398765 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.15282723 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139343966 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.154415076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137422075 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.154204804 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13738566 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155282846 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138979081 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154025858 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135982735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156681252 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.138395042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15337869 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139894382 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155668887 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139468828 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157581509 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.138813089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.155807389 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141044166 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.157612315 seconds)
  done (took 5.149782248 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.166684587 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.131960686 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.154424148 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.144227324 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150599149 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137547427 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151162754 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133791702 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.154887423 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135207208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.15550672 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136021548 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.151303652 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.257445353 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.154300524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.161810315 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.16337168 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.134101205 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150286015 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.137958767 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155173046 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.134042842 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.152514625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.138411282 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135780269 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149739255 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.136617446 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.154905142 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136598279 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.154411413 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.140440461 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.157178185 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136202862 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.163675513 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.138574895 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.156367037 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.143345408 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.151234452 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.137406564 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.152039112 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.133627474 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.152420395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.13454501 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.157827991 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.138461491 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.137576247 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.150923087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.138376706 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154595851 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.139114383 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.153022795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133333262 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.15812184 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.139322724 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.1584754 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.134006528 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.154997104 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.134176481 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.156616054 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136808788 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.150237208 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.135040101 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.15924576 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.138659595 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.168952414 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.143967698 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.149915963 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.139621395 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.136981419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.160915116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.13867475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.164801942 seconds)
  done (took 11.401103092 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.139030056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136596447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155739267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13565002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154734202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136460102 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.15419795 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136516948 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153859315 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137320884 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155756647 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138189653 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153650922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13708153 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154127447 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.13719532 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136844985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154303185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137044752 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155637646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136492123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.155832715 seconds)
  done (took 3.93347454 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.28002037 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144136168 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202768747 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.148760566 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172497585 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167500974 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.143100917 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.164206671 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141426851 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.167187809 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146260629 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159428176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154797018 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164940015 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165671513 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.150080132 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160730388 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148164695 seconds)
  done (took 3.728573424 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138085213 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136316816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156998418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137488827 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155942093 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137985006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15596911 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.139500454 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.156512405 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.138598233 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155826488 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139046519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.155039459 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138957765 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137582869 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.156780361 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.136265583 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15650556 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138147644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157399355 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138285651 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157070807 seconds)
  done (took 3.969862146 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151820087 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.160595162 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157496717 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.163968045 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140036596 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157664206 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144596003 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158478876 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147661104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.159099685 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.142022504 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156814707 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.153695438 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159000888 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.144980577 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.15968507 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141547744 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159254036 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140553835 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158347201 seconds)
  done (took 3.805920452 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231737985 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177538978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174913298 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163715272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.178851661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1558752 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182974211 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.153779262 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175219684 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165167147 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173266265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.175260049 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16402508 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.178918819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155230118 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18175617 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161085983 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18186146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.175229419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155227703 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184758065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156139031 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182719452 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155720478 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174829268 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17431833 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157056385 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1801077 seconds)
  done (took 5.578022268 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151714181 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167430294 seconds)
  done (took 1.07821132 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142159622 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141158184 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.162361234 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140486217 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160368195 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.14048161 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.161851382 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140419894 seconds)
  done (took 1.947532102 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.2051002 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.226516352 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.165134772 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.151709525 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.228206848 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.217164101 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.221217344 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.146674696 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.159190267 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.133603022 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.224523727 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.131186238 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.162637265 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138079119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.162442792 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145356695 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.161227565 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.149827449 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.169731987 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.140757083 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.165866116 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145476167 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.163481645 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.168667821 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.13621725 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.163302105 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.144792499 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.171552111 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137862547 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.163528636 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.140870254 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.161681397 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.145356392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.164362461 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.141372508 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.229167695 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146848892 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160473579 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.141219599 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167541987 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170276311 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.161732448 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.142499619 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.162145574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164999527 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.146542826 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.164379964 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.141533704 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133409687 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.158619515 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141137744 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159563049 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139331824 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163739365 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.141130759 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.168439527 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.163323436 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.139104089 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.15660395 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.138770487 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.159572124 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.138104581 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164142053 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.144936411 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163296968 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.143228026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160078073 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.142999701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.161545445 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.144380984 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.159875456 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.179562167 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.163954146 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.145292575 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.165250149 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.142443134 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157612869 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.146080901 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160082144 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.143879643 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.164053358 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.169093495 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.163730853 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.136769762 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.15816975 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.147714554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.161517356 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.145269916 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.153560381 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150966559 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.163089415 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.142788487 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.154545196 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.141144797 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.156796637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.144613311 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.155142756 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14218506 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161194972 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.147363365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.166309329 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.142266054 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164219216 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156267144 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166840704 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.141455723 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.209629891 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139138631 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.161644962 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.142993567 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169843257 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136987763 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.163789531 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140524147 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159890374 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138978026 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167293847 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144329122 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.164193128 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.147121806 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165733989 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145262829 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.165703671 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141190576 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.159867627 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.14681177 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.172220865 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.145805005 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.16591536 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.144057918 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.165332946 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.142475058 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.16707356 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141478696 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169256251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140499004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.16373661 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.145412599 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.168185072 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.145991487 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.160118208 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142653165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.164840745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.142220719 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.165951409 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.146511279 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.1604543 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.13605757 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.164727356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.13982358 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.166081816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151492523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.160411719 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.145929669 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159200832 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.151297337 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.161396806 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.147808204 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.166053803 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.14826353 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.169446677 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.135704747 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161216851 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.146326539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.165431514 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.140755729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.162462489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.144981665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171480584 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.137417002 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.167399155 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.137659161 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.160721955 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.14905462 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.163621531 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.146593635 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.160037331 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.183394401 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174810583 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149531785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.166377092 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.144492457 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.168486115 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.144076795 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.16983681 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149883296 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.169120281 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142700669 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.16446372 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149585591 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.160059667 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.145154285 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.163192726 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145521317 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.157202752 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.14621434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.156982971 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.148747151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.165679127 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.150077089 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.169356468 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14634832 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161394625 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153297515 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.160696324 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.148958259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.15675766 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.15153719 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.151678548 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.171897135 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148686566 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.169713422 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.161157109 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.146861178 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172881154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14745142 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.144664164 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.167694371 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.137456993 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.159990449 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.150618329 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.169478162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.141613605 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.166224487 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145482959 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169215481 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.151428703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.158227209 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.1478141 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170252735 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.139824876 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166356227 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.140440332 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.165015224 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.150126482 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.158900966 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.140325404 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.1677128 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.148884794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.164663836 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.145262057 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.169238215 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.149816681 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.169871199 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.146720652 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165873582 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150615576 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.165896076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.143264609 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.163181433 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.146630952 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.161904648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.148813158 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.169011049 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.142500704 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.16300348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148455428 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17259381 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.149987845 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165363077 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.148041073 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.172583698 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149065098 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165971128 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.150436819 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.163240854 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.138222272 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.163603169 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.139037589 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.166809069 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.140721813 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.16914261 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.142292893 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165378626 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.14689115 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168809137 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141850759 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.171179139 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.156996172 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.160965733 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137057782 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163712582 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142944489 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.163581894 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.140915146 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.167111388 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146262715 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.171998415 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146725699 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.164819386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.144620291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.172784514 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.141305107 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.173312091 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.153269958 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.172755083 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.141860654 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.171868646 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.1432683 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171292033 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.139590682 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.16778079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143679505 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167633729 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.142262381 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.166523033 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.14171429 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.161677251 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.142303028 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.173424125 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.143429748 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.17300515 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.14596495 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.165281046 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.142689364 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.164602198 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.152250014 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.167413997 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.152839806 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.168121656 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.139273168 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.161493223 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.149961154 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167740005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.150694808 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.163915364 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.149551399 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.173946892 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.14885478 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.169610684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.153595425 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175255383 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.152178619 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172780741 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.138491933 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.167185155 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150951002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.168621308 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.148659049 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.171159693 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.140773235 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.171292039 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.152444982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.168882327 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.145385794 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.163036486 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.147552307 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.174256058 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.149517 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170347725 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.148590399 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167798282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.143204809 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171802391 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.153410702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.168571764 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.154100746 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167719415 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.150988359 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.163741447 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.151977965 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.148357416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.164656692 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.139693147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.166716083 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.151733588 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.163165 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.151894032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.174385295 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.143888733 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.16920384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.150148092 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.166690528 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148598457 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175050366 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.145023336 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17966225 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.147759347 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.168305457 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.151133292 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.174865569 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.139781958 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.169413398 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145634965 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176597048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.146447328 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.174560042 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1478082 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174064811 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.149814142 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.173831381 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.152052542 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.174010925 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.141184696 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.177249726 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.15131198 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.17119145 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.144176579 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167537166 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.142524019 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.169434946 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.153299925 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.167911931 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155288945 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.172812717 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.14540835 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.167520038 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.152362 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169292719 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153735582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.167053235 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148525844 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.163852874 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.150513902 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.17070789 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.153567085 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.16744777 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.142513181 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175138429 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.152002323 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175005209 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.150644993 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.175466883 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.142286456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.162633384 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.150390127 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.167317418 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157475153 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173935253 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.147377942 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.168857254 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.150481412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.171989176 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152976714 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.165179157 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.146085337 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.171763709 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148864033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.170410581 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.142457715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.175812454 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.147614666 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172019581 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.148970712 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.165633218 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.147827052 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.177583063 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.147230834 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.166896634 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.146806915 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177590118 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.14808598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.167075302 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.14256241 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174885135 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.151624624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176147765 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.146203569 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.171745886 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.147701562 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.172974227 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.153955789 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.169709197 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149446218 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.168436349 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153401562 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174638151 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140018148 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.168456321 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157766722 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.176740217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.151535953 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.173306824 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.149434238 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177339751 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155343142 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.172088573 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.142927314 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.165667222 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.149068259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.164888776 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.150078626 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175782456 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.148676132 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.168074501 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153582949 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.174948009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.150964331 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.17201342 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.144892436 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154326571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.171642358 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.172781766 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.144279753 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.141914743 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.173931053 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153336153 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.172012285 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.149112472 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.174013544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.152503176 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.168723751 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.146175489 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.175794893 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15204029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.178708934 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.147604768 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.171205749 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.151276269 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.181595813 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.150716555 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.173264613 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156270792 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.178972645 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14863698 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.173030945 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.153280372 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.17986755 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.151678147 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.180847521 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.147943121 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.173232911 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.155893067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.181201831 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.158217914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.171595863 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.143689061 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.177566165 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.146382979 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.167250632 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.152958952 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180878937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.155957731 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.173079809 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.145922374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.183275576 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152914012 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174878773 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.146821417 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.172940031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.153230398 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.171982626 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.1522976 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.171813305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.157621249 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.179454178 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155967587 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.183897903 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.144138637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.178908174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.151678601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.181386813 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.150189787 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.166692163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.143921036 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.176133946 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.157223035 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.179212869 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.153676055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.175146456 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.15411613 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.172736046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150355496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.170923867 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.15659996 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.179513854 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.151851433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.175341291 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.148879508 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.174479547 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.151306709 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.178813502 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.157712487 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.173402488 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159259795 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.17590979 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.14959431 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.169239165 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153833678 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.174815334 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.152605085 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176679925 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.148230835 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.166864749 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156355685 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.178418514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15144415 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.178886187 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.157225855 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.170459892 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.154421608 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180907466 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.156262362 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.173147018 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.153908844 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.17435763 seconds)
  done (took 95.334125163 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200053545 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183660355 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.153162744 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174969444 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16962939 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177383763 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.15253657 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176169363 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154975854 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185789502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152563202 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174988941 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.167043196 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198589737 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190979795 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163748083 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176411989 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154242741 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173632391 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154188529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189384004 seconds)
  done (took 4.474626945 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.154389867 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151287832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.17465741 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152934116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174820659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152588047 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17640847 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153452406 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.174037011 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152302705 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.173588052 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153061068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.172861184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153856707 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151158186 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176997609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151349894 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.177080464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.15258861 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.176856342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152599897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.174659115 seconds)
  done (took 4.437184195 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.182700996 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.153910096 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.17469099 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.151858321 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.181801294 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152449304 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.182175083 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.154037662 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183878265 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146860077 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.165679835 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.1475721 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173311739 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.153718911 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.17167879 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154409622 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.183181743 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157271055 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.179143896 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.154175357 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.166358277 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.154311215 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.152887648 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.169779811 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.158072651 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.181839588 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.156930248 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.180865042 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.144079828 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.181551591 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.153480037 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.170784604 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.145992982 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.167327929 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.145457349 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.179084795 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.157094883 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.177110738 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.155615138 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.167287754 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.157063691 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.156469242 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.168633184 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.153929143 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.178859292 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.147633337 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.180813765 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.1556107 seconds)
  done (took 8.730852786 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.181983169 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.214750894 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.156368208 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.209853367 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.190753586 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163325355 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.179823408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183831239 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180325134 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158283103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194306874 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.167163071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.183408698 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.160475618 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.183994423 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.158334373 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.184092893 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.156663675 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.186818229 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.180554033 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.164171983 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.183031294 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166394341 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191259423 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.158850056 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.182147696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.158358524 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.183310483 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.166536577 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.186145615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.161201194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186943573 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1902569 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.159002925 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179773537 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.160753627 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.190582507 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.158938867 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.181992829 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.157151565 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.182714435 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161841798 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.184343002 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.168883191 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.18296849 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.160644854 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.181688059 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.15760712 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.192714529 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.160208773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.187809923 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.191231075 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16209559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.18188808 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16223115 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.190251052 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.160156272 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.180599802 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.161845585 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.191674036 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.158229883 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.184074473 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.167764939 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.184295223 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.163824599 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193986919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.184201129 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.163231716 seconds)
  done (took 12.897174143 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.19092512 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.185760572 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170063362 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194303995 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16381736 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.18548394 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163381072 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.185838009 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.163071604 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.191188098 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185396595 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.296412286 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.167119705 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.191428031 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.163662015 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.187149498 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163187328 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.432028811 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.16295835 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188017887 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.163978555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.195350906 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161044709 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.193263574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196034227 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.16102529 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184545844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.162743436 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.194753437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.163212291 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196135799 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.184201494 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.165561369 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.192248766 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.175164654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.187331371 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157711741 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.187173515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.162699482 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.187184914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.160421451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.196202065 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162338478 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.18348726 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.161955904 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.189454945 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.19263764 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.174417143 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.19270679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.168136159 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.187537448 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171392236 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.187543719 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.187847129 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.171679283 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.200142787 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170397279 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.195920744 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16276213 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.19459443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.193888762 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.178194417 seconds)
  done (took 12.372410241 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.159684468 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158929445 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.182155601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159422453 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.18044296 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158077956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.183054062 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15870216 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181573901 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15878509 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180433621 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158709063 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17996265 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158573408 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.180611359 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158644515 seconds)
  done (took 3.592353012 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.176028733 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197605137 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.264140164 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.161678008 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.182766383 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.167131806 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.182289239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161411771 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.156909723 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1886038 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.162421946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.184928406 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.200066317 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.161172584 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181539604 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162490919 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.179581638 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.163244287 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.18169364 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.238249954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.188851786 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.161326707 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.184443699 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.162066171 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.186685366 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.162820355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.18869732 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.159839336 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.185692501 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.161739254 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.183878098 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.165109391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.183171541 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.163819449 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.184180692 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.160847673 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.187324893 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.159566796 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.18737016 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.159313206 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.185370344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.160068136 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.18645041 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.163124952 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.182984594 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.160877559 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.183043695 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.166083692 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.188075061 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.161542171 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.185247761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.167092168 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.190693192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.168074841 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.194085938 seconds)
  done (took 10.670919863 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.170490689 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.18506388 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.172528267 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.182182775 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162098127 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.185218195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.161762983 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.187431644 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.161559024 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15788109 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.186011774 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161165543 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.186563357 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.160301083 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.187029583 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161128043 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.182493062 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161018195 seconds)
  done (took 4.018701426 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160550711 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158759321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.184208685 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15854561 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184493707 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.158932929 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.18166615 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159495619 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182524062 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158757376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182971555 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159957843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181669971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.161088186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.15825819 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184133436 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.158211585 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.183583834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157823422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.183695793 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159782671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.184200217 seconds)
  done (took 4.651888229 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.171338356 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.260915902 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188833552 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.242907589 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.183533748 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.153868781 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.189996464 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179349435 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.173477789 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.177547073 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.155440133 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.178129994 seconds)
  done (took 3.164902032 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188245044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218361908 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161991973 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183548437 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170108217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187869944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165015997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188767733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170129091 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19951218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188719274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172831709 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196441763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173289954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192990227 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168785533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188101856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164228959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185045736 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203890209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165988965 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194872886 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166602961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188709401 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165755111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197130713 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170700718 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199747904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19062808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172892203 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193673737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166892096 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196483582 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175709875 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186008588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196252202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167146129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202338579 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17042456 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198194496 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.161973036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193032556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174338491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194887088 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196898243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167552954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195021944 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166819242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190062803 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184355179 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196638655 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195883104 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17043469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196346236 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173468651 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211632148 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20019534 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173335867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195310297 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176388536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200833682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192576344 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174083312 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20127216 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16863739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199522542 seconds)
  done (took 13.09849427 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199145656 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186837459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166787371 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203884232 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174149366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190834533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166550224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190273924 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165596324 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188608577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.233964943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168044177 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199944213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172901905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190919939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164741506 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190951405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196768114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164320072 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.211047994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166377951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199111824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1738297 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198158957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200967801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170387017 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189102794 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166753894 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191066502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167611998 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195914261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165448173 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199842411 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.16214775 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19942878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191857838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167910915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195819498 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166559509 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197523137 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175380994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208581966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188982706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168118184 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202621149 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167228235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191572023 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163719395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190498842 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164417438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204199016 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177376279 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.2010286 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199038198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167095214 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191440693 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167951626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191564722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167686462 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196763818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174750852 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192622497 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.21127096 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167588499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192088343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1741088 seconds)
  done (took 13.115911327 seconds)
done (took 231.883411157 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.239103198 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.279379068 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.321048833 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.215769016 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.218737641 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.209030002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.185803722 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.181932493 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.157671725 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.1796857 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.241418553 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.156969312 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.219382052 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.179166428 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.314631025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.15693989 seconds)
  done (took 4.377108183 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.252997296 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.391783608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.199141067 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.158258519 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.187110545 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.160685872 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.194937517 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.182086792 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.159773538 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.186742267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.159802295 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.177787316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.166247628 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.179247693 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.158911601 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.181663745 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.164987844 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.183916792 seconds)
  done (took 4.388215362 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.178179666 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.229405994 seconds)
  done (took 1.341159769 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.188294107 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280835266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.387655685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233376959 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.180945829 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.199819273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.233843178 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.171002679 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272347198 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.169571087 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.194493215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.179985807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185413236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.188542624 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175883838 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.182046052 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186904436 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.199284409 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.171865765 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.184922863 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.183990563 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.189078037 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.164319019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.199227349 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.265335963 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.170362535 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.191220185 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.164297986 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.18514231 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.174207158 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190274517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.198148716 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.170538987 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.247014847 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.186840516 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.239818132 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.167988924 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184245081 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.174829167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.184001003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.161588655 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.186538702 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.172713048 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.182449824 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.163559682 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.195464283 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.162951261 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.1887495 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.189382996 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.169540807 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.191835877 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166291357 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.239671023 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.195035543 seconds)
  done (took 11.495438147 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.010163614 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.212565355 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1985863 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.054222677 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205691415 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170978774 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.98904912 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1873959 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.292189447 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.024531465 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.199791108 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.161392875 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219523221 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.278026321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.252272456 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308087387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.877802701 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.205340796 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195101245 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.209317491 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167149438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.213106022 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195049931 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.473818103 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.184942753 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.168160459 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.191975513 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1618878 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241606724 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.170571181 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.204319339 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220214873 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290823303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200235399 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159247628 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.195737444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.159279997 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.201945045 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245470934 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206841006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.20112366 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182769334 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.162057261 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.189393827 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.172579774 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.182718877 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205619413 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183605668 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210676633 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167328929 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.192950298 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166452827 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187505031 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168666273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.198467189 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300236145 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331359464 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.168235726 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192640383 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.178407498 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25882376 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.164961116 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21468528 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.178444977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.303627006 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.170172265 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836944766 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180725014 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.189235272 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.161390326 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.195301578 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.158761321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.18864504 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204498784 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.468655986 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166716818 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.187552883 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160663551 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241675794 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.161649234 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.188747923 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182610777 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189399858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.168377496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.193867862 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165434699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.209551596 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.276002038 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187914206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164551537 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.194683746 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.172078938 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.189299127 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.305125551 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.174966574 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.192351561 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238834932 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.187591339 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201053174 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186109641 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.194738038 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185352526 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.190361295 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1664536 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198040507 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168979557 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.201124387 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17492425 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.191893529 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164545947 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.204375046 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.167018365 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.196249488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.179046219 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486899056 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185812928 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184665766 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.176229036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189787409 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.246689237 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160359542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.339716919 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18845499 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18275042 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.196138906 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.160011493 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.194440409 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179001337 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194835744 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161617032 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.199550681 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16327332 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.301269953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187644164 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.197817465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21323425 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.237633014 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.161907935 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224654163 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.182730542 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189275301 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198574042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171998748 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188301717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814656781 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195898804 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162736698 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.196879197 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.220173706 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.192829468 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.176487209 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196326258 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160776506 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.909415124 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.197243489 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.162390656 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.202891037 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.161487996 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192150393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169128777 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194518738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180807492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218423224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.16203881 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.198380203 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.163033152 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.248650799 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.189812756 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.173192335 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.196722752 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.168970259 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.192396855 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162205934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.204206222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183625389 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198492898 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.185691908 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56602391 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.166737369 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195468959 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185369701 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.20158592 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270022197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192039769 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.190819744 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.21226645 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165796015 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336552485 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.205050574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.230544645 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.193410672 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188485768 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185721158 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.169785673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.207227707 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.168112955 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192907631 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168229997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.204155687 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16363443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.230926104 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.171729642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.282887379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.160064316 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.212683456 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.162957527 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194543225 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272903506 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.200384113 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.16928737 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.202352407 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.170084215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.200414027 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.860764855 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.195544042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163039074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.200509525 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.174863545 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.209327355 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169632897 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197913563 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.167897518 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.209369733 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.253943846 seconds)
  done (took 56.917166901 seconds)
done (took 79.455051195 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322852206 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229853263 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.422423995 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235918464 seconds)
  done (took 2.238200571 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.348661384 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.20467117 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.302725391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.185437731 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.311082806 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.160344792 seconds)
  done (took 2.496125893 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231819204 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230472256 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229905061 seconds)
  done (took 1.680188701 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270117468 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27384649 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412814152 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325093377 seconds)
  done (took 2.328792775 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.33882389 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.179481939 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.21944918 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.288405726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.305992996 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270474166 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.186989995 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237172301 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.218604186 seconds)
  done (took 3.265163002 seconds)
done (took 12.986664014 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.206708109 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223795545 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.183968033 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.20166094 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198894367 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.224480524 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.209538021 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.220992738 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191090516 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.2028494 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.187327446 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.199908223 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.282939228 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.195737084 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.200945183 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.190941371 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.202105597 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.201329551 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.2199408 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.172287486 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.223197587 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172260654 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.199435347 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.181226718 seconds)
  done (took 5.872813988 seconds)
done (took 6.862450066 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.267362879 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.184468079 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.170459687 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200135775 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.277390488 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180699387 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215024054 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172718306 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.211417185 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172997962 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187841299 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186673271 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.195814369 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.246394033 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202791235 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.187749163 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.164926337 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.207754733 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.189902726 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.213521076 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.25218233 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195333537 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.181602316 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.190167017 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.281469294 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166624212 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.197829582 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173601902 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.212435767 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.173746752 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.198821538 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.162122814 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.215318183 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188820134 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190784835 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173195425 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189913877 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138476073 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.173591509 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.203942235 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186647381 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.202051304 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197189224 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.166359987 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.200086501 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174385478 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16438048 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.204389894 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.187040833 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.176391517 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166904892 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.21669064 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.197257822 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164756323 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.162164714 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.189822111 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.183286192 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193677565 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.187564529 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190340105 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.16439424 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193375957 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.175416991 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193579242 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.174099722 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191811929 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.173888108 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.204687763 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.171727702 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196135524 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164393268 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.20218524 seconds)
done (took 14.818751245 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.169190682 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234013215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.245282168 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.282515996 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.221419152 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.203540321 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.180068403 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.212483593 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.177452832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.207721878 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.199386675 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.22382605 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.283857504 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.181337435 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208634509 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.177324529 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.204291451 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.171057259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.281438442 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21567237 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.186199142 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.211981998 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.18871996 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.208915277 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168129472 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.224776721 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.198635338 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178106158 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.192476608 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.178564063 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.214627277 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.168441036 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.199024939 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187398226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212195036 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179303988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.207904773 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.177475899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.194679892 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.167632157 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.205657092 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.184046128 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195523316 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.178866253 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.20650148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.183558986 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.20257786 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.180852503 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.19636967 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177329081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.196252901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.191729506 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.20964647 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.18316274 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.212007028 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.208953115 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.182642643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.210081995 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.174230051 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.209481183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.176481424 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.19648129 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.171635542 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.217326291 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.172405171 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.209803525 seconds)
  done (took 14.158881413 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.188509174 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.226930805 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179424233 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210028643 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174039007 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.193335347 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.162159896 seconds)
  done (took 2.356690706 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.166034717 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.29273582 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.289503615 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.285150865 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.284537202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.294506486 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19108119 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.189310157 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202866564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.201340176 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.28948402 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.320498947 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.176641889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.205219042 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261350908 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.196720986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.29341608 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.2701381 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180008718 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.288911519 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211632668 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.199008705 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.205891281 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164867048 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283072244 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.193338014 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.338957494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.184001513 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202662757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.180723379 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.20744898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.270140889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.256351098 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.209360444 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173203925 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.283621075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.284039747 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209707804 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.2980147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.170927482 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.284314357 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.178825671 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.210234492 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.207749896 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182957235 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.27596886 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.184784063 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.210709907 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.179511331 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.293773793 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207625221 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.289718254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.178811249 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.207823274 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.175877626 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.20941029 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188172718 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.207889941 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.296568668 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.184386354 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.286823075 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.288897368 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.289854456 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.287738319 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192365243 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.308878139 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.278627308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.179189539 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.282713441 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.215056967 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.288428881 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.180387532 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.206106197 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.277288101 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184268361 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.292328496 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.292598275 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17820454 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.207388081 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.195893139 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.182087594 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.16582417 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.288314121 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211051369 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.17948978 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213681948 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178772593 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.210338093 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.286117776 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.189463327 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.209557573 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.20627572 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188453676 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.20782185 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18362336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.29244051 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.204675382 seconds)
  done (took 23.30511794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.169944205 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16769653 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.199937574 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167781041 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196516062 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168342813 seconds)
  done (took 2.123013339 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.205520584 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209277361 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.190934222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.209562058 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.229874875 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.294609451 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.302098624 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206294952 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.19878505 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.220430821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.296054956 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.298571677 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.270683932 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.214801913 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.308014956 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.182969266 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.300833868 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.213580882 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.189124418 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209689656 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.178335991 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216396583 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.178997944 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.286192895 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216128017 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184375121 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.203441582 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.190230049 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.218964964 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.20328938 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.188457777 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.209594501 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.176078446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.202434741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.304348488 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175660061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206115493 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.187537324 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.211020714 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.185133067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.304751364 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207448268 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.191179054 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.212381957 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.178486328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.20388893 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.184992895 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.200810398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.304584606 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.18702126 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.213765336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.184157442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213531671 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.185547755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.204677299 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.177358089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.216947736 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.307739239 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186060793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.20749373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.183072639 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214723122 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.176481961 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.215561094 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.183755118 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.213096961 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.201667454 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.186470634 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208685219 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.186431541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214930229 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184618294 seconds)
  done (took 16.578966783 seconds)
done (took 59.534721454 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.625903057 seconds)
  done (took 2.68639156 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.032313732 seconds)
  done (took 2.092230503 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.0213208 seconds)
  done (took 19.115131651 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.481976935 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.415026977 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.097171642 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.238505384 seconds)
  done (took 3.294015365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.157626165 seconds)
  done (took 2.231983444 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.484590672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.348113542 seconds)
  done (took 1.900419583 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.805297486 seconds)
  done (took 1.885462441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.830865295 seconds)
  done (took 2.900818338 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334988425 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.312234189 seconds)
  done (took 1.728556574 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.694609612 seconds)
  done (took 1.779993484 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.123301942 seconds)
  done (took 15.210400022 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.323656179 seconds)
  done (took 1.410087534 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358659842 seconds)
  done (took 1.448247196 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.667408062 seconds)
  done (took 4.758710216 seconds)
done (took 63.515549106 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.18432963 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212664266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188195397 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.210440929 seconds)
  done (took 1.871427945 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188691521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.207887543 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.18890554 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208637129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.190397405 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209252093 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183219035 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.21317485 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183424248 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.209666184 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.185894019 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.18038061 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.214636741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.18114194 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.211011425 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.18488066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215075295 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182047497 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.212153265 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183122144 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.213941548 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185275596 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.214638727 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.21359357 seconds)
  done (took 5.845985361 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181083833 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.171651571 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.203669438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.17290907 seconds)
  done (took 1.817328089 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196808741 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224323279 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197127595 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219361125 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199642569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224959741 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183232826 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.208582252 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184546338 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220651718 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200532239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.22649395 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.195985716 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217849017 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195192698 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.206426211 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1875539 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.22604525 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.193445218 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.223898 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186475069 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.221373736 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182960307 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223019837 seconds)
  done (took 6.044837086 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.261282699 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.224126296 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211721424 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.243923593 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.180694585 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240147646 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.257268011 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.190112139 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.218148214 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.18916757 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.2112288 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.184871382 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.259703633 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.190188194 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.214301175 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.184536918 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.22103382 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.214951636 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.226757339 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215520947 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.196294807 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.223357284 seconds)
  done (took 5.854580824 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.272983198 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.20805852 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.171550181 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202309201 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.18599927 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207930474 seconds)
  done (took 2.349852917 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175457149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16836955 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199245016 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168741378 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203280648 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168991039 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199245849 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170494078 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.199511068 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170672488 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199166707 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17014351 seconds)
  done (took 3.298162668 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305482497 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220137295 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351507594 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.461491584 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262630877 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255476955 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.349361731 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257770695 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.277366355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231400446 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250223437 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259095464 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251245809 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277467129 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238473389 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246341662 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238340237 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.331284251 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238594322 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333660553 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252262739 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244804985 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287941264 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243703837 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204332763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257804985 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.211801081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195013384 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262273244 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258234264 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238196201 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248769444 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240828931 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281937752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275564996 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271403383 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.383800676 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202520026 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.259545443 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.294909407 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326895052 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207190693 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284127941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248446068 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223188148 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280798727 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245499591 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.285221601 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.199423646 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241494021 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277902868 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274349199 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.234716883 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232474801 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40094762 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23267896 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.208068609 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276088757 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285915819 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299706543 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27437679 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.192288002 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267938496 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28879061 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310570051 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.20797224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.257926647 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219306152 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2314427 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303558598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280516308 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259520778 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.278749971 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196665225 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267760412 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263795022 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219175849 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302189074 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269827023 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.214133341 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215230355 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231698979 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191974538 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.285362711 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187123538 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313007081 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228955331 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272435829 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242720176 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251612591 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258034936 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224346268 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259288304 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247706934 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158712352 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241705131 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.224761392 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252657653 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223165632 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21851175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238155649 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.190616154 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247346996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.216774369 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237294658 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.223805676 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224323275 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267629144 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.229903642 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272238016 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215690701 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.262470317 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261909806 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260256189 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226919153 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228844473 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318702048 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237670038 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.23352005 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267214278 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264808568 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.239104775 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233088005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231086596 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291427788 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240271366 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296659327 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204931617 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231559372 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192441601 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27260675 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255918579 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.254868866 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193793304 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.262656857 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283962394 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.194894317 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234028709 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278861276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199402947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220070117 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203925833 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232629063 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.208005065 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249410403 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.23322225 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220251811 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266800463 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264174398 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222075485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231690327 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270221149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199132544 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.268607844 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244981756 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.186515929 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271763737 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29927106 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194298778 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279749333 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260457618 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273966959 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270284018 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196722563 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28289165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195066983 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.218870748 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25610569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235320272 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261486554 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.289622174 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273801542 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.261228706 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.229604364 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24464536 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268605973 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.283724371 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223276649 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.23872919 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272323495 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234005138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.219703064 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.189493459 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.224789786 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23267359 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198452826 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233648806 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242164827 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262365517 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276872803 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267350452 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232325246 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261765629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.225643669 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255117607 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.246106041 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239213759 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289784214 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289307952 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246310667 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237602563 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261142526 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.187652946 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223940592 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.199832835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255975106 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234196096 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202689808 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239655891 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.29098795 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234188003 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248228172 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285919627 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261681651 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.301037427 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.188177469 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261922321 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261715504 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238576165 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.289017189 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201904217 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.256404504 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295133851 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207851795 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290429559 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267173315 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28297205 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292872149 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.234613634 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22951541 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242658576 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229184871 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240680876 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227492164 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240941294 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227711018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214996628 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.238134549 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205086768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280462667 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246622218 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274617189 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.221489378 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265557061 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225493098 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208852673 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273160196 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244083952 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163733733 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265425624 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289831079 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21820974 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249656242 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267011185 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198102493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.449881309 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28389808 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268533136 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202655695 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235591727 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272249805 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225594043 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258518282 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286534799 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207746874 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308699869 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273597684 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.2354454 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199671062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246407735 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21785933 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.228544549 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.249432835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.231304348 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.242892418 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287103227 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20407629 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270597521 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280672646 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.212039523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.248976455 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234673073 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328617 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236536033 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270712005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.26885416 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.229265944 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285425599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222686641 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195227678 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.231793208 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.284061053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199400314 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280225088 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.260481761 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276488863 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273387383 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232100448 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243046672 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.195973491 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268681575 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246193424 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279853008 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205240892 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.236317586 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286824371 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.187336185 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229838712 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229706606 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389295476 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249890615 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234592007 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.19836921 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.37802754 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200840059 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234571468 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226249011 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26887342 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.235766826 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.253624893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273689922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239677353 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229232794 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235320433 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27411155 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279564303 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234005867 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274398078 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.247214572 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260325378 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223536416 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272520485 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245227368 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.217529729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25623871 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293710754 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.242411307 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.231428229 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269228399 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238430659 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274732875 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273617809 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207259425 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28404146 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226723707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23274935 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241203541 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192807693 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257914223 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.266484882 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229971392 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240299544 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274146621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230730951 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196130832 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24803594 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262771141 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209745267 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.229563861 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285625317 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.199981471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285562081 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312206246 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19805082 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272026545 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240778607 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200447531 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239304482 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213325322 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232624524 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.245477648 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27966072 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.229834484 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242517787 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2661399 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267293487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220868413 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244873055 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.374298459 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197190437 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293064724 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251234143 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.318552938 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218464805 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281840775 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272796761 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216766598 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266739656 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245244949 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.291138048 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266824534 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.271204549 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200611941 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24454586 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205910359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.236252067 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255096757 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237391697 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244318388 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.20404456 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.269341121 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247798308 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.214015197 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242511836 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305683038 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219360059 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287069496 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290746332 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239838681 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244597589 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273926705 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232904301 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.264508498 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241910822 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247864048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25162574 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.20468822 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.238804132 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283703863 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.232422294 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261380001 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243223958 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272491922 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276171609 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.203105677 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278821593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242033024 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245068328 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228800636 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.254071091 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242719478 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23809931 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.195583624 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2760001 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260501532 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.266908071 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211806111 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.282322037 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264714102 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.225956565 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20183391 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387388071 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262067192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30161751 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.192586378 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242557139 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213588915 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259344629 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.269883737 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27322238 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.20207972 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231938745 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.215783482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.252644945 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.202355031 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272958073 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287495427 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225088932 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287228491 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.237375075 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.323790917 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245413918 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274575417 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.177859138 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.230779874 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211541932 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235856949 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211752935 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.280619047 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317779793 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267500618 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.248469356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206903172 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.229547267 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200827691 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264468935 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218454436 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270467577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249308245 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.165898532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242797089 seconds)
  done (took 121.192308365 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251262603 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246345226 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.261791919 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.313706319 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284034054 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.380126449 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.321310713 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.335636062 seconds)
  done (took 3.620279886 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.191893601 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.260571586 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.243131993 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188552394 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.212473585 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.544951156 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.238271928 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.191515674 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.269218344 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.224481022 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.184013807 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.652369204 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.225430309 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220326913 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.221575943 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182297775 seconds)
  done (took 5.472129649 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.133508606 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.626982594 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.064993668 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.368858385 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.338538563 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289729128 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.886452036 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.272649711 seconds)
  done (took 13.216218847 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.248031853 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.279921092 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.461297931 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.383947985 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.295080243 seconds)
  done (took 2.907706783 seconds)
done (took 174.568814363 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.19899204 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.195906599 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.230577054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.228711292 seconds)
  done (took 2.076414116 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.265739521 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.161185634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.19659234 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.15309266 seconds)
  done (took 2.006698771 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.475708115 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154813399 seconds)
  done (took 1.891481472 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.21832713 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.238949801 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209642289 seconds)
  done (took 1.916519556 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.209615028 seconds)
  done (took 1.455041061 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193567479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190537111 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.316403321 seconds)
  done (took 1.945446801 seconds)
done (took 12.53114136 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.218064104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.048902622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.656214332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206672984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.825754628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.471227903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.535290366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253394779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.278443297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217991507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247749327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.76646558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.520262728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.952144956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.506030276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95120959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.80131888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184910405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223087553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186025134 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.515556038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183815716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218597596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183765003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.798563475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.490956224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21651971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.963779206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21494624 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193423281 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.505272525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183292423 seconds)
  done (took 23.945126039 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.18837837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27448839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237472399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218441493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193804104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220430974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194224643 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.229798867 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319412714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185030939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238490452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183359157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222295945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18629741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24101689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183790413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218713022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184549639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223779534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187650388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239367068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18282906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219849308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184906073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217045219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203023938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21734193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19570394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217398876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194491724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222510446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185307524 seconds)
  done (took 8.058610823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230002263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.285148996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238924737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.25829554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27287636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18751002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.308365678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25173307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.298986434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.21983644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206226181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217639388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224874268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219863106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.209427033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.218218838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187138596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.220269397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222580487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188004865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238626128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185644118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218334923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187214041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217240771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.20739274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217504528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197939987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217266238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195379712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221013321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185797395 seconds)
  done (took 8.414013153 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20060248 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.23385857 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.210677709 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.241330966 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197136125 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198707189 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234014169 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.194887346 seconds)
  done (took 2.973855088 seconds)
done (took 44.639086619 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211961234 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.232414742 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.209243136 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.201914412 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.310494529 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.230622143 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.726061208 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225075324 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.202345955 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241448966 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184965493 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.228528449 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205856853 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.2299397 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.313796933 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.202913473 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.320604385 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.317536052 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193530921 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236808477 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193879858 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.322117745 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.232137596 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.196743976 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.297289356 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.191514175 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.307702312 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196688334 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.231956954 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186295344 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.315153985 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230619995 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194177986 seconds)
  done (took 9.567398161 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.29350235 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.233521667 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193948661 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.228736319 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19622216 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226813242 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.347711296 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.19447244 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.22824403 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193868434 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228254363 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.282948319 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.237125545 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189367677 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.232004925 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.17495237 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.335311819 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.229659051 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188098696 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.156995559 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.224574345 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.194958408 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.346652132 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.222723085 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.195190266 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.192936506 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230437025 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.197784436 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.230582806 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195223762 seconds)
  done (took 8.097937452 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200714661 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208318439 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249625027 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29760296 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225284584 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.24164961 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209432829 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240738936 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215736634 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224248935 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203610244 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.262635973 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205241596 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233585509 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.186724695 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.241099039 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203987216 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223853239 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196058251 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239297065 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.204461798 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.239781876 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.210743316 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.23204199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187246141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235290352 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199900392 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.235691685 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196711563 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.240844448 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.189615208 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.226220799 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.189615741 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256971297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.18885077 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.23934061 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209008596 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.239213025 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.200859427 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.258762761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.224304401 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.191809096 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.246783671 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.243689497 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.224502161 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200223614 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.222379991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.20533157 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.186577431 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.24475763 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.262466194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.19013113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.243597379 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.187585538 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.220308547 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.197917401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.221316361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.193128078 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.235415126 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.190456074 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.240836135 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.198531919 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199728957 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.228021252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.200166428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.222632858 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.187623874 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228180761 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.215595395 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232499005 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.227018536 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.228957223 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.199729104 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.238590155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200712742 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238283523 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.188752215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.237796799 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199006387 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.228514945 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202354339 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.228885714 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.190931927 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.241879116 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.208862885 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.2389318 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.20130434 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.235936206 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.190378156 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226993709 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20659499 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22516214 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191665927 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238063899 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.18961407 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227753121 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.199423347 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233551683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.187664068 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.252823011 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.19295238 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.225358441 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.217395869 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.230180192 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.192986338 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.231635758 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.230363266 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.226310261 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.199896249 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.235132134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189791092 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.234393665 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192954332 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.223828951 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205858673 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.239726947 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197598419 seconds)
  done (took 26.837193392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.414055882 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.41429869 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.292483823 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.467967839 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240383242 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.325336068 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.407921981 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.411783941 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189134786 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.259741995 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.278398449 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.370515617 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191117363 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254495918 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.410117642 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.501286293 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219934637 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264646723 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.259262549 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204143227 seconds)
  done (took 7.679144597 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200392708 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.25308245 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211594479 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.241534236 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202275313 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.234970444 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192546866 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.246804183 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202981251 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231019168 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194280371 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.230227074 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205930056 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20411997 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.236931032 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.247723165 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198785272 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.224317432 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.212379122 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.224485684 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.209444359 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.252513843 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.197509554 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.24348424 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208257569 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235206775 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.188650161 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.226351471 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197667757 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.234860346 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193346748 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231547247 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.199319171 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168319903 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.239105194 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206113001 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231442068 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194128956 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230422531 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193233003 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.235536465 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203477304 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.231985002 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203731052 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.209968133 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.212522191 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202612517 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.239436014 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172776838 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244867789 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.205002613 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.201193137 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233209454 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.209419393 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.231463862 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.20698747 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233266907 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.202150819 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.228260306 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189660194 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.223070384 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193068611 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234976012 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.202808053 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238650494 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.200196487 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234926512 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.190987599 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.227218436 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.194624447 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.227443712 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.205212083 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.248838369 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.201049484 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.231953175 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.203410327 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.232620481 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162084915 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.198489221 seconds)
  done (took 18.342467977 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218830476 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235857828 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.21053825 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259335138 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205262911 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231823395 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203177338 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.244322282 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.20549096 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.243934685 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.206410391 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.239566409 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215970199 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.236946752 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203318052 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.24059892 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206822615 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.263795328 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205230838 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250920086 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.205049529 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232632542 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204737131 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.237729306 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217653527 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238025011 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.216486797 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.240411852 seconds)
  done (took 7.644984542 seconds)
done (took 79.432095478 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.483531356 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.647409564 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.413527213 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.412569752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.438533414 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.447920087 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.411365332 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.413638456 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.979480894 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.388092427 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.410432071 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.406583773 seconds)
done (took 31.216341441 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.459680032 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.554312064 seconds)
    (2/2) benchmarking "String"...
    done (took 1.671405867 seconds)
  done (took 4.540462438 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.552933057 seconds)
    (2/2) benchmarking "String"...
    done (took 1.608966094 seconds)
  done (took 4.465582978 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.399753159 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.402226822 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.794369571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.401769466 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.403375334 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.404579098 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.403227144 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.414702466 seconds)
  done (took 17.528705743 seconds)
done (took 32.705957487 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.444403435 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.671091774 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.678633176 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.407660606 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.406495536 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.416620102 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.404750136 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.459546624 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.411914979 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.398351861 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.851182491 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.685852455 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.405327832 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.821493817 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.407229152 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.414323516 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.418016541 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.725698348 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.404429155 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.454130393 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.397118738 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.401591531 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.421426382 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.417473145 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.432991019 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.416224124 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.401209644 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.416486755 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.657729808 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.412560491 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.432458917 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.423819165 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.401633103 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.423549223 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.402165961 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.40963643 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.693158731 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.410886798 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.421985425 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.419162267 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.687098263 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.409920936 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.404241227 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.403584501 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.401503756 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.424812362 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.399057873 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.526799568 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.437055259 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.418476823 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.454915828 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.821710203 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.4199003 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.431781724 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.414065421 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.70841456 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.43431938 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.500407627 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.450656673 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.430396814 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.404479376 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.418903779 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.42966715 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.405221355 seconds)
  done (took 157.644519691 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.404550281 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.408018468 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.40852671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.410553234 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.406653744 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40830988 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406433763 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.407298601 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.407731709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.414811446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.407447106 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.411061755 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.409219526 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.418323007 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.417254623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.423191605 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.406706701 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.410820913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.418891347 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.40629617 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.413373017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.409915251 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.409799593 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.409191391 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.415867723 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.498482658 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.448201761 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.420851952 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.422399815 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.408266995 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.414328905 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.415412017 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.092817019 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.283805375 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.423750532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.447646433 seconds)
  done (took 87.852887919 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.407187178 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.407670141 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.406010549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.443874979 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.409730836 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.038243647 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.042603696 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.48272047 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.810220667 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.57886823 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.936866612 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.669478801 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.409845662 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.501472125 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.424152547 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.412474426 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506030875 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.43650471 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.410561484 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.407906369 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.03963984 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.423835088 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.97562983 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.592924126 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.408204911 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444730822 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.819084752 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.409609827 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444736506 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.754269841 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.445001654 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.407560931 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.78817693 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.503044475 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.521907773 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.414544931 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445349804 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.410570818 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.696117622 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.408310279 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.411823715 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.905103887 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.41244551 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.413419861 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.036585847 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.410020967 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.039804459 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.413162911 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.379936125 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.410697629 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.410770617 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.710341389 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.067253875 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.409785971 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.411355332 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.412762306 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.40882109 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.411352003 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.44674967 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.147936909 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.308443111 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.412279523 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.414864406 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.44510107 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.41065949 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.411478938 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.411541992 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.472375238 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.048377928 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412645081 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.416112255 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.509508649 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.534331653 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.412993583 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.410983219 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.413519854 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.412288684 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.525483741 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.412272596 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868408923 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.412994273 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.4127493 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.596455214 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.415140802 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.945524673 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.513323431 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.411908635 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821785501 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.415607715 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.41005426 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.154151356 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.510492408 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.412254008 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.412223318 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.413818747 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.873344343 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.051962306 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.725686571 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.414531197 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.259280815 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.417335287 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873442904 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.014662875 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.123497756 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.416762678 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.5294675 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.597577267 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.414976253 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.415290712 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.414305535 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.951458039 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.41834409 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.473691441 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.416301681 seconds)
  done (took 395.205720574 seconds)
done (took 642.01128538 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.409334804 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.409107189 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.410066327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.422609451 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.413479862 seconds)
  done (took 13.381097928 seconds)
done (took 14.701822243 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.687988591 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.691387339 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.692194295 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.484265853 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.687904156 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.691458897 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.570083793 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.644640207 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.691972597 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.694326217 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.454117344 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.702208343 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.645313764 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.497198964 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.443620754 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.571304979 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.462251953 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.589706373 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.574225556 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.736538689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.562905354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.469206262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.70430591 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.458622174 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.729565583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.759536504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.609632945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.593098324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.441520423 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.440140625 seconds)
  done (took 18.823675886 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.459885536 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.738855846 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.56982967 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.473439836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.705918556 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.461952239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.733550664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762594571 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.611295585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.59752202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.45603683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.440366842 seconds)
  done (took 18.870695949 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.433507195 seconds)
done (took 72.385691926 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.457028413 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.524891321 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.439759021 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.435613803 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.437466828 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.436710124 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.436895416 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.437651438 seconds)
  done (took 12.9238278 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.43750767 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.43628128 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.43841648 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.435071628 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.439310708 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.436886685 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.435093754 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.436244108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.43523527 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.436853833 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.4362373 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.437215472 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.437371293 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.437015791 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.436333468 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.438325749 seconds)
  done (took 24.310889609 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.440572349 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.436393868 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.438540189 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.437633693 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.437672953 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.43909366 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.439144667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.435595439 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.440397609 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.437604267 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.43703788 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.437953465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.438570852 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.436028543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.438998937 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.439376294 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.440069631 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.438623679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.442360495 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.440572908 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.439377891 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.437770429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.439162817 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.441003616 seconds)
  done (took 35.849436601 seconds)
done (took 74.408074654 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.422693057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.426481719 seconds)
  done (took 6.171183173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.495472909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.497573451 seconds)
  done (took 4.317700284 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.442294588 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.439834402 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.442480753 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.439045415 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.439552351 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.440003634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.439266177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.439203672 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.439212873 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.438904494 seconds)
  done (took 15.723353826 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.439812472 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.440754887 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.439215082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.442414692 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.440861924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.440023079 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.440982158 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.440179356 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.439933638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.441513398 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.439897229 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.438677381 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.44189831 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.437704587 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.439755566 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.441761145 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.440893569 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.439639687 seconds)
  done (took 27.25036452 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.453752417 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.460266287 seconds)
  done (took 4.236853456 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.568078681 seconds)
    (2/7) benchmarking "second"...
    done (took 1.484024335 seconds)
    (3/7) benchmarking "month"...
    done (took 1.544357583 seconds)
    (4/7) benchmarking "year"...
    done (took 1.538107778 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.483759946 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.461713194 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.481747109 seconds)
  done (took 11.885838149 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.443021926 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.735529439 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.928100873 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.618142829 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.436369926 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.457381629 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.417746958 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.458709369 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.456868802 seconds)
  done (took 16.276706984 seconds)
done (took 87.187248563 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.426547809 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.439164804 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.465122392 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.446433164 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.783828005 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.478177922 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.429029845 seconds)
done (took 17.799048904 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.42432603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.421539708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.427952147 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.441346985 seconds)
  done (took 11.040591677 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.426752196 seconds)
    (2/2) benchmarking "read"...
    done (took 1.756742326 seconds)
  done (took 5.508177494 seconds)
done (took 17.88223135 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.445203151 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.444628243 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.4448221 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.445105971 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.444974429 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.443641514 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.444123647 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.446644178 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.445031333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.444077527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.446066269 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.444441237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.44624422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.441520803 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.449521216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.447341197 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.447227994 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.444182672 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.444117294 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.446245181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.445230553 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445769723 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.446860402 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.446304189 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.443532029 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.446227878 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.447391681 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.446950282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.448222704 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.446547852 seconds)
  done (took 44.696723337 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.45418089 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.452642286 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.447935422 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.44761237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.446329264 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.447196581 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.449398646 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.446835226 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.445722755 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.447212003 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.447579466 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.448608983 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.448364421 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.447063885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.447333872 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.447089591 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.446350934 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.447315965 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.449662922 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.449213491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.448304028 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.449477615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.448429933 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.448582319 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.449240261 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.448888155 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.449135384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.447564857 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.450985441 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.449677348 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.449284092 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.447871046 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.447443367 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.450206008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.448494848 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.447178702 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.454726714 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.456416856 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.447466408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.447601845 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.446383437 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.448193052 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.448886994 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.447774168 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.450429934 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.447763805 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.447441689 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.451236215 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.446401757 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.45011537 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.448205158 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.448872626 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.448027504 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.448652651 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.450202815 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.450942919 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.451340955 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.44987765 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.450498568 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.448948024 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.450067602 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.449948284 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.451344179 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.450300652 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.451532382 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.449555689 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.451826078 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.450440344 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.449651308 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.451622543 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.450250694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.451403806 seconds)
  done (took 105.667628782 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.451566323 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.452056825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.450981462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.452451564 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.450218188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.451377011 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.451019038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.450484407 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.452453583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.451641413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.452713769 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.451997781 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.451805866 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.452390458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.451411207 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.451659192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.450157871 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.453283094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.451620475 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.454202237 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.452408074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.453776063 seconds)
  done (took 33.274798594 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.453935735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.453526779 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.45239415 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.45531521 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.456531531 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.452722425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.452554624 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.455698771 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.454259643 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.455312294 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.453469071 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.455543307 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.458383193 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.452876609 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.453242531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.457227202 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.455282433 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.454183256 seconds)
  done (took 27.516367029 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.454558806 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.455500314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.453600931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.454043859 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.455537642 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.457572709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.455360117 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.456980538 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.454370091 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.456952279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.45616082 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.454581539 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.455917131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.458853152 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.45480848 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.455569196 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.457321811 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.455572294 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.455254459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.4558063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.456564883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.455230327 seconds)
  done (took 33.360603096 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.456119821 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.456058009 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.45899665 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.456379107 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.453414524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.455168996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.45635843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.457155495 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.457866709 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.455927662 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.455764325 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.459068856 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.456960792 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.456367639 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.458554596 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.456661657 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.45853842 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.458876091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.45806265 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.458033129 seconds)
  done (took 30.477202657 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.457418247 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.45770947 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.458478847 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.456254441 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.457619365 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.45668133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.455539128 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.457393602 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.460215792 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.457877216 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.456155415 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.456778655 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.458500873 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.455610851 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.457081661 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.461000396 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.458478669 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.460710731 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.460363089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.457851602 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.459831499 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.457655795 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.459017698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.457041947 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.459036252 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.45860914 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.459119448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.458301799 seconds)
  done (took 42.166537831 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.477451731 seconds)
    (2/2) benchmarking "in"...
    done (took 1.47809367 seconds)
  done (took 4.297115752 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.462461612 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.461166387 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.461476463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.46101118 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.462141414 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.458932867 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.460906244 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.46038521 seconds)
  done (took 13.029237615 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.454771391 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.462039562 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.461654527 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.462401135 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.461845292 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.452522692 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.460815656 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.466269686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.454183513 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.45357917 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.461068633 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.460628915 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.454607338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.455864591 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.456032794 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.459579983 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.466372198 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.460685307 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.461629491 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.46188891 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.462909781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.459080679 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.458534556 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.465641757 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.455867906 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.468998062 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.461368267 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.464605527 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.455298109 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.458948282 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.460502168 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.466063269 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.463568091 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.463775597 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.466667431 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.463144372 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.467533679 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.462851588 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.464301681 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.467684137 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.464337642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.464273275 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.456785274 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.461920383 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.460194713 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.467230102 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.466491523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.465981217 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.456910702 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.463100729 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.472920924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.458718039 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.466568504 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.462592256 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.463145082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.468125239 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.474882901 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.459873107 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.467562947 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.470560105 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.477643791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.473814336 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.470343244 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.471332943 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.465667986 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.47493338 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.466458916 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.472797144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.46985917 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.463775344 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.466685236 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.481021192 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.481803926 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.468446923 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.465215341 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.468032192 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.461227305 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.472332613 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.470692687 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.469001173 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.473485758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.467957165 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.464983301 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.469087556 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.4595015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.470547088 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.46528233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.467159217 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.461578959 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.473899487 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.474367175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.469529635 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.458799937 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.46073041 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.464983047 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.468603201 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.461708311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.467983992 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.473874405 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.468046849 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.467952335 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.464813129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.472821502 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.472618316 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.471135989 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.472347511 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.475864223 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.460293735 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.473427986 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.480386898 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.470991841 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.463798527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.469812522 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.469468073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.46180171 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.474321453 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.474771241 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.46661801 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.47377424 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.470749615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.468516567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.478903241 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.476277807 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.470886022 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.463834095 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.473847041 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.469274375 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.470512856 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.477199448 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.472539847 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.472178307 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.466808992 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.477295388 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.467004302 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.472277989 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.4655062 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.472253853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.469282447 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.47066355 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.465021502 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.468876586 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.467648876 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.470742987 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.474236267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.477346145 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.469564831 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.481219885 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.471915439 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.471479008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.470106786 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.475585144 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.472039196 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.4661384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.47497247 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.466681045 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.470590674 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.464827772 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.474724825 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.468855477 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.472978043 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.473883959 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.464425909 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.472534783 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.477299672 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.474495146 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.471718651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.478472391 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.475862984 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.473707654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.467328154 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.478037855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.466173223 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.47047598 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.480080574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.473352095 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.473364608 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.47392043 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.478204775 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.471554748 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.469650568 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.466397792 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.478231912 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.479919536 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.478026584 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.482456325 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.474777153 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.475548471 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.47039941 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.468965856 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.479220166 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.467824308 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.484543121 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.484514397 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.489086902 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.472482118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.480979832 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.469792883 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.478118549 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.473499314 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.48425672 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.474455604 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.475072295 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.467493844 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.478523508 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.468131664 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.479615419 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.468211274 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.481850294 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.48203453 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.47669347 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.477530035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.468466707 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.472942738 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.479673188 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.476782752 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.475388117 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.468668562 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.479715347 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.468505439 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.471899267 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.478209688 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.476557597 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.479722804 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.484449022 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.477062111 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.477928426 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.478977639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.473802889 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.480657959 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.477279655 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.47502986 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.483931612 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.477374666 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.477248062 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.483871897 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.480489739 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.476255037 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.475912399 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.486949608 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.47890226 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.472873995 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.486661184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.479260052 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.475307652 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.477105363 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.472347435 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.481045097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.481086377 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.488611831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.471255109 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.483647482 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.474782078 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.485117182 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.4786981 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.478152285 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.478719216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.483196404 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.490885047 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.481748669 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.474564866 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.483471327 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.482299447 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.480574711 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.474350435 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.483831094 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.480712856 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.480176474 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.479560417 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.478170491 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.483875849 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.47287974 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.480190481 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.473298078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.494095884 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.495466438 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.486084296 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.488015648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.488133058 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.480531555 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.484070047 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.475317895 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.4782292 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.481287237 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.479060123 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.480139143 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.486224996 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.474951754 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.486485386 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.483156911 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.47863543 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.483772868 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.48028522 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.473300592 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.48431711 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.480970042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.47813968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.474996264 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.487860611 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.479126504 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.485830931 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.482904709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.473915265 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.487417473 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.484750663 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.484761977 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.478323002 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.481404238 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.47266709 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.481961602 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.487161257 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.477371582 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.486992362 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.475278068 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.485452171 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.479197089 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.486251543 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.488675831 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.479091243 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.488391965 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.483616468 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.471161959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.478726466 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.482524585 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.486385747 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.48970763 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.479512312 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.483442058 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.481815699 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.483275926 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.480619141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.481895996 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.481283654 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.482535402 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.48792102 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.487167004 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.480271418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.48801884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.493035598 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.483872304 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.48538741 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.474596951 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.487468818 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.492121414 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.478889132 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.486605927 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.482245655 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.484337776 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.48089896 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.483179802 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.482346237 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.481044646 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.48901572 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.489351781 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.483892128 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.480667751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.487403484 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.490110568 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.488254161 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.490235247 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.479519744 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.492781863 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.4902282 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.478743696 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.479635365 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.480362254 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.487735504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.475075919 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.488686636 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.488586212 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.48333582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.488123358 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.493436795 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.477458444 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.488144296 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.496818834 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.478972252 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.488269808 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.488150971 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.477334215 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.489386538 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.485572581 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.480489266 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.480597314 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.486358488 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.495664356 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.476603797 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.490779676 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.485765457 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.489692356 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.490271738 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.491860265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.484946831 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.488082472 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.479727147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.492264942 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.491561684 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.493416285 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.482363327 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.487237466 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.484589418 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.493584403 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.498356853 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.485303053 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.494998857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.486089192 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.484392395 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.490034779 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.495299402 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.487658831 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.492758962 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.481176957 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.485931494 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.489089125 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.492494351 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.492130806 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.492378607 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.486145301 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.484770389 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.489547606 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.492447389 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.48971767 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.488257833 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.498331358 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.483216086 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.484334114 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.488049614 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.488774695 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.497973179 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.484728399 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.4928919 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.488815269 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.496052759 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.493930102 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.492475611 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.483726341 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.489160676 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.501353734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.495717572 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.492612183 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.492375268 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.495501001 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.487752506 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.492300563 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.494381842 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.492965561 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.491199044 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.497429496 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.487145871 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.491518639 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.48795844 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.493290434 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.497009804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.49333491 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.486433829 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.502563276 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.502106716 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.498136558 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.484696196 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.493303865 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.491708303 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.496718411 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.493313655 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.490559657 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.503015198 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.500246196 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.498395965 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.495312686 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.494829723 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.487606811 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.495822763 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.498669911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.492880401 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.506862213 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.489095778 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.503173782 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.49714115 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.495396063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.487186805 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.492087326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.491661401 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.49569382 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.499358268 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.496269498 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.497340792 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.494293953 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.501281984 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.499161862 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.494650724 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.494212303 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.488360164 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.498273591 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.48946032 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.49745571 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.498034721 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.489285986 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.500155471 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.500148657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.489588698 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.496993155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.504054079 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.495457348 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.489693975 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.495216487 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.501805658 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.506876207 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.499340109 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.494083205 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.498758086 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.501289192 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.495135993 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.498967409 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.491951829 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.507084108 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.509453659 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.492641406 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.495653939 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.50307746 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.50414951 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.501344243 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.50013098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.492487744 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.496419601 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.502044039 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.498735953 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.502717833 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.502681013 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.491371279 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.506022712 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.495985428 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.499040395 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.498483065 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.506997389 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.495453787 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.497188174 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.509775719 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.506894911 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.496748604 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.511143692 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.505446894 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.502711243 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.502087715 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.484656331 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.497202025 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.497108909 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.507096499 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.501112238 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.500903536 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.500533918 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.485898264 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.502250855 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.5054578 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.512982044 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.500309938 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.489617696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.492992299 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.500922032 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.4994665 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.498977452 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.501563842 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.495356466 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.497811767 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.489651359 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.517912503 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.515298978 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.503027757 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.502443063 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.501408861 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.499662662 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.505819754 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.4966709 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.511085572 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.499420187 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.502602208 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.496391403 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.507194595 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.496805084 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.489471654 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.496241688 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.496566533 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.501281443 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.507702143 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.51993323 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.504144143 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.503518829 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.502805287 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.5009715 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.500875517 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.501618215 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.500933784 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.495490795 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.498150374 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.506710643 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.503805771 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.499998504 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.494532899 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.509948851 seconds)
  done (took 884.870556581 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.504151899 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.503882229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.504974288 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.502948784 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.504154077 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.503050607 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.504311093 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.505030866 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.501057123 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.503906594 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.500065588 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.502977143 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.506870411 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.501891238 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.502504819 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.497165278 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.506741392 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.5059398 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.505047304 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.504721573 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.505980844 seconds)
  done (took 32.951899308 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.505383862 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.506468203 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.5059571 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.50699518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.505257496 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.504968311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.508111622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.503079621 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.507275772 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.506682526 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.50901779 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.504803179 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.501265118 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.505338571 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.508845358 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.504043679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.503407872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.505202479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.506977638 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.505883138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.506904755 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.506412335 seconds)
  done (took 34.505500394 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.502330043 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.504260135 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.49925932 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.512010351 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.508718034 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.504294189 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.506443793 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.509546391 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.509311176 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.498434736 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.499327359 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.50170378 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.504686786 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.515605384 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.501711548 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.51453137 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.508527357 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.506337445 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.50689306 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.508319363 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.507531219 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.517475341 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.507686786 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.50075907 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.511202287 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.509451189 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.508472471 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.50866532 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.50203144 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.511595625 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.509488775 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.502821497 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.510645308 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.50815259 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.502304073 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.512406752 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.507049165 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.511391834 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.510830253 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.505690674 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.519072638 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.508971968 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.515449959 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.518342646 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.513278208 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.501811035 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.515115229 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.51028698 seconds)
  done (took 73.772169114 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.511789303 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.511328406 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.50756901 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.510343724 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.512516238 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.509395681 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.510072408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.508202333 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.511193409 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.510101664 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.511149593 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.510399703 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.511830289 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.509785798 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.510698263 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.511196131 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.511083045 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.513897928 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.51382262 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.512085107 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.513814811 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.51229475 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.514469182 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.511122486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.514342933 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.513876974 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.512311416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.512193469 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.514278614 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.514864079 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.512471461 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.512087143 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.512101581 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.513103196 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.511359867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.512028019 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.510825994 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.515662781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.513740205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.514357613 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.514050721 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.512048246 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.512955561 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.513083401 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.514763004 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.512028026 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.514386411 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.51280749 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.514115409 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.515238042 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.51518424 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.515070014 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.513273261 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.515959927 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.513786196 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.513229185 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.51493857 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.512919218 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.516460349 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.511109977 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.513052453 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.514046735 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.514509021 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.514809205 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.51558332 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.513699351 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.514256129 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.516637194 seconds)
  done (took 104.260723125 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.514033557 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.512865859 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.513135363 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.512855874 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.514013925 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.513857962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.515742531 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.515910273 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.516624591 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.515366691 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.513954183 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.516487675 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.516296242 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.517592161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.51365075 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.511190344 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.517364933 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.517608437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.515340229 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.513700983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.517169045 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.516820949 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.515508022 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.51475042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.518273675 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.515903714 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.516518376 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.514284921 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.514019002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.516897432 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.519316315 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.517549271 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.515897606 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.518172683 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.51563645 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.516714874 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.516913312 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.519427323 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.515206593 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.515395044 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.517230715 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.518405468 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.517353165 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.515113356 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.517794584 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.516060817 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.51727367 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.517272462 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.519087793 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.514997348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.517201259 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.517313129 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.515892346 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.517543926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.51600771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.518219994 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.516833465 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.51686446 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.517420047 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.520449625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.517579766 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.517906619 seconds)
  done (took 95.396883242 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.518717191 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.52025055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.518977495 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.517729546 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.522002445 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.520377712 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.518367068 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52005159 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.521737661 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.521200101 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.51853688 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.518461079 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519999159 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.522878603 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.519418216 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.520176822 seconds)
  done (took 25.709771215 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.519356844 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.521032304 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.518763127 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.520165455 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.518664323 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.519519921 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.523172177 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.522001683 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.52081982 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.523084411 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.520123165 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.521944167 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.523344009 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.522473544 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.519747283 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.521831813 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.52042394 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.522679713 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.520485269 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.519288863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.522431027 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.522076492 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.522213811 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.521855537 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.52198964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.523919717 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.522071905 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.522596267 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.518919191 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.522320763 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.521806962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.520304805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.521563763 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.523809385 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.522708743 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.522123217 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.524376501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.520066722 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.523459828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.524658739 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.523309264 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.521813332 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.522276857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.524103606 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.524830702 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.523937352 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.523641556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.521989726 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.524987759 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.524585715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.525161035 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.521186933 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.524570026 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.523703656 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.524401617 seconds)
  done (took 85.113005109 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.519584268 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.525874193 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.524977466 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.524173586 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.524685408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.525452587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.526775111 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.52486471 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.526059895 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.526280323 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.527393652 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.527949328 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.52727463 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.528314471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.524442371 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.525232385 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.528721803 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.525099034 seconds)
  done (took 28.858933532 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.523784132 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.527238663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.526856993 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.525737856 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.526731736 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.524481647 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527065899 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.526027813 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.525840255 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.527197494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.527416472 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.525028878 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.524878172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.524223823 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.527390415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.525416505 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.526709387 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.526877661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.526998533 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.526160667 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.530591762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.527898482 seconds)
  done (took 34.978838285 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.515710785 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.515184887 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.513994881 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.528513629 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.530428438 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.515504467 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.51544982 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.51516678 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.535343634 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.543443442 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.543107155 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.524284618 seconds)
  done (took 19.694708969 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529396664 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530797229 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.529353912 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528202106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529695481 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529739676 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530632726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.528308067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527692448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.531298919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528491347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.529124942 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.527717182 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.52668883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.528379074 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527369495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.530228609 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529875798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.527504118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527921984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.530508729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529366488 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.52926807 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530712486 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.528731446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527369048 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.532364328 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.532760711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529761311 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528916776 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.531822595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531505918 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.53036637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.534562702 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529302779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.531943595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529463501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.532166461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.532190789 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529948153 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.530488446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.531091757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.532041644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.531839133 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530207501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.531579632 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.534987312 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531506129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.530723451 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.532188493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530512205 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530193943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.533015045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.531905547 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529860432 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.533231467 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.53528977 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.533296111 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.531293411 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.534370375 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530300757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.530291667 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.531688395 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532464843 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.534341987 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.532966058 seconds)
  done (took 102.424646414 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532011282 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.532051993 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.533466996 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529781884 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.531553326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.533001047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531739101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.533007839 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.534756798 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.531556243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.531887314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.532939029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.534352125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.533211941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.532141623 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.530927286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.533143614 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.534061597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.532029647 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.533906504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534752958 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534668255 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.534609558 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.532692053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.535266668 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.533519734 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.533763145 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532561903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.534692777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534057083 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.537388825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.535113136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.535607836 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.534735985 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.532878505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.536045047 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.535880899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.534881516 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.535872912 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.532290832 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.535727767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.533821536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.532585599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.534234334 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536583423 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.535992987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.535081272 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.537497392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.536944395 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.536038028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.535236428 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.537244474 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.536387597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.534584601 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.533746552 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.536324849 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.535599848 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.533884259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.537785345 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.534016897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536211925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.536900913 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.535916205 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.534146514 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.537962686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.53563871 seconds)
  done (took 102.674849667 seconds)
done (took 1961.029057517 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.699769992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.65825524 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.598192241 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.537249679 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.521163455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.526567175 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.539863819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.198167792 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.248097306 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.000953032 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.59832532 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.72233559 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.561948817 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.451419488 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.598231297 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.63622983 seconds)
  done (took 37.504860727 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.558863106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.537886874 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.666595746 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.530769049 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.558843693 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.748878855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.59830524 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.535425463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.738385199 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.53933857 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.522606207 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.578670034 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.530922507 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.536657435 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.55117451 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.75471198 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.843626948 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.536712036 seconds)
  done (took 33.276953232 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.066741053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.53504322 seconds)
  done (took 6.011327163 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.554212406 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.534004765 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.533933238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.530128988 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.522332403 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.523995063 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.532709641 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.529927379 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.524184488 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.681419661 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.536847582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.545562558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.53153848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.533873168 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.542093799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.578993107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.672356019 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.546506691 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.539152014 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.540007494 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.532758156 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.635542548 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.583565114 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.547759862 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.682792991 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.532017611 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.540376025 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.544263777 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.671207088 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.54863823 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.534287939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.533867066 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.536934088 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.528062124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118646133 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.536191638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.56282397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.546294724 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.543085254 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.697760524 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.538475681 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.541625182 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.527300157 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.109063169 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.652363802 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.677274816 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.543731157 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.538516189 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.536315093 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.609422561 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.536948312 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.537090493 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.597442128 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.435446786 seconds)
  done (took 96.790433533 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.55846433 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.527864932 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.483749454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.540632086 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.529292184 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.533464339 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.530742644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874978467 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.596222834 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.526294551 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867800626 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.563337943 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.539399032 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.587522764 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.58341784 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.568565005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.528470156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.531543741 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.532317833 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.533110061 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.529639948 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.551122109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.534358581 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.693585476 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.576585942 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.534917467 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.548950153 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.531967094 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.531599275 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.529552022 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.533195639 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.541593875 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.603241977 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.53309896 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.849309175 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.551832933 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.550712667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.54158002 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.581830014 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.533154598 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.53786806 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151764685 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.546949445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.532934292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.535852351 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146691759 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.534754952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.536976413 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.540124909 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.503932087 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.533809489 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.53473057 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.532360689 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.551447034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.53089278 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.604901401 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.641927812 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.536152644 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.534819591 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.534010641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.58655634 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.536904674 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.534246936 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.533451279 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.532956146 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.528783737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.830868186 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.538880872 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.532307261 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.557005321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.535527592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.543219085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.534604672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.546125646 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.610541923 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.542980425 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.532797586 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.534767938 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.545928297 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.534024683 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.536649275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.540473271 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.867739715 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.549528658 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.533338788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.551125308 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.544482357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.550928352 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.548581354 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.537741884 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.534356964 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.539684029 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.857166577 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.580908603 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.534815012 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.53511564 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.581201395 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.535470143 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.538698036 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.542245367 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.544474212 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.536926795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.535854717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.539279238 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.534469573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.537436009 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.536613555 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.537012776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.526578886 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.538218856 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.542748627 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.534767095 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.534742951 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.543362322 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.752920064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.535708775 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.914711202 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.542927465 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.536364897 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.539557043 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.533489889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593039936 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.532790756 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.542601231 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.53615874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.909010964 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.554015884 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.53883678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.534117499 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.538559781 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.548293522 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.539508712 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.637551154 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.539494649 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.536111541 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.568755064 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.571791193 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.536781025 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.543956218 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.537705188 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.549537519 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.5426903 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.538543546 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.859579826 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.841191115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.535836689 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.539623997 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.541199957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.548548825 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.493458875 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.541145311 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.537063893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.846707404 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.828950788 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.538613736 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.53773628 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.53665612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.532001355 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.540543224 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.544100411 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.541068371 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.559467625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.538728069 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.539571812 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.541241344 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.561520906 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.546837747 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.873423946 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.56014837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.539972731 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.559661002 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.539264289 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.540218402 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.565670156 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.546436813 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.538189298 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.541457549 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.618875234 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.463600262 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.542776505 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.541313618 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.538779317 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.558159447 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.54042118 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.548310823 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.540339357 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.539592386 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.589646461 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.546508149 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.541774479 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.543114868 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.552713958 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.226855011 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.545856437 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.545610986 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.457715111 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.544470053 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.544965078 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.539711202 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.543522564 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.616233752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.538146728 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.60238672 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.925258513 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.549384592 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.587062925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.54266485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.585207566 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.556734468 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.546557245 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.542732748 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.543601111 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.545531607 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.23712578 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.540431882 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.541271167 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.544261176 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.544549927 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.545891116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.544964374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.546350117 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.544731861 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.54685666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.581061329 seconds)
  done (took 564.035726807 seconds)
done (took 739.028485055 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.542925521 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.547154288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.546489162 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.54489511 seconds)
  done (took 11.607175958 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.559924403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.550736795 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.559796924 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.549355246 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.559285298 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.54789061 seconds)
  done (took 10.753409034 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.541483243 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.547328901 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.545456092 seconds)
  done (took 9.062214337 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.793336992 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.558606288 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.956856741 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.548129317 seconds)
  done (took 10.28741215 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.55804025 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.559622639 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.559706879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.561585525 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.559776864 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.561520845 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.561297439 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.559414208 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.560849606 seconds)
  done (took 15.465435621 seconds)
done (took 58.609819946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.628007532 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.630386619 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.544918876 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.591169075 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.683810384 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.637535337 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.637786327 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.637230028 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.636226317 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.5845709 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.630986736 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.575293584 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.630868024 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.758686032 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.585646132 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.631415003 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.576287485 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.723924228 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.636809381 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.584431646 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.657037541 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.586473515 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.585165807 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.550778714 seconds)
  done (took 42.353930713 seconds)
done (took 43.785091354 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.576602613 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.646235525 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.551640332 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.554213041 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.55680836 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.556353354 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.580479074 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.558902071 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.568459022 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.569258338 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.554714561 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.566252468 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.569976156 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.567535582 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.587684189 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.55417022 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.553948594 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.567055533 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.571452819 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.574519823 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.557544601 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.554969673 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.583692759 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.554618748 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.562532579 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.567309083 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.564197284 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.549710951 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.564750147 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.572381696 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.545816909 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.565155171 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.575063804 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.568371492 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.556912965 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.566409764 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.557591966 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.649781902 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.579397364 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.566783074 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.564305785 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.574929993 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.561615007 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.563225135 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.570713817 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.58667938 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.565000652 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.574473048 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.545420971 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.55993594 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.579680455 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.570018008 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.568358321 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.556403147 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.558891806 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.576675929 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.569331573 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.581158359 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.567260522 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.561441412 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.589439062 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.578288286 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.572090408 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.56768978 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.568858301 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.573483843 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.57043756 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.576032545 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.567087073 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.55937054 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.561490115 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.56743405 seconds)
done (took 122.398841655 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.680246986 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.5536241 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.7133496 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.566908096 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.732599036 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.684924259 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.567736349 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.570399437 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.570058572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.361439156 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.568870391 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.571810302 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.55657004 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.569010044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.678952823 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.567978571 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.56778168 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.259949361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.56910077 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.693355434 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.556200795 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.56752484 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.568993259 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.365608556 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.556928701 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.553661497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.695900809 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.572274567 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.266723079 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.552877805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.558389837 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.264746848 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.693914693 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.588688278 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.579439615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.579664215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.726484937 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.576729533 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.682919629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.687629261 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.720700144 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.607524245 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.558043453 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.558686828 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.571531617 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.570154431 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.568452917 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.598802581 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.559208549 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.57129262 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.257531016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.581747494 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.569778277 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.572275218 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.572549392 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.594996335 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.572891376 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.571875001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.698465408 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.57039229 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.682639165 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.36344763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.36600004 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.571135833 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.557497127 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.569415344 seconds)
  done (took 123.789142497 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.631584824 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.640137718 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.690958822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.567020662 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.612710671 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.688570241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.563478488 seconds)
  done (took 12.834138949 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.567120681 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.572465652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.614935077 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.612974577 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.572714933 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.733353204 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.572149054 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.57799282 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.574459158 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.615003879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.570952033 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.572312908 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.580821495 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.56346331 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.608580794 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.577580117 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.681543023 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.570843796 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.572836399 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.716922594 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.575766464 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.582070631 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.612003923 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.573769139 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.574871692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.569184326 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.321192887 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.574375533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.572609397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.576197327 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.574529042 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.633859042 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.57585 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.564237787 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.574920036 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.682003789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.572703838 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.574343651 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.578612619 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.564610029 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.576092853 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.575598314 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.575096306 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.572918756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.574018484 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.590957726 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.577187667 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.575314412 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.574301837 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.573808337 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.617101069 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.576099445 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.572796233 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.573997311 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.619735702 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.581932629 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.572962669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.573613093 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.57256889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.575679115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.721885062 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.616033077 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.577165954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.614231714 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.575290231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.576618992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.574427102 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.577106169 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.719221772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.576464967 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.61364927 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.578462757 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.749959617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.594315944 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.580662481 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.57233783 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.572054692 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.576439491 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.566110649 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.576666475 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.578720456 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.566788874 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.578606291 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.579829219 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.576443254 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.723707243 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.674727682 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.575247952 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.583612679 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.575245423 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.578662328 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.618864746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.579698289 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.580896793 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.618746007 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.685822797 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.620359858 seconds)
  done (took 160.90687871 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.580214195 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.579963347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.574222057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.595446735 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.572339158 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.571749619 seconds)
  done (took 10.914060655 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.572282265 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.581948427 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.579629953 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.579006335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.577076551 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.579334112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.575973032 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.575228781 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.584409082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.578453601 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.576367481 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.577434149 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.576930792 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.582074154 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.58157968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.579181733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.580276454 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.579355251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.58041774 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.575990998 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.568230346 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.57791371 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.581300091 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.574770719 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.583229582 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.580330285 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.597492796 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.579572774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.582778534 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.579118974 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.584053193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.579961026 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.572385074 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.575909166 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.582294756 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.578074849 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.58458078 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.584802067 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.57887049 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.580147083 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.579356141 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.581808106 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.581747539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.579605523 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.57577461 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.580150133 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.583135042 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.597937234 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.583724784 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.584357948 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.584039233 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.584659634 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.57950539 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.582133789 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.575620456 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.582924637 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.585278555 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.581951803 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.582471458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.576892221 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.588347973 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.582732411 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.577819601 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.585669152 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.58379922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.580988443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.575982981 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.59150803 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.584863214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.585411365 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.587702667 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.581541652 seconds)
  done (took 116.270734179 seconds)
done (took 426.154844963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.95485736 seconds)
  done (took 4.400721829 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.711033688 seconds)
  done (took 4.155846564 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.312544898 seconds)
  done (took 27.074830714 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.65015724 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.577676005 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.594411825 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.574774303 seconds)
  done (took 11.84232354 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.177320106 seconds)
  done (took 4.623835653 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.579100779 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.589259226 seconds)
  done (took 6.618788985 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.942805862 seconds)
  done (took 4.390143454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.359945769 seconds)
  done (took 4.818906169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.603598335 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.590345234 seconds)
  done (took 6.652941621 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.565035052 seconds)
  done (took 4.012182828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.06015709 seconds)
  done (took 17.506879892 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.598610957 seconds)
  done (took 4.051766736 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.605195707 seconds)
  done (took 4.051041474 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.763145489 seconds)
  done (took 7.214524621 seconds)
done (took 112.867876349 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.570250574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.57585959 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.574395515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.567076568 seconds)
  done (took 11.732805659 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.651653692 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.652224847 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.658376713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.651076829 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.645863322 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.656143416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.628914181 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.614523013 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.643884042 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.64082465 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.656379797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.64661658 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.657869873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.616737888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.637836745 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.690743383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.644494048 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.660360048 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.613125893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.646488095 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.591410649 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.643629175 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.642990266 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.59027687 seconds)
  done (took 40.831787832 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.077967902 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.65542089 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.732557676 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.631658044 seconds)
  done (took 8.551413082 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.694887686 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.691759299 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.717528633 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.753201622 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.793376049 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.703391768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.615895927 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.612589972 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.593915018 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.692915865 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.767103081 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.692062917 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.910455271 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.590922252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.907544251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.59177147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.592515092 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.696318513 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.743931615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.777236184 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.5933505 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.695047566 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.702379662 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.695875696 seconds)
  done (took 42.275415183 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.599135852 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.608458157 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.590458184 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.594959242 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.589766453 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.595322523 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.608757774 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.593024277 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.598676484 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.592811006 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.588608636 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.593708308 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.604996126 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.592228279 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.590326134 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.599876427 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.590720188 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.600562739 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.600077222 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.588414158 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.595513274 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.600926662 seconds)
  done (took 36.568180358 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.575850949 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.574225486 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.923390785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.829355157 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.576772675 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.576904046 seconds)
  done (took 15.509881907 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.664406075 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829871394 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.585564943 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.0234763 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.112227524 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.587910231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.581637557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.86939359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.246303396 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.250323132 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.633309403 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.669152497 seconds)
  done (took 23.509192462 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666209164 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.589977677 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.607518023 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611890666 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591757023 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584744186 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631414636 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14223336 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.597953764 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863393557 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596132072 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675976167 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835869843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588722218 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.591735472 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.591197425 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819192685 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182726894 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594431885 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599219278 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619886185 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.609815089 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593245326 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861523935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.591610568 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590343656 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.854007114 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.592421932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924854463 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90135817 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900315306 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595694129 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866463428 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088493603 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701143916 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833214432 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605753133 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.596758544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.587741781 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.610179696 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611656216 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.594474641 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894178037 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595921464 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.591892481 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.604967825 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156328877 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.601169108 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.590571355 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.592226009 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896922856 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680244879 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.599033485 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.58921546 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668692911 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595350907 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.59808027 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708486711 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236415389 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591077125 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631603078 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.595227318 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.592661895 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596542993 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340509332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.602243179 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.598257986 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599821675 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591342567 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.592201309 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616804552 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592028434 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.613865925 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592108595 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533159737 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.612856185 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597502114 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241524384 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605514812 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.593705404 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824750814 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594207264 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590410852 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.589097239 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.591846784 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.480331338 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6045358 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.580097991 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62653414 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151131091 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.847126272 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619174986 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627142485 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.819579645 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.580187523 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595332501 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.607103384 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59817764 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614141471 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152929362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595853539 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.598251002 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842400695 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.805366342 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601353885 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.583076925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160203449 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601024415 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.617747811 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.603277399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.845177059 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.316309393 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912344623 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603688782 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637290374 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.596743424 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.555679711 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605583804 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.605390225 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.610272198 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921412294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.585564419 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603737436 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66904102 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605404146 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.598189945 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616587697 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602093254 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.59975499 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.839486743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609313856 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912079524 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.603243969 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597644707 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.598032929 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618723884 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.602681745 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.820684556 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59719771 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878657371 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597609866 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601947074 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601342357 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.820017564 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.612545296 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.606256452 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941004748 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601002223 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.6038195 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914455144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640460391 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712445414 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633152181 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.599027792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.852227863 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.606566363 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.605806567 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.62023425 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.604315307 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604766016 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.608051336 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597295824 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325243967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608656026 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.608887426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.603369909 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.617473153 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674112373 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607037829 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850264114 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.606358818 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603877655 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.614132432 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.601216266 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828735034 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911587008 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.623448824 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782643347 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.16158856 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325485765 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62076335 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.603183825 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.602776102 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.600099838 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60295337 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606132461 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.602780986 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849878708 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922336508 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.606159323 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334101905 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.611738752 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.601241492 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.616112398 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912869456 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.61567737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607121437 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.604921456 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608116855 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619425886 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915704533 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831012373 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.619214687 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.605923172 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.149982094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613927657 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.60601351 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.605963516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628891597 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603964814 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261040767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952365276 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599745357 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920862516 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.610897564 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.631090676 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.599550185 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62172572 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614682714 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.623517765 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615840258 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.857873925 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.610075173 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612713991 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246506285 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516645867 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263687619 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614619093 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.612717521 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.629870994 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168627559 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611151297 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605483417 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89694369 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171151398 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605628876 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167414458 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.627190946 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.518666007 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921333991 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842817174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602533904 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.628651572 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927109165 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824208397 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635789572 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.625092829 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610987655 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.59704872 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270043266 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.612456489 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789683249 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166912573 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630096138 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614594584 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.611406383 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620954581 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091724181 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.610622606 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608642487 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.609754809 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.629146972 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28007003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.616486358 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605918847 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376068285 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632012721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.177744358 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612376529 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863094606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92239974 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91895267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.61494482 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.616335768 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.880358884 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919754996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616488061 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.611691844 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278469293 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.469856583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.619174579 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609770046 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.566498902 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615578765 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955142347 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.620391065 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.612530698 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622970765 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.609270582 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612721052 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.607080517 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.618227652 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610022175 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205055308 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.6113046 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.611548849 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622410762 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617076945 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860877008 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.627388894 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335611098 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849123936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60436228 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649755727 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.616983049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609856397 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.602683342 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.610716616 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.61223611 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701558689 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.84012751 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.611158847 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.605892645 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.67050551 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8270453 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613465837 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.613245467 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899702497 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.616486839 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.634660582 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524915328 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64972966 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.61182612 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617951142 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603352654 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647650647 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688581826 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864910441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.932264408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930439247 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099012498 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615601031 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619552118 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.631957238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696276426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622488001 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.624262628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.616241347 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3397729 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574818519 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352299788 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936493154 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.620251777 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624134084 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61270099 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855803638 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610945762 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891503814 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61506118 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.618867979 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640964975 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614721426 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624761411 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830687478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888942477 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.61505637 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616656908 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637901907 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.613975057 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935024226 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.83248181 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206652045 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274861358 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62246794 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.616653185 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189928965 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896868509 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614045398 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614944146 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61753495 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.616068479 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.631309829 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.628352471 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613725089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844758742 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930021465 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128992868 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93517861 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.643172239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.488592782 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624383245 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869676059 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456473371 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870437281 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354273621 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472914651 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876725139 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692550959 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869128738 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.622834472 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853285069 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.624207623 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.620973247 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616158171 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61570042 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.617584998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931462161 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351635792 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878940097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.622207562 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.623520986 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653829248 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.870319426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846377419 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.513679102 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.843123058 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936539529 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.631353312 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.616271482 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350975269 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939920742 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624013611 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.626107465 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881826682 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.624875695 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65442721 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.500196579 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.620355312 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275746397 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.839350559 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64004154 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622118826 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47306067 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335980954 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.636680623 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191243787 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622756592 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623718117 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901469008 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.626794987 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.631046132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911778041 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.626487263 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630404964 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878707779 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.329252076 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.541045935 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.628788284 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647014573 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.626937283 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620727727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638548813 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624907745 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629681666 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.105456354 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.625250136 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62206607 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634091228 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.630443676 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634438857 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.626133813 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624475683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.629706365 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.615803251 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.622460126 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.637989485 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743547038 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276173057 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626404773 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.238800595 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.957061481 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.870381787 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.634007163 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.6126918 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.629947303 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62293196 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623936532 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623692944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.639291827 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24843419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.633516786 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.942665958 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629196368 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.837608008 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838100752 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.630863109 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873651199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63525165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646038736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.61019039 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621477463 seconds)
  done (took 1100.303585145 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.6494151 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.681945907 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.638229966 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.715898011 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.668522029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.683599945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.736844631 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.68041807 seconds)
  done (took 22.945134801 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.617000111 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.622993033 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.62959341 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.622315101 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.612634818 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.176396455 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.627189519 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.623895221 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.637316259 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.616347271 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.616970228 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.364071867 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.62847077 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.616072099 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.627473455 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.626890183 seconds)
  done (took 36.76546299 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.730706824 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.816656651 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.074741534 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.699149324 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.645959454 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.629168929 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.019544749 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.637774295 seconds)
  done (took 29.746500053 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.634160425 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.631235399 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.633496583 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.633441211 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.634096517 seconds)
  done (took 9.659939871 seconds)
done (took 1379.854456966 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.63467205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.634117717 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.630917999 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.633671512 seconds)
  done (took 8.02472283 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.612540013 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.612266518 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.620252682 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.630470352 seconds)
  done (took 10.966162204 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.070730179 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.281632519 seconds)
  done (took 5.844373381 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.62707565 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.396508631 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.378259388 seconds)
  done (took 8.894379403 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.948134017 seconds)
  done (took 3.442465558 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.033806916 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.110616877 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.620349954 seconds)
  done (took 8.261666655 seconds)
done (took 46.933746797 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.631976354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.381379779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.80343617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.633177433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.84964295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.803263966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.862418251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.619530641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.618160846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.633965075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.632747996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.806212913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.85301165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.389045709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.854080072 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.388289641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.805645617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.617660558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.617763326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.624502806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.86424777 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.625230748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.62694936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.632323606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.80785159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.794307377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.633522202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.390777012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.637264019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.619630167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.78656378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.618471232 seconds)
  done (took 90.958614231 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.618593345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.635951624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.619866284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.618137748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.643815893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.62001009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.621163135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.619056413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.622968281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.637086212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.621711457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.621542842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.624339228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.623128082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.62278206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.619379416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.640675673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.642868801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.634966349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.62320321 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.622736214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.61901184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.658239114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.619490602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.620601904 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.623478755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.619199529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.622579816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.621029981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.644469759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.622294375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.623120784 seconds)
  done (took 85.545392421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.619983073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.623229988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.623660162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.623876599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.624567288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.64363328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.644044198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.624464395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.62364547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.623809227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.630679284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.638627282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.623445347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.620411685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.624113815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.623724463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.624325419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.623091499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.62963598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.623584053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.62740565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.639228143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.623547273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.621190396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.64610344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.624250628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.624899966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.635641125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.642214649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.622609675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.626208472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.62209333 seconds)
  done (took 85.590873436 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.868296736 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.642868791 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.646856203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.63362733 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.647469104 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.645351809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.634723344 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.873372739 seconds)
  done (took 17.092198282 seconds)
done (took 280.685056406 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.649868959 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.655017651 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.665079286 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.65272385 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.65739261 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.657245468 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.871414228 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.664497527 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.85306123 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.642805159 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.652795489 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.640766153 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.581494739 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.787877135 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.631975417 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.639300924 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.646310242 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.630061151 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.648476834 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.891775342 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.666387192 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.63903552 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.639558512 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.642888216 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.626407341 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.715199319 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.712137553 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.80522674 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.764009778 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.708857207 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.633783627 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.639540135 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.659499741 seconds)
  done (took 75.074555439 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.634175828 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.644050711 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.645698459 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.64716994 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.646043912 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.647207861 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.643300319 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.646031637 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.648884589 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.648166851 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.6465293 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.646190468 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.647284282 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.643071912 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.644000915 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.634929368 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.63384645 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.647791399 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.637007932 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.63285121 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.647663123 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.646918146 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.648321558 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.649299925 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.647372474 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.646022174 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.648839326 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.644453273 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.646611142 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.647722003 seconds)
  done (took 50.841146596 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.647359295 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.630069351 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.644709682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.650813799 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.638929052 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.642191025 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.987606086 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.649518366 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.642634459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.642795803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.640426839 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.655796177 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.696430498 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.638753022 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.642717922 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.647531099 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.646735415 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.639986985 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.634580586 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.658387507 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.99946788 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.651312977 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.994497668 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.658320312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.647230888 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.641355923 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.647511212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.630764488 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.64666462 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.63764055 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.58998724 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9885921 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.631431705 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.649117471 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.590860545 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.655018696 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.646604458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.631337174 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.643870996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.644105419 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.979466876 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.646228041 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.646519055 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.636029316 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.6473602 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.652327989 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.635374816 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.647540973 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.933312524 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.651551114 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.633662263 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.66618365 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.653024337 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.643165367 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.931801829 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.647810965 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.642255306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.646471463 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.653641927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.993634996 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.657690678 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.64247219 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.637711162 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.648182283 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.637808298 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.648072429 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.658307624 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.644975471 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.649300178 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.645641443 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.638365616 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.645769724 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.651500012 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.640350231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.63889944 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.638757967 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.647091689 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.633989051 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.655535733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.983638334 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.652669672 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.633462791 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.003783181 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.649434182 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.657503606 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.655891932 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.651245116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.720047669 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.981712425 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.622472275 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.6577498 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.640055304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.98742515 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.655336643 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.646728417 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.636373687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.653458949 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.654204449 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.638020746 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.639724202 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.647585851 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.658745527 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.638581916 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.652752017 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.989521459 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.654326938 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.639783549 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.648519929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.722050227 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.65397954 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.661640037 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.651346265 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.997301762 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.655599532 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.657685193 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.638441605 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.662254257 seconds)
  done (took 236.912446917 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.640834016 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.640528356 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.640146113 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.638422915 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.639968752 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.647227159 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.639468322 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.639759921 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.645003128 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.641691071 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.642721925 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.647308256 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.648180772 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.639353193 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.644181311 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.643345932 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.640161675 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.650959383 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.641741447 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.638755523 seconds)
  done (took 50.363148899 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.657399081 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.322395471 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.26088177 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.662440031 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.654975949 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.650535029 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.71432844 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.656135682 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.655974824 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.009635874 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.859725198 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.661561832 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.653933162 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.658183722 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.268324941 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.659830179 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.010413988 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.319378025 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.657172004 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.320715719 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.660022401 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.657900102 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.648556515 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.322036877 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.020421581 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.988050999 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.718812811 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.324387402 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.656884086 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.656988385 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.321952739 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.65944792 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.65222022 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.327384773 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.661186039 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.67200835 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.657878459 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.721612779 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.723330729 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.011503056 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.331694769 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.009724176 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.670492318 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.847145771 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.666599759 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.646962988 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.33712141 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.664418729 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.649853802 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.660593744 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.665343027 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.309503366 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.652233025 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.311646906 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.660477906 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.659893311 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.325349296 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.310358617 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.301177031 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.856979205 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.653366536 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.999430958 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.659217692 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.334439511 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.662108489 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.659308997 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.662999086 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.865589618 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.327447102 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.007654384 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.01585597 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.014798714 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.664728262 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.730246794 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.661980925 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.0134986 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.730935546 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.088012495 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.019067741 seconds)
  done (took 150.199984714 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.967097806 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.759116457 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.091006116 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.284717686 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.222206742 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.803240122 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.758400492 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.926682039 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.660612398 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.755884266 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.412899224 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.758877364 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.509450926 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.734941846 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.771810713 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.79114069 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.129047602 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.645659538 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.379417448 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.391406478 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.655785634 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.773786581 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.463920704 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.091494846 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.668051771 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.470082325 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.65772928 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.236998528 seconds)
  done (took 62.292760456 seconds)
done (took 627.189835302 seconds)
SAVING RESULT...
DONE!
